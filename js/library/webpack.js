/******/ ;(() => {
  // webpackBootstrap
  /******/ var __webpack_modules__ = {
    /***/ './node_modules/@babel/runtime/regenerator/index.js':
      /*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__(
          /*! regenerator-runtime */ './node_modules/regenerator-runtime/runtime.js'
        )

        /***/
      },

    /***/ './node_modules/axios/index.js':
      /*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__(
          /*! ./lib/axios */ './node_modules/axios/lib/axios.js'
        )

        /***/
      },

    /***/ './node_modules/axios/lib/adapters/xhr.js':
      /*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )
        var settle = __webpack_require__(
          /*! ./../core/settle */ './node_modules/axios/lib/core/settle.js'
        )
        var cookies = __webpack_require__(
          /*! ./../helpers/cookies */ './node_modules/axios/lib/helpers/cookies.js'
        )
        var buildURL = __webpack_require__(
          /*! ./../helpers/buildURL */ './node_modules/axios/lib/helpers/buildURL.js'
        )
        var buildFullPath = __webpack_require__(
          /*! ../core/buildFullPath */ './node_modules/axios/lib/core/buildFullPath.js'
        )
        var parseHeaders = __webpack_require__(
          /*! ./../helpers/parseHeaders */ './node_modules/axios/lib/helpers/parseHeaders.js'
        )
        var isURLSameOrigin = __webpack_require__(
          /*! ./../helpers/isURLSameOrigin */ './node_modules/axios/lib/helpers/isURLSameOrigin.js'
        )
        var createError = __webpack_require__(
          /*! ../core/createError */ './node_modules/axios/lib/core/createError.js'
        )

        module.exports = function xhrAdapter(config) {
          return new Promise(function dispatchXhrRequest(resolve, reject) {
            var requestData = config.data
            var requestHeaders = config.headers
            var responseType = config.responseType

            if (utils.isFormData(requestData)) {
              delete requestHeaders['Content-Type'] // Let the browser set it
            }

            var request = new XMLHttpRequest()

            // HTTP basic authentication
            if (config.auth) {
              var username = config.auth.username || ''
              var password = config.auth.password
                ? unescape(encodeURIComponent(config.auth.password))
                : ''
              requestHeaders.Authorization =
                'Basic ' + btoa(username + ':' + password)
            }

            var fullPath = buildFullPath(config.baseURL, config.url)
            request.open(
              config.method.toUpperCase(),
              buildURL(fullPath, config.params, config.paramsSerializer),
              true
            )

            // Set the request timeout in MS
            request.timeout = config.timeout

            function onloadend() {
              if (!request) {
                return
              }
              // Prepare the response
              var responseHeaders =
                'getAllResponseHeaders' in request
                  ? parseHeaders(request.getAllResponseHeaders())
                  : null
              var responseData =
                !responseType ||
                responseType === 'text' ||
                responseType === 'json'
                  ? request.responseText
                  : request.response
              var response = {
                data: responseData,
                status: request.status,
                statusText: request.statusText,
                headers: responseHeaders,
                config: config,
                request: request,
              }

              settle(resolve, reject, response)

              // Clean up request
              request = null
            }

            if ('onloadend' in request) {
              // Use onloadend if available
              request.onloadend = onloadend
            } else {
              // Listen for ready state to emulate onloadend
              request.onreadystatechange = function handleLoad() {
                if (!request || request.readyState !== 4) {
                  return
                }

                // The request errored out and we didn't get a response, this will be
                // handled by onerror instead
                // With one exception: request that using file: protocol, most browsers
                // will return status as 0 even though it's a successful request
                if (
                  request.status === 0 &&
                  !(
                    request.responseURL &&
                    request.responseURL.indexOf('file:') === 0
                  )
                ) {
                  return
                }
                // readystate handler is calling before onerror or ontimeout handlers,
                // so we should call onloadend on the next 'tick'
                setTimeout(onloadend)
              }
            }

            // Handle browser request cancellation (as opposed to a manual cancellation)
            request.onabort = function handleAbort() {
              if (!request) {
                return
              }

              reject(
                createError('Request aborted', config, 'ECONNABORTED', request)
              )

              // Clean up request
              request = null
            }

            // Handle low level network errors
            request.onerror = function handleError() {
              // Real errors are hidden from us by the browser
              // onerror should only fire if it's a network error
              reject(createError('Network Error', config, null, request))

              // Clean up request
              request = null
            }

            // Handle timeout
            request.ontimeout = function handleTimeout() {
              var timeoutErrorMessage =
                'timeout of ' + config.timeout + 'ms exceeded'
              if (config.timeoutErrorMessage) {
                timeoutErrorMessage = config.timeoutErrorMessage
              }
              reject(
                createError(
                  timeoutErrorMessage,
                  config,
                  config.transitional && config.transitional.clarifyTimeoutError
                    ? 'ETIMEDOUT'
                    : 'ECONNABORTED',
                  request
                )
              )

              // Clean up request
              request = null
            }

            // Add xsrf header
            // This is only done if running in a standard browser environment.
            // Specifically not if we're in a web worker, or react-native.
            if (utils.isStandardBrowserEnv()) {
              // Add xsrf header
              var xsrfValue =
                (config.withCredentials || isURLSameOrigin(fullPath)) &&
                config.xsrfCookieName
                  ? cookies.read(config.xsrfCookieName)
                  : undefined

              if (xsrfValue) {
                requestHeaders[config.xsrfHeaderName] = xsrfValue
              }
            }

            // Add headers to the request
            if ('setRequestHeader' in request) {
              utils.forEach(
                requestHeaders,
                function setRequestHeader(val, key) {
                  if (
                    typeof requestData === 'undefined' &&
                    key.toLowerCase() === 'content-type'
                  ) {
                    // Remove Content-Type if data is undefined
                    delete requestHeaders[key]
                  } else {
                    // Otherwise add header to the request
                    request.setRequestHeader(key, val)
                  }
                }
              )
            }

            // Add withCredentials to request if needed
            if (!utils.isUndefined(config.withCredentials)) {
              request.withCredentials = !!config.withCredentials
            }

            // Add responseType to request if needed
            if (responseType && responseType !== 'json') {
              request.responseType = config.responseType
            }

            // Handle progress if needed
            if (typeof config.onDownloadProgress === 'function') {
              request.addEventListener('progress', config.onDownloadProgress)
            }

            // Not all browsers support upload events
            if (
              typeof config.onUploadProgress === 'function' &&
              request.upload
            ) {
              request.upload.addEventListener(
                'progress',
                config.onUploadProgress
              )
            }

            if (config.cancelToken) {
              // Handle cancellation
              config.cancelToken.promise.then(function onCanceled(cancel) {
                if (!request) {
                  return
                }

                request.abort()
                reject(cancel)
                // Clean up request
                request = null
              })
            }

            if (!requestData) {
              requestData = null
            }

            // Send the request
            request.send(requestData)
          })
        }

        /***/
      },

    /***/ './node_modules/axios/lib/axios.js':
      /*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./utils */ './node_modules/axios/lib/utils.js'
        )
        var bind = __webpack_require__(
          /*! ./helpers/bind */ './node_modules/axios/lib/helpers/bind.js'
        )
        var Axios = __webpack_require__(
          /*! ./core/Axios */ './node_modules/axios/lib/core/Axios.js'
        )
        var mergeConfig = __webpack_require__(
          /*! ./core/mergeConfig */ './node_modules/axios/lib/core/mergeConfig.js'
        )
        var defaults = __webpack_require__(
          /*! ./defaults */ './node_modules/axios/lib/defaults.js'
        )

        /**
         * Create an instance of Axios
         *
         * @param {Object} defaultConfig The default config for the instance
         * @return {Axios} A new instance of Axios
         */
        function createInstance(defaultConfig) {
          var context = new Axios(defaultConfig)
          var instance = bind(Axios.prototype.request, context)

          // Copy axios.prototype to instance
          utils.extend(instance, Axios.prototype, context)

          // Copy context to instance
          utils.extend(instance, context)

          return instance
        }

        // Create the default instance to be exported
        var axios = createInstance(defaults)

        // Expose Axios class to allow class inheritance
        axios.Axios = Axios

        // Factory for creating new instances
        axios.create = function create(instanceConfig) {
          return createInstance(mergeConfig(axios.defaults, instanceConfig))
        }

        // Expose Cancel & CancelToken
        axios.Cancel = __webpack_require__(
          /*! ./cancel/Cancel */ './node_modules/axios/lib/cancel/Cancel.js'
        )
        axios.CancelToken = __webpack_require__(
          /*! ./cancel/CancelToken */ './node_modules/axios/lib/cancel/CancelToken.js'
        )
        axios.isCancel = __webpack_require__(
          /*! ./cancel/isCancel */ './node_modules/axios/lib/cancel/isCancel.js'
        )

        // Expose all/spread
        axios.all = function all(promises) {
          return Promise.all(promises)
        }
        axios.spread = __webpack_require__(
          /*! ./helpers/spread */ './node_modules/axios/lib/helpers/spread.js'
        )

        // Expose isAxiosError
        axios.isAxiosError = __webpack_require__(
          /*! ./helpers/isAxiosError */ './node_modules/axios/lib/helpers/isAxiosError.js'
        )

        module.exports = axios

        // Allow use of default import syntax in TypeScript
        module.exports['default'] = axios

        /***/
      },

    /***/ './node_modules/axios/lib/cancel/Cancel.js':
      /*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * A `Cancel` is an object that is thrown when an operation is canceled.
         *
         * @class
         * @param {string=} message The message.
         */
        function Cancel(message) {
          this.message = message
        }

        Cancel.prototype.toString = function toString() {
          return 'Cancel' + (this.message ? ': ' + this.message : '')
        }

        Cancel.prototype.__CANCEL__ = true

        module.exports = Cancel

        /***/
      },

    /***/ './node_modules/axios/lib/cancel/CancelToken.js':
      /*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var Cancel = __webpack_require__(
          /*! ./Cancel */ './node_modules/axios/lib/cancel/Cancel.js'
        )

        /**
         * A `CancelToken` is an object that can be used to request cancellation of an operation.
         *
         * @class
         * @param {Function} executor The executor function.
         */
        function CancelToken(executor) {
          if (typeof executor !== 'function') {
            throw new TypeError('executor must be a function.')
          }

          var resolvePromise
          this.promise = new Promise(function promiseExecutor(resolve) {
            resolvePromise = resolve
          })

          var token = this
          executor(function cancel(message) {
            if (token.reason) {
              // Cancellation has already been requested
              return
            }

            token.reason = new Cancel(message)
            resolvePromise(token.reason)
          })
        }

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        CancelToken.prototype.throwIfRequested = function throwIfRequested() {
          if (this.reason) {
            throw this.reason
          }
        }

        /**
         * Returns an object that contains a new `CancelToken` and a function that, when called,
         * cancels the `CancelToken`.
         */
        CancelToken.source = function source() {
          var cancel
          var token = new CancelToken(function executor(c) {
            cancel = c
          })
          return {
            token: token,
            cancel: cancel,
          }
        }

        module.exports = CancelToken

        /***/
      },

    /***/ './node_modules/axios/lib/cancel/isCancel.js':
      /*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
      /***/ (module) => {
        'use strict'

        module.exports = function isCancel(value) {
          return !!(value && value.__CANCEL__)
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/Axios.js':
      /*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )
        var buildURL = __webpack_require__(
          /*! ../helpers/buildURL */ './node_modules/axios/lib/helpers/buildURL.js'
        )
        var InterceptorManager = __webpack_require__(
          /*! ./InterceptorManager */ './node_modules/axios/lib/core/InterceptorManager.js'
        )
        var dispatchRequest = __webpack_require__(
          /*! ./dispatchRequest */ './node_modules/axios/lib/core/dispatchRequest.js'
        )
        var mergeConfig = __webpack_require__(
          /*! ./mergeConfig */ './node_modules/axios/lib/core/mergeConfig.js'
        )
        var validator = __webpack_require__(
          /*! ../helpers/validator */ './node_modules/axios/lib/helpers/validator.js'
        )

        var validators = validator.validators
        /**
         * Create a new instance of Axios
         *
         * @param {Object} instanceConfig The default config for the instance
         */
        function Axios(instanceConfig) {
          this.defaults = instanceConfig
          this.interceptors = {
            request: new InterceptorManager(),
            response: new InterceptorManager(),
          }
        }

        /**
         * Dispatch a request
         *
         * @param {Object} config The config specific for this request (merged with this.defaults)
         */
        Axios.prototype.request = function request(config) {
          /*eslint no-param-reassign:0*/
          // Allow for axios('example/url'[, config]) a la fetch API
          if (typeof config === 'string') {
            config = arguments[1] || {}
            config.url = arguments[0]
          } else {
            config = config || {}
          }

          config = mergeConfig(this.defaults, config)

          // Set config.method
          if (config.method) {
            config.method = config.method.toLowerCase()
          } else if (this.defaults.method) {
            config.method = this.defaults.method.toLowerCase()
          } else {
            config.method = 'get'
          }

          var transitional = config.transitional

          if (transitional !== undefined) {
            validator.assertOptions(
              transitional,
              {
                silentJSONParsing: validators.transitional(
                  validators.boolean,
                  '1.0.0'
                ),
                forcedJSONParsing: validators.transitional(
                  validators.boolean,
                  '1.0.0'
                ),
                clarifyTimeoutError: validators.transitional(
                  validators.boolean,
                  '1.0.0'
                ),
              },
              false
            )
          }

          // filter out skipped interceptors
          var requestInterceptorChain = []
          var synchronousRequestInterceptors = true
          this.interceptors.request.forEach(function unshiftRequestInterceptors(
            interceptor
          ) {
            if (
              typeof interceptor.runWhen === 'function' &&
              interceptor.runWhen(config) === false
            ) {
              return
            }

            synchronousRequestInterceptors =
              synchronousRequestInterceptors && interceptor.synchronous

            requestInterceptorChain.unshift(
              interceptor.fulfilled,
              interceptor.rejected
            )
          })

          var responseInterceptorChain = []
          this.interceptors.response.forEach(function pushResponseInterceptors(
            interceptor
          ) {
            responseInterceptorChain.push(
              interceptor.fulfilled,
              interceptor.rejected
            )
          })

          var promise

          if (!synchronousRequestInterceptors) {
            var chain = [dispatchRequest, undefined]

            Array.prototype.unshift.apply(chain, requestInterceptorChain)
            chain = chain.concat(responseInterceptorChain)

            promise = Promise.resolve(config)
            while (chain.length) {
              promise = promise.then(chain.shift(), chain.shift())
            }

            return promise
          }

          var newConfig = config
          while (requestInterceptorChain.length) {
            var onFulfilled = requestInterceptorChain.shift()
            var onRejected = requestInterceptorChain.shift()
            try {
              newConfig = onFulfilled(newConfig)
            } catch (error) {
              onRejected(error)
              break
            }
          }

          try {
            promise = dispatchRequest(newConfig)
          } catch (error) {
            return Promise.reject(error)
          }

          while (responseInterceptorChain.length) {
            promise = promise.then(
              responseInterceptorChain.shift(),
              responseInterceptorChain.shift()
            )
          }

          return promise
        }

        Axios.prototype.getUri = function getUri(config) {
          config = mergeConfig(this.defaults, config)
          return buildURL(
            config.url,
            config.params,
            config.paramsSerializer
          ).replace(/^\?/, '')
        }

        // Provide aliases for supported request methods
        utils.forEach(
          ['delete', 'get', 'head', 'options'],
          function forEachMethodNoData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function (url, config) {
              return this.request(
                mergeConfig(config || {}, {
                  method: method,
                  url: url,
                  data: (config || {}).data,
                })
              )
            }
          }
        )

        utils.forEach(
          ['post', 'put', 'patch'],
          function forEachMethodWithData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function (url, data, config) {
              return this.request(
                mergeConfig(config || {}, {
                  method: method,
                  url: url,
                  data: data,
                })
              )
            }
          }
        )

        module.exports = Axios

        /***/
      },

    /***/ './node_modules/axios/lib/core/InterceptorManager.js':
      /*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )

        function InterceptorManager() {
          this.handlers = []
        }

        /**
         * Add a new interceptor to the stack
         *
         * @param {Function} fulfilled The function to handle `then` for a `Promise`
         * @param {Function} rejected The function to handle `reject` for a `Promise`
         *
         * @return {Number} An ID used to remove interceptor later
         */
        InterceptorManager.prototype.use = function use(
          fulfilled,
          rejected,
          options
        ) {
          this.handlers.push({
            fulfilled: fulfilled,
            rejected: rejected,
            synchronous: options ? options.synchronous : false,
            runWhen: options ? options.runWhen : null,
          })
          return this.handlers.length - 1
        }

        /**
         * Remove an interceptor from the stack
         *
         * @param {Number} id The ID that was returned by `use`
         */
        InterceptorManager.prototype.eject = function eject(id) {
          if (this.handlers[id]) {
            this.handlers[id] = null
          }
        }

        /**
         * Iterate over all the registered interceptors
         *
         * This method is particularly useful for skipping over any
         * interceptors that may have become `null` calling `eject`.
         *
         * @param {Function} fn The function to call for each interceptor
         */
        InterceptorManager.prototype.forEach = function forEach(fn) {
          utils.forEach(this.handlers, function forEachHandler(h) {
            if (h !== null) {
              fn(h)
            }
          })
        }

        module.exports = InterceptorManager

        /***/
      },

    /***/ './node_modules/axios/lib/core/buildFullPath.js':
      /*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var isAbsoluteURL = __webpack_require__(
          /*! ../helpers/isAbsoluteURL */ './node_modules/axios/lib/helpers/isAbsoluteURL.js'
        )
        var combineURLs = __webpack_require__(
          /*! ../helpers/combineURLs */ './node_modules/axios/lib/helpers/combineURLs.js'
        )

        /**
         * Creates a new URL by combining the baseURL with the requestedURL,
         * only when the requestedURL is not already an absolute URL.
         * If the requestURL is absolute, this function returns the requestedURL untouched.
         *
         * @param {string} baseURL The base URL
         * @param {string} requestedURL Absolute or relative URL to combine
         * @returns {string} The combined full path
         */
        module.exports = function buildFullPath(baseURL, requestedURL) {
          if (baseURL && !isAbsoluteURL(requestedURL)) {
            return combineURLs(baseURL, requestedURL)
          }
          return requestedURL
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/createError.js':
      /*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var enhanceError = __webpack_require__(
          /*! ./enhanceError */ './node_modules/axios/lib/core/enhanceError.js'
        )

        /**
         * Create an Error with the specified message, config, error code, request and response.
         *
         * @param {string} message The error message.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The created error.
         */
        module.exports = function createError(
          message,
          config,
          code,
          request,
          response
        ) {
          var error = new Error(message)
          return enhanceError(error, config, code, request, response)
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/dispatchRequest.js':
      /*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )
        var transformData = __webpack_require__(
          /*! ./transformData */ './node_modules/axios/lib/core/transformData.js'
        )
        var isCancel = __webpack_require__(
          /*! ../cancel/isCancel */ './node_modules/axios/lib/cancel/isCancel.js'
        )
        var defaults = __webpack_require__(
          /*! ../defaults */ './node_modules/axios/lib/defaults.js'
        )

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        function throwIfCancellationRequested(config) {
          if (config.cancelToken) {
            config.cancelToken.throwIfRequested()
          }
        }

        /**
         * Dispatch a request to the server using the configured adapter.
         *
         * @param {object} config The config that is to be used for the request
         * @returns {Promise} The Promise to be fulfilled
         */
        module.exports = function dispatchRequest(config) {
          throwIfCancellationRequested(config)

          // Ensure headers exist
          config.headers = config.headers || {}

          // Transform request data
          config.data = transformData.call(
            config,
            config.data,
            config.headers,
            config.transformRequest
          )

          // Flatten headers
          config.headers = utils.merge(
            config.headers.common || {},
            config.headers[config.method] || {},
            config.headers
          )

          utils.forEach(
            ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
            function cleanHeaderConfig(method) {
              delete config.headers[method]
            }
          )

          var adapter = config.adapter || defaults.adapter

          return adapter(config).then(
            function onAdapterResolution(response) {
              throwIfCancellationRequested(config)

              // Transform response data
              response.data = transformData.call(
                config,
                response.data,
                response.headers,
                config.transformResponse
              )

              return response
            },
            function onAdapterRejection(reason) {
              if (!isCancel(reason)) {
                throwIfCancellationRequested(config)

                // Transform response data
                if (reason && reason.response) {
                  reason.response.data = transformData.call(
                    config,
                    reason.response.data,
                    reason.response.headers,
                    config.transformResponse
                  )
                }
              }

              return Promise.reject(reason)
            }
          )
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/enhanceError.js':
      /*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * Update an Error with the specified config, error code, and response.
         *
         * @param {Error} error The error to update.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The error.
         */
        module.exports = function enhanceError(
          error,
          config,
          code,
          request,
          response
        ) {
          error.config = config
          if (code) {
            error.code = code
          }

          error.request = request
          error.response = response
          error.isAxiosError = true

          error.toJSON = function toJSON() {
            return {
              // Standard
              message: this.message,
              name: this.name,
              // Microsoft
              description: this.description,
              number: this.number,
              // Mozilla
              fileName: this.fileName,
              lineNumber: this.lineNumber,
              columnNumber: this.columnNumber,
              stack: this.stack,
              // Axios
              config: this.config,
              code: this.code,
            }
          }
          return error
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/mergeConfig.js':
      /*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ../utils */ './node_modules/axios/lib/utils.js'
        )

        /**
         * Config-specific merge-function which creates a new config-object
         * by merging two configuration objects together.
         *
         * @param {Object} config1
         * @param {Object} config2
         * @returns {Object} New object resulting from merging config2 to config1
         */
        module.exports = function mergeConfig(config1, config2) {
          // eslint-disable-next-line no-param-reassign
          config2 = config2 || {}
          var config = {}

          var valueFromConfig2Keys = ['url', 'method', 'data']
          var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params']
          var defaultToConfig2Keys = [
            'baseURL',
            'transformRequest',
            'transformResponse',
            'paramsSerializer',
            'timeout',
            'timeoutMessage',
            'withCredentials',
            'adapter',
            'responseType',
            'xsrfCookieName',
            'xsrfHeaderName',
            'onUploadProgress',
            'onDownloadProgress',
            'decompress',
            'maxContentLength',
            'maxBodyLength',
            'maxRedirects',
            'transport',
            'httpAgent',
            'httpsAgent',
            'cancelToken',
            'socketPath',
            'responseEncoding',
          ]
          var directMergeKeys = ['validateStatus']

          function getMergedValue(target, source) {
            if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
              return utils.merge(target, source)
            } else if (utils.isPlainObject(source)) {
              return utils.merge({}, source)
            } else if (utils.isArray(source)) {
              return source.slice()
            }
            return source
          }

          function mergeDeepProperties(prop) {
            if (!utils.isUndefined(config2[prop])) {
              config[prop] = getMergedValue(config1[prop], config2[prop])
            } else if (!utils.isUndefined(config1[prop])) {
              config[prop] = getMergedValue(undefined, config1[prop])
            }
          }

          utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
            if (!utils.isUndefined(config2[prop])) {
              config[prop] = getMergedValue(undefined, config2[prop])
            }
          })

          utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties)

          utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
            if (!utils.isUndefined(config2[prop])) {
              config[prop] = getMergedValue(undefined, config2[prop])
            } else if (!utils.isUndefined(config1[prop])) {
              config[prop] = getMergedValue(undefined, config1[prop])
            }
          })

          utils.forEach(directMergeKeys, function merge(prop) {
            if (prop in config2) {
              config[prop] = getMergedValue(config1[prop], config2[prop])
            } else if (prop in config1) {
              config[prop] = getMergedValue(undefined, config1[prop])
            }
          })

          var axiosKeys = valueFromConfig2Keys
            .concat(mergeDeepPropertiesKeys)
            .concat(defaultToConfig2Keys)
            .concat(directMergeKeys)

          var otherKeys = Object.keys(config1)
            .concat(Object.keys(config2))
            .filter(function filterAxiosKeys(key) {
              return axiosKeys.indexOf(key) === -1
            })

          utils.forEach(otherKeys, mergeDeepProperties)

          return config
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/settle.js':
      /*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var createError = __webpack_require__(
          /*! ./createError */ './node_modules/axios/lib/core/createError.js'
        )

        /**
         * Resolve or reject a Promise based on response status.
         *
         * @param {Function} resolve A function that resolves the promise.
         * @param {Function} reject A function that rejects the promise.
         * @param {object} response The response.
         */
        module.exports = function settle(resolve, reject, response) {
          var validateStatus = response.config.validateStatus
          if (
            !response.status ||
            !validateStatus ||
            validateStatus(response.status)
          ) {
            resolve(response)
          } else {
            reject(
              createError(
                'Request failed with status code ' + response.status,
                response.config,
                null,
                response.request,
                response
              )
            )
          }
        }

        /***/
      },

    /***/ './node_modules/axios/lib/core/transformData.js':
      /*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )
        var defaults = __webpack_require__(
          /*! ./../defaults */ './node_modules/axios/lib/defaults.js'
        )

        /**
         * Transform the data for a request or a response
         *
         * @param {Object|String} data The data to be transformed
         * @param {Array} headers The headers for the request or response
         * @param {Array|Function} fns A single function or Array of functions
         * @returns {*} The resulting transformed data
         */
        module.exports = function transformData(data, headers, fns) {
          var context = this || defaults
          /*eslint no-param-reassign:0*/
          utils.forEach(fns, function transform(fn) {
            data = fn.call(context, data, headers)
          })

          return data
        }

        /***/
      },

    /***/ './node_modules/axios/lib/defaults.js':
      /*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'
        /* provided dependency */ var process = __webpack_require__(
          /*! process/browser */ './node_modules/process/browser.js'
        )

        var utils = __webpack_require__(
          /*! ./utils */ './node_modules/axios/lib/utils.js'
        )
        var normalizeHeaderName = __webpack_require__(
          /*! ./helpers/normalizeHeaderName */ './node_modules/axios/lib/helpers/normalizeHeaderName.js'
        )
        var enhanceError = __webpack_require__(
          /*! ./core/enhanceError */ './node_modules/axios/lib/core/enhanceError.js'
        )

        var DEFAULT_CONTENT_TYPE = {
          'Content-Type': 'application/x-www-form-urlencoded',
        }

        function setContentTypeIfUnset(headers, value) {
          if (
            !utils.isUndefined(headers) &&
            utils.isUndefined(headers['Content-Type'])
          ) {
            headers['Content-Type'] = value
          }
        }

        function getDefaultAdapter() {
          var adapter
          if (typeof XMLHttpRequest !== 'undefined') {
            // For browsers use XHR adapter
            adapter = __webpack_require__(
              /*! ./adapters/xhr */ './node_modules/axios/lib/adapters/xhr.js'
            )
          } else if (
            typeof process !== 'undefined' &&
            Object.prototype.toString.call(process) === '[object process]'
          ) {
            // For node use HTTP adapter
            adapter = __webpack_require__(
              /*! ./adapters/http */ './node_modules/axios/lib/adapters/xhr.js'
            )
          }
          return adapter
        }

        function stringifySafely(rawValue, parser, encoder) {
          if (utils.isString(rawValue)) {
            try {
              ;(parser || JSON.parse)(rawValue)
              return utils.trim(rawValue)
            } catch (e) {
              if (e.name !== 'SyntaxError') {
                throw e
              }
            }
          }

          return (encoder || JSON.stringify)(rawValue)
        }

        var defaults = {
          transitional: {
            silentJSONParsing: true,
            forcedJSONParsing: true,
            clarifyTimeoutError: false,
          },

          adapter: getDefaultAdapter(),

          transformRequest: [
            function transformRequest(data, headers) {
              normalizeHeaderName(headers, 'Accept')
              normalizeHeaderName(headers, 'Content-Type')

              if (
                utils.isFormData(data) ||
                utils.isArrayBuffer(data) ||
                utils.isBuffer(data) ||
                utils.isStream(data) ||
                utils.isFile(data) ||
                utils.isBlob(data)
              ) {
                return data
              }
              if (utils.isArrayBufferView(data)) {
                return data.buffer
              }
              if (utils.isURLSearchParams(data)) {
                setContentTypeIfUnset(
                  headers,
                  'application/x-www-form-urlencoded;charset=utf-8'
                )
                return data.toString()
              }
              if (
                utils.isObject(data) ||
                (headers && headers['Content-Type'] === 'application/json')
              ) {
                setContentTypeIfUnset(headers, 'application/json')
                return stringifySafely(data)
              }
              return data
            },
          ],

          transformResponse: [
            function transformResponse(data) {
              var transitional = this.transitional
              var silentJSONParsing =
                transitional && transitional.silentJSONParsing
              var forcedJSONParsing =
                transitional && transitional.forcedJSONParsing
              var strictJSONParsing =
                !silentJSONParsing && this.responseType === 'json'

              if (
                strictJSONParsing ||
                (forcedJSONParsing && utils.isString(data) && data.length)
              ) {
                try {
                  return JSON.parse(data)
                } catch (e) {
                  if (strictJSONParsing) {
                    if (e.name === 'SyntaxError') {
                      throw enhanceError(e, this, 'E_JSON_PARSE')
                    }
                    throw e
                  }
                }
              }

              return data
            },
          ],

          /**
           * A timeout in milliseconds to abort a request. If set to 0 (default) a
           * timeout is not created.
           */
          timeout: 0,

          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',

          maxContentLength: -1,
          maxBodyLength: -1,

          validateStatus: function validateStatus(status) {
            return status >= 200 && status < 300
          },
        }

        defaults.headers = {
          common: {
            Accept: 'application/json, text/plain, */*',
          },
        }

        utils.forEach(
          ['delete', 'get', 'head'],
          function forEachMethodNoData(method) {
            defaults.headers[method] = {}
          }
        )

        utils.forEach(
          ['post', 'put', 'patch'],
          function forEachMethodWithData(method) {
            defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE)
          }
        )

        module.exports = defaults

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/bind.js':
      /*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
      /***/ (module) => {
        'use strict'

        module.exports = function bind(fn, thisArg) {
          return function wrap() {
            var args = new Array(arguments.length)
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i]
            }
            return fn.apply(thisArg, args)
          }
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/buildURL.js':
      /*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )

        function encode(val) {
          return encodeURIComponent(val)
            .replace(/%3A/gi, ':')
            .replace(/%24/g, '$')
            .replace(/%2C/gi, ',')
            .replace(/%20/g, '+')
            .replace(/%5B/gi, '[')
            .replace(/%5D/gi, ']')
        }

        /**
         * Build a URL by appending params to the end
         *
         * @param {string} url The base of the url (e.g., http://www.google.com)
         * @param {object} [params] The params to be appended
         * @returns {string} The formatted url
         */
        module.exports = function buildURL(url, params, paramsSerializer) {
          /*eslint no-param-reassign:0*/
          if (!params) {
            return url
          }

          var serializedParams
          if (paramsSerializer) {
            serializedParams = paramsSerializer(params)
          } else if (utils.isURLSearchParams(params)) {
            serializedParams = params.toString()
          } else {
            var parts = []

            utils.forEach(params, function serialize(val, key) {
              if (val === null || typeof val === 'undefined') {
                return
              }

              if (utils.isArray(val)) {
                key = key + '[]'
              } else {
                val = [val]
              }

              utils.forEach(val, function parseValue(v) {
                if (utils.isDate(v)) {
                  v = v.toISOString()
                } else if (utils.isObject(v)) {
                  v = JSON.stringify(v)
                }
                parts.push(encode(key) + '=' + encode(v))
              })
            })

            serializedParams = parts.join('&')
          }

          if (serializedParams) {
            var hashmarkIndex = url.indexOf('#')
            if (hashmarkIndex !== -1) {
              url = url.slice(0, hashmarkIndex)
            }

            url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams
          }

          return url
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/combineURLs.js':
      /*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * Creates a new URL by combining the specified URLs
         *
         * @param {string} baseURL The base URL
         * @param {string} relativeURL The relative URL
         * @returns {string} The combined URL
         */
        module.exports = function combineURLs(baseURL, relativeURL) {
          return relativeURL
            ? baseURL.replace(/\/+$/, '') +
                '/' +
                relativeURL.replace(/^\/+/, '')
            : baseURL
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/cookies.js':
      /*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs support document.cookie
            (function standardBrowserEnv() {
              return {
                write: function write(
                  name,
                  value,
                  expires,
                  path,
                  domain,
                  secure
                ) {
                  var cookie = []
                  cookie.push(name + '=' + encodeURIComponent(value))

                  if (utils.isNumber(expires)) {
                    cookie.push('expires=' + new Date(expires).toGMTString())
                  }

                  if (utils.isString(path)) {
                    cookie.push('path=' + path)
                  }

                  if (utils.isString(domain)) {
                    cookie.push('domain=' + domain)
                  }

                  if (secure === true) {
                    cookie.push('secure')
                  }

                  document.cookie = cookie.join('; ')
                },

                read: function read(name) {
                  var match = document.cookie.match(
                    new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
                  )
                  return match ? decodeURIComponent(match[3]) : null
                },

                remove: function remove(name) {
                  this.write(name, '', Date.now() - 86400000)
                },
              }
            })()
          : // Non standard browser env (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return {
                write: function write() {},
                read: function read() {
                  return null
                },
                remove: function remove() {},
              }
            })()

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/isAbsoluteURL.js':
      /*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * Determines whether the specified URL is absolute
         *
         * @param {string} url The URL to test
         * @returns {boolean} True if the specified URL is absolute, otherwise false
         */
        module.exports = function isAbsoluteURL(url) {
          // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
          // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
          // by any combination of letters, digits, plus, period, or hyphen.
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url)
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/isAxiosError.js':
      /*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * Determines whether the payload is an error thrown by Axios
         *
         * @param {*} payload The value to test
         * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
         */
        module.exports = function isAxiosError(payload) {
          return typeof payload === 'object' && payload.isAxiosError === true
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/isURLSameOrigin.js':
      /*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs have full support of the APIs needed to test
            // whether the request URL is of the same origin as current location.
            (function standardBrowserEnv() {
              var msie = /(msie|trident)/i.test(navigator.userAgent)
              var urlParsingNode = document.createElement('a')
              var originURL

              /**
               * Parse a URL to discover it's components
               *
               * @param {String} url The URL to be parsed
               * @returns {Object}
               */
              function resolveURL(url) {
                var href = url

                if (msie) {
                  // IE needs attribute set twice to normalize properties
                  urlParsingNode.setAttribute('href', href)
                  href = urlParsingNode.href
                }

                urlParsingNode.setAttribute('href', href)

                // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                return {
                  href: urlParsingNode.href,
                  protocol: urlParsingNode.protocol
                    ? urlParsingNode.protocol.replace(/:$/, '')
                    : '',
                  host: urlParsingNode.host,
                  search: urlParsingNode.search
                    ? urlParsingNode.search.replace(/^\?/, '')
                    : '',
                  hash: urlParsingNode.hash
                    ? urlParsingNode.hash.replace(/^#/, '')
                    : '',
                  hostname: urlParsingNode.hostname,
                  port: urlParsingNode.port,
                  pathname:
                    urlParsingNode.pathname.charAt(0) === '/'
                      ? urlParsingNode.pathname
                      : '/' + urlParsingNode.pathname,
                }
              }

              originURL = resolveURL(window.location.href)

              /**
               * Determine if a URL shares the same origin as the current location
               *
               * @param {String} requestURL The URL to test
               * @returns {boolean} True if URL shares the same origin, otherwise false
               */
              return function isURLSameOrigin(requestURL) {
                var parsed = utils.isString(requestURL)
                  ? resolveURL(requestURL)
                  : requestURL
                return (
                  parsed.protocol === originURL.protocol &&
                  parsed.host === originURL.host
                )
              }
            })()
          : // Non standard browser envs (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return function isURLSameOrigin() {
                return true
              }
            })()

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/normalizeHeaderName.js':
      /*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ../utils */ './node_modules/axios/lib/utils.js'
        )

        module.exports = function normalizeHeaderName(headers, normalizedName) {
          utils.forEach(headers, function processHeader(value, name) {
            if (
              name !== normalizedName &&
              name.toUpperCase() === normalizedName.toUpperCase()
            ) {
              headers[normalizedName] = value
              delete headers[name]
            }
          })
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/parseHeaders.js':
      /*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var utils = __webpack_require__(
          /*! ./../utils */ './node_modules/axios/lib/utils.js'
        )

        // Headers whose duplicates are ignored by node
        // c.f. https://nodejs.org/api/http.html#http_message_headers
        var ignoreDuplicateOf = [
          'age',
          'authorization',
          'content-length',
          'content-type',
          'etag',
          'expires',
          'from',
          'host',
          'if-modified-since',
          'if-unmodified-since',
          'last-modified',
          'location',
          'max-forwards',
          'proxy-authorization',
          'referer',
          'retry-after',
          'user-agent',
        ]

        /**
         * Parse headers into an object
         *
         * ```
         * Date: Wed, 27 Aug 2014 08:58:49 GMT
         * Content-Type: application/json
         * Connection: keep-alive
         * Transfer-Encoding: chunked
         * ```
         *
         * @param {String} headers Headers needing to be parsed
         * @returns {Object} Headers parsed into an object
         */
        module.exports = function parseHeaders(headers) {
          var parsed = {}
          var key
          var val
          var i

          if (!headers) {
            return parsed
          }

          utils.forEach(headers.split('\n'), function parser(line) {
            i = line.indexOf(':')
            key = utils.trim(line.substr(0, i)).toLowerCase()
            val = utils.trim(line.substr(i + 1))

            if (key) {
              if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                return
              }
              if (key === 'set-cookie') {
                parsed[key] = (parsed[key] ? parsed[key] : []).concat([val])
              } else {
                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val
              }
            }
          })

          return parsed
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/spread.js':
      /*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
      /***/ (module) => {
        'use strict'

        /**
         * Syntactic sugar for invoking a function and expanding an array for arguments.
         *
         * Common use case would be to use `Function.prototype.apply`.
         *
         *  ```js
         *  function f(x, y, z) {}
         *  var args = [1, 2, 3];
         *  f.apply(null, args);
         *  ```
         *
         * With `spread` this example can be re-written.
         *
         *  ```js
         *  spread(function(x, y, z) {})([1, 2, 3]);
         *  ```
         *
         * @param {Function} callback
         * @returns {Function}
         */
        module.exports = function spread(callback) {
          return function wrap(arr) {
            return callback.apply(null, arr)
          }
        }

        /***/
      },

    /***/ './node_modules/axios/lib/helpers/validator.js':
      /*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var pkg = __webpack_require__(
          /*! ./../../package.json */ './node_modules/axios/package.json'
        )

        var validators = {}

        // eslint-disable-next-line func-names
        ;[
          'object',
          'boolean',
          'number',
          'function',
          'string',
          'symbol',
        ].forEach(function (type, i) {
          validators[type] = function validator(thing) {
            return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type
          }
        })

        var deprecatedWarnings = {}
        var currentVerArr = pkg.version.split('.')

        /**
         * Compare package versions
         * @param {string} version
         * @param {string?} thanVersion
         * @returns {boolean}
         */
        function isOlderVersion(version, thanVersion) {
          var pkgVersionArr = thanVersion
            ? thanVersion.split('.')
            : currentVerArr
          var destVer = version.split('.')
          for (var i = 0; i < 3; i++) {
            if (pkgVersionArr[i] > destVer[i]) {
              return true
            } else if (pkgVersionArr[i] < destVer[i]) {
              return false
            }
          }
          return false
        }

        /**
         * Transitional option validator
         * @param {function|boolean?} validator
         * @param {string?} version
         * @param {string} message
         * @returns {function}
         */
        validators.transitional = function transitional(
          validator,
          version,
          message
        ) {
          var isDeprecated = version && isOlderVersion(version)

          function formatMessage(opt, desc) {
            return (
              '[Axios v' +
              pkg.version +
              "] Transitional option '" +
              opt +
              "'" +
              desc +
              (message ? '. ' + message : '')
            )
          }

          // eslint-disable-next-line func-names
          return function (value, opt, opts) {
            if (validator === false) {
              throw new Error(
                formatMessage(opt, ' has been removed in ' + version)
              )
            }

            if (isDeprecated && !deprecatedWarnings[opt]) {
              deprecatedWarnings[opt] = true
              // eslint-disable-next-line no-console
              console.warn(
                formatMessage(
                  opt,
                  ' has been deprecated since v' +
                    version +
                    ' and will be removed in the near future'
                )
              )
            }

            return validator ? validator(value, opt, opts) : true
          }
        }

        /**
         * Assert object's properties type
         * @param {object} options
         * @param {object} schema
         * @param {boolean?} allowUnknown
         */

        function assertOptions(options, schema, allowUnknown) {
          if (typeof options !== 'object') {
            throw new TypeError('options must be an object')
          }
          var keys = Object.keys(options)
          var i = keys.length
          while (i-- > 0) {
            var opt = keys[i]
            var validator = schema[opt]
            if (validator) {
              var value = options[opt]
              var result = value === undefined || validator(value, opt, options)
              if (result !== true) {
                throw new TypeError('option ' + opt + ' must be ' + result)
              }
              continue
            }
            if (allowUnknown !== true) {
              throw Error('Unknown option ' + opt)
            }
          }
        }

        module.exports = {
          isOlderVersion: isOlderVersion,
          assertOptions: assertOptions,
          validators: validators,
        }

        /***/
      },

    /***/ './node_modules/axios/lib/utils.js':
      /*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var bind = __webpack_require__(
          /*! ./helpers/bind */ './node_modules/axios/lib/helpers/bind.js'
        )

        // utils is a library of generic helper functions non-specific to axios

        var toString = Object.prototype.toString

        /**
         * Determine if a value is an Array
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Array, otherwise false
         */
        function isArray(val) {
          return toString.call(val) === '[object Array]'
        }

        /**
         * Determine if a value is undefined
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if the value is undefined, otherwise false
         */
        function isUndefined(val) {
          return typeof val === 'undefined'
        }

        /**
         * Determine if a value is a Buffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Buffer, otherwise false
         */
        function isBuffer(val) {
          return (
            val !== null &&
            !isUndefined(val) &&
            val.constructor !== null &&
            !isUndefined(val.constructor) &&
            typeof val.constructor.isBuffer === 'function' &&
            val.constructor.isBuffer(val)
          )
        }

        /**
         * Determine if a value is an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an ArrayBuffer, otherwise false
         */
        function isArrayBuffer(val) {
          return toString.call(val) === '[object ArrayBuffer]'
        }

        /**
         * Determine if a value is a FormData
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an FormData, otherwise false
         */
        function isFormData(val) {
          return typeof FormData !== 'undefined' && val instanceof FormData
        }

        /**
         * Determine if a value is a view on an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
         */
        function isArrayBufferView(val) {
          var result
          if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
            result = ArrayBuffer.isView(val)
          } else {
            result = val && val.buffer && val.buffer instanceof ArrayBuffer
          }
          return result
        }

        /**
         * Determine if a value is a String
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a String, otherwise false
         */
        function isString(val) {
          return typeof val === 'string'
        }

        /**
         * Determine if a value is a Number
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Number, otherwise false
         */
        function isNumber(val) {
          return typeof val === 'number'
        }

        /**
         * Determine if a value is an Object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Object, otherwise false
         */
        function isObject(val) {
          return val !== null && typeof val === 'object'
        }

        /**
         * Determine if a value is a plain Object
         *
         * @param {Object} val The value to test
         * @return {boolean} True if value is a plain Object, otherwise false
         */
        function isPlainObject(val) {
          if (toString.call(val) !== '[object Object]') {
            return false
          }

          var prototype = Object.getPrototypeOf(val)
          return prototype === null || prototype === Object.prototype
        }

        /**
         * Determine if a value is a Date
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Date, otherwise false
         */
        function isDate(val) {
          return toString.call(val) === '[object Date]'
        }

        /**
         * Determine if a value is a File
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a File, otherwise false
         */
        function isFile(val) {
          return toString.call(val) === '[object File]'
        }

        /**
         * Determine if a value is a Blob
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Blob, otherwise false
         */
        function isBlob(val) {
          return toString.call(val) === '[object Blob]'
        }

        /**
         * Determine if a value is a Function
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Function, otherwise false
         */
        function isFunction(val) {
          return toString.call(val) === '[object Function]'
        }

        /**
         * Determine if a value is a Stream
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Stream, otherwise false
         */
        function isStream(val) {
          return isObject(val) && isFunction(val.pipe)
        }

        /**
         * Determine if a value is a URLSearchParams object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a URLSearchParams object, otherwise false
         */
        function isURLSearchParams(val) {
          return (
            typeof URLSearchParams !== 'undefined' &&
            val instanceof URLSearchParams
          )
        }

        /**
         * Trim excess whitespace off the beginning and end of a string
         *
         * @param {String} str The String to trim
         * @returns {String} The String freed of excess whitespace
         */
        function trim(str) {
          return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '')
        }

        /**
         * Determine if we're running in a standard browser environment
         *
         * This allows axios to run in a web worker, and react-native.
         * Both environments support XMLHttpRequest, but not fully standard globals.
         *
         * web workers:
         *  typeof window -> undefined
         *  typeof document -> undefined
         *
         * react-native:
         *  navigator.product -> 'ReactNative'
         * nativescript
         *  navigator.product -> 'NativeScript' or 'NS'
         */
        function isStandardBrowserEnv() {
          if (
            typeof navigator !== 'undefined' &&
            (navigator.product === 'ReactNative' ||
              navigator.product === 'NativeScript' ||
              navigator.product === 'NS')
          ) {
            return false
          }
          return (
            typeof window !== 'undefined' && typeof document !== 'undefined'
          )
        }

        /**
         * Iterate over an Array or an Object invoking a function for each item.
         *
         * If `obj` is an Array callback will be called passing
         * the value, index, and complete array for each item.
         *
         * If 'obj' is an Object callback will be called passing
         * the value, key, and complete object for each property.
         *
         * @param {Object|Array} obj The object to iterate
         * @param {Function} fn The callback to invoke for each item
         */
        function forEach(obj, fn) {
          // Don't bother if no value provided
          if (obj === null || typeof obj === 'undefined') {
            return
          }

          // Force an array if not already something iterable
          if (typeof obj !== 'object') {
            /*eslint no-param-reassign:0*/
            obj = [obj]
          }

          if (isArray(obj)) {
            // Iterate over array values
            for (var i = 0, l = obj.length; i < l; i++) {
              fn.call(null, obj[i], i, obj)
            }
          } else {
            // Iterate over object keys
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) {
                fn.call(null, obj[key], key, obj)
              }
            }
          }
        }

        /**
         * Accepts varargs expecting each argument to be an object, then
         * immutably merges the properties of each object and returns result.
         *
         * When multiple objects contain the same key the later object in
         * the arguments list will take precedence.
         *
         * Example:
         *
         * ```js
         * var result = merge({foo: 123}, {foo: 456});
         * console.log(result.foo); // outputs 456
         * ```
         *
         * @param {Object} obj1 Object to merge
         * @returns {Object} Result of all merge properties
         */
        function merge(/* obj1, obj2, obj3, ... */) {
          var result = {}
          function assignValue(val, key) {
            if (isPlainObject(result[key]) && isPlainObject(val)) {
              result[key] = merge(result[key], val)
            } else if (isPlainObject(val)) {
              result[key] = merge({}, val)
            } else if (isArray(val)) {
              result[key] = val.slice()
            } else {
              result[key] = val
            }
          }

          for (var i = 0, l = arguments.length; i < l; i++) {
            forEach(arguments[i], assignValue)
          }
          return result
        }

        /**
         * Extends object a by mutably adding to it the properties of object b.
         *
         * @param {Object} a The object to be extended
         * @param {Object} b The object to copy properties from
         * @param {Object} thisArg The object to bind function to
         * @return {Object} The resulting value of object a
         */
        function extend(a, b, thisArg) {
          forEach(b, function assignValue(val, key) {
            if (thisArg && typeof val === 'function') {
              a[key] = bind(val, thisArg)
            } else {
              a[key] = val
            }
          })
          return a
        }

        /**
         * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
         *
         * @param {string} content with BOM
         * @return {string} content value without BOM
         */
        function stripBOM(content) {
          if (content.charCodeAt(0) === 0xfeff) {
            content = content.slice(1)
          }
          return content
        }

        module.exports = {
          isArray: isArray,
          isArrayBuffer: isArrayBuffer,
          isBuffer: isBuffer,
          isFormData: isFormData,
          isArrayBufferView: isArrayBufferView,
          isString: isString,
          isNumber: isNumber,
          isObject: isObject,
          isPlainObject: isPlainObject,
          isUndefined: isUndefined,
          isDate: isDate,
          isFile: isFile,
          isBlob: isBlob,
          isFunction: isFunction,
          isStream: isStream,
          isURLSearchParams: isURLSearchParams,
          isStandardBrowserEnv: isStandardBrowserEnv,
          forEach: forEach,
          merge: merge,
          extend: extend,
          trim: trim,
          stripBOM: stripBOM,
        }

        /***/
      },

    /***/ './node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=script&lang=js&':
      /*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/regenerator */ './node_modules/@babel/runtime/regenerator/index.js'
          )
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
          )

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg)
            var value = info.value
          } catch (error) {
            reject(error)
            return
          }
          if (info.done) {
            resolve(value)
          } else {
            Promise.resolve(value).then(_next, _throw)
          }
        }

        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args)
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                )
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                )
              }
              _next(undefined)
            })
          }
        }

        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          props: {},
          data: function data() {
            return {
              name: '',
              phone: '',
              message: '',
              image: '',
              direction: '-1',
              isOpen: false,
              sended: false,
              disabled: false,
            }
          },
          methods: {
            send: function send(e) {
              var _this = this

              return _asyncToGenerator(
                /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(
                  function _callee() {
                    var response
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              _this.disabled = true

                              _this.makeData()

                              _context.next = 4
                              return fetch('/api/feedback', {
                                method: 'POST',
                                body: _this.makeData(),
                              }).then(function (result) {
                                _this.sended = true // this.close()
                                // const callbackSuccessModal = document.querySelector(
                                //     ".callback-success-modal"
                                // );
                                // callbackSuccessModal.classList.add("-open");
                              })

                            case 4:
                              response = _context.sent

                            case 5:
                            case 'end':
                              return _context.stop()
                          }
                        }
                      },
                      _callee
                    )
                  }
                )
              )()
            },
            makeData: function makeData() {
              var form = new FormData()
              var input = document.querySelector('#file')
              form.append('file', input.files[0])
              form.append('name', this.name)
              form.append('phone', this.phone)
              form.append('message', this.message)
              form.append('direction', this.direction)
              return form
            },
            open: function open() {
              this.isOpen = true
            },
            close: function close() {
              this.isOpen = false
              this.sended = false
            },
          },
        }

        /***/
      },

    /***/ './node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=script&lang=js&':
      /*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! @babel/runtime/regenerator */ './node_modules/@babel/runtime/regenerator/index.js'
          )
        /* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__
          )
        /* harmony import */ var vue2_datepicker__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! vue2-datepicker */ './node_modules/vue2-datepicker/index.esm.js'
          )
        /* harmony import */ var vue2_datepicker_index_css__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! vue2-datepicker/index.css */ './node_modules/vue2-datepicker/index.css'
          )
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(/*! moment */ './node_modules/moment/moment.js')
        /* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default =
          /*#__PURE__*/ __webpack_require__.n(
            moment__WEBPACK_IMPORTED_MODULE_3__
          )

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg)
            var value = info.value
          } catch (error) {
            reject(error)
            return
          }
          if (info.done) {
            resolve(value)
          } else {
            Promise.resolve(value).then(_next, _throw)
          }
        }

        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args)
              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'next',
                  value
                )
              }
              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  'throw',
                  err
                )
              }
              _next(undefined)
            })
          }
        }

        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          components: {
            DatePicker: vue2_datepicker__WEBPACK_IMPORTED_MODULE_1__['default'],
          },
          props: {
            directions: null,
            data: null,
            address: null,
            addresses: null,
          },
          data: function data() {
            return {
              time: null,
              patient: '',
              phone: null,
              direction: null,
              error: null,
              sended: false,
              addressId: null,
            }
          },
          mounted: function mounted() {
            this.addressId = this.address
          },
          methods: {
            send: function send(e) {
              var _this = this

              return _asyncToGenerator(
                /*#__PURE__*/ _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(
                  function _callee() {
                    var res
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              e.preventDefault()

                              if (_this.validate()) {
                                _context.next = 3
                                break
                              }

                              return _context.abrupt('return')

                            case 3:
                              _context.next = 5
                              return fetch('/api/form', {
                                method: 'POST',
                                body: _this.makeData(),
                              })
                                .then(function (response) {
                                  return response.json()
                                })
                                .then(function (result) {
                                  _this.sended = true
                                  _this.patient = ''
                                  _this.time = null
                                  _this.phone = null
                                  _this.direction = null
                                  setTimeout(function () {
                                    _this.sended = false
                                  }, 4000)
                                })

                            case 5:
                              res = _context.sent

                            case 6:
                            case 'end':
                              return _context.stop()
                          }
                        }
                      },
                      _callee
                    )
                  }
                )
              )()
            },
            makeData: function makeData() {
              var formatted_date = this.makeDate(),
                form = new URLSearchParams()
              form.append('PATIENT_NAME', this.patient)
              form.append('CONTACTS', this.phone)
              form.append('APPOINTMENT_DATE[]', formatted_date.date)
              form.append('APPOINTMENT_TIME[]', formatted_date.time)
              form.append('DESCRIPTION', this.direction)
              form.append('ADDRESS_ID', this.addressId)
              return form
            },
            makeDate: function makeDate() {
              var time = moment__WEBPACK_IMPORTED_MODULE_3___default()(
                this.time
              )
              return {
                date: time.format('YYYY-MM-DD'),
              }
            },
            validate: function validate() {
              if (this.phone.length < 18) {
                this.error = 'Введите корректный номер телефона.'
                return false
              }

              this.error = null
              return true
            },
          },
        }

        /***/
      },

    /***/ './resources/js/app.js':
      /*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
      /***/ (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) => {
        __webpack_require__(/*! ./bootstrap */ './resources/js/bootstrap.js')

        __webpack_require__(
          /*! ./partials/input-mask */ './resources/js/partials/input-mask.js'
        )

        __webpack_require__(
          /*! ./partials/swiper */ './resources/js/partials/swiper.js'
        )

        __webpack_require__(
          /*! ./partials/tabs */ './resources/js/partials/tabs.js'
        )

        __webpack_require__(
          /*! ./partials/history */ './resources/js/partials/history.js'
        )

        __webpack_require__(
          /*! ./partials/modal */ './resources/js/partials/modal.js'
        )

        __webpack_require__(
          /*! ./partials/filter */ './resources/js/partials/filter.js'
        )

        __webpack_require__(
          /*! ./partials/common */ './resources/js/partials/common.js'
        )

        /***/
      },

    /***/ './resources/js/bootstrap.js':
      /*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(/*! vue */ './node_modules/vue/dist/vue.esm.js')
        /* harmony import */ var _components_AppForm__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./components/AppForm */ './resources/js/components/AppForm.vue'
          )
        /* harmony import */ var _components_AppFloatForm__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./components/AppFloatForm */ './resources/js/components/AppFloatForm.vue'
          )
        window._ = __webpack_require__(
          /*! lodash */ './node_modules/lodash/lodash.js'
        )
        /**
         * We'll load the axios HTTP library which allows us to easily issue requests
         * to our Laravel back-end. This library automatically handles sending the
         * CSRF token as a header based on the value of the "XSRF" token cookie.
         */

        window.axios = __webpack_require__(
          /*! axios */ './node_modules/axios/index.js'
        )
        window.axios.defaults.headers.common['X-Requested-With'] =
          'XMLHttpRequest'
        /**
         * Echo exposes an expressive API for subscribing to channels and listening
         * for events that are broadcast by Laravel. Echo and event broadcasting
         * allows your team to easily build robust real-time web applications.
         */
        // import Echo from 'laravel-echo';
        // window.Pusher = require('pusher-js');
        // window.Echo = new Echo({
        //     broadcaster: 'pusher',
        //     key: process.env.MIX_PUSHER_APP_KEY,
        //     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
        //     forceTLS: true
        // });

        window.Vue = __webpack_require__(
          /*! vue */ './node_modules/vue/dist/vue.esm.js'
        )['default']
        vue__WEBPACK_IMPORTED_MODULE_2__['default'].component(
          'app-form',
          __webpack_require__(
            /*! ./components/AppForm.vue */ './resources/js/components/AppForm.vue'
          )['default']
        )
        vue__WEBPACK_IMPORTED_MODULE_2__['default'].component(
          'app-float-form',
          __webpack_require__(
            /*! ./components/AppFloatForm.vue */ './resources/js/components/AppFloatForm.vue'
          )['default']
        )
        var app = new vue__WEBPACK_IMPORTED_MODULE_2__['default']({
          el: '#app',
          components: {
            AppForm:
              _components_AppForm__WEBPACK_IMPORTED_MODULE_0__['default'],
            AppFloatForm:
              _components_AppFloatForm__WEBPACK_IMPORTED_MODULE_1__['default'],
          },
        })

        /***/
      },

    /***/ './resources/js/partials/common.js':
      /*!*****************************************!*\
  !*** ./resources/js/partials/common.js ***!
  \*****************************************/
      /***/ () => {
        var copyButton = document.getElementById('copy-link')
        var copyText = document.getElementById('copy-text')

        if (copyButton) {
          copyButton.addEventListener('click', function () {
            copyText.select()
            document.execCommand('copy')
          })
        }

        /***/
      },

    /***/ './resources/js/partials/filter.js':
      /*!*****************************************!*\
  !*** ./resources/js/partials/filter.js ***!
  \*****************************************/
      /***/ () => {
        function _createForOfIteratorHelper(o, allowArrayLike) {
          var it =
            (typeof Symbol !== 'undefined' && o[Symbol.iterator]) ||
            o['@@iterator']
          if (!it) {
            if (
              Array.isArray(o) ||
              (it = _unsupportedIterableToArray(o)) ||
              (allowArrayLike && o && typeof o.length === 'number')
            ) {
              if (it) o = it
              var i = 0
              var F = function F() {}
              return {
                s: F,
                n: function n() {
                  if (i >= o.length) return { done: true }
                  return { done: false, value: o[i++] }
                },
                e: function e(_e) {
                  throw _e
                },
                f: F,
              }
            }
            throw new TypeError(
              'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            )
          }
          var normalCompletion = true,
            didErr = false,
            err
          return {
            s: function s() {
              it = it.call(o)
            },
            n: function n() {
              var step = it.next()
              normalCompletion = step.done
              return step
            },
            e: function e(_e2) {
              didErr = true
              err = _e2
            },
            f: function f() {
              try {
                if (!normalCompletion && it['return'] != null) it['return']()
              } finally {
                if (didErr) throw err
              }
            },
          }
        }

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return
          if (typeof o === 'string') return _arrayLikeToArray(o, minLen)
          var n = Object.prototype.toString.call(o).slice(8, -1)
          if (n === 'Object' && o.constructor) n = o.constructor.name
          if (n === 'Map' || n === 'Set') return Array.from(o)
          if (
            n === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return _arrayLikeToArray(o, minLen)
        }

        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length
          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i]
          }
          return arr2
        }

        var filters = document.getElementsByName('filter')

        function unique(arr) {
          var result = []

          var _iterator = _createForOfIteratorHelper(arr),
            _step

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done; ) {
              var str = _step.value

              if (!result.includes(str)) {
                result.push(str)
              }
            }
          } catch (err) {
            _iterator.e(err)
          } finally {
            _iterator.f()
          }

          return result
        }

        var lastChoices = ''

        function handleFilter() {
          var els = document.getElementsByName('filter')
          var choices = []
          var specializationsList = document.getElementById(
            'specializationsList'
          )
          var replaceText = ''

          for (var i = 0; i < els.length; i++) {
            if (els[i].checked) {
              if (!choices.includes(els[i].value)) {
                choices.push(els[i].value)
                var element = els[i].nextElementSibling
                replaceText += element.nextElementSibling.innerText + ', '
              }
            }
          }

          replaceText = replaceText.substring(0, replaceText.length - 2)
          specializationsList.innerText = replaceText
          choices = unique(choices).sort()

          if (choices.length !== lastChoices.length) {
            var request = 'team/filter?filter=' + choices.join()
            window.history.pushState(
              '1',
              'filter',
              '?filter=' + unique(choices).join()
            )
            fetch(request)
              .then(function (response) {
                return response.text()
              })
              .then(function (data) {
                document.getElementById('teamWrapper').innerHTML = data
              })
          }

          lastChoices = choices
        }

        var prevElement = ''
        filters.forEach(function (filter) {
          filter.addEventListener('change', function (e) {
            searchInput.value = ''

            if (filter.checked) {
              filter.parentElement.classList.add('active')
            } else {
              filter.parentElement.classList.remove('active')
            }

            var elements = document.querySelectorAll(
              'input[value="' + filter.value + '"]'
            )
            elements.forEach(function (element) {
              element.click()
            })
            handleFilter()
            prevElement = filter
          })
        })
        var searchInput = document.getElementById('searchInput')
        var clearSearch = document.getElementById('clear-search')
        var doctors = document.getElementsByClassName('team-item')

        if (searchInput) {
          searchInput.addEventListener('keyup', function (e) {
            var search = searchInput.value
            Object.keys(doctors).forEach(function (item) {
              if (
                doctors[item].dataset.value
                  .toLowerCase()
                  .includes(search.toLowerCase())
              ) {
                doctors[item].style.display = 'block'
              } else {
                doctors[item].style.display = 'none'
              }
            })
          })
        }

        if (clearSearch) {
          clearSearch.addEventListener('click', function () {
            searchInput.value = ''
            filters.forEach(function (filter) {
              filter.parentElement.classList.remove('active')
              filter.checked = false
            })
            Object.keys(doctors).forEach(function (item) {
              doctors[item].style.display = 'block'
            })
          })
        }

        /***/
      },

    /***/ './resources/js/partials/history.js':
      /*!******************************************!*\
  !*** ./resources/js/partials/history.js ***!
  \******************************************/
      /***/ () => {
        window.addEventListener('load', function () {
          if (document.querySelector('.about-history-line')) {
            var line = document.querySelector('.about-history-line')
            var rows = document.querySelectorAll('.about-history-row')
            var years = document.querySelectorAll('.about-history-year')
            var isDesktop = window.matchMedia('(min-width: 1280px)').matches
            var topOffset = rows[0].offsetHeight / 2
            var lastRow = rows.length - 1
            var botOffset = rows[lastRow].offsetHeight / 2
            var totalHeight = 0
            rows.forEach(function (row) {
              totalHeight += row.offsetHeight
            })
            line.style.top = ''.concat(topOffset, 'px')
            line.style.height = ''.concat(
              totalHeight - topOffset - botOffset,
              'px'
            )
          }
        })

        /***/
      },

    /***/ './resources/js/partials/input-mask.js':
      /*!*********************************************!*\
  !*** ./resources/js/partials/input-mask.js ***!
  \*********************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! inputmask */ './node_modules/inputmask/dist/inputmask.js'
          )
        /* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            inputmask__WEBPACK_IMPORTED_MODULE_0__
          )

        window.addEventListener('load', function () {
          var phones = document.querySelectorAll('.phone-mask')
          var dates = document.querySelectorAll('.date-mask')
          phones.forEach(function (phone) {
            inputmask__WEBPACK_IMPORTED_MODULE_0___default()({
              mask: '+7 (999) 999 99 99',
              placeholder: ' ',
              showMaskOnFocus: false,
              showMaskOnHover: false,
            }).mask(phone)
          })
          dates.forEach(function (date) {
            inputmask__WEBPACK_IMPORTED_MODULE_0___default()({
              mask: '99.99.9999',
              placeholder: ' ',
              showMaskOnFocus: false,
              showMaskOnHover: false,
            }).mask(date)
          })
        })

        /***/
      },

    /***/ './resources/js/partials/modal.js':
      /*!****************************************!*\
  !*** ./resources/js/partials/modal.js ***!
  \****************************************/
      /***/ () => {
        window.addEventListener('load', function () {
          var callbackModal = document.querySelector('.callback-modal')
          var callbackSuccessModal = document.querySelector(
            '.callback-success-modal'
          )
          var backdrop = document.querySelectorAll('.modal-backdrop')
          var close = document.querySelectorAll('.modal-close')
          var closeButton = document.querySelectorAll('.modal-close-button')
          var callbackBtn = document.querySelector('.header-callback-btn')
          var callbackBtnDefault = document.querySelector('.callback-btn')
          var callbackSendBtn = callbackModal.querySelector('.modal-send')

          if (callbackBtn) {
            callbackBtn.addEventListener('click', function () {
              callbackModal.classList.add('-open')
            })
          }

          if (callbackBtnDefault) {
            callbackBtnDefault.addEventListener('click', function () {
              callbackModal.classList.add('-open')
            })
          }

          backdrop.forEach(function (b) {
            b.addEventListener('click', function () {
              document.querySelectorAll('.modal').forEach(function (modal) {
                modal.classList.remove('-open')
              })
            })
          })
          close.forEach(function (c) {
            c.addEventListener('click', function () {
              document.querySelectorAll('.modal').forEach(function (modal) {
                modal.classList.remove('-open')
              })
            })
          })

          if (closeButton) {
            closeButton.forEach(function (c) {
              c.addEventListener('click', function () {
                document.querySelectorAll('.modal').forEach(function (modal) {
                  modal.classList.remove('-open')
                })
              })
            })
          }

          if (callbackSendBtn) {
            callbackSendBtn.addEventListener('click', function () {
              callbackModal.classList.remove('-open')
              callbackSuccessModal.classList.add('-open')
            })
          } // mobile menu

          var burger = document.querySelector('.mob-header-burger')
          var mobMenu = document.querySelector('.mobile-menu')
          var menuClose = mobMenu.querySelector('.mobile-menu-close')
          var menuDropdownHeader = mobMenu.querySelector(
            '.mobile-menu-dropdown-header'
          )
          var menuDropdownContent = mobMenu.querySelector(
            '.mobile-menu-dropdown-content'
          )
          menuDropdownHeader.addEventListener('click', function () {
            menuDropdownContent.classList.toggle('-open')
          })
          burger.addEventListener('click', function () {
            mobMenu.classList.add('-open')
            document.body.classList.add('--hidden')
          })
          menuClose.addEventListener('click', function () {
            mobMenu.classList.remove('-open')
            document.body.classList.remove('--hidden')
          }) // team

          var teamBtn = document.querySelector('.team-modal-btn')
          var teamModal = document.querySelector('.team-modal')

          if (teamBtn) {
            teamBtn.addEventListener('click', function () {
              teamModal.classList.add('-open')
            })
          } // prices

          var pricesBtn = document.querySelector('.prices-modal-btn')
          var pricesModal = document.querySelector('.prices-modal')
          var pricesLink = document.querySelector('.modal-prices-btn')

          if (pricesBtn) {
            pricesBtn.addEventListener('click', function () {
              pricesModal.classList.add('-open')
            })
            pricesLink.addEventListener('click', function () {
              pricesModal.classList.remove('-open')
            })
          } // search

          var searchBtn = document.querySelector('.mob-header-search')
          var searchModal = document.querySelector('.search-modal')
          var searchCancel = document.querySelector('.search-modal-cancel')

          if (searchBtn) {
            searchBtn.addEventListener('click', function () {
              searchModal.classList.add('-open')
            })
            searchCancel.addEventListener('click', function () {
              searchModal.classList.remove('-open')
            })
          }
        })

        /***/
      },

    /***/ './resources/js/partials/swiper.js':
      /*!*****************************************!*\
  !*** ./resources/js/partials/swiper.js ***!
  \*****************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! swiper */ './node_modules/swiper/swiper.esm.js'
          )

        swiper__WEBPACK_IMPORTED_MODULE_0__['default'].use([
          swiper__WEBPACK_IMPORTED_MODULE_0__.Navigation,
          swiper__WEBPACK_IMPORTED_MODULE_0__.Pagination,
          swiper__WEBPACK_IMPORTED_MODULE_0__.Thumbs,
          swiper__WEBPACK_IMPORTED_MODULE_0__.Autoplay,
        ])
        window.addEventListener('load', function () {
          var homeHeroSlider = new swiper__WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]('.home-hero-slider', {
            slidesPerView: 1,
            spaceBetween: 16,
            loop: true,
            autoplay: {
              delay: 4000,
              stopOnLastSlide: true,
              disableOnInteraction: false,
            },
            pagination: {
              el: '.home-hero-pagination',
              clickable: true,
              renderBullet: function renderBullet(index, className) {
                return '\n                    <div class="'.concat(
                  className,
                  '">\n                        <div class="pagination-progress"></div>\n                    </div>\n                '
                )
              },
            },
            on: {
              slideChange: function slideChange() {
                for (var i = 0, currentBar; i < this.slides.length; ++i) {
                  if (
                    document.querySelectorAll('.pagination-progress').length
                  ) {
                    currentBar = document.querySelectorAll(
                      '.pagination-progress'
                    )[i]

                    if (i <= this.realIndex - 1) {
                      currentBar.style.width = '100%'
                    } else {
                      if (currentBar) {
                        currentBar.style.width = '0%'
                      }
                    }
                  }
                }
              },
            },
          })
          var servicesSlider = new swiper__WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]('.services-slider', {
            slidesPerView: 4,
            spaceBetween: 32,
            navigation: {
              prevEl: '.services-slider-prev',
              nextEl: '.services-slider-next',
            },
            pagination: {
              el: '.services-slider-pagination',
              type: 'bullets',
              clickable: true,
            },
            breakpoints: {
              320: {
                slidesPerView: 1,
              },
              768: {
                slidesPerView: 2,
              },
              1024: {
                slidesPerView: 3,
              },
              1280: {
                slidesPerView: 4,
              },
            },
          })
          var directionInner = new swiper__WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]('.direction-inner-slider', {
            slidesPerView: 4,
            spaceBetween: 32,
            navigation: {
              prevEl: '.direction-inner-prev',
              nextEl: '.direction-inner-next',
            },
            pagination: {
              el: '.direction-inner-pagination',
              type: 'bullets',
              clickable: true,
            },
            breakpoints: {
              320: {
                slidesPerView: 1,
              },
              768: {
                slidesPerView: 2,
              },
              1024: {
                slidesPerView: 3,
              },
              1280: {
                slidesPerView: 4,
              },
            },
          })
          var galleryThumbs = new swiper__WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]('.about-gallery-thumbs', {
            slidesPerView: 6,
            spaceBetween: 20,
            watchSlidesProgress: true,
            breakpoints: {
              320: {
                slidesPerView: 3,
              },
              370: {
                slidesPerView: 4,
              },
              1280: {
                slidesPerView: 6,
              },
            },
          })
          var gallerySlider = new swiper__WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]('.about-gallery-slider', {
            slidesPerView: 1,
            spaceBetween: 32,
            navigation: {
              prevEl: '.about-gallery-prev',
              nextEl: '.about-gallery-next',
            },
            pagination: {
              el: '.about-gallery-pagination',
              type: 'fraction',
            },
            thumbs: {
              swiper: galleryThumbs,
            },
          })
        })

        /***/
      },

    /***/ './resources/js/partials/tabs.js':
      /*!***************************************!*\
  !*** ./resources/js/partials/tabs.js ***!
  \***************************************/
      /***/ () => {
        window.addEventListener('load', function () {
          var toggleActiveBtn = function toggleActiveBtn(_ref, btns) {
            var target = _ref.target
            btns.forEach(function (btn) {
              return btn.classList.remove('-active')
            })
            console.log(target)
            target.classList.add('-active')
          }

          var toggleTab = function toggleTab(_ref2, tabs) {
            var target = _ref2.target
            tabs.forEach(function (tab) {
              tab.style.display = 'none'

              if (target.dataset.index == tab.dataset.index) {
                tab.style.display = 'block'
              }

              if (target.dataset.index === 'all') {
                tab.style.display = 'block'
              }
            })
          } // Home services

          var homeServicesBtns = document.querySelectorAll(
            '.home-services-btn-item'
          )
          var homeServicesTabs = document.querySelectorAll('.home-services-tab')
          homeServicesBtns.forEach(function (btn) {
            return btn.addEventListener('click', function (e) {
              toggleActiveBtn(e, homeServicesBtns)
              toggleTab(e, homeServicesTabs)
            })
          }) // Directions

          var directionsBtns = document.querySelectorAll('.directions-btn')
          var directionsTabs = document.querySelectorAll('.directions-tab')
          directionsBtns.forEach(function (btn) {
            btn.addEventListener('click', function (e) {
              toggleActiveBtn(e, directionsBtns)
              toggleTab(e, directionsTabs)
            })
          }) // Prices

          var pricesBtns = document.querySelectorAll('.prices-btn')
          var pricesTabs = document.querySelectorAll('.prices-tab')
          pricesBtns.forEach(function (btn) {
            btn.addEventListener('click', function (e) {
              toggleActiveBtn(e, pricesBtns)
              toggleTab(e, pricesTabs)
            })
          }) // Prices Mobile

          var pricesBtnsM = document.querySelectorAll('.modal-prices-btn')
          var pricesTabsM = document.querySelectorAll('.modal-prices-tab')
          var currentService = document.getElementById('currentService')
          pricesBtnsM.forEach(function (btn) {
            btn.addEventListener('click', function (e) {
              toggleActiveBtn(e, pricesBtnsM)
              toggleTab(e, pricesTabsM)
              currentService.innerText = btn.innerText
            })
          }) // Search

          var searchBtns = document.querySelectorAll('.search-btn')
          var searchTabs = document.querySelectorAll('.search-tab')
          searchBtns.forEach(function (btn) {
            btn.addEventListener('click', function (e) {
              toggleActiveBtn(e, searchBtns)
              toggleTab(e, searchTabs)
            })
          })
        })

        /***/
      },

    /***/ './node_modules/css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!./node_modules/vue2-datepicker/index.css':
      /*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!./node_modules/vue2-datepicker/index.css ***!
  \********************************************************************************************************************************************************************************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../css-loader/dist/runtime/api.js */ './node_modules/css-loader/dist/runtime/api.js'
          )
        /* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__
          )
        // Imports

        var ___CSS_LOADER_EXPORT___ =
          _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(
            function (i) {
              return i[1]
            }
          )
        // Module
        ___CSS_LOADER_EXPORT___.push([
          module.id,
          '.mx-icon-left:before,.mx-icon-right:before,.mx-icon-double-left:before,.mx-icon-double-right:before,.mx-icon-double-left:after,.mx-icon-double-right:after{content:"";position:relative;top:-1px;display:inline-block;width:10px;height:10px;vertical-align:middle;border-style:solid;border-color:currentColor;border-width:2px 0 0 2px;border-radius:1px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-transform-origin:center;transform-origin:center;-webkit-transform:rotate(-45deg) scale(0.7);transform:rotate(-45deg) scale(0.7)}.mx-icon-double-left:after{left:-4px}.mx-icon-double-right:before{left:4px}.mx-icon-right:before,.mx-icon-double-right:before,.mx-icon-double-right:after{-webkit-transform:rotate(135deg) scale(0.7);transform:rotate(135deg) scale(0.7)}.mx-btn{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1;font-size:14px;font-weight:500;padding:7px 15px;margin:0;cursor:pointer;background-color:transparent;outline:none;border:1px solid rgba(0,0,0,.1);border-radius:4px;color:#73879c;white-space:nowrap}.mx-btn:hover{border-color:#1284e7;color:#1284e7}.mx-btn-text{border:0;padding:0 4px;text-align:left;line-height:inherit}.mx-scrollbar{height:100%}.mx-scrollbar:hover .mx-scrollbar-track{opacity:1}.mx-scrollbar-wrap{height:100%;overflow-x:hidden;overflow-y:auto}.mx-scrollbar-track{position:absolute;top:2px;right:2px;bottom:2px;width:6px;z-index:1;border-radius:4px;opacity:0;-webkit-transition:opacity .24s ease-out;transition:opacity .24s ease-out}.mx-scrollbar-track .mx-scrollbar-thumb{position:absolute;width:100%;height:0;cursor:pointer;border-radius:inherit;background-color:rgba(144,147,153,.3);-webkit-transition:background-color .3s;transition:background-color .3s}.mx-zoom-in-down-enter-active,.mx-zoom-in-down-leave-active{opacity:1;-webkit-transform:scaleY(1);transform:scaleY(1);-webkit-transition:opacity .3s cubic-bezier(0.23, 1, 0.32, 1),-webkit-transform .3s cubic-bezier(0.23, 1, 0.32, 1);transition:opacity .3s cubic-bezier(0.23, 1, 0.32, 1),-webkit-transform .3s cubic-bezier(0.23, 1, 0.32, 1);transition:transform .3s cubic-bezier(0.23, 1, 0.32, 1),opacity .3s cubic-bezier(0.23, 1, 0.32, 1);transition:transform .3s cubic-bezier(0.23, 1, 0.32, 1),opacity .3s cubic-bezier(0.23, 1, 0.32, 1),-webkit-transform .3s cubic-bezier(0.23, 1, 0.32, 1);-webkit-transform-origin:center top;transform-origin:center top}.mx-zoom-in-down-enter,.mx-zoom-in-down-enter-from,.mx-zoom-in-down-leave-to{opacity:0;-webkit-transform:scaleY(0);transform:scaleY(0)}.mx-datepicker{position:relative;display:inline-block;width:210px}.mx-datepicker svg{width:1em;height:1em;vertical-align:-0.15em;fill:currentColor;overflow:hidden}.mx-datepicker-range{width:320px}.mx-datepicker-inline{width:auto}.mx-input-wrapper{position:relative}.mx-input-wrapper .mx-icon-clear{display:none}.mx-input-wrapper:hover .mx-icon-clear{display:block}.mx-input-wrapper:hover .mx-icon-clear+.mx-icon-calendar{display:none}.mx-input{display:inline-block;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:34px;padding:6px 30px;padding-left:10px;font-size:14px;line-height:1.4;color:#555;background-color:#fff;border:1px solid #ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.mx-input:hover,.mx-input:focus{border-color:#409aff}.mx-input:disabled,.mx-input.disabled{color:#ccc;background-color:#f3f3f3;border-color:#ccc;cursor:not-allowed}.mx-input:focus{outline:none}.mx-input::-ms-clear{display:none}.mx-icon-calendar,.mx-icon-clear{position:absolute;top:50%;right:8px;-webkit-transform:translateY(-50%);transform:translateY(-50%);font-size:16px;line-height:1;color:rgba(0,0,0,.5);vertical-align:middle}.mx-icon-clear{cursor:pointer}.mx-icon-clear:hover{color:rgba(0,0,0,.8)}.mx-datepicker-main{font:14px/1.5 "Helvetica Neue",Helvetica,Arial,"Microsoft Yahei",sans-serif;color:#73879c;background-color:#fff;border:1px solid #e8e8e8}.mx-datepicker-popup{position:absolute;margin-top:1px;margin-bottom:1px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,.175);box-shadow:0 6px 12px rgba(0,0,0,.175);z-index:2001}.mx-datepicker-sidebar{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;width:100px;padding:6px;overflow:auto}.mx-datepicker-sidebar+.mx-datepicker-content{margin-left:100px;border-left:1px solid #e8e8e8}.mx-datepicker-body{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.mx-btn-shortcut{display:block;padding:0 6px;line-height:24px}.mx-range-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}@media(max-width: 750px){.mx-range-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.mx-datepicker-header{padding:6px 8px;border-bottom:1px solid #e8e8e8}.mx-datepicker-footer{padding:6px 8px;text-align:right;border-top:1px solid #e8e8e8}.mx-calendar{-webkit-box-sizing:border-box;box-sizing:border-box;width:248px;padding:6px 12px}.mx-calendar+.mx-calendar{border-left:1px solid #e8e8e8}.mx-calendar-header,.mx-time-header{-webkit-box-sizing:border-box;box-sizing:border-box;height:34px;line-height:34px;text-align:center;overflow:hidden}.mx-btn-icon-left,.mx-btn-icon-double-left{float:left}.mx-btn-icon-right,.mx-btn-icon-double-right{float:right}.mx-calendar-header-label{font-size:14px}.mx-calendar-decade-separator{margin:0 2px}.mx-calendar-decade-separator:after{content:"~"}.mx-calendar-content{position:relative;height:224px;-webkit-box-sizing:border-box;box-sizing:border-box}.mx-calendar-content .cell{cursor:pointer}.mx-calendar-content .cell:hover{color:#73879c;background-color:#f3f9fe}.mx-calendar-content .cell.active{color:#fff;background-color:#1284e7}.mx-calendar-content .cell.in-range,.mx-calendar-content .cell.hover-in-range{color:#73879c;background-color:#dbedfb}.mx-calendar-content .cell.disabled{cursor:not-allowed;color:#ccc;background-color:#f3f3f3}.mx-calendar-week-mode .mx-date-row{cursor:pointer}.mx-calendar-week-mode .mx-date-row:hover{background-color:#f3f9fe}.mx-calendar-week-mode .mx-date-row.mx-active-week{background-color:#dbedfb}.mx-calendar-week-mode .mx-date-row .cell:hover{color:inherit;background-color:transparent}.mx-calendar-week-mode .mx-date-row .cell.active{color:inherit;background-color:transparent}.mx-week-number{opacity:.5}.mx-table{table-layout:fixed;border-collapse:separate;border-spacing:0;width:100%;height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;text-align:center}.mx-table th{padding:0;font-weight:500;vertical-align:middle}.mx-table td{padding:0;vertical-align:middle}.mx-table-date td,.mx-table-date th{height:32px;font-size:12px}.mx-table-date .today{color:#2a90e9}.mx-table-date .cell.not-current-month{color:#ccc;background:none}.mx-time{-webkit-box-flex:1;-ms-flex:1;flex:1;width:224px;background:#fff}.mx-time+.mx-time{border-left:1px solid #e8e8e8}.mx-calendar-time{position:absolute;top:0;left:0;width:100%;height:100%}.mx-time-header{border-bottom:1px solid #e8e8e8}.mx-time-content{height:224px;-webkit-box-sizing:border-box;box-sizing:border-box;overflow:hidden}.mx-time-columns{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;height:100%;overflow:hidden}.mx-time-column{-webkit-box-flex:1;-ms-flex:1;flex:1;position:relative;border-left:1px solid #e8e8e8;text-align:center}.mx-time-column:first-child{border-left:0}.mx-time-column .mx-time-list{margin:0;padding:0;list-style:none}.mx-time-column .mx-time-list::after{content:"";display:block;height:192px}.mx-time-column .mx-time-item{cursor:pointer;font-size:12px;height:32px;line-height:32px}.mx-time-column .mx-time-item:hover{color:#73879c;background-color:#f3f9fe}.mx-time-column .mx-time-item.active{color:#1284e7;background-color:transparent;font-weight:700}.mx-time-column .mx-time-item.disabled{cursor:not-allowed;color:#ccc;background-color:#f3f3f3}.mx-time-option{cursor:pointer;padding:8px 10px;font-size:14px;line-height:20px}.mx-time-option:hover{color:#73879c;background-color:#f3f9fe}.mx-time-option.active{color:#1284e7;background-color:transparent;font-weight:700}.mx-time-option.disabled{cursor:not-allowed;color:#ccc;background-color:#f3f3f3}\n',
          '',
        ])
        // Exports
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          ___CSS_LOADER_EXPORT___

        /***/
      },

    /***/ './node_modules/css-loader/dist/runtime/api.js':
      /*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
      /***/ (module) => {
        'use strict'

        /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
        // css base code, injected by the css-loader
        // eslint-disable-next-line func-names
        module.exports = function (cssWithMappingToString) {
          var list = [] // return the list of modules as css string

          list.toString = function toString() {
            return this.map(function (item) {
              var content = cssWithMappingToString(item)

              if (item[2]) {
                return '@media '.concat(item[2], ' {').concat(content, '}')
              }

              return content
            }).join('')
          } // import a list of modules into the list
          // eslint-disable-next-line func-names

          list.i = function (modules, mediaQuery, dedupe) {
            if (typeof modules === 'string') {
              // eslint-disable-next-line no-param-reassign
              modules = [[null, modules, '']]
            }

            var alreadyImportedModules = {}

            if (dedupe) {
              for (var i = 0; i < this.length; i++) {
                // eslint-disable-next-line prefer-destructuring
                var id = this[i][0]

                if (id != null) {
                  alreadyImportedModules[id] = true
                }
              }
            }

            for (var _i = 0; _i < modules.length; _i++) {
              var item = [].concat(modules[_i])

              if (dedupe && alreadyImportedModules[item[0]]) {
                // eslint-disable-next-line no-continue
                continue
              }

              if (mediaQuery) {
                if (!item[2]) {
                  item[2] = mediaQuery
                } else {
                  item[2] = ''.concat(mediaQuery, ' and ').concat(item[2])
                }
              }

              list.push(item)
            }
          }

          return list
        }

        /***/
      },

    /***/ './node_modules/date-format-parse/es/format.js':
      /*!*****************************************************!*\
  !*** ./node_modules/date-format-parse/es/format.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ format: () => /* binding */ format,
          /* harmony export */
        })
        /* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./util */ './node_modules/date-format-parse/es/util.js'
          )
        /* harmony import */ var _locale_en__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./locale/en */ './node_modules/date-format-parse/es/locale/en.js'
          )

        var REGEX_FORMAT =
          /\[([^\]]+)]|YYYY|YY?|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|Z{1,2}|S{1,3}|w{1,2}|x|X|a|A/g

        function pad(val) {
          var len =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 2
          var output = ''.concat(Math.abs(val))
          var sign = val < 0 ? '-' : ''

          while (output.length < len) {
            output = '0'.concat(output)
          }

          return sign + output
        }

        function getOffset(date) {
          return Math.round(date.getTimezoneOffset() / 15) * 15
        }

        function formatTimezone(offset) {
          var delimeter =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : ''
          var sign = offset > 0 ? '-' : '+'
          var absOffset = Math.abs(offset)
          var hours = Math.floor(absOffset / 60)
          var minutes = absOffset % 60
          return sign + pad(hours, 2) + delimeter + pad(minutes, 2)
        }

        var meridiem = function meridiem(h, _, isLowercase) {
          var word = h < 12 ? 'AM' : 'PM'
          return isLowercase ? word.toLocaleLowerCase() : word
        }

        var formatFlags = {
          Y: function Y(date) {
            var y = date.getFullYear()
            return y <= 9999 ? ''.concat(y) : '+'.concat(y)
          },
          // Year: 00, 01, ..., 99
          YY: function YY(date) {
            return pad(date.getFullYear(), 4).substr(2)
          },
          // Year: 1900, 1901, ..., 2099
          YYYY: function YYYY(date) {
            return pad(date.getFullYear(), 4)
          },
          // Month: 1, 2, ..., 12
          M: function M(date) {
            return date.getMonth() + 1
          },
          // Month: 01, 02, ..., 12
          MM: function MM(date) {
            return pad(date.getMonth() + 1, 2)
          },
          MMM: function MMM(date, locale) {
            return locale.monthsShort[date.getMonth()]
          },
          MMMM: function MMMM(date, locale) {
            return locale.months[date.getMonth()]
          },
          // Day of month: 1, 2, ..., 31
          D: function D(date) {
            return date.getDate()
          },
          // Day of month: 01, 02, ..., 31
          DD: function DD(date) {
            return pad(date.getDate(), 2)
          },
          // Hour: 0, 1, ... 23
          H: function H(date) {
            return date.getHours()
          },
          // Hour: 00, 01, ..., 23
          HH: function HH(date) {
            return pad(date.getHours(), 2)
          },
          // Hour: 1, 2, ..., 12
          h: function h(date) {
            var hours = date.getHours()

            if (hours === 0) {
              return 12
            }

            if (hours > 12) {
              return hours % 12
            }

            return hours
          },
          // Hour: 01, 02, ..., 12
          hh: function hh() {
            var hours = formatFlags.h.apply(formatFlags, arguments)
            return pad(hours, 2)
          },
          // Minute: 0, 1, ..., 59
          m: function m(date) {
            return date.getMinutes()
          },
          // Minute: 00, 01, ..., 59
          mm: function mm(date) {
            return pad(date.getMinutes(), 2)
          },
          // Second: 0, 1, ..., 59
          s: function s(date) {
            return date.getSeconds()
          },
          // Second: 00, 01, ..., 59
          ss: function ss(date) {
            return pad(date.getSeconds(), 2)
          },
          // 1/10 of second: 0, 1, ..., 9
          S: function S(date) {
            return Math.floor(date.getMilliseconds() / 100)
          },
          // 1/100 of second: 00, 01, ..., 99
          SS: function SS(date) {
            return pad(Math.floor(date.getMilliseconds() / 10), 2)
          },
          // Millisecond: 000, 001, ..., 999
          SSS: function SSS(date) {
            return pad(date.getMilliseconds(), 3)
          },
          // Day of week: 0, 1, ..., 6
          d: function d(date) {
            return date.getDay()
          },
          // Day of week: 'Su', 'Mo', ..., 'Sa'
          dd: function dd(date, locale) {
            return locale.weekdaysMin[date.getDay()]
          },
          // Day of week: 'Sun', 'Mon',..., 'Sat'
          ddd: function ddd(date, locale) {
            return locale.weekdaysShort[date.getDay()]
          },
          // Day of week: 'Sunday', 'Monday', ...,'Saturday'
          dddd: function dddd(date, locale) {
            return locale.weekdays[date.getDay()]
          },
          // AM, PM
          A: function A(date, locale) {
            var meridiemFunc = locale.meridiem || meridiem
            return meridiemFunc(date.getHours(), date.getMinutes(), false)
          },
          // am, pm
          a: function a(date, locale) {
            var meridiemFunc = locale.meridiem || meridiem
            return meridiemFunc(date.getHours(), date.getMinutes(), true)
          },
          // Timezone: -01:00, +00:00, ... +12:00
          Z: function Z(date) {
            return formatTimezone(getOffset(date), ':')
          },
          // Timezone: -0100, +0000, ... +1200
          ZZ: function ZZ(date) {
            return formatTimezone(getOffset(date))
          },
          // Seconds timestamp: 512969520
          X: function X(date) {
            return Math.floor(date.getTime() / 1000)
          },
          // Milliseconds timestamp: 512969520900
          x: function x(date) {
            return date.getTime()
          },
          w: function w(date, locale) {
            return (0, _util__WEBPACK_IMPORTED_MODULE_0__.getWeek)(date, {
              firstDayOfWeek: locale.firstDayOfWeek,
              firstWeekContainsDate: locale.firstWeekContainsDate,
            })
          },
          ww: function ww(date, locale) {
            return pad(formatFlags.w(date, locale), 2)
          },
        }
        function format(val, str) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {}
          var formatStr = str ? String(str) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'
          var date = (0, _util__WEBPACK_IMPORTED_MODULE_0__.toDate)(val)

          if (!(0, _util__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(date)) {
            return 'Invalid Date'
          }

          var locale =
            options.locale || _locale_en__WEBPACK_IMPORTED_MODULE_1__['default']
          return formatStr.replace(REGEX_FORMAT, function (match, p1) {
            if (p1) {
              return p1
            }

            if (typeof formatFlags[match] === 'function') {
              return ''.concat(formatFlags[match](date, locale))
            }

            return match
          })
        }

        /***/
      },

    /***/ './node_modules/date-format-parse/es/index.js':
      /*!****************************************************!*\
  !*** ./node_modules/date-format-parse/es/index.js ***!
  \****************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ format: () =>
            /* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_0__.format,
          /* harmony export */ parse: () =>
            /* reexport safe */ _parse__WEBPACK_IMPORTED_MODULE_1__.parse,
          /* harmony export */ isDate: () =>
            /* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_2__.isDate,
          /* harmony export */ toDate: () =>
            /* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_2__.toDate,
          /* harmony export */ isValidDate: () =>
            /* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_2__.isValidDate,
          /* harmony export */ getWeek: () =>
            /* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_2__.getWeek,
          /* harmony export */
        })
        /* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./format */ './node_modules/date-format-parse/es/format.js'
          )
        /* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./parse */ './node_modules/date-format-parse/es/parse.js'
          )
        /* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./util */ './node_modules/date-format-parse/es/util.js'
          )

        /***/
      },

    /***/ './node_modules/date-format-parse/es/locale/en.js':
      /*!********************************************************!*\
  !*** ./node_modules/date-format-parse/es/locale/en.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        var locale = {
          months: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
          monthsShort: [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec',
          ],
          weekdays: [
            'Sunday',
            'Monday',
            'Tuesday',
            'Wednesday',
            'Thursday',
            'Friday',
            'Saturday',
          ],
          weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          weekdaysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
          firstDayOfWeek: 0,
          firstWeekContainsDate: 1,
        }
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = locale

        /***/
      },

    /***/ './node_modules/date-format-parse/es/parse.js':
      /*!****************************************************!*\
  !*** ./node_modules/date-format-parse/es/parse.js ***!
  \****************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ parse: () => /* binding */ parse,
          /* harmony export */
        })
        /* harmony import */ var _locale_en__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./locale/en */ './node_modules/date-format-parse/es/locale/en.js'
          )
        /* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./util */ './node_modules/date-format-parse/es/util.js'
          )
        function _toConsumableArray(arr) {
          return (
            _arrayWithoutHoles(arr) ||
            _iterableToArray(arr) ||
            _nonIterableSpread()
          )
        }

        function _nonIterableSpread() {
          throw new TypeError('Invalid attempt to spread non-iterable instance')
        }

        function _iterableToArray(iter) {
          if (
            Symbol.iterator in Object(iter) ||
            Object.prototype.toString.call(iter) === '[object Arguments]'
          )
            return Array.from(iter)
        }

        function _arrayWithoutHoles(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
              arr2[i] = arr[i]
            }
            return arr2
          }
        }

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object)
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object)
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable
              })
            keys.push.apply(keys, symbols)
          }
          return keys
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {}
            if (i % 2) {
              ownKeys(source, true).forEach(function (key) {
                _defineProperty(target, key, source[key])
              })
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              )
            } else {
              ownKeys(source).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                )
              })
            }
          }
          return target
        }

        function _slicedToArray(arr, i) {
          return (
            _arrayWithHoles(arr) ||
            _iterableToArrayLimit(arr, i) ||
            _nonIterableRest()
          )
        }

        function _nonIterableRest() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance'
          )
        }

        function _iterableToArrayLimit(arr, i) {
          if (
            !(
              Symbol.iterator in Object(arr) ||
              Object.prototype.toString.call(arr) === '[object Arguments]'
            )
          ) {
            return
          }
          var _arr = []
          var _n = true
          var _d = false
          var _e = undefined
          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value)
              if (i && _arr.length === i) break
            }
          } catch (err) {
            _d = true
            _e = err
          } finally {
            try {
              if (!_n && _i['return'] != null) _i['return']()
            } finally {
              if (_d) throw _e
            }
          }
          return _arr
        }

        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            })
          } else {
            obj[key] = value
          }
          return obj
        }

        var formattingTokens =
          /(\[[^\[]*\])|(MM?M?M?|Do|DD?|ddd?d?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|S{1,3}|x|X|ZZ?|.)/g
        var match1 = /\d/ // 0 - 9

        var match2 = /\d\d/ // 00 - 99

        var match3 = /\d{3}/ // 000 - 999

        var match4 = /\d{4}/ // 0000 - 9999

        var match1to2 = /\d\d?/ // 0 - 99

        var matchShortOffset = /[+-]\d\d:?\d\d/ // +00:00 -00:00 +0000 or -0000

        var matchSigned = /[+-]?\d+/ // -inf - inf

        var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/ // 123456789 123456789.123
        // const matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i; // Word

        var YEAR = 'year'
        var MONTH = 'month'
        var DAY = 'day'
        var HOUR = 'hour'
        var MINUTE = 'minute'
        var SECOND = 'second'
        var MILLISECOND = 'millisecond'
        var parseFlags = {}

        var addParseFlag = function addParseFlag(token, regex, callback) {
          var tokens = Array.isArray(token) ? token : [token]
          var func

          if (typeof callback === 'string') {
            func = function func(input) {
              var value = parseInt(input, 10)
              return _defineProperty({}, callback, value)
            }
          } else {
            func = callback
          }

          tokens.forEach(function (key) {
            parseFlags[key] = [regex, func]
          })
        }

        var escapeStringRegExp = function escapeStringRegExp(str) {
          return str.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&')
        }

        var matchWordRegExp = function matchWordRegExp(localeKey) {
          return function (locale) {
            var array = locale[localeKey]

            if (!Array.isArray(array)) {
              throw new Error('Locale['.concat(localeKey, '] need an array'))
            }

            return new RegExp(array.map(escapeStringRegExp).join('|'))
          }
        }

        var matchWordCallback = function matchWordCallback(localeKey, key) {
          return function (input, locale) {
            var array = locale[localeKey]

            if (!Array.isArray(array)) {
              throw new Error('Locale['.concat(localeKey, '] need an array'))
            }

            var index = array.indexOf(input)

            if (index < 0) {
              throw new Error('Invalid Word')
            }

            return _defineProperty({}, key, index)
          }
        }

        addParseFlag('Y', matchSigned, YEAR)
        addParseFlag('YY', match2, function (input) {
          var year = new Date().getFullYear()
          var cent = Math.floor(year / 100)
          var value = parseInt(input, 10)
          value = (value > 68 ? cent - 1 : cent) * 100 + value
          return _defineProperty({}, YEAR, value)
        })
        addParseFlag('YYYY', match4, YEAR)
        addParseFlag('M', match1to2, function (input) {
          return _defineProperty({}, MONTH, parseInt(input, 10) - 1)
        })
        addParseFlag('MM', match2, function (input) {
          return _defineProperty({}, MONTH, parseInt(input, 10) - 1)
        })
        addParseFlag(
          'MMM',
          matchWordRegExp('monthsShort'),
          matchWordCallback('monthsShort', MONTH)
        )
        addParseFlag(
          'MMMM',
          matchWordRegExp('months'),
          matchWordCallback('months', MONTH)
        )
        addParseFlag('D', match1to2, DAY)
        addParseFlag('DD', match2, DAY)
        addParseFlag(['H', 'h'], match1to2, HOUR)
        addParseFlag(['HH', 'hh'], match2, HOUR)
        addParseFlag('m', match1to2, MINUTE)
        addParseFlag('mm', match2, MINUTE)
        addParseFlag('s', match1to2, SECOND)
        addParseFlag('ss', match2, SECOND)
        addParseFlag('S', match1, function (input) {
          return _defineProperty({}, MILLISECOND, parseInt(input, 10) * 100)
        })
        addParseFlag('SS', match2, function (input) {
          return _defineProperty({}, MILLISECOND, parseInt(input, 10) * 10)
        })
        addParseFlag('SSS', match3, MILLISECOND)

        function matchMeridiem(locale) {
          return locale.meridiemParse || /[ap]\.?m?\.?/i
        }

        function defaultIsPM(input) {
          return ''.concat(input).toLowerCase().charAt(0) === 'p'
        }

        addParseFlag(['A', 'a'], matchMeridiem, function (input, locale) {
          var isPM =
            typeof locale.isPM === 'function'
              ? locale.isPM(input)
              : defaultIsPM(input)
          return {
            isPM: isPM,
          }
        })

        function offsetFromString(str) {
          var _ref8 = str.match(/([+-]|\d\d)/g) || ['-', '0', '0'],
            _ref9 = _slicedToArray(_ref8, 3),
            symbol = _ref9[0],
            hour = _ref9[1],
            minute = _ref9[2]

          var minutes = parseInt(hour, 10) * 60 + parseInt(minute, 10)

          if (minutes === 0) {
            return 0
          }

          return symbol === '+' ? -minutes : +minutes
        }

        addParseFlag(['Z', 'ZZ'], matchShortOffset, function (input) {
          return {
            offset: offsetFromString(input),
          }
        })
        addParseFlag('x', matchSigned, function (input) {
          return {
            date: new Date(parseInt(input, 10)),
          }
        })
        addParseFlag('X', matchTimestamp, function (input) {
          return {
            date: new Date(parseFloat(input) * 1000),
          }
        })
        addParseFlag('d', match1, 'weekday')
        addParseFlag(
          'dd',
          matchWordRegExp('weekdaysMin'),
          matchWordCallback('weekdaysMin', 'weekday')
        )
        addParseFlag(
          'ddd',
          matchWordRegExp('weekdaysShort'),
          matchWordCallback('weekdaysShort', 'weekday')
        )
        addParseFlag(
          'dddd',
          matchWordRegExp('weekdays'),
          matchWordCallback('weekdays', 'weekday')
        )
        addParseFlag('w', match1to2, 'week')
        addParseFlag('ww', match2, 'week')

        function to24hour(hour, isPM) {
          if (hour !== undefined && isPM !== undefined) {
            if (isPM) {
              if (hour < 12) {
                return hour + 12
              }
            } else if (hour === 12) {
              return 0
            }
          }

          return hour
        }

        function getFullInputArray(input) {
          var backupDate =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : new Date()
          var result = [0, 0, 1, 0, 0, 0, 0]
          var backupArr = [
            backupDate.getFullYear(),
            backupDate.getMonth(),
            backupDate.getDate(),
            backupDate.getHours(),
            backupDate.getMinutes(),
            backupDate.getSeconds(),
            backupDate.getMilliseconds(),
          ]
          var useBackup = true

          for (var i = 0; i < 7; i++) {
            if (input[i] === undefined) {
              result[i] = useBackup ? backupArr[i] : result[i]
            } else {
              result[i] = input[i]
              useBackup = false
            }
          }

          return result
        }

        function createDate(y, m, d, h, M, s, ms) {
          var date

          if (y < 100 && y >= 0) {
            date = new Date(y + 400, m, d, h, M, s, ms)

            if (isFinite(date.getFullYear())) {
              date.setFullYear(y)
            }
          } else {
            date = new Date(y, m, d, h, M, s, ms)
          }

          return date
        }

        function createUTCDate() {
          var date

          for (
            var _len = arguments.length, args = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key]
          }

          var y = args[0]

          if (y < 100 && y >= 0) {
            args[0] += 400
            date = new Date(Date.UTC.apply(Date, args)) // eslint-disable-next-line no-restricted-globals

            if (isFinite(date.getUTCFullYear())) {
              date.setUTCFullYear(y)
            }
          } else {
            date = new Date(Date.UTC.apply(Date, args))
          }

          return date
        }

        function makeParser(dateString, format, locale) {
          var tokens = format.match(formattingTokens)

          if (!tokens) {
            throw new Error()
          }

          var length = tokens.length
          var mark = {}

          for (var i = 0; i < length; i += 1) {
            var token = tokens[i]
            var parseTo = parseFlags[token]

            if (!parseTo) {
              var word = token.replace(/^\[|\]$/g, '')

              if (dateString.indexOf(word) === 0) {
                dateString = dateString.substr(word.length)
              } else {
                throw new Error('not match')
              }
            } else {
              var regex =
                typeof parseTo[0] === 'function'
                  ? parseTo[0](locale)
                  : parseTo[0]
              var parser = parseTo[1]
              var value = (regex.exec(dateString) || [])[0]
              var obj = parser(value, locale)
              mark = _objectSpread({}, mark, {}, obj)
              dateString = dateString.replace(value, '')
            }
          }

          return mark
        }

        function parse(str, format) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {}

          try {
            var _options$locale = options.locale,
              _locale =
                _options$locale === void 0
                  ? _locale_en__WEBPACK_IMPORTED_MODULE_0__['default']
                  : _options$locale,
              _options$backupDate = options.backupDate,
              backupDate =
                _options$backupDate === void 0
                  ? new Date()
                  : _options$backupDate

            var parseResult = makeParser(str, format, _locale)
            var year = parseResult.year,
              month = parseResult.month,
              day = parseResult.day,
              hour = parseResult.hour,
              minute = parseResult.minute,
              second = parseResult.second,
              millisecond = parseResult.millisecond,
              isPM = parseResult.isPM,
              date = parseResult.date,
              offset = parseResult.offset,
              weekday = parseResult.weekday,
              week = parseResult.week

            if (date) {
              return date
            }

            var inputArray = [
              year,
              month,
              day,
              hour,
              minute,
              second,
              millisecond,
            ]
            inputArray[3] = to24hour(inputArray[3], isPM) // check week

            if (
              week !== undefined &&
              month === undefined &&
              day === undefined
            ) {
              // new Date(year, 3) make sure in current year
              var firstDate = (0,
              _util__WEBPACK_IMPORTED_MODULE_1__.startOfWeekYear)(
                year === undefined ? backupDate : new Date(year, 3),
                {
                  firstDayOfWeek: _locale.firstDayOfWeek,
                  firstWeekContainsDate: _locale.firstWeekContainsDate,
                }
              )
              return new Date(
                firstDate.getTime() + (week - 1) * 7 * 24 * 3600 * 1000
              )
            }

            var parsedDate
            var result = getFullInputArray(inputArray, backupDate)

            if (offset !== undefined) {
              result[6] += offset * 60 * 1000
              parsedDate = createUTCDate.apply(
                void 0,
                _toConsumableArray(result)
              )
            } else {
              parsedDate = createDate.apply(void 0, _toConsumableArray(result))
            } // check weekday

            if (weekday !== undefined && parsedDate.getDay() !== weekday) {
              return new Date(NaN)
            }

            return parsedDate
          } catch (e) {
            return new Date(NaN)
          }
        }

        /***/
      },

    /***/ './node_modules/date-format-parse/es/util.js':
      /*!***************************************************!*\
  !*** ./node_modules/date-format-parse/es/util.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ isDate: () => /* binding */ isDate,
          /* harmony export */ toDate: () => /* binding */ toDate,
          /* harmony export */ isValidDate: () => /* binding */ isValidDate,
          /* harmony export */ startOfWeek: () => /* binding */ startOfWeek,
          /* harmony export */ startOfWeekYear: () =>
            /* binding */ startOfWeekYear,
          /* harmony export */ getWeek: () => /* binding */ getWeek,
          /* harmony export */
        })
        function isDate(value) {
          return (
            value instanceof Date ||
            Object.prototype.toString.call(value) === '[object Date]'
          )
        }
        function toDate(value) {
          if (isDate(value)) {
            return new Date(value.getTime())
          }

          if (value == null) {
            return new Date(NaN)
          }

          return new Date(value)
        }
        function isValidDate(value) {
          return isDate(value) && !isNaN(value.getTime())
        }
        function startOfWeek(value) {
          var firstDayOfWeek =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 0

          if (!(firstDayOfWeek >= 0 && firstDayOfWeek <= 6)) {
            throw new RangeError('weekStartsOn must be between 0 and 6')
          }

          var date = toDate(value)
          var day = date.getDay()
          var diff = (day + 7 - firstDayOfWeek) % 7
          date.setDate(date.getDate() - diff)
          date.setHours(0, 0, 0, 0)
          return date
        }
        function startOfWeekYear(value) {
          var _ref =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            _ref$firstDayOfWeek = _ref.firstDayOfWeek,
            firstDayOfWeek =
              _ref$firstDayOfWeek === void 0 ? 0 : _ref$firstDayOfWeek,
            _ref$firstWeekContain = _ref.firstWeekContainsDate,
            firstWeekContainsDate =
              _ref$firstWeekContain === void 0 ? 1 : _ref$firstWeekContain

          if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
            throw new RangeError(
              'firstWeekContainsDate must be between 1 and 7'
            )
          }

          var date = toDate(value)
          var year = date.getFullYear()
          var firstDateOfFirstWeek = new Date(0)

          for (var i = year + 1; i >= year - 1; i--) {
            firstDateOfFirstWeek.setFullYear(i, 0, firstWeekContainsDate)
            firstDateOfFirstWeek.setHours(0, 0, 0, 0)
            firstDateOfFirstWeek = startOfWeek(
              firstDateOfFirstWeek,
              firstDayOfWeek
            )

            if (date.getTime() >= firstDateOfFirstWeek.getTime()) {
              break
            }
          }

          return firstDateOfFirstWeek
        }
        function getWeek(value) {
          var _ref2 =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            _ref2$firstDayOfWeek = _ref2.firstDayOfWeek,
            firstDayOfWeek =
              _ref2$firstDayOfWeek === void 0 ? 0 : _ref2$firstDayOfWeek,
            _ref2$firstWeekContai = _ref2.firstWeekContainsDate,
            firstWeekContainsDate =
              _ref2$firstWeekContai === void 0 ? 1 : _ref2$firstWeekContai

          var date = toDate(value)
          var firstDateOfThisWeek = startOfWeek(date, firstDayOfWeek)
          var firstDateOfFirstWeek = startOfWeekYear(date, {
            firstDayOfWeek: firstDayOfWeek,
            firstWeekContainsDate: firstWeekContainsDate,
          })
          var diff =
            firstDateOfThisWeek.getTime() - firstDateOfFirstWeek.getTime()
          return Math.round(diff / (7 * 24 * 3600 * 1000)) + 1
        }

        /***/
      },

    /***/ './node_modules/inputmask/dist/inputmask.js':
      /*!**************************************************!*\
  !*** ./node_modules/inputmask/dist/inputmask.js ***!
  \**************************************************/
      /***/ function (module) {
        /*!
         * dist/inputmask
         * https://github.com/RobinHerbots/Inputmask
         * Copyright (c) 2010 - 2021 Robin Herbots
         * Licensed under the MIT license
         * Version: 5.0.6
         */
        !(function (e, t) {
          if (true) module.exports = t()
          else {
            var i, a
          }
        })(this, function () {
          return (function () {
            'use strict'
            var e = {
                4528: function (e) {
                  e.exports = JSON.parse(
                    '{"BACKSPACE":8,"BACKSPACE_SAFARI":127,"DELETE":46,"DOWN":40,"END":35,"ENTER":13,"ESCAPE":27,"HOME":36,"INSERT":45,"LEFT":37,"PAGE_DOWN":34,"PAGE_UP":33,"RIGHT":39,"SPACE":32,"TAB":9,"UP":38,"X":88,"Z":90,"CONTROL":17,"PAUSE/BREAK":19,"WINDOWS_LEFT":91,"WINDOWS_RIGHT":92,"KEY_229":229}'
                  )
                },
                8741: function (e, t) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0)
                  var a = !(
                    'undefined' == typeof window ||
                    !window.document ||
                    !window.document.createElement
                  )
                  t.default = a
                },
                3976: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0)
                  var i,
                    n =
                      (i = a(4528)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          }
                  var r = {
                    _maxTestPos: 500,
                    placeholder: '_',
                    optionalmarker: ['[', ']'],
                    quantifiermarker: ['{', '}'],
                    groupmarker: ['(', ')'],
                    alternatormarker: '|',
                    escapeChar: '\\',
                    mask: null,
                    regex: null,
                    oncomplete: function () {},
                    onincomplete: function () {},
                    oncleared: function () {},
                    repeat: 0,
                    greedy: !1,
                    autoUnmask: !1,
                    removeMaskOnSubmit: !1,
                    clearMaskOnLostFocus: !0,
                    insertMode: !0,
                    insertModeVisual: !0,
                    clearIncomplete: !1,
                    alias: null,
                    onKeyDown: function () {},
                    onBeforeMask: null,
                    onBeforePaste: function (e, t) {
                      return 'function' == typeof t.onBeforeMask
                        ? t.onBeforeMask.call(this, e, t)
                        : e
                    },
                    onBeforeWrite: null,
                    onUnMask: null,
                    showMaskOnFocus: !0,
                    showMaskOnHover: !0,
                    onKeyValidation: function () {},
                    skipOptionalPartCharacter: ' ',
                    numericInput: !1,
                    rightAlign: !1,
                    undoOnEscape: !0,
                    radixPoint: '',
                    _radixDance: !1,
                    groupSeparator: '',
                    keepStatic: null,
                    positionCaretOnTab: !0,
                    tabThrough: !1,
                    supportsInputType: [
                      'text',
                      'tel',
                      'url',
                      'password',
                      'search',
                    ],
                    ignorables: [
                      n.default.BACKSPACE,
                      n.default.TAB,
                      n.default['PAUSE/BREAK'],
                      n.default.ESCAPE,
                      n.default.PAGE_UP,
                      n.default.PAGE_DOWN,
                      n.default.END,
                      n.default.HOME,
                      n.default.LEFT,
                      n.default.UP,
                      n.default.RIGHT,
                      n.default.DOWN,
                      n.default.INSERT,
                      n.default.DELETE,
                      93,
                      112,
                      113,
                      114,
                      115,
                      116,
                      117,
                      118,
                      119,
                      120,
                      121,
                      122,
                      123,
                      0,
                      229,
                    ],
                    isComplete: null,
                    preValidation: null,
                    postValidation: null,
                    staticDefinitionSymbol: void 0,
                    jitMasking: !1,
                    nullable: !0,
                    inputEventOnly: !1,
                    noValuePatching: !1,
                    positionCaretOnClick: 'lvp',
                    casing: null,
                    inputmode: 'text',
                    importDataAttributes: !0,
                    shiftPositions: !0,
                    usePrototypeDefinitions: !0,
                    validationEventTimeOut: 3e3,
                  }
                  t.default = r
                },
                7392: function (e, t) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0)
                  t.default = {
                    9: {
                      validator: '[0-9\uff10-\uff19]',
                      definitionSymbol: '*',
                    },
                    a: {
                      validator:
                        '[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]',
                      definitionSymbol: '*',
                    },
                    '*': {
                      validator:
                        '[0-9\uff10-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]',
                    },
                  }
                },
                253: function (e, t) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = function (e, t, a) {
                      if (void 0 === a) return e.__data ? e.__data[t] : null
                      ;(e.__data = e.__data || {}), (e.__data[t] = a)
                    })
                },
                3776: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.on = function (e, t) {
                      function a(e, a) {
                        n.addEventListener
                          ? n.addEventListener(e, t, !1)
                          : n.attachEvent && n.attachEvent('on' + e, t),
                          (i[e] = i[e] || {}),
                          (i[e][a] = i[e][a] || []),
                          i[e][a].push(t)
                      }
                      if (u(this[0]))
                        for (
                          var i = this[0].eventRegistry,
                            n = this[0],
                            r = e.split(' '),
                            o = 0;
                          o < r.length;
                          o++
                        ) {
                          var s = r[o].split('.'),
                            l = s[0],
                            c = s[1] || 'global'
                          a(l, c)
                        }
                      return this
                    }),
                    (t.off = function (e, t) {
                      var a, i
                      function n(e, t, n) {
                        if (e in a == !0)
                          if (
                            (i.removeEventListener
                              ? i.removeEventListener(e, n, !1)
                              : i.detachEvent && i.detachEvent('on' + e, n),
                            'global' === t)
                          )
                            for (var r in a[e])
                              a[e][r].splice(a[e][r].indexOf(n), 1)
                          else a[e][t].splice(a[e][t].indexOf(n), 1)
                      }
                      function r(e, i) {
                        var n,
                          r,
                          o = []
                        if (e.length > 0)
                          if (void 0 === t)
                            for (n = 0, r = a[e][i].length; n < r; n++)
                              o.push({
                                ev: e,
                                namespace: i && i.length > 0 ? i : 'global',
                                handler: a[e][i][n],
                              })
                          else
                            o.push({
                              ev: e,
                              namespace: i && i.length > 0 ? i : 'global',
                              handler: t,
                            })
                        else if (i.length > 0)
                          for (var s in a)
                            for (var l in a[s])
                              if (l === i)
                                if (void 0 === t)
                                  for (n = 0, r = a[s][l].length; n < r; n++)
                                    o.push({
                                      ev: s,
                                      namespace: l,
                                      handler: a[s][l][n],
                                    })
                                else
                                  o.push({
                                    ev: s,
                                    namespace: l,
                                    handler: t,
                                  })
                        return o
                      }
                      if (u(this[0]) && e) {
                        ;(a = this[0].eventRegistry), (i = this[0])
                        for (var o = e.split(' '), s = 0; s < o.length; s++)
                          for (
                            var l = o[s].split('.'),
                              c = r(l[0], l[1]),
                              f = 0,
                              d = c.length;
                            f < d;
                            f++
                          )
                            n(c[f].ev, c[f].namespace, c[f].handler)
                      }
                      return this
                    }),
                    (t.trigger = function (e) {
                      if (u(this[0]))
                        for (
                          var t = this[0].eventRegistry,
                            a = this[0],
                            i = 'string' == typeof e ? e.split(' ') : [e.type],
                            r = 0;
                          r < i.length;
                          r++
                        ) {
                          var s = i[r].split('.'),
                            l = s[0],
                            c = s[1] || 'global'
                          if (void 0 !== document && 'global' === c) {
                            var f,
                              d,
                              p = {
                                bubbles: !0,
                                cancelable: !0,
                                detail: arguments[1],
                              }
                            if (document.createEvent) {
                              try {
                                switch (l) {
                                  case 'input':
                                    ;(p.inputType = 'insertText'),
                                      (f = new InputEvent(l, p))
                                    break

                                  default:
                                    f = new CustomEvent(l, p)
                                }
                              } catch (e) {
                                ;(f =
                                  document.createEvent(
                                    'CustomEvent'
                                  )).initCustomEvent(
                                  l,
                                  p.bubbles,
                                  p.cancelable,
                                  p.detail
                                )
                              }
                              e.type && (0, n.default)(f, e), a.dispatchEvent(f)
                            } else
                              ((f = document.createEventObject()).eventType =
                                l),
                                (f.detail = arguments[1]),
                                e.type && (0, n.default)(f, e),
                                a.fireEvent('on' + f.eventType, f)
                          } else if (void 0 !== t[l])
                            if (
                              ((arguments[0] = arguments[0].type
                                ? arguments[0]
                                : o.default.Event(arguments[0])),
                              (arguments[0].detail = arguments.slice(1)),
                              'global' === c)
                            )
                              for (var h in t[l])
                                for (d = 0; d < t[l][h].length; d++)
                                  t[l][h][d].apply(a, arguments)
                            else
                              for (d = 0; d < t[l][c].length; d++)
                                t[l][c][d].apply(a, arguments)
                        }
                      return this
                    }),
                    (t.Event = void 0)
                  var i,
                    n = l(a(600)),
                    r = l(a(9380)),
                    o = l(a(4963)),
                    s = l(a(8741))
                  function l(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  function u(e) {
                    return e instanceof Element
                  }
                  ;(t.Event = i),
                    'function' == typeof r.default.CustomEvent
                      ? (t.Event = i = r.default.CustomEvent)
                      : s.default &&
                        ((t.Event = i =
                          function (e, t) {
                            t = t || {
                              bubbles: !1,
                              cancelable: !1,
                              detail: void 0,
                            }
                            var a = document.createEvent('CustomEvent')
                            return (
                              a.initCustomEvent(
                                e,
                                t.bubbles,
                                t.cancelable,
                                t.detail
                              ),
                              a
                            )
                          }),
                        (i.prototype = r.default.Event.prototype))
                },
                600: function (e, t) {
                  function a(e) {
                    return (a =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e
                          })(e)
                  }
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = function e() {
                      var t,
                        i,
                        n,
                        r,
                        o,
                        s,
                        l = arguments[0] || {},
                        u = 1,
                        c = arguments.length,
                        f = !1
                      'boolean' == typeof l &&
                        ((f = l), (l = arguments[u] || {}), u++)
                      'object' !== a(l) && 'function' != typeof l && (l = {})
                      for (; u < c; u++)
                        if (null != (t = arguments[u]))
                          for (i in t)
                            (n = l[i]),
                              (r = t[i]),
                              l !== r &&
                                (f &&
                                r &&
                                ('[object Object]' ===
                                  Object.prototype.toString.call(r) ||
                                  (o = Array.isArray(r)))
                                  ? (o
                                      ? ((o = !1),
                                        (s = n && Array.isArray(n) ? n : []))
                                      : (s =
                                          n &&
                                          '[object Object]' ===
                                            Object.prototype.toString.call(n)
                                            ? n
                                            : {}),
                                    (l[i] = e(f, s, r)))
                                  : void 0 !== r && (l[i] = r))
                      return l
                    })
                },
                4963: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0)
                  var i = s(a(600)),
                    n = s(a(9380)),
                    r = s(a(253)),
                    o = a(3776)
                  function s(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var l = n.default.document
                  function u(e) {
                    return e instanceof u
                      ? e
                      : this instanceof u
                      ? void (
                          null != e &&
                          e !== n.default &&
                          ((this[0] = e.nodeName
                            ? e
                            : void 0 !== e[0] && e[0].nodeName
                            ? e[0]
                            : l.querySelector(e)),
                          void 0 !== this[0] &&
                            null !== this[0] &&
                            (this[0].eventRegistry =
                              this[0].eventRegistry || {}))
                        )
                      : new u(e)
                  }
                  ;(u.prototype = {
                    on: o.on,
                    off: o.off,
                    trigger: o.trigger,
                  }),
                    (u.extend = i.default),
                    (u.data = r.default),
                    (u.Event = o.Event)
                  var c = u
                  t.default = c
                },
                9845: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.iphone = t.iemobile = t.mobile = t.ie = t.ua = void 0)
                  var i,
                    n =
                      (i = a(9380)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          }
                  var r =
                      (n.default.navigator && n.default.navigator.userAgent) ||
                      '',
                    o = r.indexOf('MSIE ') > 0 || r.indexOf('Trident/') > 0,
                    s = 'ontouchstart' in n.default,
                    l = /iemobile/i.test(r),
                    u = /iphone/i.test(r) && !l
                  ;(t.iphone = u),
                    (t.iemobile = l),
                    (t.mobile = s),
                    (t.ie = o),
                    (t.ua = r)
                },
                7184: function (e, t) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = function (e) {
                      return e.replace(a, '\\$1')
                    })
                  var a = new RegExp(
                    '(\\' +
                      [
                        '/',
                        '.',
                        '*',
                        '+',
                        '?',
                        '|',
                        '(',
                        ')',
                        '[',
                        ']',
                        '{',
                        '}',
                        '\\',
                        '$',
                        '^',
                      ].join('|\\') +
                      ')',
                    'gim'
                  )
                },
                6030: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.EventHandlers = void 0)
                  var i,
                    n = a(8711),
                    r =
                      (i = a(4528)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          },
                    o = a(9845),
                    s = a(7215),
                    l = a(7760),
                    u = a(4713)
                  var c = {
                    keydownEvent: function (e) {
                      var t = this.inputmask,
                        a = t.opts,
                        i = t.dependencyLib,
                        c = t.maskset,
                        f = this,
                        d = i(f),
                        p = e.keyCode,
                        h = n.caret.call(t, f),
                        v = a.onKeyDown.call(this, e, n.getBuffer.call(t), h, a)
                      if (void 0 !== v) return v
                      if (
                        p === r.default.BACKSPACE ||
                        p === r.default.DELETE ||
                        (o.iphone && p === r.default.BACKSPACE_SAFARI) ||
                        (e.ctrlKey && p === r.default.X && !('oncut' in f))
                      )
                        e.preventDefault(),
                          s.handleRemove.call(t, f, p, h),
                          (0, l.writeBuffer)(
                            f,
                            n.getBuffer.call(t, !0),
                            c.p,
                            e,
                            f.inputmask._valueGet() !==
                              n.getBuffer.call(t).join('')
                          )
                      else if (
                        p === r.default.END ||
                        p === r.default.PAGE_DOWN
                      ) {
                        e.preventDefault()
                        var m = n.seekNext.call(
                          t,
                          n.getLastValidPosition.call(t)
                        )
                        n.caret.call(t, f, e.shiftKey ? h.begin : m, m, !0)
                      } else
                        (p === r.default.HOME && !e.shiftKey) ||
                        p === r.default.PAGE_UP
                          ? (e.preventDefault(),
                            n.caret.call(t, f, 0, e.shiftKey ? h.begin : 0, !0))
                          : a.undoOnEscape &&
                            p === r.default.ESCAPE &&
                            !0 !== e.altKey
                          ? ((0, l.checkVal)(f, !0, !1, t.undoValue.split('')),
                            d.trigger('click'))
                          : !0 === a.tabThrough && p === r.default.TAB
                          ? !0 === e.shiftKey
                            ? ((h.end = n.seekPrevious.call(t, h.end, !0)),
                              !0 ===
                                u.getTest.call(t, h.end - 1).match.static &&
                                h.end--,
                              (h.begin = n.seekPrevious.call(t, h.end, !0)),
                              h.begin >= 0 &&
                                h.end > 0 &&
                                (e.preventDefault(),
                                n.caret.call(t, f, h.begin, h.end)))
                            : ((h.begin = n.seekNext.call(t, h.begin, !0)),
                              (h.end = n.seekNext.call(t, h.begin, !0)),
                              h.end < c.maskLength && h.end--,
                              h.begin <= c.maskLength &&
                                (e.preventDefault(),
                                n.caret.call(t, f, h.begin, h.end)))
                          : e.shiftKey ||
                            (a.insertModeVisual &&
                              !1 === a.insertMode &&
                              (p === r.default.RIGHT
                                ? setTimeout(function () {
                                    var e = n.caret.call(t, f)
                                    n.caret.call(t, f, e.begin)
                                  }, 0)
                                : p === r.default.LEFT &&
                                  setTimeout(function () {
                                    var e = n.translatePosition.call(
                                      t,
                                      f.inputmask.caretPos.begin
                                    )
                                    n.translatePosition.call(
                                      t,
                                      f.inputmask.caretPos.end
                                    )
                                    t.isRTL
                                      ? n.caret.call(
                                          t,
                                          f,
                                          e + (e === c.maskLength ? 0 : 1)
                                        )
                                      : n.caret.call(
                                          t,
                                          f,
                                          e - (0 === e ? 0 : 1)
                                        )
                                  }, 0)))
                      t.ignorable = a.ignorables.includes(p)
                    },
                    keypressEvent: function (e, t, a, i, o) {
                      var u = this.inputmask || this,
                        c = u.opts,
                        f = u.dependencyLib,
                        d = u.maskset,
                        p = u.el,
                        h = f(p),
                        v = e.which || e.charCode || e.keyCode
                      if (
                        !(!0 === t || (e.ctrlKey && e.altKey)) &&
                        (e.ctrlKey || e.metaKey || u.ignorable)
                      )
                        return (
                          v === r.default.ENTER &&
                            u.undoValue !== u._valueGet(!0) &&
                            ((u.undoValue = u._valueGet(!0)),
                            setTimeout(function () {
                              h.trigger('change')
                            }, 0)),
                          (u.skipInputEvent = !0),
                          !0
                        )
                      if (v) {
                        ;(44 !== v && 46 !== v) ||
                          3 !== e.location ||
                          '' === c.radixPoint ||
                          (v = c.radixPoint.charCodeAt(0))
                        var m,
                          g = t
                            ? {
                                begin: o,
                                end: o,
                              }
                            : n.caret.call(u, p),
                          k = String.fromCharCode(v)
                        d.writeOutBuffer = !0
                        var y = s.isValid.call(
                          u,
                          g,
                          k,
                          i,
                          void 0,
                          void 0,
                          void 0,
                          t
                        )
                        if (
                          (!1 !== y &&
                            (n.resetMaskSet.call(u, !0),
                            (m =
                              void 0 !== y.caret
                                ? y.caret
                                : n.seekNext.call(
                                    u,
                                    y.pos.begin ? y.pos.begin : y.pos
                                  )),
                            (d.p = m)),
                          (m =
                            c.numericInput && void 0 === y.caret
                              ? n.seekPrevious.call(u, m)
                              : m),
                          !1 !== a &&
                            (setTimeout(function () {
                              c.onKeyValidation.call(p, v, y)
                            }, 0),
                            d.writeOutBuffer && !1 !== y))
                        ) {
                          var b = n.getBuffer.call(u)
                          ;(0, l.writeBuffer)(p, b, m, e, !0 !== t)
                        }
                        if ((e.preventDefault(), t))
                          return !1 !== y && (y.forwardPosition = m), y
                      }
                    },
                    keyupEvent: function (e) {
                      var t = this.inputmask
                      !t.isComposing ||
                        (e.keyCode !== r.default.KEY_229 &&
                          e.keyCode !== r.default.ENTER) ||
                        t.$el.trigger('input')
                    },
                    pasteEvent: function (e) {
                      var t,
                        a = this.inputmask,
                        i = a.opts,
                        r = a._valueGet(!0),
                        o = n.caret.call(a, this)
                      a.isRTL && ((t = o.end), (o.end = o.begin), (o.begin = t))
                      var s = r.substr(0, o.begin),
                        u = r.substr(o.end, r.length)
                      if (
                        (s ==
                          (a.isRTL
                            ? n.getBufferTemplate.call(a).slice().reverse()
                            : n.getBufferTemplate.call(a)
                          )
                            .slice(0, o.begin)
                            .join('') && (s = ''),
                        u ==
                          (a.isRTL
                            ? n.getBufferTemplate.call(a).slice().reverse()
                            : n.getBufferTemplate.call(a)
                          )
                            .slice(o.end)
                            .join('') && (u = ''),
                        window.clipboardData && window.clipboardData.getData)
                      )
                        r = s + window.clipboardData.getData('Text') + u
                      else {
                        if (!e.clipboardData || !e.clipboardData.getData)
                          return !0
                        r = s + e.clipboardData.getData('text/plain') + u
                      }
                      var c = r
                      if ('function' == typeof i.onBeforePaste) {
                        if (!1 === (c = i.onBeforePaste.call(a, r, i)))
                          return e.preventDefault()
                        c || (c = r)
                      }
                      return (
                        (0, l.checkVal)(
                          this,
                          !0,
                          !1,
                          c.toString().split(''),
                          e
                        ),
                        e.preventDefault()
                      )
                    },
                    inputFallBackEvent: function (e) {
                      var t = this.inputmask,
                        a = t.opts,
                        i = t.dependencyLib
                      var s = this,
                        f = s.inputmask._valueGet(!0),
                        d = (
                          t.isRTL
                            ? n.getBuffer.call(t).slice().reverse()
                            : n.getBuffer.call(t)
                        ).join(''),
                        p = n.caret.call(t, s, void 0, void 0, !0)
                      if (d !== f) {
                        var h = (function (e, i, r) {
                          for (
                            var o,
                              s,
                              l,
                              c = e.substr(0, r.begin).split(''),
                              f = e.substr(r.begin).split(''),
                              d = i.substr(0, r.begin).split(''),
                              p = i.substr(r.begin).split(''),
                              h = c.length >= d.length ? c.length : d.length,
                              v = f.length >= p.length ? f.length : p.length,
                              m = '',
                              g = [],
                              k = '~';
                            c.length < h;

                          )
                            c.push(k)
                          for (; d.length < h; ) d.push(k)
                          for (; f.length < v; ) f.unshift(k)
                          for (; p.length < v; ) p.unshift(k)
                          var y = c.concat(f),
                            b = d.concat(p)
                          for (s = 0, o = y.length; s < o; s++)
                            switch (
                              ((l = u.getPlaceholder.call(
                                t,
                                n.translatePosition.call(t, s)
                              )),
                              m)
                            ) {
                              case 'insertText':
                                b[s - 1] === y[s] &&
                                  r.begin == y.length - 1 &&
                                  g.push(y[s]),
                                  (s = o)
                                break

                              case 'insertReplacementText':
                              case 'deleteContentBackward':
                                y[s] === k ? r.end++ : (s = o)
                                break

                              default:
                                y[s] !== b[s] &&
                                  ((y[s + 1] !== k &&
                                    y[s + 1] !== l &&
                                    void 0 !== y[s + 1]) ||
                                  ((b[s] !== l || b[s + 1] !== k) && b[s] !== k)
                                    ? b[s + 1] === k && b[s] === y[s + 1]
                                      ? ((m = 'insertText'),
                                        g.push(y[s]),
                                        r.begin--,
                                        r.end--)
                                      : y[s] !== l &&
                                        y[s] !== k &&
                                        (y[s + 1] === k ||
                                          (b[s] !== y[s] &&
                                            b[s + 1] === y[s + 1]))
                                      ? ((m = 'insertReplacementText'),
                                        g.push(y[s]),
                                        r.begin--)
                                      : y[s] === k
                                      ? ((m = 'deleteContentBackward'),
                                        (n.isMask.call(
                                          t,
                                          n.translatePosition.call(t, s),
                                          !0
                                        ) ||
                                          b[s] === a.radixPoint) &&
                                          r.end++)
                                      : (s = o)
                                    : ((m = 'insertText'),
                                      g.push(y[s]),
                                      r.begin--,
                                      r.end--))
                            }
                          return {
                            action: m,
                            data: g,
                            caret: r,
                          }
                        })(
                          (f = (function (e, a, i) {
                            if (o.iemobile) {
                              var r = a.replace(
                                n.getBuffer.call(t).join(''),
                                ''
                              )
                              if (1 === r.length) {
                                var s = a.split('')
                                s.splice(i.begin, 0, r), (a = s.join(''))
                              }
                            }
                            return a
                          })(0, f, p)),
                          d,
                          p
                        )
                        switch (
                          ((s.inputmask.shadowRoot || s.ownerDocument)
                            .activeElement !== s && s.focus(),
                          (0, l.writeBuffer)(s, n.getBuffer.call(t)),
                          n.caret.call(t, s, p.begin, p.end, !0),
                          h.action)
                        ) {
                          case 'insertText':
                          case 'insertReplacementText':
                            h.data.forEach(function (e, a) {
                              var n = new i.Event('keypress')
                              ;(n.which = e.charCodeAt(0)),
                                (t.ignorable = !1),
                                c.keypressEvent.call(s, n)
                            }),
                              setTimeout(function () {
                                t.$el.trigger('keyup')
                              }, 0)
                            break

                          case 'deleteContentBackward':
                            var v = new i.Event('keydown')
                            ;(v.keyCode = r.default.BACKSPACE),
                              c.keydownEvent.call(s, v)
                            break

                          default:
                            ;(0, l.applyInputValue)(s, f)
                        }
                        e.preventDefault()
                      }
                    },
                    compositionendEvent: function (e) {
                      var t = this.inputmask
                      ;(t.isComposing = !1), t.$el.trigger('input')
                    },
                    setValueEvent: function (e) {
                      var t = this.inputmask,
                        a = this,
                        i = e && e.detail ? e.detail[0] : arguments[1]
                      void 0 === i && (i = a.inputmask._valueGet(!0)),
                        (0, l.applyInputValue)(a, i),
                        ((e.detail && void 0 !== e.detail[1]) ||
                          void 0 !== arguments[2]) &&
                          n.caret.call(
                            t,
                            a,
                            e.detail ? e.detail[1] : arguments[2]
                          )
                    },
                    focusEvent: function (e) {
                      var t = this.inputmask,
                        a = t.opts,
                        i = this,
                        r = i.inputmask._valueGet()
                      a.showMaskOnFocus &&
                        r !== n.getBuffer.call(t).join('') &&
                        (0, l.writeBuffer)(
                          i,
                          n.getBuffer.call(t),
                          n.seekNext.call(t, n.getLastValidPosition.call(t))
                        ),
                        !0 !== a.positionCaretOnTab ||
                          !1 !== t.mouseEnter ||
                          (s.isComplete.call(t, n.getBuffer.call(t)) &&
                            -1 !== n.getLastValidPosition.call(t)) ||
                          c.clickEvent.apply(i, [e, !0]),
                        (t.undoValue = t._valueGet(!0))
                    },
                    invalidEvent: function (e) {
                      this.inputmask.validationEvent = !0
                    },
                    mouseleaveEvent: function () {
                      var e = this.inputmask,
                        t = e.opts,
                        a = this
                      ;(e.mouseEnter = !1),
                        t.clearMaskOnLostFocus &&
                          (a.inputmask.shadowRoot || a.ownerDocument)
                            .activeElement !== a &&
                          (0, l.HandleNativePlaceholder)(
                            a,
                            e.originalPlaceholder
                          )
                    },
                    clickEvent: function (e, t) {
                      var a = this.inputmask,
                        i = this
                      if (
                        (i.inputmask.shadowRoot || i.ownerDocument)
                          .activeElement === i
                      ) {
                        var r = n.determineNewCaretPosition.call(
                          a,
                          n.caret.call(a, i),
                          t
                        )
                        void 0 !== r && n.caret.call(a, i, r)
                      }
                    },
                    cutEvent: function (e) {
                      var t = this.inputmask,
                        a = t.maskset,
                        i = this,
                        o = n.caret.call(t, i),
                        u = window.clipboardData || e.clipboardData,
                        c = t.isRTL
                          ? n.getBuffer.call(t).slice(o.end, o.begin)
                          : n.getBuffer.call(t).slice(o.begin, o.end)
                      u.setData(
                        'text',
                        t.isRTL ? c.reverse().join('') : c.join('')
                      ),
                        document.execCommand && document.execCommand('copy'),
                        s.handleRemove.call(t, i, r.default.DELETE, o),
                        (0, l.writeBuffer)(
                          i,
                          n.getBuffer.call(t),
                          a.p,
                          e,
                          t.undoValue !== t._valueGet(!0)
                        )
                    },
                    blurEvent: function (e) {
                      var t = this.inputmask,
                        a = t.opts,
                        i = (0, t.dependencyLib)(this),
                        r = this
                      if (r.inputmask) {
                        ;(0, l.HandleNativePlaceholder)(
                          r,
                          t.originalPlaceholder
                        )
                        var o = r.inputmask._valueGet(),
                          u = n.getBuffer.call(t).slice()
                        '' !== o &&
                          (a.clearMaskOnLostFocus &&
                            (-1 === n.getLastValidPosition.call(t) &&
                            o === n.getBufferTemplate.call(t).join('')
                              ? (u = [])
                              : l.clearOptionalTail.call(t, u)),
                          !1 === s.isComplete.call(t, u) &&
                            (setTimeout(function () {
                              i.trigger('incomplete')
                            }, 0),
                            a.clearIncomplete &&
                              (n.resetMaskSet.call(t),
                              (u = a.clearMaskOnLostFocus
                                ? []
                                : n.getBufferTemplate.call(t).slice()))),
                          (0, l.writeBuffer)(r, u, void 0, e)),
                          t.undoValue !== t._valueGet(!0) &&
                            ((t.undoValue = t._valueGet(!0)),
                            i.trigger('change'))
                      }
                    },
                    mouseenterEvent: function () {
                      var e = this.inputmask,
                        t = e.opts,
                        a = this
                      if (
                        ((e.mouseEnter = !0),
                        (a.inputmask.shadowRoot || a.ownerDocument)
                          .activeElement !== a)
                      ) {
                        var i = (
                          e.isRTL
                            ? n.getBufferTemplate.call(e).slice().reverse()
                            : n.getBufferTemplate.call(e)
                        ).join('')
                        e.placeholder !== i &&
                          a.placeholder !== e.originalPlaceholder &&
                          (e.originalPlaceholder = a.placeholder),
                          t.showMaskOnHover &&
                            (0, l.HandleNativePlaceholder)(a, i)
                      }
                    },
                    submitEvent: function () {
                      var e = this.inputmask,
                        t = e.opts
                      e.undoValue !== e._valueGet(!0) &&
                        e.$el.trigger('change'),
                        t.clearMaskOnLostFocus &&
                          -1 === n.getLastValidPosition.call(e) &&
                          e._valueGet &&
                          e._valueGet() ===
                            n.getBufferTemplate.call(e).join('') &&
                          e._valueSet(''),
                        t.clearIncomplete &&
                          !1 === s.isComplete.call(e, n.getBuffer.call(e)) &&
                          e._valueSet(''),
                        t.removeMaskOnSubmit &&
                          (e._valueSet(e.unmaskedvalue(), !0),
                          setTimeout(function () {
                            ;(0, l.writeBuffer)(e.el, n.getBuffer.call(e))
                          }, 0))
                    },
                    resetEvent: function () {
                      var e = this.inputmask
                      ;(e.refreshValue = !0),
                        setTimeout(function () {
                          ;(0, l.applyInputValue)(e.el, e._valueGet(!0))
                        }, 0)
                    },
                  }
                  t.EventHandlers = c
                },
                9716: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.EventRuler = void 0)
                  var i = s(a(2394)),
                    n = s(a(4528)),
                    r = a(8711),
                    o = a(7760)
                  function s(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var l = {
                    on: function (e, t, a) {
                      var s = e.inputmask.dependencyLib,
                        l = function (t) {
                          t.originalEvent &&
                            ((t = t.originalEvent || t), (arguments[0] = t))
                          var l,
                            u = this,
                            c = u.inputmask,
                            f = c ? c.opts : void 0
                          if (void 0 === c && 'FORM' !== this.nodeName) {
                            var d = s.data(u, '_inputmask_opts')
                            s(u).off(), d && new i.default(d).mask(u)
                          } else {
                            if (
                              ['submit', 'reset', 'setvalue'].includes(
                                t.type
                              ) ||
                              'FORM' === this.nodeName ||
                              !(
                                u.disabled ||
                                (u.readOnly &&
                                  !(
                                    ('keydown' === t.type &&
                                      t.ctrlKey &&
                                      67 === t.keyCode) ||
                                    (!1 === f.tabThrough &&
                                      t.keyCode === n.default.TAB)
                                  ))
                              )
                            ) {
                              switch (t.type) {
                                case 'input':
                                  if (
                                    !0 === c.skipInputEvent ||
                                    (t.inputType &&
                                      'insertCompositionText' === t.inputType)
                                  )
                                    return (
                                      (c.skipInputEvent = !1),
                                      t.preventDefault()
                                    )
                                  break

                                case 'keydown':
                                  ;(c.skipKeyPressEvent = !1),
                                    (c.skipInputEvent = c.isComposing =
                                      t.keyCode === n.default.KEY_229)
                                  break

                                case 'keyup':
                                case 'compositionend':
                                  c.isComposing && (c.skipInputEvent = !1)
                                  break

                                case 'keypress':
                                  if (!0 === c.skipKeyPressEvent)
                                    return t.preventDefault()
                                  c.skipKeyPressEvent = !0
                                  break

                                case 'click':
                                case 'focus':
                                  return c.validationEvent
                                    ? ((c.validationEvent = !1),
                                      e.blur(),
                                      (0, o.HandleNativePlaceholder)(
                                        e,
                                        (c.isRTL
                                          ? r.getBufferTemplate
                                              .call(c)
                                              .slice()
                                              .reverse()
                                          : r.getBufferTemplate.call(c)
                                        ).join('')
                                      ),
                                      setTimeout(function () {
                                        e.focus()
                                      }, f.validationEventTimeOut),
                                      !1)
                                    : ((l = arguments),
                                      setTimeout(function () {
                                        e.inputmask && a.apply(u, l)
                                      }, 0),
                                      !1)
                              }
                              var p = a.apply(u, arguments)
                              return (
                                !1 === p &&
                                  (t.preventDefault(), t.stopPropagation()),
                                p
                              )
                            }
                            t.preventDefault()
                          }
                        }
                      ;['submit', 'reset'].includes(t)
                        ? ((l = l.bind(e)),
                          null !== e.form && s(e.form).on(t, l))
                        : s(e).on(t, l),
                        (e.inputmask.events[t] = e.inputmask.events[t] || []),
                        e.inputmask.events[t].push(l)
                    },
                    off: function (e, t) {
                      if (e.inputmask && e.inputmask.events) {
                        var a = e.inputmask.dependencyLib,
                          i = e.inputmask.events
                        for (var n in (t &&
                          ((i = [])[t] = e.inputmask.events[t]),
                        i)) {
                          for (var r = i[n]; r.length > 0; ) {
                            var o = r.pop()
                            ;['submit', 'reset'].includes(n)
                              ? null !== e.form && a(e.form).off(n, o)
                              : a(e).off(n, o)
                          }
                          delete e.inputmask.events[n]
                        }
                      }
                    },
                  }
                  t.EventRuler = l
                },
                219: function (e, t, a) {
                  var i = l(a(2394)),
                    n = l(a(4528)),
                    r = l(a(7184)),
                    o = a(8711)
                  function s(e) {
                    return (s =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e
                          })(e)
                  }
                  function l(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var u = i.default.dependencyLib,
                    c = new Date().getFullYear(),
                    f = {
                      d: [
                        '[1-9]|[12][0-9]|3[01]',
                        Date.prototype.setDate,
                        'day',
                        Date.prototype.getDate,
                      ],
                      dd: [
                        '0[1-9]|[12][0-9]|3[01]',
                        Date.prototype.setDate,
                        'day',
                        function () {
                          return y(Date.prototype.getDate.call(this), 2)
                        },
                      ],
                      ddd: [''],
                      dddd: [''],
                      m: [
                        '[1-9]|1[012]',
                        Date.prototype.setMonth,
                        'month',
                        function () {
                          return Date.prototype.getMonth.call(this) + 1
                        },
                      ],
                      mm: [
                        '0[1-9]|1[012]',
                        Date.prototype.setMonth,
                        'month',
                        function () {
                          return y(Date.prototype.getMonth.call(this) + 1, 2)
                        },
                      ],
                      mmm: [''],
                      mmmm: [''],
                      yy: [
                        '[0-9]{2}',
                        Date.prototype.setFullYear,
                        'year',
                        function () {
                          return y(Date.prototype.getFullYear.call(this), 2)
                        },
                      ],
                      yyyy: [
                        '[0-9]{4}',
                        Date.prototype.setFullYear,
                        'year',
                        function () {
                          return y(Date.prototype.getFullYear.call(this), 4)
                        },
                      ],
                      h: [
                        '[1-9]|1[0-2]',
                        Date.prototype.setHours,
                        'hours',
                        Date.prototype.getHours,
                      ],
                      hh: [
                        '0[1-9]|1[0-2]',
                        Date.prototype.setHours,
                        'hours',
                        function () {
                          return y(Date.prototype.getHours.call(this), 2)
                        },
                      ],
                      hx: [
                        function (e) {
                          return '[0-9]{'.concat(e, '}')
                        },
                        Date.prototype.setHours,
                        'hours',
                        function (e) {
                          return Date.prototype.getHours
                        },
                      ],
                      H: [
                        '1?[0-9]|2[0-3]',
                        Date.prototype.setHours,
                        'hours',
                        Date.prototype.getHours,
                      ],
                      HH: [
                        '0[0-9]|1[0-9]|2[0-3]',
                        Date.prototype.setHours,
                        'hours',
                        function () {
                          return y(Date.prototype.getHours.call(this), 2)
                        },
                      ],
                      Hx: [
                        function (e) {
                          return '[0-9]{'.concat(e, '}')
                        },
                        Date.prototype.setHours,
                        'hours',
                        function (e) {
                          return function () {
                            return y(Date.prototype.getHours.call(this), e)
                          }
                        },
                      ],
                      M: [
                        '[1-5]?[0-9]',
                        Date.prototype.setMinutes,
                        'minutes',
                        Date.prototype.getMinutes,
                      ],
                      MM: [
                        '0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]',
                        Date.prototype.setMinutes,
                        'minutes',
                        function () {
                          return y(Date.prototype.getMinutes.call(this), 2)
                        },
                      ],
                      s: [
                        '[1-5]?[0-9]',
                        Date.prototype.setSeconds,
                        'seconds',
                        Date.prototype.getSeconds,
                      ],
                      ss: [
                        '0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]',
                        Date.prototype.setSeconds,
                        'seconds',
                        function () {
                          return y(Date.prototype.getSeconds.call(this), 2)
                        },
                      ],
                      l: [
                        '[0-9]{3}',
                        Date.prototype.setMilliseconds,
                        'milliseconds',
                        function () {
                          return y(Date.prototype.getMilliseconds.call(this), 3)
                        },
                      ],
                      L: [
                        '[0-9]{2}',
                        Date.prototype.setMilliseconds,
                        'milliseconds',
                        function () {
                          return y(Date.prototype.getMilliseconds.call(this), 2)
                        },
                      ],
                      t: ['[ap]', p, 'ampm', h, 1],
                      tt: ['[ap]m', p, 'ampm', h, 2],
                      T: ['[AP]', p, 'ampm', h, 1],
                      TT: ['[AP]M', p, 'ampm', h, 2],
                      Z: [''],
                      o: [''],
                      S: [''],
                    },
                    d = {
                      isoDate: 'yyyy-mm-dd',
                      isoTime: 'HH:MM:ss',
                      isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
                      isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'",
                    }
                  function p(e) {
                    e.toLowerCase().includes('p') &&
                      this.setHours(this.getHours() + 12)
                  }
                  function h() {}
                  function v(e) {
                    var t = new RegExp('\\d+$').exec(e[0])
                    if (t && void 0 !== t[0]) {
                      var a = f[e[0][0] + 'x'].slice('')
                      return (a[0] = a[0](t[0])), (a[3] = a[3](t[0])), a
                    }
                    if (f[e[0]]) return f[e[0]]
                  }
                  function m(e) {
                    if (!e.tokenizer) {
                      var t = [],
                        a = []
                      for (var i in f)
                        if (/\.*x$/.test(i)) {
                          var n = i[0] + '\\d+'
                          ;-1 === a.indexOf(n) && a.push(n)
                        } else -1 === t.indexOf(i[0]) && t.push(i[0])
                      ;(e.tokenizer =
                        '(' +
                        (a.length > 0 ? a.join('|') + '|' : '') +
                        t.join('+|') +
                        ')+?|.'),
                        (e.tokenizer = new RegExp(e.tokenizer, 'g'))
                    }
                    return e.tokenizer
                  }
                  function g(e, t, a) {
                    if (
                      void 0 === e.rawday ||
                      (!isFinite(e.rawday) &&
                        new Date(
                          e.date.getFullYear(),
                          isFinite(e.rawmonth)
                            ? e.month
                            : e.date.getMonth() + 1,
                          0
                        ).getDate() >= e.day) ||
                      ('29' == e.day && !Number.isFinite(e.rawyear)) ||
                      new Date(
                        e.date.getFullYear(),
                        isFinite(e.rawmonth) ? e.month : e.date.getMonth() + 1,
                        0
                      ).getDate() >= e.day
                    )
                      return t
                    if ('29' == e.day) {
                      var i = P(t.pos, a)
                      if (
                        'yyyy' === i.targetMatch[0] &&
                        t.pos - i.targetMatchIndex == 2
                      )
                        return (t.remove = t.pos + 1), t
                    } else if (
                      '02' == e.month &&
                      '30' == e.day &&
                      void 0 !== t.c
                    )
                      return (
                        (e.day = '03'),
                        e.date.setDate(3),
                        e.date.setMonth(1),
                        (t.insert = [
                          {
                            pos: t.pos,
                            c: '0',
                          },
                          {
                            pos: t.pos + 1,
                            c: t.c,
                          },
                        ]),
                        (t.caret = o.seekNext.call(this, t.pos + 1)),
                        t
                      )
                    return !1
                  }
                  function k(e, t, a, i) {
                    var n,
                      o,
                      s = ''
                    for (m(a).lastIndex = 0; (n = m(a).exec(e)); ) {
                      if (void 0 === t)
                        if ((o = v(n))) s += '(' + o[0] + ')'
                        else
                          switch (n[0]) {
                            case '[':
                              s += '('
                              break

                            case ']':
                              s += ')?'
                              break

                            default:
                              s += (0, r.default)(n[0])
                          }
                      else if ((o = v(n)))
                        if (!0 !== i && o[3]) s += o[3].call(t.date)
                        else o[2] ? (s += t['raw' + o[2]]) : (s += n[0])
                      else s += n[0]
                    }
                    return s
                  }
                  function y(e, t, a) {
                    for (e = String(e), t = t || 2; e.length < t; )
                      e = a ? e + '0' : '0' + e
                    return e
                  }
                  function b(e, t, a) {
                    var i,
                      n,
                      r,
                      o = {
                        date: new Date(1, 0, 1),
                      },
                      l = e
                    function u(e, t, a) {
                      if (
                        ((e[i] = 'ampm' === i ? t : t.replace(/[^0-9]/g, '0')),
                        (e['raw' + i] = t),
                        void 0 !== r)
                      ) {
                        var n = e[i]
                        ;(('day' === i && 29 === parseInt(n)) ||
                          ('month' === i && 2 === parseInt(n))) &&
                          (29 !== parseInt(e.day) ||
                            2 !== parseInt(e.month) ||
                            ('' !== e.year && void 0 !== e.year) ||
                            e.date.setFullYear(2012, 1, 29)),
                          'day' === i && 0 === parseInt(n) && (n = 1),
                          'month' === i && (n = parseInt(n)) > 0 && (n -= 1),
                          'year' === i && n.length < 4 && (n = y(n, 4, !0)),
                          '' === n || isNaN(n) || r.call(e.date, n),
                          'ampm' === i && r.call(e.date, n)
                      }
                    }
                    if ('string' == typeof l) {
                      for (m(a).lastIndex = 0; (n = m(a).exec(t)); ) {
                        var c = new RegExp('\\d+$').exec(n[0]),
                          d = c ? n[0][0] + 'x' : n[0],
                          p = void 0
                        if (c) {
                          var h = m(a).lastIndex,
                            v = P(n.index, a)
                          ;(m(a).lastIndex = h),
                            (p = l.slice(0, l.indexOf(v.nextMatch[0])))
                        } else p = l.slice(0, d.length)
                        Object.prototype.hasOwnProperty.call(f, d) &&
                          ((i = f[d][2]), (r = f[d][1]), u(o, p)),
                          (l = l.slice(p.length))
                      }
                      return o
                    }
                    if (
                      l &&
                      'object' === s(l) &&
                      Object.prototype.hasOwnProperty.call(l, 'date')
                    )
                      return l
                  }
                  function x(e, t) {
                    return k(
                      t.inputFormat,
                      {
                        date: e,
                      },
                      t
                    )
                  }
                  function P(e, t) {
                    var a,
                      i,
                      n = 0,
                      r = 0
                    for (m(t).lastIndex = 0; (i = m(t).exec(t.inputFormat)); ) {
                      var o = new RegExp('\\d+$').exec(i[0])
                      if ((n += r = o ? parseInt(o[0]) : i[0].length) >= e) {
                        ;(a = i), (i = m(t).exec(t.inputFormat))
                        break
                      }
                    }
                    return {
                      targetMatchIndex: n - r,
                      nextMatch: i,
                      targetMatch: a,
                    }
                  }
                  i.default.extendAliases({
                    datetime: {
                      mask: function (e) {
                        return (
                          (e.numericInput = !1),
                          (f.S = e.i18n.ordinalSuffix.join('|')),
                          (e.inputFormat = d[e.inputFormat] || e.inputFormat),
                          (e.displayFormat =
                            d[e.displayFormat] ||
                            e.displayFormat ||
                            e.inputFormat),
                          (e.outputFormat =
                            d[e.outputFormat] ||
                            e.outputFormat ||
                            e.inputFormat),
                          (e.placeholder =
                            '' !== e.placeholder
                              ? e.placeholder
                              : e.inputFormat.replace(/[[\]]/, '')),
                          (e.regex = k(e.inputFormat, void 0, e)),
                          (e.min = b(e.min, e.inputFormat, e)),
                          (e.max = b(e.max, e.inputFormat, e)),
                          null
                        )
                      },
                      placeholder: '',
                      inputFormat: 'isoDateTime',
                      displayFormat: void 0,
                      outputFormat: void 0,
                      min: null,
                      max: null,
                      skipOptionalPartCharacter: '',
                      i18n: {
                        dayNames: [
                          'Mon',
                          'Tue',
                          'Wed',
                          'Thu',
                          'Fri',
                          'Sat',
                          'Sun',
                          'Monday',
                          'Tuesday',
                          'Wednesday',
                          'Thursday',
                          'Friday',
                          'Saturday',
                          'Sunday',
                        ],
                        monthNames: [
                          'Jan',
                          'Feb',
                          'Mar',
                          'Apr',
                          'May',
                          'Jun',
                          'Jul',
                          'Aug',
                          'Sep',
                          'Oct',
                          'Nov',
                          'Dec',
                          'January',
                          'February',
                          'March',
                          'April',
                          'May',
                          'June',
                          'July',
                          'August',
                          'September',
                          'October',
                          'November',
                          'December',
                        ],
                        ordinalSuffix: ['st', 'nd', 'rd', 'th'],
                      },
                      preValidation: function (e, t, a, i, n, r, o, s) {
                        if (s) return !0
                        if (isNaN(a) && e[t] !== a) {
                          var l = P(t, n)
                          if (
                            l.nextMatch &&
                            l.nextMatch[0] === a &&
                            l.targetMatch[0].length > 1
                          ) {
                            var u = f[l.targetMatch[0]][0]
                            if (new RegExp(u).test('0' + e[t - 1]))
                              return (
                                (e[t] = e[t - 1]),
                                (e[t - 1] = '0'),
                                {
                                  fuzzy: !0,
                                  buffer: e,
                                  refreshFromBuffer: {
                                    start: t - 1,
                                    end: t + 1,
                                  },
                                  pos: t + 1,
                                }
                              )
                          }
                        }
                        return !0
                      },
                      postValidation: function (e, t, a, i, n, r, o, s) {
                        var l, u
                        if (o) return !0
                        if (
                          !1 === i &&
                          ((((l = P(t + 1, n)).targetMatch &&
                            l.targetMatchIndex === t &&
                            l.targetMatch[0].length > 1 &&
                            void 0 !== f[l.targetMatch[0]]) ||
                            ((l = P(t + 2, n)).targetMatch &&
                              l.targetMatchIndex === t + 1 &&
                              l.targetMatch[0].length > 1 &&
                              void 0 !== f[l.targetMatch[0]])) &&
                            (u = f[l.targetMatch[0]][0]),
                          void 0 !== u &&
                            (void 0 !== r.validPositions[t + 1] &&
                            new RegExp(u).test(a + '0')
                              ? ((e[t] = a),
                                (e[t + 1] = '0'),
                                (i = {
                                  pos: t + 2,
                                  caret: t,
                                }))
                              : new RegExp(u).test('0' + a) &&
                                ((e[t] = '0'),
                                (e[t + 1] = a),
                                (i = {
                                  pos: t + 2,
                                }))),
                          !1 === i)
                        )
                          return i
                        if (
                          (i.fuzzy && ((e = i.buffer), (t = i.pos)),
                          (l = P(t, n)).targetMatch &&
                            l.targetMatch[0] &&
                            void 0 !== f[l.targetMatch[0]])
                        ) {
                          u = f[l.targetMatch[0]][0]
                          var d = e.slice(
                            l.targetMatchIndex,
                            l.targetMatchIndex + l.targetMatch[0].length
                          )
                          !1 === new RegExp(u).test(d.join('')) &&
                            2 === l.targetMatch[0].length &&
                            r.validPositions[l.targetMatchIndex] &&
                            r.validPositions[l.targetMatchIndex + 1] &&
                            (r.validPositions[l.targetMatchIndex + 1].input =
                              '0')
                        }
                        var p = i,
                          h = b(e.join(''), n.inputFormat, n)
                        return (
                          p &&
                            h.date.getTime() == h.date.getTime() &&
                            (n.prefillYear &&
                              (p = (function (e, t, a) {
                                if (e.year !== e.rawyear) {
                                  var i = c.toString(),
                                    n = e.rawyear.replace(/[^0-9]/g, ''),
                                    r = i.slice(0, n.length),
                                    o = i.slice(n.length)
                                  if (2 === n.length && n === r) {
                                    var s = new Date(c, e.month - 1, e.day)
                                    e.day == s.getDate() &&
                                      (!a.max ||
                                        a.max.date.getTime() >= s.getTime()) &&
                                      (e.date.setFullYear(c),
                                      (e.year = i),
                                      (t.insert = [
                                        {
                                          pos: t.pos + 1,
                                          c: o[0],
                                        },
                                        {
                                          pos: t.pos + 2,
                                          c: o[1],
                                        },
                                      ]))
                                  }
                                }
                                return t
                              })(h, p, n)),
                            (p = (function (e, t, a, i, n) {
                              if (!t) return t
                              if (a.min) {
                                if (e.rawyear) {
                                  var r,
                                    o = e.rawyear.replace(/[^0-9]/g, ''),
                                    s = a.min.year.substr(0, o.length)
                                  if (o < s) {
                                    var l = P(t.pos, a)
                                    if (
                                      ((o = e.rawyear
                                        .substr(
                                          0,
                                          t.pos - l.targetMatchIndex + 1
                                        )
                                        .replace(/[^0-9]/g, '0')),
                                      (s = a.min.year.substr(0, o.length)) <= o)
                                    )
                                      return (
                                        (t.remove =
                                          l.targetMatchIndex + o.length),
                                        t
                                      )
                                    if (
                                      ((o =
                                        'yyyy' === l.targetMatch[0]
                                          ? e.rawyear.substr(1, 1)
                                          : e.rawyear.substr(0, 1)),
                                      (s = a.min.year.substr(2, 1)),
                                      (r = a.max ? a.max.year.substr(2, 1) : o),
                                      1 === o.length &&
                                        s <= o &&
                                        o <= r &&
                                        !0 !== n)
                                    )
                                      return (
                                        'yyyy' === l.targetMatch[0]
                                          ? ((t.insert = [
                                              {
                                                pos: t.pos + 1,
                                                c: o,
                                                strict: !0,
                                              },
                                            ]),
                                            (t.caret = t.pos + 2),
                                            (i.validPositions[t.pos].input =
                                              a.min.year[1]))
                                          : ((t.insert = [
                                              {
                                                pos: t.pos + 1,
                                                c: a.min.year[1],
                                                strict: !0,
                                              },
                                              {
                                                pos: t.pos + 2,
                                                c: o,
                                                strict: !0,
                                              },
                                            ]),
                                            (t.caret = t.pos + 3),
                                            (i.validPositions[t.pos].input =
                                              a.min.year[0])),
                                        t
                                      )
                                    t = !1
                                  }
                                }
                                for (var u in e)
                                  -1 === u.indexOf('raw') &&
                                    e['raw'.concat(u)] &&
                                    (e[u], e['raw'.concat(u)])
                                t &&
                                  e.year &&
                                  e.year === e.rawyear &&
                                  a.min.date.getTime() ==
                                    a.min.date.getTime() &&
                                  (t = a.min.date.getTime() <= e.date.getTime())
                              }
                              return (
                                t &&
                                  a.max &&
                                  a.max.date.getTime() ==
                                    a.max.date.getTime() &&
                                  (t =
                                    a.max.date.getTime() >= e.date.getTime()),
                                t
                              )
                            })(h, (p = g.call(this, h, p, n)), n, r, s))),
                          void 0 !== t && p && i.pos !== t
                            ? {
                                buffer: k(n.inputFormat, h, n).split(''),
                                refreshFromBuffer: {
                                  start: t,
                                  end: i.pos,
                                },
                                pos: i.caret || i.pos,
                              }
                            : p
                        )
                      },
                      onKeyDown: function (e, t, a, i) {
                        e.ctrlKey &&
                          e.keyCode === n.default.RIGHT &&
                          (this.inputmask._valueSet(x(new Date(), i)),
                          u(this).trigger('setvalue'))
                      },
                      onUnMask: function (e, t, a) {
                        return t
                          ? k(a.outputFormat, b(e, a.inputFormat, a), a, !0)
                          : t
                      },
                      casing: function (e, t, a, i) {
                        return 0 == t.nativeDef.indexOf('[ap]')
                          ? e.toLowerCase()
                          : 0 == t.nativeDef.indexOf('[AP]')
                          ? e.toUpperCase()
                          : e
                      },
                      onBeforeMask: function (e, t) {
                        return (
                          '[object Date]' ===
                            Object.prototype.toString.call(e) && (e = x(e, t)),
                          e
                        )
                      },
                      insertMode: !1,
                      shiftPositions: !1,
                      keepStatic: !1,
                      inputmode: 'numeric',
                      prefillYear: !0,
                    },
                  })
                },
                3851: function (e, t, a) {
                  var i,
                    n =
                      (i = a(2394)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          },
                    r = a(8711),
                    o = a(4713)
                  n.default.extendDefinitions({
                    A: {
                      validator:
                        '[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]',
                      casing: 'upper',
                    },
                    '&': {
                      validator:
                        '[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]',
                      casing: 'upper',
                    },
                    '#': {
                      validator: '[0-9A-Fa-f]',
                      casing: 'upper',
                    },
                  })
                  var s = new RegExp('25[0-5]|2[0-4][0-9]|[01][0-9][0-9]')
                  function l(e, t, a, i, n) {
                    return (
                      a - 1 > -1 && '.' !== t.buffer[a - 1]
                        ? ((e = t.buffer[a - 1] + e),
                          (e =
                            a - 2 > -1 && '.' !== t.buffer[a - 2]
                              ? t.buffer[a - 2] + e
                              : '0' + e))
                        : (e = '00' + e),
                      s.test(e)
                    )
                  }
                  n.default.extendAliases({
                    cssunit: {
                      regex:
                        '[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)',
                    },
                    url: {
                      regex: '(https?|ftp)://.*',
                      autoUnmask: !1,
                      keepStatic: !1,
                      tabThrough: !0,
                    },
                    ip: {
                      mask: 'i[i[i]].j[j[j]].k[k[k]].l[l[l]]',
                      definitions: {
                        i: {
                          validator: l,
                        },
                        j: {
                          validator: l,
                        },
                        k: {
                          validator: l,
                        },
                        l: {
                          validator: l,
                        },
                      },
                      onUnMask: function (e, t, a) {
                        return e
                      },
                      inputmode: 'numeric',
                    },
                    email: {
                      mask: '*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]',
                      greedy: !1,
                      casing: 'lower',
                      onBeforePaste: function (e, t) {
                        return (e = e.toLowerCase()).replace('mailto:', '')
                      },
                      definitions: {
                        '*': {
                          validator:
                            "[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5!#$%&'*+/=?^_`{|}~-]",
                        },
                        '-': {
                          validator: '[0-9A-Za-z-]',
                        },
                      },
                      onUnMask: function (e, t, a) {
                        return e
                      },
                      inputmode: 'email',
                    },
                    mac: {
                      mask: '##:##:##:##:##:##',
                    },
                    vin: {
                      mask: 'V{13}9{4}',
                      definitions: {
                        V: {
                          validator: '[A-HJ-NPR-Za-hj-npr-z\\d]',
                          casing: 'upper',
                        },
                      },
                      clearIncomplete: !0,
                      autoUnmask: !0,
                    },
                    ssn: {
                      mask: '999-99-9999',
                      postValidation: function (e, t, a, i, n, s, l) {
                        var u = o.getMaskTemplate.call(
                          this,
                          !0,
                          r.getLastValidPosition.call(this),
                          !0,
                          !0
                        )
                        return /^(?!219-09-9999|078-05-1120)(?!666|000|9.{2}).{3}-(?!00).{2}-(?!0{4}).{4}$/.test(
                          u.join('')
                        )
                      },
                    },
                  })
                },
                207: function (e, t, a) {
                  var i = s(a(2394)),
                    n = s(a(4528)),
                    r = s(a(7184)),
                    o = a(8711)
                  function s(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var l = i.default.dependencyLib
                  function u(e, t) {
                    for (var a = '', n = 0; n < e.length; n++)
                      i.default.prototype.definitions[e.charAt(n)] ||
                      t.definitions[e.charAt(n)] ||
                      t.optionalmarker[0] === e.charAt(n) ||
                      t.optionalmarker[1] === e.charAt(n) ||
                      t.quantifiermarker[0] === e.charAt(n) ||
                      t.quantifiermarker[1] === e.charAt(n) ||
                      t.groupmarker[0] === e.charAt(n) ||
                      t.groupmarker[1] === e.charAt(n) ||
                      t.alternatormarker === e.charAt(n)
                        ? (a += '\\' + e.charAt(n))
                        : (a += e.charAt(n))
                    return a
                  }
                  function c(e, t, a, i) {
                    if (e.length > 0 && t > 0 && (!a.digitsOptional || i)) {
                      var n = e.indexOf(a.radixPoint),
                        r = !1
                      a.negationSymbol.back === e[e.length - 1] &&
                        ((r = !0), e.length--),
                        -1 === n && (e.push(a.radixPoint), (n = e.length - 1))
                      for (var o = 1; o <= t; o++)
                        isFinite(e[n + o]) || (e[n + o] = '0')
                    }
                    return r && e.push(a.negationSymbol.back), e
                  }
                  function f(e, t) {
                    var a = 0
                    if ('+' === e) {
                      for (a in t.validPositions);
                      a = o.seekNext.call(this, parseInt(a))
                    }
                    for (var i in t.tests)
                      if ((i = parseInt(i)) >= a)
                        for (var n = 0, r = t.tests[i].length; n < r; n++)
                          if (
                            (void 0 === t.validPositions[i] || '-' === e) &&
                            t.tests[i][n].match.def === e
                          )
                            return (
                              i +
                              (void 0 !== t.validPositions[i] && '-' !== e
                                ? 1
                                : 0)
                            )
                    return a
                  }
                  function d(e, t) {
                    var a = -1
                    for (var i in t.validPositions) {
                      var n = t.validPositions[i]
                      if (n && n.match.def === e) {
                        a = parseInt(i)
                        break
                      }
                    }
                    return a
                  }
                  function p(e, t, a, i, n) {
                    var r = t.buffer ? t.buffer.indexOf(n.radixPoint) : -1,
                      o =
                        (-1 !== r || (i && n.jitMasking)) &&
                        new RegExp(n.definitions[9].validator).test(e)
                    return n._radixDance &&
                      -1 !== r &&
                      o &&
                      null == t.validPositions[r]
                      ? {
                          insert: {
                            pos: r === a ? r + 1 : r,
                            c: n.radixPoint,
                          },
                          pos: a,
                        }
                      : o
                  }
                  i.default.extendAliases({
                    numeric: {
                      mask: function (e) {
                        ;(e.repeat = 0),
                          e.groupSeparator === e.radixPoint &&
                            e.digits &&
                            '0' !== e.digits &&
                            ('.' === e.radixPoint
                              ? (e.groupSeparator = ',')
                              : ',' === e.radixPoint
                              ? (e.groupSeparator = '.')
                              : (e.groupSeparator = '')),
                          ' ' === e.groupSeparator &&
                            (e.skipOptionalPartCharacter = void 0),
                          e.placeholder.length > 1 &&
                            (e.placeholder = e.placeholder.charAt(0)),
                          'radixFocus' === e.positionCaretOnClick &&
                            '' === e.placeholder &&
                            (e.positionCaretOnClick = 'lvp')
                        var t = '0',
                          a = e.radixPoint
                        !0 === e.numericInput && void 0 === e.__financeInput
                          ? ((t = '1'),
                            (e.positionCaretOnClick =
                              'radixFocus' === e.positionCaretOnClick
                                ? 'lvp'
                                : e.positionCaretOnClick),
                            (e.digitsOptional = !1),
                            isNaN(e.digits) && (e.digits = 2),
                            (e._radixDance = !1),
                            (a = ',' === e.radixPoint ? '?' : '!'),
                            '' !== e.radixPoint &&
                              void 0 === e.definitions[a] &&
                              ((e.definitions[a] = {}),
                              (e.definitions[a].validator =
                                '[' + e.radixPoint + ']'),
                              (e.definitions[a].placeholder = e.radixPoint),
                              (e.definitions[a].static = !0),
                              (e.definitions[a].generated = !0)))
                          : ((e.__financeInput = !1), (e.numericInput = !0))
                        var i,
                          n = '[+]'
                        if (
                          ((n += u(e.prefix, e)),
                          '' !== e.groupSeparator
                            ? (void 0 === e.definitions[e.groupSeparator] &&
                                ((e.definitions[e.groupSeparator] = {}),
                                (e.definitions[e.groupSeparator].validator =
                                  '[' + e.groupSeparator + ']'),
                                (e.definitions[e.groupSeparator].placeholder =
                                  e.groupSeparator),
                                (e.definitions[e.groupSeparator].static = !0),
                                (e.definitions[e.groupSeparator].generated =
                                  !0)),
                              (n += e._mask(e)))
                            : (n += '9{+}'),
                          void 0 !== e.digits && 0 !== e.digits)
                        ) {
                          var o = e.digits.toString().split(',')
                          isFinite(o[0]) && o[1] && isFinite(o[1])
                            ? (n += a + t + '{' + e.digits + '}')
                            : (isNaN(e.digits) || parseInt(e.digits) > 0) &&
                              (e.digitsOptional || e.jitMasking
                                ? ((i = n + a + t + '{0,' + e.digits + '}'),
                                  (e.keepStatic = !0))
                                : (n += a + t + '{' + e.digits + '}'))
                        } else e.inputmode = 'numeric'
                        return (
                          (n += u(e.suffix, e)),
                          (n += '[-]'),
                          i && (n = [i + u(e.suffix, e) + '[-]', n]),
                          (e.greedy = !1),
                          (function (e) {
                            void 0 === e.parseMinMaxOptions &&
                              (null !== e.min &&
                                ((e.min = e.min
                                  .toString()
                                  .replace(
                                    new RegExp(
                                      (0, r.default)(e.groupSeparator),
                                      'g'
                                    ),
                                    ''
                                  )),
                                ',' === e.radixPoint &&
                                  (e.min = e.min.replace(e.radixPoint, '.')),
                                (e.min = isFinite(e.min)
                                  ? parseFloat(e.min)
                                  : NaN),
                                isNaN(e.min) && (e.min = Number.MIN_VALUE)),
                              null !== e.max &&
                                ((e.max = e.max
                                  .toString()
                                  .replace(
                                    new RegExp(
                                      (0, r.default)(e.groupSeparator),
                                      'g'
                                    ),
                                    ''
                                  )),
                                ',' === e.radixPoint &&
                                  (e.max = e.max.replace(e.radixPoint, '.')),
                                (e.max = isFinite(e.max)
                                  ? parseFloat(e.max)
                                  : NaN),
                                isNaN(e.max) && (e.max = Number.MAX_VALUE)),
                              (e.parseMinMaxOptions = 'done'))
                          })(e),
                          n
                        )
                      },
                      _mask: function (e) {
                        return '(' + e.groupSeparator + '999){+|1}'
                      },
                      digits: '*',
                      digitsOptional: !0,
                      enforceDigitsOnBlur: !1,
                      radixPoint: '.',
                      positionCaretOnClick: 'radixFocus',
                      _radixDance: !0,
                      groupSeparator: '',
                      allowMinus: !0,
                      negationSymbol: {
                        front: '-',
                        back: '',
                      },
                      prefix: '',
                      suffix: '',
                      min: null,
                      max: null,
                      SetMaxOnOverflow: !1,
                      step: 1,
                      inputType: 'text',
                      unmaskAsNumber: !1,
                      roundingFN: Math.round,
                      inputmode: 'decimal',
                      shortcuts: {
                        k: '000',
                        m: '000000',
                      },
                      placeholder: '0',
                      greedy: !1,
                      rightAlign: !0,
                      insertMode: !0,
                      autoUnmask: !1,
                      skipOptionalPartCharacter: '',
                      usePrototypeDefinitions: !1,
                      definitions: {
                        0: {
                          validator: p,
                        },
                        1: {
                          validator: p,
                          definitionSymbol: '9',
                        },
                        9: {
                          validator:
                            '[0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9]',
                          definitionSymbol: '*',
                        },
                        '+': {
                          validator: function (e, t, a, i, n) {
                            return (
                              n.allowMinus &&
                              ('-' === e || e === n.negationSymbol.front)
                            )
                          },
                        },
                        '-': {
                          validator: function (e, t, a, i, n) {
                            return n.allowMinus && e === n.negationSymbol.back
                          },
                        },
                      },
                      preValidation: function (e, t, a, i, n, r, o, s) {
                        var l
                        if (!1 !== n.__financeInput && a === n.radixPoint)
                          return !1
                        if ((l = n.shortcuts && n.shortcuts[a])) {
                          if (l.length > 1)
                            for (var u = [], c = 0; c < l.length; c++)
                              u.push({
                                pos: t + c,
                                c: l[c],
                                strict: !1,
                              })
                          return {
                            insert: u,
                          }
                        }
                        var p = e.indexOf(n.radixPoint),
                          h = t
                        if (
                          ((t = (function (e, t, a, i, n) {
                            return (
                              n._radixDance &&
                                n.numericInput &&
                                t !== n.negationSymbol.back &&
                                e <= a &&
                                (a > 0 || t == n.radixPoint) &&
                                (void 0 === i.validPositions[e - 1] ||
                                  i.validPositions[e - 1].input !==
                                    n.negationSymbol.back) &&
                                (e -= 1),
                              e
                            )
                          })(t, a, p, r, n)),
                          '-' === a || a === n.negationSymbol.front)
                        ) {
                          if (!0 !== n.allowMinus) return !1
                          var v = !1,
                            m = d('+', r),
                            g = d('-', r)
                          return (
                            -1 !== m && (v = [m, g]),
                            !1 !== v
                              ? {
                                  remove: v,
                                  caret: h - n.negationSymbol.back.length,
                                }
                              : {
                                  insert: [
                                    {
                                      pos: f.call(this, '+', r),
                                      c: n.negationSymbol.front,
                                      fromIsValid: !0,
                                    },
                                    {
                                      pos: f.call(this, '-', r),
                                      c: n.negationSymbol.back,
                                      fromIsValid: void 0,
                                    },
                                  ],
                                  caret: h + n.negationSymbol.back.length,
                                }
                          )
                        }
                        if (a === n.groupSeparator)
                          return {
                            caret: h,
                          }
                        if (s) return !0
                        if (
                          -1 !== p &&
                          !0 === n._radixDance &&
                          !1 === i &&
                          a === n.radixPoint &&
                          void 0 !== n.digits &&
                          (isNaN(n.digits) || parseInt(n.digits) > 0) &&
                          p !== t
                        )
                          return {
                            caret: n._radixDance && t === p - 1 ? p + 1 : p,
                          }
                        if (!1 === n.__financeInput)
                          if (i) {
                            if (n.digitsOptional)
                              return {
                                rewritePosition: o.end,
                              }
                            if (!n.digitsOptional) {
                              if (o.begin > p && o.end <= p)
                                return a === n.radixPoint
                                  ? {
                                      insert: {
                                        pos: p + 1,
                                        c: '0',
                                        fromIsValid: !0,
                                      },
                                      rewritePosition: p,
                                    }
                                  : {
                                      rewritePosition: p + 1,
                                    }
                              if (o.begin < p)
                                return {
                                  rewritePosition: o.begin - 1,
                                }
                            }
                          } else if (
                            !n.showMaskOnHover &&
                            !n.showMaskOnFocus &&
                            !n.digitsOptional &&
                            n.digits > 0 &&
                            '' === this.__valueGet.call(this.el)
                          )
                            return {
                              rewritePosition: p,
                            }
                        return {
                          rewritePosition: t,
                        }
                      },
                      postValidation: function (e, t, a, i, n, r, o) {
                        if (!1 === i) return i
                        if (o) return !0
                        if (null !== n.min || null !== n.max) {
                          var s = n.onUnMask(
                            e.slice().reverse().join(''),
                            void 0,
                            l.extend({}, n, {
                              unmaskAsNumber: !0,
                            })
                          )
                          if (
                            null !== n.min &&
                            s < n.min &&
                            (s.toString().length > n.min.toString().length ||
                              s < 0)
                          )
                            return !1
                          if (null !== n.max && s > n.max)
                            return (
                              !!n.SetMaxOnOverflow && {
                                refreshFromBuffer: !0,
                                buffer: c(
                                  n.max
                                    .toString()
                                    .replace('.', n.radixPoint)
                                    .split(''),
                                  n.digits,
                                  n
                                ).reverse(),
                              }
                            )
                        }
                        return i
                      },
                      onUnMask: function (e, t, a) {
                        if ('' === t && !0 === a.nullable) return t
                        var i = e.replace(a.prefix, '')
                        return (
                          (i = (i = i.replace(a.suffix, '')).replace(
                            new RegExp((0, r.default)(a.groupSeparator), 'g'),
                            ''
                          )),
                          '' !== a.placeholder.charAt(0) &&
                            (i = i.replace(
                              new RegExp(a.placeholder.charAt(0), 'g'),
                              '0'
                            )),
                          a.unmaskAsNumber
                            ? ('' !== a.radixPoint &&
                                -1 !== i.indexOf(a.radixPoint) &&
                                (i = i.replace(
                                  r.default.call(this, a.radixPoint),
                                  '.'
                                )),
                              (i = (i = i.replace(
                                new RegExp(
                                  '^' + (0, r.default)(a.negationSymbol.front)
                                ),
                                '-'
                              )).replace(
                                new RegExp(
                                  (0, r.default)(a.negationSymbol.back) + '$'
                                ),
                                ''
                              )),
                              Number(i))
                            : i
                        )
                      },
                      isComplete: function (e, t) {
                        var a = (t.numericInput ? e.slice().reverse() : e).join(
                          ''
                        )
                        return (
                          (a = (a = (a = (a = (a = a.replace(
                            new RegExp(
                              '^' + (0, r.default)(t.negationSymbol.front)
                            ),
                            '-'
                          )).replace(
                            new RegExp(
                              (0, r.default)(t.negationSymbol.back) + '$'
                            ),
                            ''
                          )).replace(t.prefix, '')).replace(
                            t.suffix,
                            ''
                          )).replace(
                            new RegExp(
                              (0, r.default)(t.groupSeparator) + '([0-9]{3})',
                              'g'
                            ),
                            '$1'
                          )),
                          ',' === t.radixPoint &&
                            (a = a.replace((0, r.default)(t.radixPoint), '.')),
                          isFinite(a)
                        )
                      },
                      onBeforeMask: function (e, t) {
                        var a = t.radixPoint || ','
                        isFinite(t.digits) && (t.digits = parseInt(t.digits)),
                          ('number' != typeof e && 'number' !== t.inputType) ||
                            '' === a ||
                            (e = e.toString().replace('.', a))
                        var i =
                            '-' === e.charAt(0) ||
                            e.charAt(0) === t.negationSymbol.front,
                          n = e.split(a),
                          o = n[0].replace(/[^\-0-9]/g, ''),
                          s = n.length > 1 ? n[1].replace(/[^0-9]/g, '') : '',
                          l = n.length > 1
                        e = o + ('' !== s ? a + s : s)
                        var u = 0
                        if (
                          '' !== a &&
                          ((u = t.digitsOptional
                            ? t.digits < s.length
                              ? t.digits
                              : s.length
                            : t.digits),
                          '' !== s || !t.digitsOptional)
                        ) {
                          var f = Math.pow(10, u || 1)
                          ;(e = e.replace((0, r.default)(a), '.')),
                            isNaN(parseFloat(e)) ||
                              (e = (
                                t.roundingFN(parseFloat(e) * f) / f
                              ).toFixed(u)),
                            (e = e.toString().replace('.', a))
                        }
                        if (
                          (0 === t.digits &&
                            -1 !== e.indexOf(a) &&
                            (e = e.substring(0, e.indexOf(a))),
                          null !== t.min || null !== t.max)
                        ) {
                          var d = e.toString().replace(a, '.')
                          null !== t.min && d < t.min
                            ? (e = t.min.toString().replace('.', a))
                            : null !== t.max &&
                              d > t.max &&
                              (e = t.max.toString().replace('.', a))
                        }
                        return (
                          i && '-' !== e.charAt(0) && (e = '-' + e),
                          c(e.toString().split(''), u, t, l).join('')
                        )
                      },
                      onBeforeWrite: function (e, t, a, i) {
                        function n(e, t) {
                          if (!1 !== i.__financeInput || t) {
                            var a = e.indexOf(i.radixPoint)
                            ;-1 !== a && e.splice(a, 1)
                          }
                          if ('' !== i.groupSeparator)
                            for (; -1 !== (a = e.indexOf(i.groupSeparator)); )
                              e.splice(a, 1)
                          return e
                        }
                        var o,
                          s = (function (e, t) {
                            var a = new RegExp(
                                '(^' +
                                  ('' !== t.negationSymbol.front
                                    ? (0, r.default)(t.negationSymbol.front) +
                                      '?'
                                    : '') +
                                  (0, r.default)(t.prefix) +
                                  ')(.*)(' +
                                  (0, r.default)(t.suffix) +
                                  ('' != t.negationSymbol.back
                                    ? (0, r.default)(t.negationSymbol.back) +
                                      '?'
                                    : '') +
                                  '$)'
                              ).exec(e.slice().reverse().join('')),
                              i = a ? a[2] : '',
                              n = !1
                            return (
                              i &&
                                ((i = i.split(t.radixPoint.charAt(0))[0]),
                                (n = new RegExp(
                                  '^[0' + t.groupSeparator + ']*'
                                ).exec(i))),
                              !(
                                !n ||
                                !(
                                  n[0].length > 1 ||
                                  (n[0].length > 0 && n[0].length < i.length)
                                )
                              ) && n
                            )
                          })(t, i)
                        if (s)
                          for (
                            var u =
                                t
                                  .join('')
                                  .lastIndexOf(
                                    s[0].split('').reverse().join('')
                                  ) - (s[0] == s.input ? 0 : 1),
                              f = s[0] == s.input ? 1 : 0,
                              d = s[0].length - f;
                            d > 0;
                            d--
                          )
                            delete this.maskset.validPositions[u + d],
                              delete t[u + d]
                        if (e)
                          switch (e.type) {
                            case 'blur':
                            case 'checkval':
                              if (null !== i.min) {
                                var p = i.onUnMask(
                                  t.slice().reverse().join(''),
                                  void 0,
                                  l.extend({}, i, {
                                    unmaskAsNumber: !0,
                                  })
                                )
                                if (null !== i.min && p < i.min)
                                  return {
                                    refreshFromBuffer: !0,
                                    buffer: c(
                                      i.min
                                        .toString()
                                        .replace('.', i.radixPoint)
                                        .split(''),
                                      i.digits,
                                      i
                                    ).reverse(),
                                  }
                              }
                              if (t[t.length - 1] === i.negationSymbol.front) {
                                var h = new RegExp(
                                  '(^' +
                                    ('' != i.negationSymbol.front
                                      ? (0, r.default)(i.negationSymbol.front) +
                                        '?'
                                      : '') +
                                    (0, r.default)(i.prefix) +
                                    ')(.*)(' +
                                    (0, r.default)(i.suffix) +
                                    ('' != i.negationSymbol.back
                                      ? (0, r.default)(i.negationSymbol.back) +
                                        '?'
                                      : '') +
                                    '$)'
                                ).exec(n(t.slice(), !0).reverse().join(''))
                                0 == (h ? h[2] : '') &&
                                  (o = {
                                    refreshFromBuffer: !0,
                                    buffer: [0],
                                  })
                              } else
                                '' !== i.radixPoint &&
                                  t[0] === i.radixPoint &&
                                  (o && o.buffer
                                    ? o.buffer.shift()
                                    : (t.shift(),
                                      (o = {
                                        refreshFromBuffer: !0,
                                        buffer: n(t),
                                      })))
                              if (i.enforceDigitsOnBlur) {
                                var v =
                                  ((o = o || {}) && o.buffer) ||
                                  t.slice().reverse()
                                ;(o.refreshFromBuffer = !0),
                                  (o.buffer = c(v, i.digits, i, !0).reverse())
                              }
                          }
                        return o
                      },
                      onKeyDown: function (e, t, a, i) {
                        var r,
                          o = l(this)
                        if (e.ctrlKey)
                          switch (e.keyCode) {
                            case n.default.UP:
                              return (
                                this.inputmask.__valueSet.call(
                                  this,
                                  parseFloat(this.inputmask.unmaskedvalue()) +
                                    parseInt(i.step)
                                ),
                                o.trigger('setvalue'),
                                !1
                              )

                            case n.default.DOWN:
                              return (
                                this.inputmask.__valueSet.call(
                                  this,
                                  parseFloat(this.inputmask.unmaskedvalue()) -
                                    parseInt(i.step)
                                ),
                                o.trigger('setvalue'),
                                !1
                              )
                          }
                        if (
                          !e.shiftKey &&
                          (e.keyCode === n.default.DELETE ||
                            e.keyCode === n.default.BACKSPACE ||
                            e.keyCode === n.default.BACKSPACE_SAFARI) &&
                          a.begin !== t.length
                        ) {
                          if (
                            t[
                              e.keyCode === n.default.DELETE
                                ? a.begin - 1
                                : a.end
                            ] === i.negationSymbol.front
                          )
                            return (
                              (r = t.slice().reverse()),
                              '' !== i.negationSymbol.front && r.shift(),
                              '' !== i.negationSymbol.back && r.pop(),
                              o.trigger('setvalue', [r.join(''), a.begin]),
                              !1
                            )
                          if (!0 === i._radixDance) {
                            var s = t.indexOf(i.radixPoint)
                            if (i.digitsOptional) {
                              if (0 === s)
                                return (
                                  (r = t.slice().reverse()).pop(),
                                  o.trigger('setvalue', [
                                    r.join(''),
                                    a.begin >= r.length ? r.length : a.begin,
                                  ]),
                                  !1
                                )
                            } else if (
                              -1 !== s &&
                              (a.begin < s ||
                                a.end < s ||
                                (e.keyCode === n.default.DELETE &&
                                  a.begin === s))
                            )
                              return (
                                a.begin !== a.end ||
                                  (e.keyCode !== n.default.BACKSPACE &&
                                    e.keyCode !== n.default.BACKSPACE_SAFARI) ||
                                  a.begin++,
                                (r = t.slice().reverse()).splice(
                                  r.length - a.begin,
                                  a.begin - a.end + 1
                                ),
                                (r = c(r, i.digits, i).join('')),
                                o.trigger('setvalue', [
                                  r,
                                  a.begin >= r.length ? s + 1 : a.begin,
                                ]),
                                !1
                              )
                          }
                        }
                      },
                    },
                    currency: {
                      prefix: '',
                      groupSeparator: ',',
                      alias: 'numeric',
                      digits: 2,
                      digitsOptional: !1,
                    },
                    decimal: {
                      alias: 'numeric',
                    },
                    integer: {
                      alias: 'numeric',
                      inputmode: 'numeric',
                      digits: 0,
                    },
                    percentage: {
                      alias: 'numeric',
                      min: 0,
                      max: 100,
                      suffix: ' %',
                      digits: 0,
                      allowMinus: !1,
                    },
                    indianns: {
                      alias: 'numeric',
                      _mask: function (e) {
                        return (
                          '(' +
                          e.groupSeparator +
                          '99){*|1}(' +
                          e.groupSeparator +
                          '999){1|1}'
                        )
                      },
                      groupSeparator: ',',
                      radixPoint: '.',
                      placeholder: '0',
                      digits: 2,
                      digitsOptional: !1,
                    },
                  })
                },
                9380: function (e, t, a) {
                  var i
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0)
                  var n = ((i = a(8741)) && i.__esModule
                    ? i
                    : {
                        default: i,
                      }
                  ).default
                    ? window
                    : {}
                  t.default = n
                },
                7760: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.applyInputValue = c),
                    (t.clearOptionalTail = f),
                    (t.checkVal = d),
                    (t.HandleNativePlaceholder = function (e, t) {
                      var a = e ? e.inputmask : this
                      if (l.ie) {
                        if (
                          e.inputmask._valueGet() !== t &&
                          (e.placeholder !== t || '' === e.placeholder)
                        ) {
                          var i = o.getBuffer.call(a).slice(),
                            n = e.inputmask._valueGet()
                          if (n !== t) {
                            var r = o.getLastValidPosition.call(a)
                            ;-1 === r &&
                            n === o.getBufferTemplate.call(a).join('')
                              ? (i = [])
                              : -1 !== r && f.call(a, i),
                              p(e, i)
                          }
                        }
                      } else
                        e.placeholder !== t &&
                          ((e.placeholder = t),
                          '' === e.placeholder &&
                            e.removeAttribute('placeholder'))
                    }),
                    (t.unmaskedvalue = function (e) {
                      var t = e ? e.inputmask : this,
                        a = t.opts,
                        i = t.maskset
                      if (e) {
                        if (void 0 === e.inputmask) return e.value
                        e.inputmask &&
                          e.inputmask.refreshValue &&
                          c(e, e.inputmask._valueGet(!0))
                      }
                      var n = [],
                        r = i.validPositions
                      for (var s in r)
                        r[s] &&
                          r[s].match &&
                          (1 != r[s].match.static ||
                            (Array.isArray(i.metadata) &&
                              !0 !== r[s].generatedInput)) &&
                          n.push(r[s].input)
                      var l =
                        0 === n.length
                          ? ''
                          : (t.isRTL ? n.reverse() : n).join('')
                      if ('function' == typeof a.onUnMask) {
                        var u = (
                          t.isRTL
                            ? o.getBuffer.call(t).slice().reverse()
                            : o.getBuffer.call(t)
                        ).join('')
                        l = a.onUnMask.call(t, u, l, a)
                      }
                      return l
                    }),
                    (t.writeBuffer = p)
                  var i,
                    n =
                      (i = a(4528)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          },
                    r = a(4713),
                    o = a(8711),
                    s = a(7215),
                    l = a(9845),
                    u = a(6030)
                  function c(e, t) {
                    var a = e ? e.inputmask : this,
                      i = a.opts
                    ;(e.inputmask.refreshValue = !1),
                      'function' == typeof i.onBeforeMask &&
                        (t = i.onBeforeMask.call(a, t, i) || t),
                      d(e, !0, !1, (t = t.toString().split(''))),
                      (a.undoValue = a._valueGet(!0)),
                      (i.clearMaskOnLostFocus || i.clearIncomplete) &&
                        e.inputmask._valueGet() ===
                          o.getBufferTemplate.call(a).join('') &&
                        -1 === o.getLastValidPosition.call(a) &&
                        e.inputmask._valueSet('')
                  }
                  function f(e) {
                    e.length = 0
                    for (
                      var t,
                        a = r.getMaskTemplate.call(this, !0, 0, !0, void 0, !0);
                      void 0 !== (t = a.shift());

                    )
                      e.push(t)
                    return e
                  }
                  function d(e, t, a, i, n) {
                    var l = e ? e.inputmask : this,
                      c = l.maskset,
                      f = l.opts,
                      d = l.dependencyLib,
                      h = i.slice(),
                      v = '',
                      m = -1,
                      g = void 0,
                      k = f.skipOptionalPartCharacter
                    ;(f.skipOptionalPartCharacter = ''),
                      o.resetMaskSet.call(l),
                      (c.tests = {}),
                      (m = f.radixPoint
                        ? o.determineNewCaretPosition.call(
                            l,
                            {
                              begin: 0,
                              end: 0,
                            },
                            !1,
                            !1 === f.__financeInput ? 'radixFocus' : void 0
                          ).begin
                        : 0),
                      (c.p = m),
                      (l.caretPos = {
                        begin: m,
                      })
                    var y = [],
                      b = l.caretPos
                    if (
                      (h.forEach(function (e, t) {
                        if (void 0 !== e) {
                          var i = new d.Event('_checkval')
                          ;(i.which = e.toString().charCodeAt(0)), (v += e)
                          var n = o.getLastValidPosition.call(l, void 0, !0)
                          !(function (e, t) {
                            for (
                              var a = r.getMaskTemplate
                                  .call(l, !0, 0)
                                  .slice(e, o.seekNext.call(l, e, !1, !1))
                                  .join('')
                                  .replace(/'/g, ''),
                                i = a.indexOf(t);
                              i > 0 && ' ' === a[i - 1];

                            )
                              i--
                            var n =
                              0 === i &&
                              !o.isMask.call(l, e) &&
                              (r.getTest.call(l, e).match.nativeDef ===
                                t.charAt(0) ||
                                (!0 === r.getTest.call(l, e).match.static &&
                                  r.getTest.call(l, e).match.nativeDef ===
                                    "'" + t.charAt(0)) ||
                                (' ' === r.getTest.call(l, e).match.nativeDef &&
                                  (r.getTest.call(l, e + 1).match.nativeDef ===
                                    t.charAt(0) ||
                                    (!0 ===
                                      r.getTest.call(l, e + 1).match.static &&
                                      r.getTest.call(l, e + 1).match
                                        .nativeDef ===
                                        "'" + t.charAt(0)))))
                            if (!n && i > 0 && !o.isMask.call(l, e, !1, !0)) {
                              var s = o.seekNext.call(l, e)
                              l.caretPos.begin < s &&
                                (l.caretPos = {
                                  begin: s,
                                })
                            }
                            return n
                          })(m, v)
                            ? (g = u.EventHandlers.keypressEvent.call(
                                l,
                                i,
                                !0,
                                !1,
                                a,
                                l.caretPos.begin
                              )) && ((m = l.caretPos.begin + 1), (v = ''))
                            : (g = u.EventHandlers.keypressEvent.call(
                                l,
                                i,
                                !0,
                                !1,
                                a,
                                n + 1
                              )),
                            g
                              ? (void 0 !== g.pos &&
                                  c.validPositions[g.pos] &&
                                  !0 === c.validPositions[g.pos].match.static &&
                                  void 0 ===
                                    c.validPositions[g.pos].alternation &&
                                  (y.push(g.pos),
                                  l.isRTL || (g.forwardPosition = g.pos + 1)),
                                p.call(
                                  l,
                                  void 0,
                                  o.getBuffer.call(l),
                                  g.forwardPosition,
                                  i,
                                  !1
                                ),
                                (l.caretPos = {
                                  begin: g.forwardPosition,
                                  end: g.forwardPosition,
                                }),
                                (b = l.caretPos))
                              : void 0 === c.validPositions[t] &&
                                h[t] === r.getPlaceholder.call(l, t) &&
                                o.isMask.call(l, t, !0)
                              ? l.caretPos.begin++
                              : (l.caretPos = b)
                        }
                      }),
                      y.length > 0)
                    ) {
                      var x,
                        P,
                        E = o.seekNext.call(l, -1, void 0, !1)
                      if (
                        (!s.isComplete.call(l, o.getBuffer.call(l)) &&
                          y.length <= E) ||
                        (s.isComplete.call(l, o.getBuffer.call(l)) &&
                          y.length > 0 &&
                          y.length !== E &&
                          0 === y[0])
                      )
                        for (var S = E; void 0 !== (x = y.shift()); ) {
                          var _ = new d.Event('_checkval')
                          if (
                            (((P = c.validPositions[x]).generatedInput = !0),
                            (_.which = P.input.charCodeAt(0)),
                            (g = u.EventHandlers.keypressEvent.call(
                              l,
                              _,
                              !0,
                              !1,
                              a,
                              S
                            )) &&
                              void 0 !== g.pos &&
                              g.pos !== x &&
                              c.validPositions[g.pos] &&
                              !0 === c.validPositions[g.pos].match.static)
                          )
                            y.push(g.pos)
                          else if (!g) break
                          S++
                        }
                    }
                    t &&
                      p.call(
                        l,
                        e,
                        o.getBuffer.call(l),
                        g ? g.forwardPosition : l.caretPos.begin,
                        n || new d.Event('checkval'),
                        n &&
                          'input' === n.type &&
                          l.undoValue !== l._valueGet(!0)
                      ),
                      (f.skipOptionalPartCharacter = k)
                  }
                  function p(e, t, a, i, r) {
                    var l = e ? e.inputmask : this,
                      u = l.opts,
                      c = l.dependencyLib
                    if (i && 'function' == typeof u.onBeforeWrite) {
                      var f = u.onBeforeWrite.call(l, i, t, a, u)
                      if (f) {
                        if (f.refreshFromBuffer) {
                          var d = f.refreshFromBuffer
                          s.refreshFromBuffer.call(
                            l,
                            !0 === d ? d : d.start,
                            d.end,
                            f.buffer || t
                          ),
                            (t = o.getBuffer.call(l, !0))
                        }
                        void 0 !== a && (a = void 0 !== f.caret ? f.caret : a)
                      }
                    }
                    if (
                      void 0 !== e &&
                      (e.inputmask._valueSet(t.join('')),
                      void 0 === a ||
                        (void 0 !== i && 'blur' === i.type) ||
                        o.caret.call(
                          l,
                          e,
                          a,
                          void 0,
                          void 0,
                          void 0 !== i &&
                            'keydown' === i.type &&
                            (i.keyCode === n.default.DELETE ||
                              i.keyCode === n.default.BACKSPACE)
                        ),
                      !0 === r)
                    ) {
                      var p = c(e),
                        h = e.inputmask._valueGet()
                      ;(e.inputmask.skipInputEvent = !0),
                        p.trigger('input'),
                        setTimeout(function () {
                          h === o.getBufferTemplate.call(l).join('')
                            ? p.trigger('cleared')
                            : !0 === s.isComplete.call(l, t) &&
                              p.trigger('complete')
                        }, 0)
                    }
                  }
                },
                2394: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = void 0),
                    a(7149),
                    a(3194)
                  var i = a(157),
                    n = m(a(4963)),
                    r = m(a(9380)),
                    o = a(2391),
                    s = a(4713),
                    l = a(8711),
                    u = a(7215),
                    c = a(7760),
                    f = a(9716),
                    d = m(a(7392)),
                    p = m(a(3976)),
                    h = m(a(8741))
                  function v(e) {
                    return (v =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e
                          })(e)
                  }
                  function m(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var g = r.default.document,
                    k = '_inputmask_opts'
                  function y(e, t, a) {
                    if (h.default) {
                      if (!(this instanceof y)) return new y(e, t, a)
                      ;(this.dependencyLib = n.default),
                        (this.el = void 0),
                        (this.events = {}),
                        (this.maskset = void 0),
                        !0 !== a &&
                          ('[object Object]' ===
                          Object.prototype.toString.call(e)
                            ? (t = e)
                            : ((t = t || {}), e && (t.alias = e)),
                          (this.opts = n.default.extend(
                            !0,
                            {},
                            this.defaults,
                            t
                          )),
                          (this.noMasksCache = t && void 0 !== t.definitions),
                          (this.userOptions = t || {}),
                          b(this.opts.alias, t, this.opts)),
                        (this.refreshValue = !1),
                        (this.undoValue = void 0),
                        (this.$el = void 0),
                        (this.skipKeyPressEvent = !1),
                        (this.skipInputEvent = !1),
                        (this.validationEvent = !1),
                        (this.ignorable = !1),
                        this.maxLength,
                        (this.mouseEnter = !1),
                        (this.originalPlaceholder = void 0),
                        (this.isComposing = !1)
                    }
                  }
                  function b(e, t, a) {
                    var i = y.prototype.aliases[e]
                    return i
                      ? (i.alias && b(i.alias, void 0, a),
                        n.default.extend(!0, a, i),
                        n.default.extend(!0, a, t),
                        !0)
                      : (null === a.mask && (a.mask = e), !1)
                  }
                  ;(y.prototype = {
                    dataAttribute: 'data-inputmask',
                    defaults: p.default,
                    definitions: d.default,
                    aliases: {},
                    masksCache: {},
                    get isRTL() {
                      return this.opts.isRTL || this.opts.numericInput
                    },
                    mask: function (e) {
                      var t = this
                      return (
                        'string' == typeof e &&
                          (e = g.getElementById(e) || g.querySelectorAll(e)),
                        (e = e.nodeName
                          ? [e]
                          : Array.isArray(e)
                          ? e
                          : Array.from(e)).forEach(function (e, a) {
                          var s = n.default.extend(!0, {}, t.opts)
                          if (
                            (function (e, t, a, i) {
                              function o(t, n) {
                                var o = '' === i ? t : i + '-' + t
                                null !==
                                  (n = void 0 !== n ? n : e.getAttribute(o)) &&
                                  ('string' == typeof n &&
                                    (0 === t.indexOf('on')
                                      ? (n = r.default[n])
                                      : 'false' === n
                                      ? (n = !1)
                                      : 'true' === n && (n = !0)),
                                  (a[t] = n))
                              }
                              if (!0 === t.importDataAttributes) {
                                var s,
                                  l,
                                  u,
                                  c,
                                  f = e.getAttribute(i)
                                if (
                                  (f &&
                                    '' !== f &&
                                    ((f = f.replace(/'/g, '"')),
                                    (l = JSON.parse('{' + f + '}'))),
                                  l)
                                )
                                  for (c in ((u = void 0), l))
                                    if ('alias' === c.toLowerCase()) {
                                      u = l[c]
                                      break
                                    }
                                for (s in (o('alias', u),
                                a.alias && b(a.alias, a, t),
                                t)) {
                                  if (l)
                                    for (c in ((u = void 0), l))
                                      if (c.toLowerCase() === s.toLowerCase()) {
                                        u = l[c]
                                        break
                                      }
                                  o(s, u)
                                }
                              }
                              n.default.extend(!0, t, a),
                                ('rtl' === e.dir || t.rightAlign) &&
                                  (e.style.textAlign = 'right')
                              ;('rtl' === e.dir || t.numericInput) &&
                                ((e.dir = 'ltr'),
                                e.removeAttribute('dir'),
                                (t.isRTL = !0))
                              return Object.keys(a).length
                            })(
                              e,
                              s,
                              n.default.extend(!0, {}, t.userOptions),
                              t.dataAttribute
                            )
                          ) {
                            var l = (0, o.generateMaskSet)(s, t.noMasksCache)
                            void 0 !== l &&
                              (void 0 !== e.inputmask &&
                                ((e.inputmask.opts.autoUnmask = !0),
                                e.inputmask.remove()),
                              (e.inputmask = new y(void 0, void 0, !0)),
                              (e.inputmask.opts = s),
                              (e.inputmask.noMasksCache = t.noMasksCache),
                              (e.inputmask.userOptions = n.default.extend(
                                !0,
                                {},
                                t.userOptions
                              )),
                              (e.inputmask.el = e),
                              (e.inputmask.$el = (0, n.default)(e)),
                              (e.inputmask.maskset = l),
                              n.default.data(e, k, t.userOptions),
                              i.mask.call(e.inputmask))
                          }
                        }),
                        (e && e[0] && e[0].inputmask) || this
                      )
                    },
                    option: function (e, t) {
                      return 'string' == typeof e
                        ? this.opts[e]
                        : 'object' === v(e)
                        ? (n.default.extend(this.userOptions, e),
                          this.el && !0 !== t && this.mask(this.el),
                          this)
                        : void 0
                    },
                    unmaskedvalue: function (e) {
                      if (
                        ((this.maskset =
                          this.maskset ||
                          (0, o.generateMaskSet)(this.opts, this.noMasksCache)),
                        void 0 === this.el || void 0 !== e)
                      ) {
                        var t = (
                          ('function' == typeof this.opts.onBeforeMask &&
                            this.opts.onBeforeMask.call(this, e, this.opts)) ||
                          e
                        ).split('')
                        c.checkVal.call(this, void 0, !1, !1, t),
                          'function' == typeof this.opts.onBeforeWrite &&
                            this.opts.onBeforeWrite.call(
                              this,
                              void 0,
                              l.getBuffer.call(this),
                              0,
                              this.opts
                            )
                      }
                      return c.unmaskedvalue.call(this, this.el)
                    },
                    remove: function () {
                      if (this.el) {
                        n.default.data(this.el, k, null)
                        var e = this.opts.autoUnmask
                          ? (0, c.unmaskedvalue)(this.el)
                          : this._valueGet(this.opts.autoUnmask)
                        e !== l.getBufferTemplate.call(this).join('')
                          ? this._valueSet(e, this.opts.autoUnmask)
                          : this._valueSet(''),
                          f.EventRuler.off(this.el),
                          Object.getOwnPropertyDescriptor &&
                          Object.getPrototypeOf
                            ? Object.getOwnPropertyDescriptor(
                                Object.getPrototypeOf(this.el),
                                'value'
                              ) &&
                              this.__valueGet &&
                              Object.defineProperty(this.el, 'value', {
                                get: this.__valueGet,
                                set: this.__valueSet,
                                configurable: !0,
                              })
                            : g.__lookupGetter__ &&
                              this.el.__lookupGetter__('value') &&
                              this.__valueGet &&
                              (this.el.__defineGetter__(
                                'value',
                                this.__valueGet
                              ),
                              this.el.__defineSetter__(
                                'value',
                                this.__valueSet
                              )),
                          (this.el.inputmask = void 0)
                      }
                      return this.el
                    },
                    getemptymask: function () {
                      return (
                        (this.maskset =
                          this.maskset ||
                          (0, o.generateMaskSet)(this.opts, this.noMasksCache)),
                        l.getBufferTemplate.call(this).join('')
                      )
                    },
                    hasMaskedValue: function () {
                      return !this.opts.autoUnmask
                    },
                    isComplete: function () {
                      return (
                        (this.maskset =
                          this.maskset ||
                          (0, o.generateMaskSet)(this.opts, this.noMasksCache)),
                        u.isComplete.call(this, l.getBuffer.call(this))
                      )
                    },
                    getmetadata: function () {
                      if (
                        ((this.maskset =
                          this.maskset ||
                          (0, o.generateMaskSet)(this.opts, this.noMasksCache)),
                        Array.isArray(this.maskset.metadata))
                      ) {
                        var e = s.getMaskTemplate.call(this, !0, 0, !1).join('')
                        return (
                          this.maskset.metadata.forEach(function (t) {
                            return t.mask !== e || ((e = t), !1)
                          }),
                          e
                        )
                      }
                      return this.maskset.metadata
                    },
                    isValid: function (e) {
                      if (
                        ((this.maskset =
                          this.maskset ||
                          (0, o.generateMaskSet)(this.opts, this.noMasksCache)),
                        e)
                      ) {
                        var t = (
                          ('function' == typeof this.opts.onBeforeMask &&
                            this.opts.onBeforeMask.call(this, e, this.opts)) ||
                          e
                        ).split('')
                        c.checkVal.call(this, void 0, !0, !1, t)
                      } else
                        e = this.isRTL
                          ? l.getBuffer.call(this).slice().reverse().join('')
                          : l.getBuffer.call(this).join('')
                      for (
                        var a = l.getBuffer.call(this),
                          i = l.determineLastRequiredPosition.call(this),
                          n = a.length - 1;
                        n > i && !l.isMask.call(this, n);
                        n--
                      );
                      return (
                        a.splice(i, n + 1 - i),
                        u.isComplete.call(this, a) &&
                          e ===
                            (this.isRTL
                              ? l.getBuffer
                                  .call(this)
                                  .slice()
                                  .reverse()
                                  .join('')
                              : l.getBuffer.call(this).join(''))
                      )
                    },
                    format: function (e, t) {
                      this.maskset =
                        this.maskset ||
                        (0, o.generateMaskSet)(this.opts, this.noMasksCache)
                      var a = (
                        ('function' == typeof this.opts.onBeforeMask &&
                          this.opts.onBeforeMask.call(this, e, this.opts)) ||
                        e
                      ).split('')
                      c.checkVal.call(this, void 0, !0, !1, a)
                      var i = this.isRTL
                        ? l.getBuffer.call(this).slice().reverse().join('')
                        : l.getBuffer.call(this).join('')
                      return t
                        ? {
                            value: i,
                            metadata: this.getmetadata(),
                          }
                        : i
                    },
                    setValue: function (e) {
                      this.el &&
                        (0, n.default)(this.el).trigger('setvalue', [e])
                    },
                    analyseMask: o.analyseMask,
                  }),
                    (y.extendDefaults = function (e) {
                      n.default.extend(!0, y.prototype.defaults, e)
                    }),
                    (y.extendDefinitions = function (e) {
                      n.default.extend(!0, y.prototype.definitions, e)
                    }),
                    (y.extendAliases = function (e) {
                      n.default.extend(!0, y.prototype.aliases, e)
                    }),
                    (y.format = function (e, t, a) {
                      return y(t).format(e, a)
                    }),
                    (y.unmask = function (e, t) {
                      return y(t).unmaskedvalue(e)
                    }),
                    (y.isValid = function (e, t) {
                      return y(t).isValid(e)
                    }),
                    (y.remove = function (e) {
                      'string' == typeof e &&
                        (e = g.getElementById(e) || g.querySelectorAll(e)),
                        (e = e.nodeName ? [e] : e).forEach(function (e) {
                          e.inputmask && e.inputmask.remove()
                        })
                    }),
                    (y.setValue = function (e, t) {
                      'string' == typeof e &&
                        (e = g.getElementById(e) || g.querySelectorAll(e)),
                        (e = e.nodeName ? [e] : e).forEach(function (e) {
                          e.inputmask
                            ? e.inputmask.setValue(t)
                            : (0, n.default)(e).trigger('setvalue', [t])
                        })
                    }),
                    (y.dependencyLib = n.default),
                    (r.default.Inputmask = y)
                  var x = y
                  t.default = x
                },
                5296: function (e, t, a) {
                  function i(e) {
                    return (i =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e
                          })(e)
                  }
                  var n = p(a(9380)),
                    r = p(a(2394)),
                    o = p(a(8741))
                  function s(e, t) {
                    return !t || ('object' !== i(t) && 'function' != typeof t)
                      ? (function (e) {
                          if (void 0 === e)
                            throw new ReferenceError(
                              "this hasn't been initialised - super() hasn't been called"
                            )
                          return e
                        })(e)
                      : t
                  }
                  function l(e) {
                    var t = 'function' == typeof Map ? new Map() : void 0
                    return (l = function (e) {
                      if (
                        null === e ||
                        ((a = e),
                        -1 ===
                          Function.toString.call(a).indexOf('[native code]'))
                      )
                        return e
                      var a
                      if ('function' != typeof e)
                        throw new TypeError(
                          'Super expression must either be null or a function'
                        )
                      if (void 0 !== t) {
                        if (t.has(e)) return t.get(e)
                        t.set(e, i)
                      }
                      function i() {
                        return u(e, arguments, d(this).constructor)
                      }
                      return (
                        (i.prototype = Object.create(e.prototype, {
                          constructor: {
                            value: i,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                        f(i, e)
                      )
                    })(e)
                  }
                  function u(e, t, a) {
                    return (u = c()
                      ? Reflect.construct
                      : function (e, t, a) {
                          var i = [null]
                          i.push.apply(i, t)
                          var n = new (Function.bind.apply(e, i))()
                          return a && f(n, a.prototype), n
                        }).apply(null, arguments)
                  }
                  function c() {
                    if ('undefined' == typeof Reflect || !Reflect.construct)
                      return !1
                    if (Reflect.construct.sham) return !1
                    if ('function' == typeof Proxy) return !0
                    try {
                      return (
                        Boolean.prototype.valueOf.call(
                          Reflect.construct(Boolean, [], function () {})
                        ),
                        !0
                      )
                    } catch (e) {
                      return !1
                    }
                  }
                  function f(e, t) {
                    return (f =
                      Object.setPrototypeOf ||
                      function (e, t) {
                        return (e.__proto__ = t), e
                      })(e, t)
                  }
                  function d(e) {
                    return (d = Object.setPrototypeOf
                      ? Object.getPrototypeOf
                      : function (e) {
                          return e.__proto__ || Object.getPrototypeOf(e)
                        })(e)
                  }
                  function p(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                  var h = n.default.document
                  if (
                    o.default &&
                    h &&
                    h.head &&
                    h.head.attachShadow &&
                    n.default.customElements &&
                    void 0 === n.default.customElements.get('input-mask')
                  ) {
                    var v = (function (e) {
                      !(function (e, t) {
                        if ('function' != typeof t && null !== t)
                          throw new TypeError(
                            'Super expression must either be null or a function'
                          )
                        ;(e.prototype = Object.create(t && t.prototype, {
                          constructor: {
                            value: e,
                            writable: !0,
                            configurable: !0,
                          },
                        })),
                          t && f(e, t)
                      })(n, e)
                      var t,
                        a,
                        i =
                          ((t = n),
                          (a = c()),
                          function () {
                            var e,
                              i = d(t)
                            if (a) {
                              var n = d(this).constructor
                              e = Reflect.construct(i, arguments, n)
                            } else e = i.apply(this, arguments)
                            return s(this, e)
                          })
                      function n() {
                        var e
                        !(function (e, t) {
                          if (!(e instanceof t))
                            throw new TypeError(
                              'Cannot call a class as a function'
                            )
                        })(this, n)
                        var t = (e = i.call(this)).getAttributeNames(),
                          a = e.attachShadow({
                            mode: 'closed',
                          }),
                          o = h.createElement('input')
                        for (var s in ((o.type = 'text'), a.appendChild(o), t))
                          Object.prototype.hasOwnProperty.call(t, s) &&
                            o.setAttribute(t[s], e.getAttribute(t[s]))
                        var l = new r.default()
                        return (
                          (l.dataAttribute = ''),
                          l.mask(o),
                          (o.inputmask.shadowRoot = a),
                          e
                        )
                      }
                      return n
                    })(l(HTMLElement))
                    n.default.customElements.define('input-mask', v)
                  }
                },
                2391: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.generateMaskSet = function (e, t) {
                      var a
                      function n(e, a, n) {
                        var r,
                          o,
                          s = !1
                        if (
                          ((null !== e && '' !== e) ||
                            ((s = null !== n.regex)
                              ? (e = (e = n.regex).replace(
                                  /^(\^)(.*)(\$)$/,
                                  '$2'
                                ))
                              : ((s = !0), (e = '.*'))),
                          1 === e.length &&
                            !1 === n.greedy &&
                            0 !== n.repeat &&
                            (n.placeholder = ''),
                          n.repeat > 0 || '*' === n.repeat || '+' === n.repeat)
                        ) {
                          var l =
                            '*' === n.repeat
                              ? 0
                              : '+' === n.repeat
                              ? 1
                              : n.repeat
                          e =
                            n.groupmarker[0] +
                            e +
                            n.groupmarker[1] +
                            n.quantifiermarker[0] +
                            l +
                            ',' +
                            n.repeat +
                            n.quantifiermarker[1]
                        }
                        return (
                          (o = s
                            ? 'regex_' + n.regex
                            : n.numericInput
                            ? e.split('').reverse().join('')
                            : e),
                          !1 !== n.keepStatic && (o = 'ks_' + o),
                          void 0 === Inputmask.prototype.masksCache[o] ||
                          !0 === t
                            ? ((r = {
                                mask: e,
                                maskToken: Inputmask.prototype.analyseMask(
                                  e,
                                  s,
                                  n
                                ),
                                validPositions: {},
                                _buffer: void 0,
                                buffer: void 0,
                                tests: {},
                                excludes: {},
                                metadata: a,
                                maskLength: void 0,
                                jitOffset: {},
                              }),
                              !0 !== t &&
                                ((Inputmask.prototype.masksCache[o] = r),
                                (r = i.default.extend(
                                  !0,
                                  {},
                                  Inputmask.prototype.masksCache[o]
                                ))))
                            : (r = i.default.extend(
                                !0,
                                {},
                                Inputmask.prototype.masksCache[o]
                              )),
                          r
                        )
                      }
                      'function' == typeof e.mask && (e.mask = e.mask(e))
                      if (Array.isArray(e.mask)) {
                        if (e.mask.length > 1) {
                          null === e.keepStatic && (e.keepStatic = !0)
                          var r = e.groupmarker[0]
                          return (
                            (e.isRTL ? e.mask.reverse() : e.mask).forEach(
                              function (t) {
                                r.length > 1 &&
                                  (r +=
                                    e.groupmarker[1] +
                                    e.alternatormarker +
                                    e.groupmarker[0]),
                                  void 0 !== t.mask &&
                                  'function' != typeof t.mask
                                    ? (r += t.mask)
                                    : (r += t)
                              }
                            ),
                            n((r += e.groupmarker[1]), e.mask, e)
                          )
                        }
                        e.mask = e.mask.pop()
                      }
                      null === e.keepStatic && (e.keepStatic = !1)
                      a =
                        e.mask &&
                        void 0 !== e.mask.mask &&
                        'function' != typeof e.mask.mask
                          ? n(e.mask.mask, e.mask, e)
                          : n(e.mask, e.mask, e)
                      return a
                    }),
                    (t.analyseMask = function (e, t, a) {
                      var i,
                        r,
                        o,
                        s,
                        l,
                        u,
                        c =
                          /(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g,
                        f =
                          /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,
                        d = !1,
                        p = new n.default(),
                        h = [],
                        v = [],
                        m = !1
                      function g(e, i, n) {
                        n = void 0 !== n ? n : e.matches.length
                        var r = e.matches[n - 1]
                        if (t)
                          0 === i.indexOf('[') ||
                          (d && /\\d|\\s|\\w]/i.test(i)) ||
                          '.' === i
                            ? e.matches.splice(n++, 0, {
                                fn: new RegExp(i, a.casing ? 'i' : ''),
                                static: !1,
                                optionality: !1,
                                newBlockMarker:
                                  void 0 === r ? 'master' : r.def !== i,
                                casing: null,
                                def: i,
                                placeholder: void 0,
                                nativeDef: i,
                              })
                            : (d && (i = i[i.length - 1]),
                              i.split('').forEach(function (t, i) {
                                ;(r = e.matches[n - 1]),
                                  e.matches.splice(n++, 0, {
                                    fn: /[a-z]/i.test(
                                      a.staticDefinitionSymbol || t
                                    )
                                      ? new RegExp(
                                          '[' +
                                            (a.staticDefinitionSymbol || t) +
                                            ']',
                                          a.casing ? 'i' : ''
                                        )
                                      : null,
                                    static: !0,
                                    optionality: !1,
                                    newBlockMarker:
                                      void 0 === r
                                        ? 'master'
                                        : r.def !== t && !0 !== r.static,
                                    casing: null,
                                    def: a.staticDefinitionSymbol || t,
                                    placeholder:
                                      void 0 !== a.staticDefinitionSymbol
                                        ? t
                                        : void 0,
                                    nativeDef: (d ? "'" : '') + t,
                                  })
                              })),
                            (d = !1)
                        else {
                          var o =
                            (a.definitions && a.definitions[i]) ||
                            (a.usePrototypeDefinitions &&
                              Inputmask.prototype.definitions[i])
                          o && !d
                            ? e.matches.splice(n++, 0, {
                                fn: o.validator
                                  ? 'string' == typeof o.validator
                                    ? new RegExp(
                                        o.validator,
                                        a.casing ? 'i' : ''
                                      )
                                    : new (function () {
                                        this.test = o.validator
                                      })()
                                  : new RegExp('.'),
                                static: o.static || !1,
                                optionality: !1,
                                newBlockMarker:
                                  void 0 === r
                                    ? 'master'
                                    : r.def !== (o.definitionSymbol || i),
                                casing: o.casing,
                                def: o.definitionSymbol || i,
                                placeholder: o.placeholder,
                                nativeDef: i,
                                generated: o.generated,
                              })
                            : (e.matches.splice(n++, 0, {
                                fn: /[a-z]/i.test(a.staticDefinitionSymbol || i)
                                  ? new RegExp(
                                      '[' +
                                        (a.staticDefinitionSymbol || i) +
                                        ']',
                                      a.casing ? 'i' : ''
                                    )
                                  : null,
                                static: !0,
                                optionality: !1,
                                newBlockMarker:
                                  void 0 === r
                                    ? 'master'
                                    : r.def !== i && !0 !== r.static,
                                casing: null,
                                def: a.staticDefinitionSymbol || i,
                                placeholder:
                                  void 0 !== a.staticDefinitionSymbol
                                    ? i
                                    : void 0,
                                nativeDef: (d ? "'" : '') + i,
                              }),
                              (d = !1))
                        }
                      }
                      function k() {
                        if (h.length > 0) {
                          if ((g((s = h[h.length - 1]), r), s.isAlternator)) {
                            l = h.pop()
                            for (var e = 0; e < l.matches.length; e++)
                              l.matches[e].isGroup &&
                                (l.matches[e].isGroup = !1)
                            h.length > 0
                              ? (s = h[h.length - 1]).matches.push(l)
                              : p.matches.push(l)
                          }
                        } else g(p, r)
                      }
                      function y(e) {
                        var t = new n.default(!0)
                        return (t.openGroup = !1), (t.matches = e), t
                      }
                      function b() {
                        if ((((o = h.pop()).openGroup = !1), void 0 !== o))
                          if (h.length > 0) {
                            if (
                              ((s = h[h.length - 1]).matches.push(o),
                              s.isAlternator)
                            ) {
                              l = h.pop()
                              for (var e = 0; e < l.matches.length; e++)
                                (l.matches[e].isGroup = !1),
                                  (l.matches[e].alternatorGroup = !1)
                              h.length > 0
                                ? (s = h[h.length - 1]).matches.push(l)
                                : p.matches.push(l)
                            }
                          } else p.matches.push(o)
                        else k()
                      }
                      function x(e) {
                        var t = e.pop()
                        return t.isQuantifier && (t = y([e.pop(), t])), t
                      }
                      t &&
                        ((a.optionalmarker[0] = void 0),
                        (a.optionalmarker[1] = void 0))
                      for (; (i = t ? f.exec(e) : c.exec(e)); ) {
                        if (((r = i[0]), t))
                          switch (r.charAt(0)) {
                            case '?':
                              r = '{0,1}'
                              break

                            case '+':
                            case '*':
                              r = '{' + r + '}'
                              break

                            case '|':
                              if (0 === h.length) {
                                var P = y(p.matches)
                                ;(P.openGroup = !0),
                                  h.push(P),
                                  (p.matches = []),
                                  (m = !0)
                              }
                          }
                        if (d) k()
                        else
                          switch (r.charAt(0)) {
                            case '$':
                            case '^':
                              t || k()
                              break

                            case '(?=':
                            case '(?!':
                            case '(?<=':
                            case '(?<!':
                              h.push(new n.default(!0))
                              break

                            case a.escapeChar:
                              ;(d = !0), t && k()
                              break

                            case a.optionalmarker[1]:
                            case a.groupmarker[1]:
                              b()
                              break

                            case a.optionalmarker[0]:
                              h.push(new n.default(!1, !0))
                              break

                            case a.groupmarker[0]:
                              h.push(new n.default(!0))
                              break

                            case a.quantifiermarker[0]:
                              var E = new n.default(!1, !1, !0),
                                S = (r = r.replace(/[{}]/g, '')).split('|'),
                                _ = S[0].split(','),
                                M = isNaN(_[0]) ? _[0] : parseInt(_[0]),
                                w =
                                  1 === _.length
                                    ? M
                                    : isNaN(_[1])
                                    ? _[1]
                                    : parseInt(_[1]),
                                O = isNaN(S[1]) ? S[1] : parseInt(S[1])
                              ;('*' !== M && '+' !== M) ||
                                (M = '*' === w ? 0 : 1),
                                (E.quantifier = {
                                  min: M,
                                  max: w,
                                  jit: O,
                                })
                              var T =
                                h.length > 0
                                  ? h[h.length - 1].matches
                                  : p.matches
                              if ((i = T.pop()).isAlternator) {
                                T.push(i), (T = i.matches)
                                var C = new n.default(!0),
                                  A = T.pop()
                                T.push(C), (T = C.matches), (i = A)
                              }
                              i.isGroup || (i = y([i])), T.push(i), T.push(E)
                              break

                            case a.alternatormarker:
                              if (h.length > 0) {
                                var D = (s = h[h.length - 1]).matches[
                                  s.matches.length - 1
                                ]
                                u =
                                  s.openGroup &&
                                  (void 0 === D.matches ||
                                    (!1 === D.isGroup && !1 === D.isAlternator))
                                    ? h.pop()
                                    : x(s.matches)
                              } else u = x(p.matches)
                              if (u.isAlternator) h.push(u)
                              else if (
                                (u.alternatorGroup
                                  ? ((l = h.pop()), (u.alternatorGroup = !1))
                                  : (l = new n.default(!1, !1, !1, !0)),
                                l.matches.push(u),
                                h.push(l),
                                u.openGroup)
                              ) {
                                u.openGroup = !1
                                var B = new n.default(!0)
                                ;(B.alternatorGroup = !0), h.push(B)
                              }
                              break

                            default:
                              k()
                          }
                      }
                      m && b()
                      for (; h.length > 0; ) (o = h.pop()), p.matches.push(o)
                      p.matches.length > 0 &&
                        (!(function e(i) {
                          i &&
                            i.matches &&
                            i.matches.forEach(function (n, r) {
                              var o = i.matches[r + 1]
                              ;(void 0 === o ||
                                void 0 === o.matches ||
                                !1 === o.isQuantifier) &&
                                n &&
                                n.isGroup &&
                                ((n.isGroup = !1),
                                t ||
                                  (g(n, a.groupmarker[0], 0),
                                  !0 !== n.openGroup &&
                                    g(n, a.groupmarker[1]))),
                                e(n)
                            })
                        })(p),
                        v.push(p))
                      ;(a.numericInput || a.isRTL) &&
                        (function e(t) {
                          for (var i in ((t.matches = t.matches.reverse()),
                          t.matches))
                            if (
                              Object.prototype.hasOwnProperty.call(t.matches, i)
                            ) {
                              var n = parseInt(i)
                              if (
                                t.matches[i].isQuantifier &&
                                t.matches[n + 1] &&
                                t.matches[n + 1].isGroup
                              ) {
                                var r = t.matches[i]
                                t.matches.splice(i, 1),
                                  t.matches.splice(n + 1, 0, r)
                              }
                              void 0 !== t.matches[i].matches
                                ? (t.matches[i] = e(t.matches[i]))
                                : (t.matches[i] =
                                    ((o = t.matches[i]) === a.optionalmarker[0]
                                      ? (o = a.optionalmarker[1])
                                      : o === a.optionalmarker[1]
                                      ? (o = a.optionalmarker[0])
                                      : o === a.groupmarker[0]
                                      ? (o = a.groupmarker[1])
                                      : o === a.groupmarker[1] &&
                                        (o = a.groupmarker[0]),
                                    o))
                            }
                          var o
                          return t
                        })(v[0])
                      return v
                    })
                  var i = r(a(4963)),
                    n = r(a(9695))
                  function r(e) {
                    return e && e.__esModule
                      ? e
                      : {
                          default: e,
                        }
                  }
                },
                157: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.mask = function () {
                      var e = this,
                        t = this.opts,
                        a = this.el,
                        i = this.dependencyLib
                      s.EventRuler.off(a)
                      var f = (function (t, a) {
                        'textarea' !== t.tagName.toLowerCase() &&
                          a.ignorables.push(n.default.ENTER)
                        var l = t.getAttribute('type'),
                          u =
                            ('input' === t.tagName.toLowerCase() &&
                              a.supportsInputType.includes(l)) ||
                            t.isContentEditable ||
                            'textarea' === t.tagName.toLowerCase()
                        if (!u)
                          if ('input' === t.tagName.toLowerCase()) {
                            var c = document.createElement('input')
                            c.setAttribute('type', l),
                              (u = 'text' === c.type),
                              (c = null)
                          } else u = 'partial'
                        return (
                          !1 !== u
                            ? (function (t) {
                                var n, l
                                function u() {
                                  return this.inputmask
                                    ? this.inputmask.opts.autoUnmask
                                      ? this.inputmask.unmaskedvalue()
                                      : -1 !== r.getLastValidPosition.call(e) ||
                                        !0 !== a.nullable
                                      ? (
                                          this.inputmask.shadowRoot ||
                                          this.ownerDocument
                                        ).activeElement === this &&
                                        a.clearMaskOnLostFocus
                                        ? (e.isRTL
                                            ? o.clearOptionalTail
                                                .call(
                                                  e,
                                                  r.getBuffer.call(e).slice()
                                                )
                                                .reverse()
                                            : o.clearOptionalTail.call(
                                                e,
                                                r.getBuffer.call(e).slice()
                                              )
                                          ).join('')
                                        : n.call(this)
                                      : ''
                                    : n.call(this)
                                }
                                function c(e) {
                                  l.call(this, e),
                                    this.inputmask &&
                                      (0, o.applyInputValue)(this, e)
                                }
                                if (!t.inputmask.__valueGet) {
                                  if (!0 !== a.noValuePatching) {
                                    if (Object.getOwnPropertyDescriptor) {
                                      var f = Object.getPrototypeOf
                                        ? Object.getOwnPropertyDescriptor(
                                            Object.getPrototypeOf(t),
                                            'value'
                                          )
                                        : void 0
                                      f && f.get && f.set
                                        ? ((n = f.get),
                                          (l = f.set),
                                          Object.defineProperty(t, 'value', {
                                            get: u,
                                            set: c,
                                            configurable: !0,
                                          }))
                                        : 'input' !== t.tagName.toLowerCase() &&
                                          ((n = function () {
                                            return this.textContent
                                          }),
                                          (l = function (e) {
                                            this.textContent = e
                                          }),
                                          Object.defineProperty(t, 'value', {
                                            get: u,
                                            set: c,
                                            configurable: !0,
                                          }))
                                    } else
                                      document.__lookupGetter__ &&
                                        t.__lookupGetter__('value') &&
                                        ((n = t.__lookupGetter__('value')),
                                        (l = t.__lookupSetter__('value')),
                                        t.__defineGetter__('value', u),
                                        t.__defineSetter__('value', c))
                                    ;(t.inputmask.__valueGet = n),
                                      (t.inputmask.__valueSet = l)
                                  }
                                  ;(t.inputmask._valueGet = function (t) {
                                    return e.isRTL && !0 !== t
                                      ? n
                                          .call(this.el)
                                          .split('')
                                          .reverse()
                                          .join('')
                                      : n.call(this.el)
                                  }),
                                    (t.inputmask._valueSet = function (t, a) {
                                      l.call(
                                        this.el,
                                        null == t
                                          ? ''
                                          : !0 !== a && e.isRTL
                                          ? t.split('').reverse().join('')
                                          : t
                                      )
                                    }),
                                    void 0 === n &&
                                      ((n = function () {
                                        return this.value
                                      }),
                                      (l = function (e) {
                                        this.value = e
                                      }),
                                      (function (t) {
                                        if (
                                          i.valHooks &&
                                          (void 0 === i.valHooks[t] ||
                                            !0 !== i.valHooks[t].inputmaskpatch)
                                        ) {
                                          var n =
                                              i.valHooks[t] && i.valHooks[t].get
                                                ? i.valHooks[t].get
                                                : function (e) {
                                                    return e.value
                                                  },
                                            s =
                                              i.valHooks[t] && i.valHooks[t].set
                                                ? i.valHooks[t].set
                                                : function (e, t) {
                                                    return (e.value = t), e
                                                  }
                                          i.valHooks[t] = {
                                            get: function (t) {
                                              if (t.inputmask) {
                                                if (t.inputmask.opts.autoUnmask)
                                                  return t.inputmask.unmaskedvalue()
                                                var i = n(t)
                                                return -1 !==
                                                  r.getLastValidPosition.call(
                                                    e,
                                                    void 0,
                                                    void 0,
                                                    t.inputmask.maskset
                                                      .validPositions
                                                  ) || !0 !== a.nullable
                                                  ? i
                                                  : ''
                                              }
                                              return n(t)
                                            },
                                            set: function (e, t) {
                                              var a = s(e, t)
                                              return (
                                                e.inputmask &&
                                                  (0, o.applyInputValue)(e, t),
                                                a
                                              )
                                            },
                                            inputmaskpatch: !0,
                                          }
                                        }
                                      })(t.type),
                                      (function (t) {
                                        s.EventRuler.on(
                                          t,
                                          'mouseenter',
                                          function () {
                                            var t = this.inputmask._valueGet(!0)
                                            t !==
                                              (e.isRTL
                                                ? r.getBuffer.call(e).reverse()
                                                : r.getBuffer.call(e)
                                              ).join('') &&
                                              (0, o.applyInputValue)(this, t)
                                          }
                                        )
                                      })(t))
                                }
                              })(t)
                            : (t.inputmask = void 0),
                          u
                        )
                      })(a, t)
                      if (!1 !== f) {
                        ;(e.originalPlaceholder = a.placeholder),
                          (e.maxLength = void 0 !== a ? a.maxLength : void 0),
                          -1 === e.maxLength && (e.maxLength = void 0),
                          'inputMode' in a &&
                            null === a.getAttribute('inputmode') &&
                            ((a.inputMode = t.inputmode),
                            a.setAttribute('inputmode', t.inputmode)),
                          !0 === f &&
                            ((t.showMaskOnFocus =
                              t.showMaskOnFocus &&
                              -1 ===
                                ['cc-number', 'cc-exp'].indexOf(
                                  a.autocomplete
                                )),
                            l.iphone && (t.insertModeVisual = !1),
                            s.EventRuler.on(
                              a,
                              'submit',
                              c.EventHandlers.submitEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'reset',
                              c.EventHandlers.resetEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'blur',
                              c.EventHandlers.blurEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'focus',
                              c.EventHandlers.focusEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'invalid',
                              c.EventHandlers.invalidEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'click',
                              c.EventHandlers.clickEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'mouseleave',
                              c.EventHandlers.mouseleaveEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'mouseenter',
                              c.EventHandlers.mouseenterEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'paste',
                              c.EventHandlers.pasteEvent
                            ),
                            s.EventRuler.on(a, 'cut', c.EventHandlers.cutEvent),
                            s.EventRuler.on(a, 'complete', t.oncomplete),
                            s.EventRuler.on(a, 'incomplete', t.onincomplete),
                            s.EventRuler.on(a, 'cleared', t.oncleared),
                            !0 !== t.inputEventOnly &&
                              (s.EventRuler.on(
                                a,
                                'keydown',
                                c.EventHandlers.keydownEvent
                              ),
                              s.EventRuler.on(
                                a,
                                'keypress',
                                c.EventHandlers.keypressEvent
                              ),
                              s.EventRuler.on(
                                a,
                                'keyup',
                                c.EventHandlers.keyupEvent
                              )),
                            (l.mobile || t.inputEventOnly) &&
                              a.removeAttribute('maxLength'),
                            s.EventRuler.on(
                              a,
                              'input',
                              c.EventHandlers.inputFallBackEvent
                            ),
                            s.EventRuler.on(
                              a,
                              'compositionend',
                              c.EventHandlers.compositionendEvent
                            )),
                          s.EventRuler.on(
                            a,
                            'setvalue',
                            c.EventHandlers.setValueEvent
                          ),
                          r.getBufferTemplate.call(e).join(''),
                          (e.undoValue = e._valueGet(!0))
                        var d = (a.inputmask.shadowRoot || a.ownerDocument)
                          .activeElement
                        if (
                          '' !== a.inputmask._valueGet(!0) ||
                          !1 === t.clearMaskOnLostFocus ||
                          d === a
                        ) {
                          ;(0, o.applyInputValue)(
                            a,
                            a.inputmask._valueGet(!0),
                            t
                          )
                          var p = r.getBuffer.call(e).slice()
                          !1 === u.isComplete.call(e, p) &&
                            t.clearIncomplete &&
                            r.resetMaskSet.call(e),
                            t.clearMaskOnLostFocus &&
                              d !== a &&
                              (-1 === r.getLastValidPosition.call(e)
                                ? (p = [])
                                : o.clearOptionalTail.call(e, p)),
                            (!1 === t.clearMaskOnLostFocus ||
                              (t.showMaskOnFocus && d === a) ||
                              '' !== a.inputmask._valueGet(!0)) &&
                              (0, o.writeBuffer)(a, p),
                            d === a &&
                              r.caret.call(
                                e,
                                a,
                                r.seekNext.call(
                                  e,
                                  r.getLastValidPosition.call(e)
                                )
                              )
                        }
                      }
                    })
                  var i,
                    n =
                      (i = a(4528)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          },
                    r = a(8711),
                    o = a(7760),
                    s = a(9716),
                    l = a(9845),
                    u = a(7215),
                    c = a(6030)
                },
                9695: function (e, t) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.default = function (e, t, a, i) {
                      ;(this.matches = []),
                        (this.openGroup = e || !1),
                        (this.alternatorGroup = !1),
                        (this.isGroup = e || !1),
                        (this.isOptional = t || !1),
                        (this.isQuantifier = a || !1),
                        (this.isAlternator = i || !1),
                        (this.quantifier = {
                          min: 1,
                          max: 1,
                        })
                    })
                },
                3194: function () {
                  Array.prototype.includes ||
                    Object.defineProperty(Array.prototype, 'includes', {
                      value: function (e, t) {
                        if (null == this)
                          throw new TypeError('"this" is null or not defined')
                        var a = Object(this),
                          i = a.length >>> 0
                        if (0 === i) return !1
                        for (
                          var n = 0 | t,
                            r = Math.max(n >= 0 ? n : i - Math.abs(n), 0);
                          r < i;

                        ) {
                          if (a[r] === e) return !0
                          r++
                        }
                        return !1
                      },
                    })
                },
                7149: function () {
                  function e(t) {
                    return (e =
                      'function' == typeof Symbol &&
                      'symbol' == typeof Symbol.iterator
                        ? function (e) {
                            return typeof e
                          }
                        : function (e) {
                            return e &&
                              'function' == typeof Symbol &&
                              e.constructor === Symbol &&
                              e !== Symbol.prototype
                              ? 'symbol'
                              : typeof e
                          })(t)
                  }
                  'function' != typeof Object.getPrototypeOf &&
                    (Object.getPrototypeOf =
                      'object' === e('test'.__proto__)
                        ? function (e) {
                            return e.__proto__
                          }
                        : function (e) {
                            return e.constructor.prototype
                          })
                },
                8711: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.caret = function (e, t, a, i, n) {
                      var r,
                        o = this,
                        s = this.opts
                      if (void 0 === t)
                        return (
                          'selectionStart' in e && 'selectionEnd' in e
                            ? ((t = e.selectionStart), (a = e.selectionEnd))
                            : window.getSelection
                            ? ((r = window.getSelection().getRangeAt(0))
                                .commonAncestorContainer.parentNode !== e &&
                                r.commonAncestorContainer !== e) ||
                              ((t = r.startOffset), (a = r.endOffset))
                            : document.selection &&
                              document.selection.createRange &&
                              ((r = document.selection.createRange()),
                              (t =
                                0 -
                                r
                                  .duplicate()
                                  .moveStart(
                                    'character',
                                    -e.inputmask._valueGet().length
                                  )),
                              (a = t + r.text.length)),
                          {
                            begin: i ? t : u.call(o, t),
                            end: i ? a : u.call(o, a),
                          }
                        )
                      if (
                        (Array.isArray(t) &&
                          ((a = o.isRTL ? t[0] : t[1]),
                          (t = o.isRTL ? t[1] : t[0])),
                        void 0 !== t.begin &&
                          ((a = o.isRTL ? t.begin : t.end),
                          (t = o.isRTL ? t.end : t.begin)),
                        'number' == typeof t)
                      ) {
                        ;(t = i ? t : u.call(o, t)),
                          (a =
                            'number' == typeof (a = i ? a : u.call(o, a))
                              ? a
                              : t)
                        var l =
                          parseInt(
                            ((e.ownerDocument.defaultView || window)
                              .getComputedStyle
                              ? (
                                  e.ownerDocument.defaultView || window
                                ).getComputedStyle(e, null)
                              : e.currentStyle
                            ).fontSize
                          ) * a
                        if (
                          ((e.scrollLeft = l > e.scrollWidth ? l : 0),
                          (e.inputmask.caretPos = {
                            begin: t,
                            end: a,
                          }),
                          s.insertModeVisual &&
                            !1 === s.insertMode &&
                            t === a &&
                            (n || a++),
                          e ===
                            (e.inputmask.shadowRoot || e.ownerDocument)
                              .activeElement)
                        )
                          if ('setSelectionRange' in e)
                            e.setSelectionRange(t, a)
                          else if (window.getSelection) {
                            if (
                              ((r = document.createRange()),
                              void 0 === e.firstChild || null === e.firstChild)
                            ) {
                              var c = document.createTextNode('')
                              e.appendChild(c)
                            }
                            r.setStart(
                              e.firstChild,
                              t < e.inputmask._valueGet().length
                                ? t
                                : e.inputmask._valueGet().length
                            ),
                              r.setEnd(
                                e.firstChild,
                                a < e.inputmask._valueGet().length
                                  ? a
                                  : e.inputmask._valueGet().length
                              ),
                              r.collapse(!0)
                            var f = window.getSelection()
                            f.removeAllRanges(), f.addRange(r)
                          } else
                            e.createTextRange &&
                              ((r = e.createTextRange()).collapse(!0),
                              r.moveEnd('character', a),
                              r.moveStart('character', t),
                              r.select())
                      }
                    }),
                    (t.determineLastRequiredPosition = function (e) {
                      var t,
                        a,
                        r = this,
                        s = this.maskset,
                        l = this.dependencyLib,
                        u = i.getMaskTemplate.call(r, !0, o.call(r), !0, !0),
                        c = u.length,
                        f = o.call(r),
                        d = {},
                        p = s.validPositions[f],
                        h = void 0 !== p ? p.locator.slice() : void 0
                      for (t = f + 1; t < u.length; t++)
                        (a = i.getTestTemplate.call(r, t, h, t - 1)),
                          (h = a.locator.slice()),
                          (d[t] = l.extend(!0, {}, a))
                      var v =
                        p && void 0 !== p.alternation
                          ? p.locator[p.alternation]
                          : void 0
                      for (
                        t = c - 1;
                        t > f &&
                        ((a = d[t]).match.optionality ||
                          (a.match.optionalQuantifier &&
                            a.match.newBlockMarker) ||
                          (v &&
                            ((v !== d[t].locator[p.alternation] &&
                              1 != a.match.static) ||
                              (!0 === a.match.static &&
                                a.locator[p.alternation] &&
                                n.checkAlternationMatch.call(
                                  r,
                                  a.locator[p.alternation]
                                    .toString()
                                    .split(','),
                                  v.toString().split(',')
                                ) &&
                                '' !== i.getTests.call(r, t)[0].def)))) &&
                        u[t] === i.getPlaceholder.call(r, t, a.match);
                        t--
                      )
                        c--
                      return e
                        ? {
                            l: c,
                            def: d[c] ? d[c].match : void 0,
                          }
                        : c
                    }),
                    (t.determineNewCaretPosition = function (e, t, a) {
                      var n = this,
                        u = this.maskset,
                        c = this.opts
                      t && (n.isRTL ? (e.end = e.begin) : (e.begin = e.end))
                      if (e.begin === e.end) {
                        switch ((a = a || c.positionCaretOnClick)) {
                          case 'none':
                            break

                          case 'select':
                            e = {
                              begin: 0,
                              end: r.call(n).length,
                            }
                            break

                          case 'ignore':
                            e.end = e.begin = l.call(n, o.call(n))
                            break

                          case 'radixFocus':
                            if (
                              (function (e) {
                                if ('' !== c.radixPoint && 0 !== c.digits) {
                                  var t = u.validPositions
                                  if (
                                    void 0 === t[e] ||
                                    t[e].input === i.getPlaceholder.call(n, e)
                                  ) {
                                    if (e < l.call(n, -1)) return !0
                                    var a = r.call(n).indexOf(c.radixPoint)
                                    if (-1 !== a) {
                                      for (var o in t)
                                        if (
                                          t[o] &&
                                          a < o &&
                                          t[o].input !==
                                            i.getPlaceholder.call(n, o)
                                        )
                                          return !1
                                      return !0
                                    }
                                  }
                                }
                                return !1
                              })(e.begin)
                            ) {
                              var f = r.call(n).join('').indexOf(c.radixPoint)
                              e.end = e.begin = c.numericInput
                                ? l.call(n, f)
                                : f
                              break
                            }

                          default:
                            var d = e.begin,
                              p = o.call(n, d, !0),
                              h = l.call(n, -1 !== p || s.call(n, 0) ? p : -1)
                            if (d <= h)
                              e.end = e.begin = s.call(n, d, !1, !0)
                                ? d
                                : l.call(n, d)
                            else {
                              var v = u.validPositions[p],
                                m = i.getTestTemplate.call(
                                  n,
                                  h,
                                  v ? v.match.locator : void 0,
                                  v
                                ),
                                g = i.getPlaceholder.call(n, h, m.match)
                              if (
                                ('' !== g &&
                                  r.call(n)[h] !== g &&
                                  !0 !== m.match.optionalQuantifier &&
                                  !0 !== m.match.newBlockMarker) ||
                                (!s.call(n, h, c.keepStatic, !0) &&
                                  m.match.def === g)
                              ) {
                                var k = l.call(n, h)
                                ;(d >= k || d === h) && (h = k)
                              }
                              e.end = e.begin = h
                            }
                        }
                        return e
                      }
                    }),
                    (t.getBuffer = r),
                    (t.getBufferTemplate = function () {
                      var e = this.maskset
                      void 0 === e._buffer &&
                        ((e._buffer = i.getMaskTemplate.call(this, !1, 1)),
                        void 0 === e.buffer && (e.buffer = e._buffer.slice()))
                      return e._buffer
                    }),
                    (t.getLastValidPosition = o),
                    (t.isMask = s),
                    (t.resetMaskSet = function (e) {
                      var t = this.maskset
                      ;(t.buffer = void 0),
                        !0 !== e && ((t.validPositions = {}), (t.p = 0))
                    }),
                    (t.seekNext = l),
                    (t.seekPrevious = function (e, t) {
                      var a = this,
                        n = e - 1
                      if (e <= 0) return 0
                      for (
                        ;
                        n > 0 &&
                        ((!0 === t &&
                          (!0 !== i.getTest.call(a, n).match.newBlockMarker ||
                            !s.call(a, n, void 0, !0))) ||
                          (!0 !== t && !s.call(a, n, void 0, !0)));

                      )
                        n--
                      return n
                    }),
                    (t.translatePosition = u)
                  var i = a(4713),
                    n = a(7215)
                  function r(e) {
                    var t = this.maskset
                    return (
                      (void 0 !== t.buffer && !0 !== e) ||
                        ((t.buffer = i.getMaskTemplate.call(
                          this,
                          !0,
                          o.call(this),
                          !0
                        )),
                        void 0 === t._buffer && (t._buffer = t.buffer.slice())),
                      t.buffer
                    )
                  }
                  function o(e, t, a) {
                    var i = this.maskset,
                      n = -1,
                      r = -1,
                      o = a || i.validPositions
                    for (var s in (void 0 === e && (e = -1), o)) {
                      var l = parseInt(s)
                      o[l] &&
                        (t || !0 !== o[l].generatedInput) &&
                        (l <= e && (n = l), l >= e && (r = l))
                    }
                    return -1 === n || n == e
                      ? r
                      : -1 == r || e - n < r - e
                      ? n
                      : r
                  }
                  function s(e, t, a) {
                    var n = this,
                      r = this.maskset,
                      o = i.getTestTemplate.call(n, e).match
                    if (
                      ('' === o.def && (o = i.getTest.call(n, e).match),
                      !0 !== o.static)
                    )
                      return o.fn
                    if (
                      !0 === a &&
                      void 0 !== r.validPositions[e] &&
                      !0 !== r.validPositions[e].generatedInput
                    )
                      return !0
                    if (!0 !== t && e > -1) {
                      if (a) {
                        var s = i.getTests.call(n, e)
                        return (
                          s.length >
                          1 + ('' === s[s.length - 1].match.def ? 1 : 0)
                        )
                      }
                      var l = i.determineTestTemplate.call(
                          n,
                          e,
                          i.getTests.call(n, e)
                        ),
                        u = i.getPlaceholder.call(n, e, l.match)
                      return l.match.def !== u
                    }
                    return !1
                  }
                  function l(e, t, a) {
                    var n = this
                    void 0 === a && (a = !0)
                    for (
                      var r = e + 1;
                      '' !== i.getTest.call(n, r).match.def &&
                      ((!0 === t &&
                        (!0 !== i.getTest.call(n, r).match.newBlockMarker ||
                          !s.call(n, r, void 0, !0))) ||
                        (!0 !== t && !s.call(n, r, void 0, a)));

                    )
                      r++
                    return r
                  }
                  function u(e) {
                    var t = this.opts,
                      a = this.el
                    return (
                      !this.isRTL ||
                        'number' != typeof e ||
                        (t.greedy && '' === t.placeholder) ||
                        !a ||
                        (e = Math.abs(this._valueGet().length - e)),
                      e
                    )
                  }
                },
                4713: function (e, t) {
                  function a(e, t) {
                    var a = (
                      null != e.alternation ? e.mloc[i(e)] : e.locator
                    ).join('')
                    if ('' !== a) for (; a.length < t; ) a += '0'
                    return a
                  }
                  function i(e) {
                    var t = e.locator[e.alternation]
                    return (
                      'string' == typeof t &&
                        t.length > 0 &&
                        (t = t.split(',')[0]),
                      void 0 !== t ? t.toString() : ''
                    )
                  }
                  function n(e, t, a) {
                    var i = this.opts,
                      n = this.maskset
                    if (
                      void 0 !== (t = t || s.call(this, e).match).placeholder ||
                      !0 === a
                    )
                      return 'function' == typeof t.placeholder
                        ? t.placeholder(i)
                        : t.placeholder
                    if (!0 === t.static) {
                      if (e > -1 && void 0 === n.validPositions[e]) {
                        var r,
                          o = u.call(this, e),
                          l = []
                        if (
                          o.length >
                          1 + ('' === o[o.length - 1].match.def ? 1 : 0)
                        )
                          for (var c = 0; c < o.length; c++)
                            if (
                              '' !== o[c].match.def &&
                              !0 !== o[c].match.optionality &&
                              !0 !== o[c].match.optionalQuantifier &&
                              (!0 === o[c].match.static ||
                                void 0 === r ||
                                !1 !==
                                  o[c].match.fn.test(
                                    r.match.def,
                                    n,
                                    e,
                                    !0,
                                    i
                                  )) &&
                              (l.push(o[c]),
                              !0 === o[c].match.static && (r = o[c]),
                              l.length > 1 &&
                                /[0-9a-bA-Z]/.test(l[0].match.def))
                            )
                              return i.placeholder.charAt(
                                e % i.placeholder.length
                              )
                      }
                      return t.def
                    }
                    return i.placeholder.charAt(e % i.placeholder.length)
                  }
                  function r(e, t, a) {
                    return (
                      this.maskset.validPositions[e] ||
                      o.call(this, e, u.call(this, e, t ? t.slice() : t, a))
                    )
                  }
                  function o(e, t) {
                    var i = this.opts
                    e = e > 0 ? e - 1 : 0
                    for (
                      var n, r, o, l = a(s.call(this, e)), u = 0;
                      u < t.length;
                      u++
                    ) {
                      var c = t[u]
                      n = a(c, l.length)
                      var f = Math.abs(n - l)
                      ;(void 0 === r ||
                        ('' !== n && f < r) ||
                        (o &&
                          !i.greedy &&
                          o.match.optionality &&
                          'master' === o.match.newBlockMarker &&
                          (!c.match.optionality || !c.match.newBlockMarker)) ||
                        (o &&
                          o.match.optionalQuantifier &&
                          !c.match.optionalQuantifier)) &&
                        ((r = f), (o = c))
                    }
                    return o
                  }
                  function s(e, t) {
                    var a = this.maskset
                    return a.validPositions[e]
                      ? a.validPositions[e]
                      : (t || u.call(this, e))[0]
                  }
                  function l(e, t, a) {
                    function i(e) {
                      for (
                        var t, a = [], i = -1, n = 0, r = e.length;
                        n < r;
                        n++
                      )
                        if ('-' === e.charAt(n))
                          for (t = e.charCodeAt(n + 1); ++i < t; )
                            a.push(String.fromCharCode(i))
                        else (i = e.charCodeAt(n)), a.push(e.charAt(n))
                      return a.join('')
                    }
                    return (
                      e.match.def === t.match.nativeDef ||
                      (!(
                        !(
                          a.regex ||
                          (e.match.fn instanceof RegExp &&
                            t.match.fn instanceof RegExp)
                        ) ||
                        !0 === e.match.static ||
                        !0 === t.match.static
                      ) &&
                        -1 !==
                          i(
                            t.match.fn.toString().replace(/[[\]/]/g, '')
                          ).indexOf(
                            i(e.match.fn.toString().replace(/[[\]/]/g, ''))
                          ))
                    )
                  }
                  function u(e, t, a) {
                    var i,
                      n = this,
                      r = this.dependencyLib,
                      s = this.maskset,
                      u = this.opts,
                      c = this.el,
                      f = s.maskToken,
                      d = t ? a : 0,
                      p = t ? t.slice() : [0],
                      h = [],
                      v = !1,
                      m = t ? t.join('') : ''
                    function g(t, a, n, r) {
                      function o(n, r, f) {
                        function p(e, t) {
                          var a = 0 === t.matches.indexOf(e)
                          return (
                            a ||
                              t.matches.every(function (i, n) {
                                return (
                                  !0 === i.isQuantifier
                                    ? (a = p(e, t.matches[n - 1]))
                                    : Object.prototype.hasOwnProperty.call(
                                        i,
                                        'matches'
                                      ) && (a = p(e, i)),
                                  !a
                                )
                              }),
                            a
                          )
                        }
                        function k(e, t, a) {
                          var i, n
                          if (
                            ((s.tests[e] || s.validPositions[e]) &&
                              (s.tests[e] || [s.validPositions[e]]).every(
                                function (e, r) {
                                  if (e.mloc[t]) return (i = e), !1
                                  var o = void 0 !== a ? a : e.alternation,
                                    s =
                                      void 0 !== e.locator[o]
                                        ? e.locator[o].toString().indexOf(t)
                                        : -1
                                  return (
                                    (void 0 === n || s < n) &&
                                      -1 !== s &&
                                      ((i = e), (n = s)),
                                    !0
                                  )
                                }
                              ),
                            i)
                          ) {
                            var r = i.locator[i.alternation]
                            return (i.mloc[t] || i.mloc[r] || i.locator).slice(
                              (void 0 !== a ? a : i.alternation) + 1
                            )
                          }
                          return void 0 !== a ? k(e, t) : void 0
                        }
                        function y(e, t) {
                          var a = e.alternation,
                            i =
                              void 0 === t ||
                              (a === t.alternation &&
                                -1 ===
                                  e.locator[a].toString().indexOf(t.locator[a]))
                          if (!i && a > t.alternation)
                            for (var n = t.alternation; n < a; n++)
                              if (e.locator[n] !== t.locator[n]) {
                                ;(a = n), (i = !0)
                                break
                              }
                          if (i) {
                            e.mloc = e.mloc || {}
                            var r = e.locator[a]
                            if (void 0 !== r) {
                              if (
                                ('string' == typeof r && (r = r.split(',')[0]),
                                void 0 === e.mloc[r] &&
                                  (e.mloc[r] = e.locator.slice()),
                                void 0 !== t)
                              ) {
                                for (var o in t.mloc)
                                  'string' == typeof o && (o = o.split(',')[0]),
                                    void 0 === e.mloc[o] &&
                                      (e.mloc[o] = t.mloc[o])
                                e.locator[a] = Object.keys(e.mloc).join(',')
                              }
                              return !0
                            }
                            e.alternation = void 0
                          }
                          return !1
                        }
                        function b(e, t) {
                          if (e.locator.length !== t.locator.length) return !1
                          for (
                            var a = e.alternation + 1;
                            a < e.locator.length;
                            a++
                          )
                            if (e.locator[a] !== t.locator[a]) return !1
                          return !0
                        }
                        if (d > e + u._maxTestPos)
                          throw (
                            'Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. ' +
                            s.mask
                          )
                        if (d === e && void 0 === n.matches)
                          return (
                            h.push({
                              match: n,
                              locator: r.reverse(),
                              cd: m,
                              mloc: {},
                            }),
                            !0
                          )
                        if (void 0 !== n.matches) {
                          if (n.isGroup && f !== n) {
                            if (
                              (n = o(t.matches[t.matches.indexOf(n) + 1], r, f))
                            )
                              return !0
                          } else if (n.isOptional) {
                            var x = n,
                              P = h.length
                            if ((n = g(n, a, r, f))) {
                              if (
                                (h.forEach(function (e, t) {
                                  t >= P && (e.match.optionality = !0)
                                }),
                                (i = h[h.length - 1].match),
                                void 0 !== f || !p(i, x))
                              )
                                return !0
                              ;(v = !0), (d = e)
                            }
                          } else if (n.isAlternator) {
                            var E,
                              S = n,
                              _ = [],
                              M = h.slice(),
                              w = r.length,
                              O = !1,
                              T = a.length > 0 ? a.shift() : -1
                            if (-1 === T || 'string' == typeof T) {
                              var C,
                                A = d,
                                D = a.slice(),
                                B = []
                              if ('string' == typeof T) B = T.split(',')
                              else
                                for (C = 0; C < S.matches.length; C++)
                                  B.push(C.toString())
                              if (void 0 !== s.excludes[e]) {
                                for (
                                  var j = B.slice(),
                                    R = 0,
                                    L = s.excludes[e].length;
                                  R < L;
                                  R++
                                ) {
                                  var I = s.excludes[e][R].toString().split(':')
                                  r.length == I[1] &&
                                    B.splice(B.indexOf(I[0]), 1)
                                }
                                0 === B.length &&
                                  (delete s.excludes[e], (B = j))
                              }
                              ;(!0 === u.keepStatic ||
                                (isFinite(parseInt(u.keepStatic)) &&
                                  A >= u.keepStatic)) &&
                                (B = B.slice(0, 1))
                              for (var F = 0; F < B.length; F++) {
                                ;(C = parseInt(B[F])),
                                  (h = []),
                                  (a =
                                    ('string' == typeof T && k(d, C, w)) ||
                                    D.slice())
                                var N = S.matches[C]
                                if (N && o(N, [C].concat(r), f)) n = !0
                                else if (
                                  (0 === F && (O = !0),
                                  N &&
                                    N.matches &&
                                    N.matches.length >
                                      S.matches[0].matches.length)
                                )
                                  break
                                ;(E = h.slice()), (d = A), (h = [])
                                for (var V = 0; V < E.length; V++) {
                                  var G = E[V],
                                    H = !1
                                  ;(G.match.jit = G.match.jit || O),
                                    (G.alternation = G.alternation || w),
                                    y(G)
                                  for (var K = 0; K < _.length; K++) {
                                    var U = _[K]
                                    if (
                                      'string' != typeof T ||
                                      (void 0 !== G.alternation &&
                                        B.includes(
                                          G.locator[G.alternation].toString()
                                        ))
                                    ) {
                                      if (
                                        G.match.nativeDef === U.match.nativeDef
                                      ) {
                                        ;(H = !0), y(U, G)
                                        break
                                      }
                                      if (l(G, U, u)) {
                                        y(G, U) &&
                                          ((H = !0),
                                          _.splice(_.indexOf(U), 0, G))
                                        break
                                      }
                                      if (l(U, G, u)) {
                                        y(U, G)
                                        break
                                      }
                                      if (
                                        ((Q = U),
                                        !0 === (W = G).match.static &&
                                          !0 !== Q.match.static &&
                                          Q.match.fn.test(
                                            W.match.def,
                                            s,
                                            e,
                                            !1,
                                            u,
                                            !1
                                          ))
                                      ) {
                                        b(G, U) ||
                                        void 0 !==
                                          c.inputmask.userOptions.keepStatic
                                          ? y(G, U) &&
                                            ((H = !0),
                                            _.splice(_.indexOf(U), 0, G))
                                          : (u.keepStatic = !0)
                                        break
                                      }
                                    }
                                  }
                                  H || _.push(G)
                                }
                              }
                              ;(h = M.concat(_)),
                                (d = e),
                                (v = h.length > 0),
                                (n = _.length > 0),
                                (a = D.slice())
                            } else
                              n = o(
                                S.matches[T] || t.matches[T],
                                [T].concat(r),
                                f
                              )
                            if (n) return !0
                          } else if (
                            n.isQuantifier &&
                            f !== t.matches[t.matches.indexOf(n) - 1]
                          )
                            for (
                              var $ = n, z = a.length > 0 ? a.shift() : 0;
                              z <
                                (isNaN($.quantifier.max)
                                  ? z + 1
                                  : $.quantifier.max) && d <= e;
                              z++
                            ) {
                              var q = t.matches[t.matches.indexOf($) - 1]
                              if ((n = o(q, [z].concat(r), q))) {
                                if (
                                  (((i =
                                    h[h.length - 1].match).optionalQuantifier =
                                    z >= $.quantifier.min),
                                  (i.jit =
                                    (z + 1) * (q.matches.indexOf(i) + 1) >
                                    $.quantifier.jit),
                                  i.optionalQuantifier && p(i, q))
                                ) {
                                  ;(v = !0), (d = e)
                                  break
                                }
                                return (
                                  i.jit &&
                                    (s.jitOffset[e] =
                                      q.matches.length - q.matches.indexOf(i)),
                                  !0
                                )
                              }
                            }
                          else if ((n = g(n, a, r, f))) return !0
                        } else d++
                        var W, Q
                      }
                      for (
                        var f = a.length > 0 ? a.shift() : 0;
                        f < t.matches.length;
                        f++
                      )
                        if (!0 !== t.matches[f].isQuantifier) {
                          var p = o(t.matches[f], [f].concat(n), r)
                          if (p && d === e) return p
                          if (d > e) break
                        }
                    }
                    if (e > -1) {
                      if (void 0 === t) {
                        for (
                          var k, y = e - 1;
                          void 0 === (k = s.validPositions[y] || s.tests[y]) &&
                          y > -1;

                        )
                          y--
                        void 0 !== k &&
                          y > -1 &&
                          ((p = (function (e, t) {
                            var a,
                              i = []
                            return (
                              Array.isArray(t) || (t = [t]),
                              t.length > 0 &&
                                (void 0 === t[0].alternation ||
                                !0 === u.keepStatic
                                  ? 0 ===
                                      (i = o
                                        .call(n, e, t.slice())
                                        .locator.slice()).length &&
                                    (i = t[0].locator.slice())
                                  : t.forEach(function (e) {
                                      '' !== e.def &&
                                        (0 === i.length
                                          ? ((a = e.alternation),
                                            (i = e.locator.slice()))
                                          : e.locator[a] &&
                                            -1 ===
                                              i[a]
                                                .toString()
                                                .indexOf(e.locator[a]) &&
                                            (i[a] += ',' + e.locator[a]))
                                    })),
                              i
                            )
                          })(y, k)),
                          (m = p.join('')),
                          (d = y))
                      }
                      if (s.tests[e] && s.tests[e][0].cd === m)
                        return s.tests[e]
                      for (var b = p.shift(); b < f.length; b++) {
                        if ((g(f[b], p, [b]) && d === e) || d > e) break
                      }
                    }
                    return (
                      (0 === h.length || v) &&
                        h.push({
                          match: {
                            fn: null,
                            static: !0,
                            optionality: !1,
                            casing: null,
                            def: '',
                            placeholder: '',
                          },
                          locator: [],
                          mloc: {},
                          cd: m,
                        }),
                      void 0 !== t && s.tests[e]
                        ? r.extend(!0, [], h)
                        : ((s.tests[e] = r.extend(!0, [], h)), s.tests[e])
                    )
                  }
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.determineTestTemplate = o),
                    (t.getDecisionTaker = i),
                    (t.getMaskTemplate = function (e, t, a, i, s) {
                      var l = this,
                        c = this.opts,
                        f = this.maskset,
                        d = c.greedy
                      s && (c.greedy = !1)
                      t = t || 0
                      var p,
                        h,
                        v,
                        m,
                        g = [],
                        k = 0
                      do {
                        if (!0 === e && f.validPositions[k])
                          (v =
                            s &&
                            !0 === f.validPositions[k].match.optionality &&
                            void 0 === f.validPositions[k + 1] &&
                            (!0 === f.validPositions[k].generatedInput ||
                              (f.validPositions[k].input ==
                                c.skipOptionalPartCharacter &&
                                k > 0))
                              ? o.call(l, k, u.call(l, k, p, k - 1))
                              : f.validPositions[k]),
                            (h = v.match),
                            (p = v.locator.slice()),
                            g.push(
                              !0 === a
                                ? v.input
                                : !1 === a
                                ? h.nativeDef
                                : n.call(l, k, h)
                            )
                        else {
                          ;(v = r.call(l, k, p, k - 1)),
                            (h = v.match),
                            (p = v.locator.slice())
                          var y =
                            !0 !== i &&
                            (!1 !== c.jitMasking ? c.jitMasking : h.jit)
                          ;(m =
                            ((m &&
                              h.static &&
                              h.def !== c.groupSeparator &&
                              null === h.fn) ||
                              (f.validPositions[k - 1] &&
                                h.static &&
                                h.def !== c.groupSeparator &&
                                null === h.fn)) &&
                            f.tests[k] &&
                            1 === f.tests[k].length) ||
                          !1 === y ||
                          void 0 === y ||
                          ('number' == typeof y && isFinite(y) && y > k)
                            ? g.push(!1 === a ? h.nativeDef : n.call(l, k, h))
                            : (m = !1)
                        }
                        k++
                      } while (!0 !== h.static || '' !== h.def || t > k)
                      '' === g[g.length - 1] && g.pop()
                      ;(!1 === a && void 0 !== f.maskLength) ||
                        (f.maskLength = k - 1)
                      return (c.greedy = d), g
                    }),
                    (t.getPlaceholder = n),
                    (t.getTest = s),
                    (t.getTests = u),
                    (t.getTestTemplate = r),
                    (t.isSubsetOf = l)
                },
                7215: function (e, t, a) {
                  Object.defineProperty(t, '__esModule', {
                    value: !0,
                  }),
                    (t.alternate = l),
                    (t.checkAlternationMatch = function (e, t, a) {
                      for (
                        var i,
                          n = this.opts.greedy ? t : t.slice(0, 1),
                          r = !1,
                          o = void 0 !== a ? a.split(',') : [],
                          s = 0;
                        s < o.length;
                        s++
                      )
                        -1 !== (i = e.indexOf(o[s])) && e.splice(i, 1)
                      for (var l = 0; l < e.length; l++)
                        if (n.includes(e[l])) {
                          r = !0
                          break
                        }
                      return r
                    }),
                    (t.isComplete = c),
                    (t.isValid = f),
                    (t.refreshFromBuffer = p),
                    (t.revalidateMask = v),
                    (t.handleRemove = function (e, t, a, i, s) {
                      var u = this,
                        c = this.maskset,
                        f = this.opts
                      if (
                        (f.numericInput || u.isRTL) &&
                        (t === r.default.BACKSPACE
                          ? (t = r.default.DELETE)
                          : t === r.default.DELETE && (t = r.default.BACKSPACE),
                        u.isRTL)
                      ) {
                        var d = a.end
                        ;(a.end = a.begin), (a.begin = d)
                      }
                      var p,
                        h = o.getLastValidPosition.call(u, void 0, !0)
                      a.end >= o.getBuffer.call(u).length &&
                        h >= a.end &&
                        (a.end = h + 1)
                      t === r.default.BACKSPACE
                        ? a.end - a.begin < 1 &&
                          (a.begin = o.seekPrevious.call(u, a.begin))
                        : t === r.default.DELETE &&
                          a.begin === a.end &&
                          (a.end = o.isMask.call(u, a.end, !0, !0)
                            ? a.end + 1
                            : o.seekNext.call(u, a.end) + 1)
                      if (!1 !== (p = v.call(u, a))) {
                        if (
                          (!0 !== i && !1 !== f.keepStatic) ||
                          (null !== f.regex &&
                            -1 !==
                              n.getTest.call(u, a.begin).match.def.indexOf('|'))
                        ) {
                          var m = l.call(u, !0)
                          if (m) {
                            var g =
                              void 0 !== m.caret
                                ? m.caret
                                : m.pos
                                ? o.seekNext.call(
                                    u,
                                    m.pos.begin ? m.pos.begin : m.pos
                                  )
                                : o.getLastValidPosition.call(u, -1, !0)
                            ;(t !== r.default.DELETE || a.begin > g) && a.begin
                          }
                        }
                        !0 !== i &&
                          ((c.p =
                            t === r.default.DELETE ? a.begin + p : a.begin),
                          (c.p = o.determineNewCaretPosition.call(
                            u,
                            {
                              begin: c.p,
                              end: c.p,
                            },
                            !1
                          ).begin))
                      }
                    })
                  var i,
                    n = a(4713),
                    r =
                      (i = a(4528)) && i.__esModule
                        ? i
                        : {
                            default: i,
                          },
                    o = a(8711),
                    s = a(6030)
                  function l(e, t, a, i, r, s) {
                    var u,
                      c,
                      d,
                      p,
                      h,
                      v,
                      m,
                      g,
                      k,
                      y,
                      b,
                      x = this,
                      P = this.dependencyLib,
                      E = this.opts,
                      S = x.maskset,
                      _ = P.extend(!0, {}, S.validPositions),
                      M = P.extend(!0, {}, S.tests),
                      w = !1,
                      O = !1,
                      T = void 0 !== r ? r : o.getLastValidPosition.call(x)
                    if (
                      (s &&
                        ((y = s.begin),
                        (b = s.end),
                        s.begin > s.end && ((y = s.end), (b = s.begin))),
                      -1 === T && void 0 === r)
                    )
                      (u = 0), (c = (p = n.getTest.call(x, u)).alternation)
                    else
                      for (; T >= 0; T--)
                        if (
                          (d = S.validPositions[T]) &&
                          void 0 !== d.alternation
                        ) {
                          if (
                            p &&
                            p.locator[d.alternation] !==
                              d.locator[d.alternation]
                          )
                            break
                          ;(u = T),
                            (c = S.validPositions[u].alternation),
                            (p = d)
                        }
                    if (void 0 !== c) {
                      ;(m = parseInt(u)),
                        (S.excludes[m] = S.excludes[m] || []),
                        !0 !== e &&
                          S.excludes[m].push(
                            (0, n.getDecisionTaker)(p) + ':' + p.alternation
                          )
                      var C = [],
                        A = -1
                      for (
                        h = m;
                        h < o.getLastValidPosition.call(x, void 0, !0) + 1;
                        h++
                      )
                        -1 === A &&
                          e <= h &&
                          void 0 !== t &&
                          (C.push(t), (A = C.length - 1)),
                          (v = S.validPositions[h]) &&
                            !0 !== v.generatedInput &&
                            (void 0 === s || h < y || h >= b) &&
                            C.push(v.input),
                          delete S.validPositions[h]
                      for (
                        -1 === A &&
                        void 0 !== t &&
                        (C.push(t), (A = C.length - 1));
                        void 0 !== S.excludes[m] && S.excludes[m].length < 10;

                      ) {
                        for (
                          S.tests = {},
                            o.resetMaskSet.call(x, !0),
                            w = !0,
                            h = 0;
                          h < C.length &&
                          ((g =
                            w.caret ||
                            o.getLastValidPosition.call(x, void 0, !0) + 1),
                          (k = C[h]),
                          (w = f.call(x, g, k, !1, i, !0)));
                          h++
                        )
                          h === A && (O = w),
                            1 == e &&
                              w &&
                              (O = {
                                caretPos: h,
                              })
                        if (w) break
                        if (
                          (o.resetMaskSet.call(x),
                          (p = n.getTest.call(x, m)),
                          (S.validPositions = P.extend(!0, {}, _)),
                          (S.tests = P.extend(!0, {}, M)),
                          !S.excludes[m])
                        ) {
                          O = l.call(x, e, t, a, i, m - 1, s)
                          break
                        }
                        var D = (0, n.getDecisionTaker)(p)
                        if (
                          -1 !== S.excludes[m].indexOf(D + ':' + p.alternation)
                        ) {
                          O = l.call(x, e, t, a, i, m - 1, s)
                          break
                        }
                        for (
                          S.excludes[m].push(D + ':' + p.alternation), h = m;
                          h < o.getLastValidPosition.call(x, void 0, !0) + 1;
                          h++
                        )
                          delete S.validPositions[h]
                      }
                    }
                    return (O && !1 === E.keepStatic) || delete S.excludes[m], O
                  }
                  function u(e, t, a) {
                    var i = this.opts,
                      n = this.maskset
                    switch (i.casing || t.casing) {
                      case 'upper':
                        e = e.toUpperCase()
                        break

                      case 'lower':
                        e = e.toLowerCase()
                        break

                      case 'title':
                        var o = n.validPositions[a - 1]
                        e =
                          0 === a ||
                          (o &&
                            o.input === String.fromCharCode(r.default.SPACE))
                            ? e.toUpperCase()
                            : e.toLowerCase()
                        break

                      default:
                        if ('function' == typeof i.casing) {
                          var s = Array.prototype.slice.call(arguments)
                          s.push(n.validPositions),
                            (e = i.casing.apply(this, s))
                        }
                    }
                    return e
                  }
                  function c(e) {
                    var t = this,
                      a = this.opts,
                      i = this.maskset
                    if ('function' == typeof a.isComplete)
                      return a.isComplete(e, a)
                    if ('*' !== a.repeat) {
                      var r = !1,
                        s = o.determineLastRequiredPosition.call(t, !0),
                        l = o.seekPrevious.call(t, s.l)
                      if (
                        void 0 === s.def ||
                        s.def.newBlockMarker ||
                        s.def.optionality ||
                        s.def.optionalQuantifier
                      ) {
                        r = !0
                        for (var u = 0; u <= l; u++) {
                          var c = n.getTestTemplate.call(t, u).match
                          if (
                            (!0 !== c.static &&
                              void 0 === i.validPositions[u] &&
                              !0 !== c.optionality &&
                              !0 !== c.optionalQuantifier) ||
                            (!0 === c.static &&
                              e[u] !== n.getPlaceholder.call(t, u, c))
                          ) {
                            r = !1
                            break
                          }
                        }
                      }
                      return r
                    }
                  }
                  function f(e, t, a, i, r, s, d) {
                    var m = this,
                      g = this.dependencyLib,
                      k = this.opts,
                      y = m.maskset
                    function b(e) {
                      return m.isRTL
                        ? e.begin - e.end > 1 || e.begin - e.end == 1
                        : e.end - e.begin > 1 || e.end - e.begin == 1
                    }
                    a = !0 === a
                    var x = e
                    function P(e) {
                      if (void 0 !== e) {
                        if (
                          (void 0 !== e.remove &&
                            (Array.isArray(e.remove) || (e.remove = [e.remove]),
                            e.remove
                              .sort(function (e, t) {
                                return t.pos - e.pos
                              })
                              .forEach(function (e) {
                                v.call(m, {
                                  begin: e,
                                  end: e + 1,
                                })
                              }),
                            (e.remove = void 0)),
                          void 0 !== e.insert &&
                            (Array.isArray(e.insert) || (e.insert = [e.insert]),
                            e.insert
                              .sort(function (e, t) {
                                return e.pos - t.pos
                              })
                              .forEach(function (e) {
                                '' !== e.c &&
                                  f.call(
                                    m,
                                    e.pos,
                                    e.c,
                                    void 0 === e.strict || e.strict,
                                    void 0 !== e.fromIsValid ? e.fromIsValid : i
                                  )
                              }),
                            (e.insert = void 0)),
                          e.refreshFromBuffer && e.buffer)
                        ) {
                          var t = e.refreshFromBuffer
                          p.call(m, !0 === t ? t : t.start, t.end, e.buffer),
                            (e.refreshFromBuffer = void 0)
                        }
                        void 0 !== e.rewritePosition &&
                          ((x = e.rewritePosition), (e = !0))
                      }
                      return e
                    }
                    function E(t, a, r) {
                      var s = !1
                      return (
                        n.getTests.call(m, t).every(function (l, c) {
                          var f = l.match
                          if (
                            (o.getBuffer.call(m, !0),
                            !1 !==
                              (s =
                                (!f.jit ||
                                  void 0 !==
                                    y.validPositions[
                                      o.seekPrevious.call(m, t)
                                    ]) &&
                                (null != f.fn
                                  ? f.fn.test(a, y, t, r, k, b(e))
                                  : (a === f.def ||
                                      a === k.skipOptionalPartCharacter) &&
                                    '' !== f.def && {
                                      c:
                                        n.getPlaceholder.call(m, t, f, !0) ||
                                        f.def,
                                      pos: t,
                                    })))
                          ) {
                            var d = void 0 !== s.c ? s.c : a,
                              p = t
                            return (
                              (d =
                                d === k.skipOptionalPartCharacter &&
                                !0 === f.static
                                  ? n.getPlaceholder.call(m, t, f, !0) || f.def
                                  : d),
                              !0 !== (s = P(s)) &&
                                void 0 !== s.pos &&
                                s.pos !== t &&
                                (p = s.pos),
                              !0 !== s && void 0 === s.pos && void 0 === s.c
                                ? !1
                                : (!1 ===
                                    v.call(
                                      m,
                                      e,
                                      g.extend({}, l, {
                                        input: u.call(m, d, f, p),
                                      }),
                                      i,
                                      p
                                    ) && (s = !1),
                                  !1)
                            )
                          }
                          return !0
                        }),
                        s
                      )
                    }
                    void 0 !== e.begin && (x = m.isRTL ? e.end : e.begin)
                    var S = !0,
                      _ = g.extend(!0, {}, y.validPositions)
                    if (
                      !1 === k.keepStatic &&
                      void 0 !== y.excludes[x] &&
                      !0 !== r &&
                      !0 !== i
                    )
                      for (var M = x; M < (m.isRTL ? e.begin : e.end); M++)
                        void 0 !== y.excludes[M] &&
                          ((y.excludes[M] = void 0), delete y.tests[M])
                    if (
                      ('function' == typeof k.preValidation &&
                        !0 !== i &&
                        !0 !== s &&
                        (S = P(
                          (S = k.preValidation.call(
                            m,
                            o.getBuffer.call(m),
                            x,
                            t,
                            b(e),
                            k,
                            y,
                            e,
                            a || r
                          ))
                        )),
                      !0 === S)
                    ) {
                      if (
                        ((S = E(x, t, a)),
                        (!a || !0 === i) && !1 === S && !0 !== s)
                      ) {
                        var w = y.validPositions[x]
                        if (
                          !w ||
                          !0 !== w.match.static ||
                          (w.match.def !== t &&
                            t !== k.skipOptionalPartCharacter)
                        ) {
                          if (
                            k.insertMode ||
                            void 0 ===
                              y.validPositions[o.seekNext.call(m, x)] ||
                            e.end > x
                          ) {
                            var O = !1
                            if (
                              (y.jitOffset[x] &&
                                void 0 ===
                                  y.validPositions[o.seekNext.call(m, x)] &&
                                !1 !==
                                  (S = f.call(
                                    m,
                                    x + y.jitOffset[x],
                                    t,
                                    !0,
                                    !0
                                  )) &&
                                (!0 !== r && (S.caret = x), (O = !0)),
                              e.end > x && (y.validPositions[x] = void 0),
                              !O &&
                                !o.isMask.call(m, x, k.keepStatic && 0 === x))
                            )
                              for (
                                var T = x + 1,
                                  C = o.seekNext.call(m, x, !1, 0 !== x);
                                T <= C;
                                T++
                              )
                                if (!1 !== (S = E(T, t, a))) {
                                  ;(S =
                                    h.call(
                                      m,
                                      x,
                                      void 0 !== S.pos ? S.pos : T
                                    ) || S),
                                    (x = T)
                                  break
                                }
                          }
                        } else
                          S = {
                            caret: o.seekNext.call(m, x),
                          }
                      }
                      !1 !== S ||
                      !k.keepStatic ||
                      (!c.call(m, o.getBuffer.call(m)) && 0 !== x) ||
                      a ||
                      !0 === r
                        ? b(e) &&
                          y.tests[x] &&
                          y.tests[x].length > 1 &&
                          k.keepStatic &&
                          !a &&
                          !0 !== r &&
                          (S = l.call(m, !0))
                        : (S = l.call(m, x, t, a, i, void 0, e)),
                        !0 === S &&
                          (S = {
                            pos: x,
                          })
                    }
                    if (
                      'function' == typeof k.postValidation &&
                      !0 !== i &&
                      !0 !== s
                    ) {
                      var A = k.postValidation.call(
                        m,
                        o.getBuffer.call(m, !0),
                        void 0 !== e.begin ? (m.isRTL ? e.end : e.begin) : e,
                        t,
                        S,
                        k,
                        y,
                        a,
                        d
                      )
                      void 0 !== A && (S = !0 === A ? S : A)
                    }
                    S && void 0 === S.pos && (S.pos = x),
                      !1 === S || !0 === s
                        ? (o.resetMaskSet.call(m, !0),
                          (y.validPositions = g.extend(!0, {}, _)))
                        : h.call(m, void 0, x, !0)
                    var D = P(S)
                    void 0 !== m.maxLength &&
                      o.getBuffer.call(m).length > m.maxLength &&
                      !i &&
                      (o.resetMaskSet.call(m, !0),
                      (y.validPositions = g.extend(!0, {}, _)),
                      (D = !1))
                    return D
                  }
                  function d(e, t, a) {
                    for (
                      var i = this.maskset,
                        r = !1,
                        o = n.getTests.call(this, e),
                        s = 0;
                      s < o.length;
                      s++
                    ) {
                      if (
                        o[s].match &&
                        ((o[s].match.nativeDef ===
                          t.match[a.shiftPositions ? 'def' : 'nativeDef'] &&
                          (!a.shiftPositions || !t.match.static)) ||
                          o[s].match.nativeDef === t.match.nativeDef ||
                          (a.regex &&
                            !o[s].match.static &&
                            o[s].match.fn.test(t.input)))
                      ) {
                        r = !0
                        break
                      }
                      if (o[s].match && o[s].match.def === t.match.nativeDef) {
                        r = void 0
                        break
                      }
                    }
                    return (
                      !1 === r &&
                        void 0 !== i.jitOffset[e] &&
                        (r = d.call(this, e + i.jitOffset[e], t, a)),
                      r
                    )
                  }
                  function p(e, t, a) {
                    var i,
                      n,
                      r = this,
                      l = this.maskset,
                      u = this.opts,
                      c = this.dependencyLib,
                      f = u.skipOptionalPartCharacter,
                      d = r.isRTL ? a.slice().reverse() : a
                    if (((u.skipOptionalPartCharacter = ''), !0 === e))
                      o.resetMaskSet.call(r),
                        (l.tests = {}),
                        (e = 0),
                        (t = a.length),
                        (n = o.determineNewCaretPosition.call(
                          r,
                          {
                            begin: 0,
                            end: 0,
                          },
                          !1
                        ).begin)
                    else {
                      for (i = e; i < t; i++) delete l.validPositions[i]
                      n = e
                    }
                    var p = new c.Event('keypress')
                    for (i = e; i < t; i++) {
                      ;(p.which = d[i].toString().charCodeAt(0)),
                        (r.ignorable = !1)
                      var h = s.EventHandlers.keypressEvent.call(
                        r,
                        p,
                        !0,
                        !1,
                        !1,
                        n
                      )
                      !1 !== h && void 0 !== h && (n = h.forwardPosition)
                    }
                    u.skipOptionalPartCharacter = f
                  }
                  function h(e, t, a) {
                    var i = this,
                      r = this.maskset,
                      s = this.dependencyLib
                    if (void 0 === e)
                      for (e = t - 1; e > 0 && !r.validPositions[e]; e--);
                    for (var l = e; l < t; l++) {
                      if (
                        void 0 === r.validPositions[l] &&
                        !o.isMask.call(i, l, !1)
                      )
                        if (
                          0 == l
                            ? n.getTest.call(i, l)
                            : r.validPositions[l - 1]
                        ) {
                          var u = n.getTests.call(i, l).slice()
                          '' === u[u.length - 1].match.def && u.pop()
                          var c,
                            d = n.determineTestTemplate.call(i, l, u)
                          if (
                            d &&
                            (!0 !== d.match.jit ||
                              ('master' === d.match.newBlockMarker &&
                                (c = r.validPositions[l + 1]) &&
                                !0 === c.match.optionalQuantifier)) &&
                            (((d = s.extend({}, d, {
                              input:
                                n.getPlaceholder.call(i, l, d.match, !0) ||
                                d.match.def,
                            })).generatedInput = !0),
                            v.call(i, l, d, !0),
                            !0 !== a)
                          ) {
                            var p = r.validPositions[t].input
                            return (
                              (r.validPositions[t] = void 0),
                              f.call(i, t, p, !0, !0)
                            )
                          }
                        }
                    }
                  }
                  function v(e, t, a, i) {
                    var r = this,
                      s = this.maskset,
                      l = this.opts,
                      u = this.dependencyLib
                    function c(e, t, a) {
                      var i = t[e]
                      if (
                        void 0 !== i &&
                        !0 === i.match.static &&
                        !0 !== i.match.optionality &&
                        (void 0 === t[0] || void 0 === t[0].alternation)
                      ) {
                        var n =
                            a.begin <= e - 1
                              ? t[e - 1] &&
                                !0 === t[e - 1].match.static &&
                                t[e - 1]
                              : t[e - 1],
                          r =
                            a.end > e + 1
                              ? t[e + 1] &&
                                !0 === t[e + 1].match.static &&
                                t[e + 1]
                              : t[e + 1]
                        return n && r
                      }
                      return !1
                    }
                    var p = 0,
                      h = void 0 !== e.begin ? e.begin : e,
                      v = void 0 !== e.end ? e.end : e,
                      m = !0
                    if (
                      (e.begin > e.end && ((h = e.end), (v = e.begin)),
                      (i = void 0 !== i ? i : h),
                      h !== v ||
                        (l.insertMode &&
                          void 0 !== s.validPositions[i] &&
                          void 0 === a) ||
                        void 0 === t)
                    ) {
                      var g,
                        k = u.extend(!0, {}, s.validPositions),
                        y = o.getLastValidPosition.call(r, void 0, !0)
                      for (s.p = h, g = y; g >= h; g--)
                        delete s.validPositions[g],
                          void 0 === t && delete s.tests[g + 1]
                      var b,
                        x,
                        P = i,
                        E = P
                      for (
                        t &&
                          ((s.validPositions[i] = u.extend(!0, {}, t)),
                          E++,
                          P++),
                          g = t ? v : v - 1;
                        g <= y;
                        g++
                      ) {
                        if (
                          void 0 !== (b = k[g]) &&
                          !0 !== b.generatedInput &&
                          (g >= v ||
                            (g >= h &&
                              c(g, k, {
                                begin: h,
                                end: v,
                              })))
                        ) {
                          for (; '' !== n.getTest.call(r, E).match.def; ) {
                            if (
                              !1 !== (x = d.call(r, E, b, l)) ||
                              '+' === b.match.def
                            ) {
                              '+' === b.match.def && o.getBuffer.call(r, !0)
                              var S = f.call(
                                r,
                                E,
                                b.input,
                                '+' !== b.match.def,
                                !0
                              )
                              if (
                                ((m = !1 !== S),
                                (P = (S.pos || E) + 1),
                                !m && x)
                              )
                                break
                            } else m = !1
                            if (m) {
                              void 0 === t &&
                                b.match.static &&
                                g === e.begin &&
                                p++
                              break
                            }
                            if (!m && E > s.maskLength) break
                            E++
                          }
                          '' == n.getTest.call(r, E).match.def && (m = !1),
                            (E = P)
                        }
                        if (!m) break
                      }
                      if (!m)
                        return (
                          (s.validPositions = u.extend(!0, {}, k)),
                          o.resetMaskSet.call(r, !0),
                          !1
                        )
                    } else
                      t &&
                        n.getTest.call(r, i).match.cd === t.match.cd &&
                        (s.validPositions[i] = u.extend(!0, {}, t))
                    return o.resetMaskSet.call(r, !0), p
                  }
                },
              },
              t = {}
            function a(i) {
              var n = t[i]
              if (void 0 !== n) return n.exports
              var r = (t[i] = {
                exports: {},
              })
              return e[i](r, r.exports, a), r.exports
            }
            var i = {}
            return (
              (function () {
                var e,
                  t = i
                Object.defineProperty(t, '__esModule', {
                  value: !0,
                }),
                  (t.default = void 0),
                  a(3851),
                  a(219),
                  a(207),
                  a(5296)
                var n = (
                  (e = a(2394)) && e.__esModule
                    ? e
                    : {
                        default: e,
                      }
                ).default
                t.default = n
              })(),
              i
            )
          })()
        })

        /***/
      },

    /***/ './node_modules/lodash/lodash.js':
      /*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
      /***/ function (module, exports, __webpack_require__) {
        /* module decorator */ module = __webpack_require__.nmd(module)
        var __WEBPACK_AMD_DEFINE_RESULT__
          /**
           * @license
           * Lodash <https://lodash.com/>
           * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */
        ;(function () {
          /** Used as a safe reference for `undefined` in pre-ES5 environments. */
          var undefined

          /** Used as the semantic version number. */
          var VERSION = '4.17.21'

          /** Used as the size to enable large array optimizations. */
          var LARGE_ARRAY_SIZE = 200

          /** Error message constants. */
          var CORE_ERROR_TEXT =
              'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
            FUNC_ERROR_TEXT = 'Expected a function',
            INVALID_TEMPL_VAR_ERROR_TEXT =
              'Invalid `variable` option passed into `_.template`'

          /** Used to stand-in for `undefined` hash values. */
          var HASH_UNDEFINED = '__lodash_hash_undefined__'

          /** Used as the maximum memoize cache size. */
          var MAX_MEMOIZE_SIZE = 500

          /** Used as the internal argument placeholder. */
          var PLACEHOLDER = '__lodash_placeholder__'

          /** Used to compose bitmasks for cloning. */
          var CLONE_DEEP_FLAG = 1,
            CLONE_FLAT_FLAG = 2,
            CLONE_SYMBOLS_FLAG = 4

          /** Used to compose bitmasks for value comparisons. */
          var COMPARE_PARTIAL_FLAG = 1,
            COMPARE_UNORDERED_FLAG = 2

          /** Used to compose bitmasks for function metadata. */
          var WRAP_BIND_FLAG = 1,
            WRAP_BIND_KEY_FLAG = 2,
            WRAP_CURRY_BOUND_FLAG = 4,
            WRAP_CURRY_FLAG = 8,
            WRAP_CURRY_RIGHT_FLAG = 16,
            WRAP_PARTIAL_FLAG = 32,
            WRAP_PARTIAL_RIGHT_FLAG = 64,
            WRAP_ARY_FLAG = 128,
            WRAP_REARG_FLAG = 256,
            WRAP_FLIP_FLAG = 512

          /** Used as default options for `_.truncate`. */
          var DEFAULT_TRUNC_LENGTH = 30,
            DEFAULT_TRUNC_OMISSION = '...'

          /** Used to detect hot functions by number of calls within a span of milliseconds. */
          var HOT_COUNT = 800,
            HOT_SPAN = 16

          /** Used to indicate the type of lazy iteratees. */
          var LAZY_FILTER_FLAG = 1,
            LAZY_MAP_FLAG = 2,
            LAZY_WHILE_FLAG = 3

          /** Used as references for various `Number` constants. */
          var INFINITY = 1 / 0,
            MAX_SAFE_INTEGER = 9007199254740991,
            MAX_INTEGER = 1.7976931348623157e308,
            NAN = 0 / 0

          /** Used as references for the maximum length and index of an array. */
          var MAX_ARRAY_LENGTH = 4294967295,
            MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
            HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1

          /** Used to associate wrap methods with their bit flags. */
          var wrapFlags = [
            ['ary', WRAP_ARY_FLAG],
            ['bind', WRAP_BIND_FLAG],
            ['bindKey', WRAP_BIND_KEY_FLAG],
            ['curry', WRAP_CURRY_FLAG],
            ['curryRight', WRAP_CURRY_RIGHT_FLAG],
            ['flip', WRAP_FLIP_FLAG],
            ['partial', WRAP_PARTIAL_FLAG],
            ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
            ['rearg', WRAP_REARG_FLAG],
          ]

          /** `Object#toString` result references. */
          var argsTag = '[object Arguments]',
            arrayTag = '[object Array]',
            asyncTag = '[object AsyncFunction]',
            boolTag = '[object Boolean]',
            dateTag = '[object Date]',
            domExcTag = '[object DOMException]',
            errorTag = '[object Error]',
            funcTag = '[object Function]',
            genTag = '[object GeneratorFunction]',
            mapTag = '[object Map]',
            numberTag = '[object Number]',
            nullTag = '[object Null]',
            objectTag = '[object Object]',
            promiseTag = '[object Promise]',
            proxyTag = '[object Proxy]',
            regexpTag = '[object RegExp]',
            setTag = '[object Set]',
            stringTag = '[object String]',
            symbolTag = '[object Symbol]',
            undefinedTag = '[object Undefined]',
            weakMapTag = '[object WeakMap]',
            weakSetTag = '[object WeakSet]'

          var arrayBufferTag = '[object ArrayBuffer]',
            dataViewTag = '[object DataView]',
            float32Tag = '[object Float32Array]',
            float64Tag = '[object Float64Array]',
            int8Tag = '[object Int8Array]',
            int16Tag = '[object Int16Array]',
            int32Tag = '[object Int32Array]',
            uint8Tag = '[object Uint8Array]',
            uint8ClampedTag = '[object Uint8ClampedArray]',
            uint16Tag = '[object Uint16Array]',
            uint32Tag = '[object Uint32Array]'

          /** Used to match empty string literals in compiled template source. */
          var reEmptyStringLeading = /\b__p \+= '';/g,
            reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
            reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g

          /** Used to match HTML entities and HTML characters. */
          var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
            reUnescapedHtml = /[&<>"']/g,
            reHasEscapedHtml = RegExp(reEscapedHtml.source),
            reHasUnescapedHtml = RegExp(reUnescapedHtml.source)

          /** Used to match template delimiters. */
          var reEscape = /<%-([\s\S]+?)%>/g,
            reEvaluate = /<%([\s\S]+?)%>/g,
            reInterpolate = /<%=([\s\S]+?)%>/g

          /** Used to match property names within property paths. */
          var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            reIsPlainProp = /^\w*$/,
            rePropName =
              /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g

          /**
           * Used to match `RegExp`
           * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
           */
          var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
            reHasRegExpChar = RegExp(reRegExpChar.source)

          /** Used to match leading whitespace. */
          var reTrimStart = /^\s+/

          /** Used to match a single whitespace character. */
          var reWhitespace = /\s/

          /** Used to match wrap detail comments. */
          var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
            reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
            reSplitDetails = /,? & /

          /** Used to match words composed of alphanumeric characters. */
          var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g

          /**
           * Used to validate the `validate` option in `_.template` variable.
           *
           * Forbids characters which could potentially change the meaning of the function argument definition:
           * - "()," (modification of function parameters)
           * - "=" (default value)
           * - "[]{}" (destructuring of function parameters)
           * - "/" (beginning of a comment)
           * - whitespace
           */
          var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/

          /** Used to match backslashes in property paths. */
          var reEscapeChar = /\\(\\)?/g

          /**
           * Used to match
           * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
           */
          var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g

          /** Used to match `RegExp` flags from their coerced string values. */
          var reFlags = /\w*$/

          /** Used to detect bad signed hexadecimal string values. */
          var reIsBadHex = /^[-+]0x[0-9a-f]+$/i

          /** Used to detect binary string values. */
          var reIsBinary = /^0b[01]+$/i

          /** Used to detect host constructors (Safari). */
          var reIsHostCtor = /^\[object .+?Constructor\]$/

          /** Used to detect octal string values. */
          var reIsOctal = /^0o[0-7]+$/i

          /** Used to detect unsigned integer values. */
          var reIsUint = /^(?:0|[1-9]\d*)$/

          /** Used to match Latin Unicode letters (excluding mathematical operators). */
          var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g

          /** Used to ensure capturing order of template delimiters. */
          var reNoMatch = /($^)/

          /** Used to match unescaped characters in compiled string literals. */
          var reUnescapedString = /['\n\r\u2028\u2029\\]/g

          /** Used to compose unicode character classes. */
          var rsAstralRange = '\\ud800-\\udfff',
            rsComboMarksRange = '\\u0300-\\u036f',
            reComboHalfMarksRange = '\\ufe20-\\ufe2f',
            rsComboSymbolsRange = '\\u20d0-\\u20ff',
            rsComboRange =
              rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
            rsDingbatRange = '\\u2700-\\u27bf',
            rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
            rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
            rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
            rsPunctuationRange = '\\u2000-\\u206f',
            rsSpaceRange =
              ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
            rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
            rsVarRange = '\\ufe0e\\ufe0f',
            rsBreakRange =
              rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange

          /** Used to compose unicode capture groups. */
          var rsApos = "['\u2019]",
            rsAstral = '[' + rsAstralRange + ']',
            rsBreak = '[' + rsBreakRange + ']',
            rsCombo = '[' + rsComboRange + ']',
            rsDigits = '\\d+',
            rsDingbat = '[' + rsDingbatRange + ']',
            rsLower = '[' + rsLowerRange + ']',
            rsMisc =
              '[^' +
              rsAstralRange +
              rsBreakRange +
              rsDigits +
              rsDingbatRange +
              rsLowerRange +
              rsUpperRange +
              ']',
            rsFitz = '\\ud83c[\\udffb-\\udfff]',
            rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
            rsNonAstral = '[^' + rsAstralRange + ']',
            rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
            rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
            rsUpper = '[' + rsUpperRange + ']',
            rsZWJ = '\\u200d'

          /** Used to compose unicode regexes. */
          var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
            rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
            rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
            rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
            reOptMod = rsModifier + '?',
            rsOptVar = '[' + rsVarRange + ']?',
            rsOptJoin =
              '(?:' +
              rsZWJ +
              '(?:' +
              [rsNonAstral, rsRegional, rsSurrPair].join('|') +
              ')' +
              rsOptVar +
              reOptMod +
              ')*',
            rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
            rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
            rsSeq = rsOptVar + reOptMod + rsOptJoin,
            rsEmoji =
              '(?:' +
              [rsDingbat, rsRegional, rsSurrPair].join('|') +
              ')' +
              rsSeq,
            rsSymbol =
              '(?:' +
              [
                rsNonAstral + rsCombo + '?',
                rsCombo,
                rsRegional,
                rsSurrPair,
                rsAstral,
              ].join('|') +
              ')'

          /** Used to match apostrophes. */
          var reApos = RegExp(rsApos, 'g')

          /**
           * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
           * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
           */
          var reComboMark = RegExp(rsCombo, 'g')

          /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
          var reUnicode = RegExp(
            rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq,
            'g'
          )

          /** Used to match complex or compound words. */
          var reUnicodeWord = RegExp(
            [
              rsUpper +
                '?' +
                rsLower +
                '+' +
                rsOptContrLower +
                '(?=' +
                [rsBreak, rsUpper, '$'].join('|') +
                ')',
              rsMiscUpper +
                '+' +
                rsOptContrUpper +
                '(?=' +
                [rsBreak, rsUpper + rsMiscLower, '$'].join('|') +
                ')',
              rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
              rsUpper + '+' + rsOptContrUpper,
              rsOrdUpper,
              rsOrdLower,
              rsDigits,
              rsEmoji,
            ].join('|'),
            'g'
          )

          /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
          var reHasUnicode = RegExp(
            '[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']'
          )

          /** Used to detect strings that need a more robust regexp to match words. */
          var reHasUnicodeWord =
            /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/

          /** Used to assign default `context` object properties. */
          var contextProps = [
            'Array',
            'Buffer',
            'DataView',
            'Date',
            'Error',
            'Float32Array',
            'Float64Array',
            'Function',
            'Int8Array',
            'Int16Array',
            'Int32Array',
            'Map',
            'Math',
            'Object',
            'Promise',
            'RegExp',
            'Set',
            'String',
            'Symbol',
            'TypeError',
            'Uint8Array',
            'Uint8ClampedArray',
            'Uint16Array',
            'Uint32Array',
            'WeakMap',
            '_',
            'clearTimeout',
            'isFinite',
            'parseInt',
            'setTimeout',
          ]

          /** Used to make template sourceURLs easier to identify. */
          var templateCounter = -1

          /** Used to identify `toStringTag` values of typed arrays. */
          var typedArrayTags = {}
          typedArrayTags[float32Tag] =
            typedArrayTags[float64Tag] =
            typedArrayTags[int8Tag] =
            typedArrayTags[int16Tag] =
            typedArrayTags[int32Tag] =
            typedArrayTags[uint8Tag] =
            typedArrayTags[uint8ClampedTag] =
            typedArrayTags[uint16Tag] =
            typedArrayTags[uint32Tag] =
              true
          typedArrayTags[argsTag] =
            typedArrayTags[arrayTag] =
            typedArrayTags[arrayBufferTag] =
            typedArrayTags[boolTag] =
            typedArrayTags[dataViewTag] =
            typedArrayTags[dateTag] =
            typedArrayTags[errorTag] =
            typedArrayTags[funcTag] =
            typedArrayTags[mapTag] =
            typedArrayTags[numberTag] =
            typedArrayTags[objectTag] =
            typedArrayTags[regexpTag] =
            typedArrayTags[setTag] =
            typedArrayTags[stringTag] =
            typedArrayTags[weakMapTag] =
              false

          /** Used to identify `toStringTag` values supported by `_.clone`. */
          var cloneableTags = {}
          cloneableTags[argsTag] =
            cloneableTags[arrayTag] =
            cloneableTags[arrayBufferTag] =
            cloneableTags[dataViewTag] =
            cloneableTags[boolTag] =
            cloneableTags[dateTag] =
            cloneableTags[float32Tag] =
            cloneableTags[float64Tag] =
            cloneableTags[int8Tag] =
            cloneableTags[int16Tag] =
            cloneableTags[int32Tag] =
            cloneableTags[mapTag] =
            cloneableTags[numberTag] =
            cloneableTags[objectTag] =
            cloneableTags[regexpTag] =
            cloneableTags[setTag] =
            cloneableTags[stringTag] =
            cloneableTags[symbolTag] =
            cloneableTags[uint8Tag] =
            cloneableTags[uint8ClampedTag] =
            cloneableTags[uint16Tag] =
            cloneableTags[uint32Tag] =
              true
          cloneableTags[errorTag] =
            cloneableTags[funcTag] =
            cloneableTags[weakMapTag] =
              false

          /** Used to map Latin Unicode letters to basic Latin letters. */
          var deburredLetters = {
            // Latin-1 Supplement block.
            '\xc0': 'A',
            '\xc1': 'A',
            '\xc2': 'A',
            '\xc3': 'A',
            '\xc4': 'A',
            '\xc5': 'A',
            '\xe0': 'a',
            '\xe1': 'a',
            '\xe2': 'a',
            '\xe3': 'a',
            '\xe4': 'a',
            '\xe5': 'a',
            '\xc7': 'C',
            '\xe7': 'c',
            '\xd0': 'D',
            '\xf0': 'd',
            '\xc8': 'E',
            '\xc9': 'E',
            '\xca': 'E',
            '\xcb': 'E',
            '\xe8': 'e',
            '\xe9': 'e',
            '\xea': 'e',
            '\xeb': 'e',
            '\xcc': 'I',
            '\xcd': 'I',
            '\xce': 'I',
            '\xcf': 'I',
            '\xec': 'i',
            '\xed': 'i',
            '\xee': 'i',
            '\xef': 'i',
            '\xd1': 'N',
            '\xf1': 'n',
            '\xd2': 'O',
            '\xd3': 'O',
            '\xd4': 'O',
            '\xd5': 'O',
            '\xd6': 'O',
            '\xd8': 'O',
            '\xf2': 'o',
            '\xf3': 'o',
            '\xf4': 'o',
            '\xf5': 'o',
            '\xf6': 'o',
            '\xf8': 'o',
            '\xd9': 'U',
            '\xda': 'U',
            '\xdb': 'U',
            '\xdc': 'U',
            '\xf9': 'u',
            '\xfa': 'u',
            '\xfb': 'u',
            '\xfc': 'u',
            '\xdd': 'Y',
            '\xfd': 'y',
            '\xff': 'y',
            '\xc6': 'Ae',
            '\xe6': 'ae',
            '\xde': 'Th',
            '\xfe': 'th',
            '\xdf': 'ss',
            // Latin Extended-A block.
            '\u0100': 'A',
            '\u0102': 'A',
            '\u0104': 'A',
            '\u0101': 'a',
            '\u0103': 'a',
            '\u0105': 'a',
            '\u0106': 'C',
            '\u0108': 'C',
            '\u010a': 'C',
            '\u010c': 'C',
            '\u0107': 'c',
            '\u0109': 'c',
            '\u010b': 'c',
            '\u010d': 'c',
            '\u010e': 'D',
            '\u0110': 'D',
            '\u010f': 'd',
            '\u0111': 'd',
            '\u0112': 'E',
            '\u0114': 'E',
            '\u0116': 'E',
            '\u0118': 'E',
            '\u011a': 'E',
            '\u0113': 'e',
            '\u0115': 'e',
            '\u0117': 'e',
            '\u0119': 'e',
            '\u011b': 'e',
            '\u011c': 'G',
            '\u011e': 'G',
            '\u0120': 'G',
            '\u0122': 'G',
            '\u011d': 'g',
            '\u011f': 'g',
            '\u0121': 'g',
            '\u0123': 'g',
            '\u0124': 'H',
            '\u0126': 'H',
            '\u0125': 'h',
            '\u0127': 'h',
            '\u0128': 'I',
            '\u012a': 'I',
            '\u012c': 'I',
            '\u012e': 'I',
            '\u0130': 'I',
            '\u0129': 'i',
            '\u012b': 'i',
            '\u012d': 'i',
            '\u012f': 'i',
            '\u0131': 'i',
            '\u0134': 'J',
            '\u0135': 'j',
            '\u0136': 'K',
            '\u0137': 'k',
            '\u0138': 'k',
            '\u0139': 'L',
            '\u013b': 'L',
            '\u013d': 'L',
            '\u013f': 'L',
            '\u0141': 'L',
            '\u013a': 'l',
            '\u013c': 'l',
            '\u013e': 'l',
            '\u0140': 'l',
            '\u0142': 'l',
            '\u0143': 'N',
            '\u0145': 'N',
            '\u0147': 'N',
            '\u014a': 'N',
            '\u0144': 'n',
            '\u0146': 'n',
            '\u0148': 'n',
            '\u014b': 'n',
            '\u014c': 'O',
            '\u014e': 'O',
            '\u0150': 'O',
            '\u014d': 'o',
            '\u014f': 'o',
            '\u0151': 'o',
            '\u0154': 'R',
            '\u0156': 'R',
            '\u0158': 'R',
            '\u0155': 'r',
            '\u0157': 'r',
            '\u0159': 'r',
            '\u015a': 'S',
            '\u015c': 'S',
            '\u015e': 'S',
            '\u0160': 'S',
            '\u015b': 's',
            '\u015d': 's',
            '\u015f': 's',
            '\u0161': 's',
            '\u0162': 'T',
            '\u0164': 'T',
            '\u0166': 'T',
            '\u0163': 't',
            '\u0165': 't',
            '\u0167': 't',
            '\u0168': 'U',
            '\u016a': 'U',
            '\u016c': 'U',
            '\u016e': 'U',
            '\u0170': 'U',
            '\u0172': 'U',
            '\u0169': 'u',
            '\u016b': 'u',
            '\u016d': 'u',
            '\u016f': 'u',
            '\u0171': 'u',
            '\u0173': 'u',
            '\u0174': 'W',
            '\u0175': 'w',
            '\u0176': 'Y',
            '\u0177': 'y',
            '\u0178': 'Y',
            '\u0179': 'Z',
            '\u017b': 'Z',
            '\u017d': 'Z',
            '\u017a': 'z',
            '\u017c': 'z',
            '\u017e': 'z',
            '\u0132': 'IJ',
            '\u0133': 'ij',
            '\u0152': 'Oe',
            '\u0153': 'oe',
            '\u0149': "'n",
            '\u017f': 's',
          }

          /** Used to map characters to HTML entities. */
          var htmlEscapes = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;',
          }

          /** Used to map HTML entities to characters. */
          var htmlUnescapes = {
            '&amp;': '&',
            '&lt;': '<',
            '&gt;': '>',
            '&quot;': '"',
            '&#39;': "'",
          }

          /** Used to escape characters for inclusion in compiled string literals. */
          var stringEscapes = {
            '\\': '\\',
            "'": "'",
            '\n': 'n',
            '\r': 'r',
            '\u2028': 'u2028',
            '\u2029': 'u2029',
          }

          /** Built-in method references without a dependency on `root`. */
          var freeParseFloat = parseFloat,
            freeParseInt = parseInt

          /** Detect free variable `global` from Node.js. */
          var freeGlobal =
            typeof __webpack_require__.g == 'object' &&
            __webpack_require__.g &&
            __webpack_require__.g.Object === Object &&
            __webpack_require__.g

          /** Detect free variable `self`. */
          var freeSelf =
            typeof self == 'object' && self && self.Object === Object && self

          /** Used as a reference to the global object. */
          var root = freeGlobal || freeSelf || Function('return this')()

          /** Detect free variable `exports`. */
          var freeExports = true && exports && !exports.nodeType && exports

          /** Detect free variable `module`. */
          var freeModule =
            freeExports &&
            'object' == 'object' &&
            module &&
            !module.nodeType &&
            module

          /** Detect the popular CommonJS extension `module.exports`. */
          var moduleExports = freeModule && freeModule.exports === freeExports

          /** Detect free variable `process` from Node.js. */
          var freeProcess = moduleExports && freeGlobal.process

          /** Used to access faster Node.js helpers. */
          var nodeUtil = (function () {
            try {
              // Use `util.types` for Node.js 10+.
              var types =
                freeModule &&
                freeModule.require &&
                freeModule.require('util').types

              if (types) {
                return types
              }

              // Legacy `process.binding('util')` for Node.js < 10.
              return (
                freeProcess &&
                freeProcess.binding &&
                freeProcess.binding('util')
              )
            } catch (e) {}
          })()

          /* Node.js helper references. */
          var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
            nodeIsDate = nodeUtil && nodeUtil.isDate,
            nodeIsMap = nodeUtil && nodeUtil.isMap,
            nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
            nodeIsSet = nodeUtil && nodeUtil.isSet,
            nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray

          /*--------------------------------------------------------------------------*/

          /**
           * A faster alternative to `Function#apply`, this function invokes `func`
           * with the `this` binding of `thisArg` and the arguments of `args`.
           *
           * @private
           * @param {Function} func The function to invoke.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {Array} args The arguments to invoke `func` with.
           * @returns {*} Returns the result of `func`.
           */
          function apply(func, thisArg, args) {
            switch (args.length) {
              case 0:
                return func.call(thisArg)
              case 1:
                return func.call(thisArg, args[0])
              case 2:
                return func.call(thisArg, args[0], args[1])
              case 3:
                return func.call(thisArg, args[0], args[1], args[2])
            }
            return func.apply(thisArg, args)
          }

          /**
           * A specialized version of `baseAggregator` for arrays.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} setter The function to set `accumulator` values.
           * @param {Function} iteratee The iteratee to transform keys.
           * @param {Object} accumulator The initial aggregated object.
           * @returns {Function} Returns `accumulator`.
           */
          function arrayAggregator(array, setter, iteratee, accumulator) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              var value = array[index]
              setter(accumulator, value, iteratee(value), array)
            }
            return accumulator
          }

          /**
           * A specialized version of `_.forEach` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns `array`.
           */
          function arrayEach(array, iteratee) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              if (iteratee(array[index], index, array) === false) {
                break
              }
            }
            return array
          }

          /**
           * A specialized version of `_.forEachRight` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns `array`.
           */
          function arrayEachRight(array, iteratee) {
            var length = array == null ? 0 : array.length

            while (length--) {
              if (iteratee(array[length], length, array) === false) {
                break
              }
            }
            return array
          }

          /**
           * A specialized version of `_.every` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if all elements pass the predicate check,
           *  else `false`.
           */
          function arrayEvery(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              if (!predicate(array[index], index, array)) {
                return false
              }
            }
            return true
          }

          /**
           * A specialized version of `_.filter` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           */
          function arrayFilter(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length,
              resIndex = 0,
              result = []

            while (++index < length) {
              var value = array[index]
              if (predicate(value, index, array)) {
                result[resIndex++] = value
              }
            }
            return result
          }

          /**
           * A specialized version of `_.includes` for arrays without support for
           * specifying an index to search from.
           *
           * @private
           * @param {Array} [array] The array to inspect.
           * @param {*} target The value to search for.
           * @returns {boolean} Returns `true` if `target` is found, else `false`.
           */
          function arrayIncludes(array, value) {
            var length = array == null ? 0 : array.length
            return !!length && baseIndexOf(array, value, 0) > -1
          }

          /**
           * This function is like `arrayIncludes` except that it accepts a comparator.
           *
           * @private
           * @param {Array} [array] The array to inspect.
           * @param {*} target The value to search for.
           * @param {Function} comparator The comparator invoked per element.
           * @returns {boolean} Returns `true` if `target` is found, else `false`.
           */
          function arrayIncludesWith(array, value, comparator) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              if (comparator(value, array[index])) {
                return true
              }
            }
            return false
          }

          /**
           * A specialized version of `_.map` for arrays without support for iteratee
           * shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           */
          function arrayMap(array, iteratee) {
            var index = -1,
              length = array == null ? 0 : array.length,
              result = Array(length)

            while (++index < length) {
              result[index] = iteratee(array[index], index, array)
            }
            return result
          }

          /**
           * Appends the elements of `values` to `array`.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {Array} values The values to append.
           * @returns {Array} Returns `array`.
           */
          function arrayPush(array, values) {
            var index = -1,
              length = values.length,
              offset = array.length

            while (++index < length) {
              array[offset + index] = values[index]
            }
            return array
          }

          /**
           * A specialized version of `_.reduce` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {*} [accumulator] The initial value.
           * @param {boolean} [initAccum] Specify using the first element of `array` as
           *  the initial value.
           * @returns {*} Returns the accumulated value.
           */
          function arrayReduce(array, iteratee, accumulator, initAccum) {
            var index = -1,
              length = array == null ? 0 : array.length

            if (initAccum && length) {
              accumulator = array[++index]
            }
            while (++index < length) {
              accumulator = iteratee(accumulator, array[index], index, array)
            }
            return accumulator
          }

          /**
           * A specialized version of `_.reduceRight` for arrays without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {*} [accumulator] The initial value.
           * @param {boolean} [initAccum] Specify using the last element of `array` as
           *  the initial value.
           * @returns {*} Returns the accumulated value.
           */
          function arrayReduceRight(array, iteratee, accumulator, initAccum) {
            var length = array == null ? 0 : array.length
            if (initAccum && length) {
              accumulator = array[--length]
            }
            while (length--) {
              accumulator = iteratee(accumulator, array[length], length, array)
            }
            return accumulator
          }

          /**
           * A specialized version of `_.some` for arrays without support for iteratee
           * shorthands.
           *
           * @private
           * @param {Array} [array] The array to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           */
          function arraySome(array, predicate) {
            var index = -1,
              length = array == null ? 0 : array.length

            while (++index < length) {
              if (predicate(array[index], index, array)) {
                return true
              }
            }
            return false
          }

          /**
           * Gets the size of an ASCII `string`.
           *
           * @private
           * @param {string} string The string inspect.
           * @returns {number} Returns the string size.
           */
          var asciiSize = baseProperty('length')

          /**
           * Converts an ASCII `string` to an array.
           *
           * @private
           * @param {string} string The string to convert.
           * @returns {Array} Returns the converted array.
           */
          function asciiToArray(string) {
            return string.split('')
          }

          /**
           * Splits an ASCII `string` into an array of its words.
           *
           * @private
           * @param {string} The string to inspect.
           * @returns {Array} Returns the words of `string`.
           */
          function asciiWords(string) {
            return string.match(reAsciiWord) || []
          }

          /**
           * The base implementation of methods like `_.findKey` and `_.findLastKey`,
           * without support for iteratee shorthands, which iterates over `collection`
           * using `eachFunc`.
           *
           * @private
           * @param {Array|Object} collection The collection to inspect.
           * @param {Function} predicate The function invoked per iteration.
           * @param {Function} eachFunc The function to iterate over `collection`.
           * @returns {*} Returns the found element or its key, else `undefined`.
           */
          function baseFindKey(collection, predicate, eachFunc) {
            var result
            eachFunc(collection, function (value, key, collection) {
              if (predicate(value, key, collection)) {
                result = key
                return false
              }
            })
            return result
          }

          /**
           * The base implementation of `_.findIndex` and `_.findLastIndex` without
           * support for iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {Function} predicate The function invoked per iteration.
           * @param {number} fromIndex The index to search from.
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function baseFindIndex(array, predicate, fromIndex, fromRight) {
            var length = array.length,
              index = fromIndex + (fromRight ? 1 : -1)

            while (fromRight ? index-- : ++index < length) {
              if (predicate(array[index], index, array)) {
                return index
              }
            }
            return -1
          }

          /**
           * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} fromIndex The index to search from.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function baseIndexOf(array, value, fromIndex) {
            return value === value
              ? strictIndexOf(array, value, fromIndex)
              : baseFindIndex(array, baseIsNaN, fromIndex)
          }

          /**
           * This function is like `baseIndexOf` except that it accepts a comparator.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} fromIndex The index to search from.
           * @param {Function} comparator The comparator invoked per element.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function baseIndexOfWith(array, value, fromIndex, comparator) {
            var index = fromIndex - 1,
              length = array.length

            while (++index < length) {
              if (comparator(array[index], value)) {
                return index
              }
            }
            return -1
          }

          /**
           * The base implementation of `_.isNaN` without support for number objects.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
           */
          function baseIsNaN(value) {
            return value !== value
          }

          /**
           * The base implementation of `_.mean` and `_.meanBy` without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {number} Returns the mean.
           */
          function baseMean(array, iteratee) {
            var length = array == null ? 0 : array.length
            return length ? baseSum(array, iteratee) / length : NAN
          }

          /**
           * The base implementation of `_.property` without support for deep paths.
           *
           * @private
           * @param {string} key The key of the property to get.
           * @returns {Function} Returns the new accessor function.
           */
          function baseProperty(key) {
            return function (object) {
              return object == null ? undefined : object[key]
            }
          }

          /**
           * The base implementation of `_.propertyOf` without support for deep paths.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Function} Returns the new accessor function.
           */
          function basePropertyOf(object) {
            return function (key) {
              return object == null ? undefined : object[key]
            }
          }

          /**
           * The base implementation of `_.reduce` and `_.reduceRight`, without support
           * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {*} accumulator The initial value.
           * @param {boolean} initAccum Specify using the first or last element of
           *  `collection` as the initial value.
           * @param {Function} eachFunc The function to iterate over `collection`.
           * @returns {*} Returns the accumulated value.
           */
          function baseReduce(
            collection,
            iteratee,
            accumulator,
            initAccum,
            eachFunc
          ) {
            eachFunc(collection, function (value, index, collection) {
              accumulator = initAccum
                ? ((initAccum = false), value)
                : iteratee(accumulator, value, index, collection)
            })
            return accumulator
          }

          /**
           * The base implementation of `_.sortBy` which uses `comparer` to define the
           * sort order of `array` and replaces criteria objects with their corresponding
           * values.
           *
           * @private
           * @param {Array} array The array to sort.
           * @param {Function} comparer The function to define sort order.
           * @returns {Array} Returns `array`.
           */
          function baseSortBy(array, comparer) {
            var length = array.length

            array.sort(comparer)
            while (length--) {
              array[length] = array[length].value
            }
            return array
          }

          /**
           * The base implementation of `_.sum` and `_.sumBy` without support for
           * iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {number} Returns the sum.
           */
          function baseSum(array, iteratee) {
            var result,
              index = -1,
              length = array.length

            while (++index < length) {
              var current = iteratee(array[index])
              if (current !== undefined) {
                result = result === undefined ? current : result + current
              }
            }
            return result
          }

          /**
           * The base implementation of `_.times` without support for iteratee shorthands
           * or max array length checks.
           *
           * @private
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           */
          function baseTimes(n, iteratee) {
            var index = -1,
              result = Array(n)

            while (++index < n) {
              result[index] = iteratee(index)
            }
            return result
          }

          /**
           * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
           * of key-value pairs for `object` corresponding to the property names of `props`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array} props The property names to get values for.
           * @returns {Object} Returns the key-value pairs.
           */
          function baseToPairs(object, props) {
            return arrayMap(props, function (key) {
              return [key, object[key]]
            })
          }

          /**
           * The base implementation of `_.trim`.
           *
           * @private
           * @param {string} string The string to trim.
           * @returns {string} Returns the trimmed string.
           */
          function baseTrim(string) {
            return string
              ? string
                  .slice(0, trimmedEndIndex(string) + 1)
                  .replace(reTrimStart, '')
              : string
          }

          /**
           * The base implementation of `_.unary` without support for storing metadata.
           *
           * @private
           * @param {Function} func The function to cap arguments for.
           * @returns {Function} Returns the new capped function.
           */
          function baseUnary(func) {
            return function (value) {
              return func(value)
            }
          }

          /**
           * The base implementation of `_.values` and `_.valuesIn` which creates an
           * array of `object` property values corresponding to the property names
           * of `props`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array} props The property names to get values for.
           * @returns {Object} Returns the array of property values.
           */
          function baseValues(object, props) {
            return arrayMap(props, function (key) {
              return object[key]
            })
          }

          /**
           * Checks if a `cache` value for `key` exists.
           *
           * @private
           * @param {Object} cache The cache to query.
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function cacheHas(cache, key) {
            return cache.has(key)
          }

          /**
           * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
           * that is not found in the character symbols.
           *
           * @private
           * @param {Array} strSymbols The string symbols to inspect.
           * @param {Array} chrSymbols The character symbols to find.
           * @returns {number} Returns the index of the first unmatched string symbol.
           */
          function charsStartIndex(strSymbols, chrSymbols) {
            var index = -1,
              length = strSymbols.length

            while (
              ++index < length &&
              baseIndexOf(chrSymbols, strSymbols[index], 0) > -1
            ) {}
            return index
          }

          /**
           * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
           * that is not found in the character symbols.
           *
           * @private
           * @param {Array} strSymbols The string symbols to inspect.
           * @param {Array} chrSymbols The character symbols to find.
           * @returns {number} Returns the index of the last unmatched string symbol.
           */
          function charsEndIndex(strSymbols, chrSymbols) {
            var index = strSymbols.length

            while (
              index-- &&
              baseIndexOf(chrSymbols, strSymbols[index], 0) > -1
            ) {}
            return index
          }

          /**
           * Gets the number of `placeholder` occurrences in `array`.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} placeholder The placeholder to search for.
           * @returns {number} Returns the placeholder count.
           */
          function countHolders(array, placeholder) {
            var length = array.length,
              result = 0

            while (length--) {
              if (array[length] === placeholder) {
                ++result
              }
            }
            return result
          }

          /**
           * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
           * letters to basic Latin letters.
           *
           * @private
           * @param {string} letter The matched letter to deburr.
           * @returns {string} Returns the deburred letter.
           */
          var deburrLetter = basePropertyOf(deburredLetters)

          /**
           * Used by `_.escape` to convert characters to HTML entities.
           *
           * @private
           * @param {string} chr The matched character to escape.
           * @returns {string} Returns the escaped character.
           */
          var escapeHtmlChar = basePropertyOf(htmlEscapes)

          /**
           * Used by `_.template` to escape characters for inclusion in compiled string literals.
           *
           * @private
           * @param {string} chr The matched character to escape.
           * @returns {string} Returns the escaped character.
           */
          function escapeStringChar(chr) {
            return '\\' + stringEscapes[chr]
          }

          /**
           * Gets the value at `key` of `object`.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {string} key The key of the property to get.
           * @returns {*} Returns the property value.
           */
          function getValue(object, key) {
            return object == null ? undefined : object[key]
          }

          /**
           * Checks if `string` contains Unicode symbols.
           *
           * @private
           * @param {string} string The string to inspect.
           * @returns {boolean} Returns `true` if a symbol is found, else `false`.
           */
          function hasUnicode(string) {
            return reHasUnicode.test(string)
          }

          /**
           * Checks if `string` contains a word composed of Unicode symbols.
           *
           * @private
           * @param {string} string The string to inspect.
           * @returns {boolean} Returns `true` if a word is found, else `false`.
           */
          function hasUnicodeWord(string) {
            return reHasUnicodeWord.test(string)
          }

          /**
           * Converts `iterator` to an array.
           *
           * @private
           * @param {Object} iterator The iterator to convert.
           * @returns {Array} Returns the converted array.
           */
          function iteratorToArray(iterator) {
            var data,
              result = []

            while (!(data = iterator.next()).done) {
              result.push(data.value)
            }
            return result
          }

          /**
           * Converts `map` to its key-value pairs.
           *
           * @private
           * @param {Object} map The map to convert.
           * @returns {Array} Returns the key-value pairs.
           */
          function mapToArray(map) {
            var index = -1,
              result = Array(map.size)

            map.forEach(function (value, key) {
              result[++index] = [key, value]
            })
            return result
          }

          /**
           * Creates a unary function that invokes `func` with its argument transformed.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {Function} transform The argument transform.
           * @returns {Function} Returns the new function.
           */
          function overArg(func, transform) {
            return function (arg) {
              return func(transform(arg))
            }
          }

          /**
           * Replaces all `placeholder` elements in `array` with an internal placeholder
           * and returns an array of their indexes.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {*} placeholder The placeholder to replace.
           * @returns {Array} Returns the new array of placeholder indexes.
           */
          function replaceHolders(array, placeholder) {
            var index = -1,
              length = array.length,
              resIndex = 0,
              result = []

            while (++index < length) {
              var value = array[index]
              if (value === placeholder || value === PLACEHOLDER) {
                array[index] = PLACEHOLDER
                result[resIndex++] = index
              }
            }
            return result
          }

          /**
           * Converts `set` to an array of its values.
           *
           * @private
           * @param {Object} set The set to convert.
           * @returns {Array} Returns the values.
           */
          function setToArray(set) {
            var index = -1,
              result = Array(set.size)

            set.forEach(function (value) {
              result[++index] = value
            })
            return result
          }

          /**
           * Converts `set` to its value-value pairs.
           *
           * @private
           * @param {Object} set The set to convert.
           * @returns {Array} Returns the value-value pairs.
           */
          function setToPairs(set) {
            var index = -1,
              result = Array(set.size)

            set.forEach(function (value) {
              result[++index] = [value, value]
            })
            return result
          }

          /**
           * A specialized version of `_.indexOf` which performs strict equality
           * comparisons of values, i.e. `===`.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} fromIndex The index to search from.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function strictIndexOf(array, value, fromIndex) {
            var index = fromIndex - 1,
              length = array.length

            while (++index < length) {
              if (array[index] === value) {
                return index
              }
            }
            return -1
          }

          /**
           * A specialized version of `_.lastIndexOf` which performs strict equality
           * comparisons of values, i.e. `===`.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} fromIndex The index to search from.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function strictLastIndexOf(array, value, fromIndex) {
            var index = fromIndex + 1
            while (index--) {
              if (array[index] === value) {
                return index
              }
            }
            return index
          }

          /**
           * Gets the number of symbols in `string`.
           *
           * @private
           * @param {string} string The string to inspect.
           * @returns {number} Returns the string size.
           */
          function stringSize(string) {
            return hasUnicode(string) ? unicodeSize(string) : asciiSize(string)
          }

          /**
           * Converts `string` to an array.
           *
           * @private
           * @param {string} string The string to convert.
           * @returns {Array} Returns the converted array.
           */
          function stringToArray(string) {
            return hasUnicode(string)
              ? unicodeToArray(string)
              : asciiToArray(string)
          }

          /**
           * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
           * character of `string`.
           *
           * @private
           * @param {string} string The string to inspect.
           * @returns {number} Returns the index of the last non-whitespace character.
           */
          function trimmedEndIndex(string) {
            var index = string.length

            while (index-- && reWhitespace.test(string.charAt(index))) {}
            return index
          }

          /**
           * Used by `_.unescape` to convert HTML entities to characters.
           *
           * @private
           * @param {string} chr The matched character to unescape.
           * @returns {string} Returns the unescaped character.
           */
          var unescapeHtmlChar = basePropertyOf(htmlUnescapes)

          /**
           * Gets the size of a Unicode `string`.
           *
           * @private
           * @param {string} string The string inspect.
           * @returns {number} Returns the string size.
           */
          function unicodeSize(string) {
            var result = (reUnicode.lastIndex = 0)
            while (reUnicode.test(string)) {
              ++result
            }
            return result
          }

          /**
           * Converts a Unicode `string` to an array.
           *
           * @private
           * @param {string} string The string to convert.
           * @returns {Array} Returns the converted array.
           */
          function unicodeToArray(string) {
            return string.match(reUnicode) || []
          }

          /**
           * Splits a Unicode `string` into an array of its words.
           *
           * @private
           * @param {string} The string to inspect.
           * @returns {Array} Returns the words of `string`.
           */
          function unicodeWords(string) {
            return string.match(reUnicodeWord) || []
          }

          /*--------------------------------------------------------------------------*/

          /**
           * Create a new pristine `lodash` function using the `context` object.
           *
           * @static
           * @memberOf _
           * @since 1.1.0
           * @category Util
           * @param {Object} [context=root] The context object.
           * @returns {Function} Returns a new `lodash` function.
           * @example
           *
           * _.mixin({ 'foo': _.constant('foo') });
           *
           * var lodash = _.runInContext();
           * lodash.mixin({ 'bar': lodash.constant('bar') });
           *
           * _.isFunction(_.foo);
           * // => true
           * _.isFunction(_.bar);
           * // => false
           *
           * lodash.isFunction(lodash.foo);
           * // => false
           * lodash.isFunction(lodash.bar);
           * // => true
           *
           * // Create a suped-up `defer` in Node.js.
           * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
           */
          var runInContext = function runInContext(context) {
            context =
              context == null
                ? root
                : _.defaults(root.Object(), context, _.pick(root, contextProps))

            /** Built-in constructor references. */
            var Array = context.Array,
              Date = context.Date,
              Error = context.Error,
              Function = context.Function,
              Math = context.Math,
              Object = context.Object,
              RegExp = context.RegExp,
              String = context.String,
              TypeError = context.TypeError

            /** Used for built-in method references. */
            var arrayProto = Array.prototype,
              funcProto = Function.prototype,
              objectProto = Object.prototype

            /** Used to detect overreaching core-js shims. */
            var coreJsData = context['__core-js_shared__']

            /** Used to resolve the decompiled source of functions. */
            var funcToString = funcProto.toString

            /** Used to check objects for own properties. */
            var hasOwnProperty = objectProto.hasOwnProperty

            /** Used to generate unique IDs. */
            var idCounter = 0

            /** Used to detect methods masquerading as native. */
            var maskSrcKey = (function () {
              var uid = /[^.]+$/.exec(
                (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) ||
                  ''
              )
              return uid ? 'Symbol(src)_1.' + uid : ''
            })()

            /**
             * Used to resolve the
             * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
             * of values.
             */
            var nativeObjectToString = objectProto.toString

            /** Used to infer the `Object` constructor. */
            var objectCtorString = funcToString.call(Object)

            /** Used to restore the original `_` reference in `_.noConflict`. */
            var oldDash = root._

            /** Used to detect if a method is native. */
            var reIsNative = RegExp(
              '^' +
                funcToString
                  .call(hasOwnProperty)
                  .replace(reRegExpChar, '\\$&')
                  .replace(
                    /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                    '$1.*?'
                  ) +
                '$'
            )

            /** Built-in value references. */
            var Buffer = moduleExports ? context.Buffer : undefined,
              Symbol = context.Symbol,
              Uint8Array = context.Uint8Array,
              allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
              getPrototype = overArg(Object.getPrototypeOf, Object),
              objectCreate = Object.create,
              propertyIsEnumerable = objectProto.propertyIsEnumerable,
              splice = arrayProto.splice,
              spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
              symIterator = Symbol ? Symbol.iterator : undefined,
              symToStringTag = Symbol ? Symbol.toStringTag : undefined

            var defineProperty = (function () {
              try {
                var func = getNative(Object, 'defineProperty')
                func({}, '', {})
                return func
              } catch (e) {}
            })()

            /** Mocked built-ins. */
            var ctxClearTimeout =
                context.clearTimeout !== root.clearTimeout &&
                context.clearTimeout,
              ctxNow = Date && Date.now !== root.Date.now && Date.now,
              ctxSetTimeout =
                context.setTimeout !== root.setTimeout && context.setTimeout

            /* Built-in method references for those with the same name as other `lodash` methods. */
            var nativeCeil = Math.ceil,
              nativeFloor = Math.floor,
              nativeGetSymbols = Object.getOwnPropertySymbols,
              nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
              nativeIsFinite = context.isFinite,
              nativeJoin = arrayProto.join,
              nativeKeys = overArg(Object.keys, Object),
              nativeMax = Math.max,
              nativeMin = Math.min,
              nativeNow = Date.now,
              nativeParseInt = context.parseInt,
              nativeRandom = Math.random,
              nativeReverse = arrayProto.reverse

            /* Built-in method references that are verified to be native. */
            var DataView = getNative(context, 'DataView'),
              Map = getNative(context, 'Map'),
              Promise = getNative(context, 'Promise'),
              Set = getNative(context, 'Set'),
              WeakMap = getNative(context, 'WeakMap'),
              nativeCreate = getNative(Object, 'create')

            /** Used to store function metadata. */
            var metaMap = WeakMap && new WeakMap()

            /** Used to lookup unminified function names. */
            var realNames = {}

            /** Used to detect maps, sets, and weakmaps. */
            var dataViewCtorString = toSource(DataView),
              mapCtorString = toSource(Map),
              promiseCtorString = toSource(Promise),
              setCtorString = toSource(Set),
              weakMapCtorString = toSource(WeakMap)

            /** Used to convert symbols to primitives and strings. */
            var symbolProto = Symbol ? Symbol.prototype : undefined,
              symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
              symbolToString = symbolProto ? symbolProto.toString : undefined

            /*------------------------------------------------------------------------*/

            /**
             * Creates a `lodash` object which wraps `value` to enable implicit method
             * chain sequences. Methods that operate on and return arrays, collections,
             * and functions can be chained together. Methods that retrieve a single value
             * or may return a primitive value will automatically end the chain sequence
             * and return the unwrapped value. Otherwise, the value must be unwrapped
             * with `_#value`.
             *
             * Explicit chain sequences, which must be unwrapped with `_#value`, may be
             * enabled using `_.chain`.
             *
             * The execution of chained methods is lazy, that is, it's deferred until
             * `_#value` is implicitly or explicitly called.
             *
             * Lazy evaluation allows several methods to support shortcut fusion.
             * Shortcut fusion is an optimization to merge iteratee calls; this avoids
             * the creation of intermediate arrays and can greatly reduce the number of
             * iteratee executions. Sections of a chain sequence qualify for shortcut
             * fusion if the section is applied to an array and iteratees accept only
             * one argument. The heuristic for whether a section qualifies for shortcut
             * fusion is subject to change.
             *
             * Chaining is supported in custom builds as long as the `_#value` method is
             * directly or indirectly included in the build.
             *
             * In addition to lodash methods, wrappers have `Array` and `String` methods.
             *
             * The wrapper `Array` methods are:
             * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
             *
             * The wrapper `String` methods are:
             * `replace` and `split`
             *
             * The wrapper methods that support shortcut fusion are:
             * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
             * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
             * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
             *
             * The chainable wrapper methods are:
             * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
             * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
             * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
             * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
             * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
             * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
             * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
             * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
             * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
             * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
             * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
             * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
             * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
             * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
             * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
             * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
             * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
             * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
             * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
             * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
             * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
             * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
             * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
             * `zipObject`, `zipObjectDeep`, and `zipWith`
             *
             * The wrapper methods that are **not** chainable by default are:
             * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
             * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
             * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
             * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
             * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
             * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
             * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
             * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
             * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
             * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
             * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
             * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
             * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
             * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
             * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
             * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
             * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
             * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
             * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
             * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
             * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
             * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
             * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
             * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
             * `upperFirst`, `value`, and `words`
             *
             * @name _
             * @constructor
             * @category Seq
             * @param {*} value The value to wrap in a `lodash` instance.
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * var wrapped = _([1, 2, 3]);
             *
             * // Returns an unwrapped value.
             * wrapped.reduce(_.add);
             * // => 6
             *
             * // Returns a wrapped value.
             * var squares = wrapped.map(square);
             *
             * _.isArray(squares);
             * // => false
             *
             * _.isArray(squares.value());
             * // => true
             */
            function lodash(value) {
              if (
                isObjectLike(value) &&
                !isArray(value) &&
                !(value instanceof LazyWrapper)
              ) {
                if (value instanceof LodashWrapper) {
                  return value
                }
                if (hasOwnProperty.call(value, '__wrapped__')) {
                  return wrapperClone(value)
                }
              }
              return new LodashWrapper(value)
            }

            /**
             * The base implementation of `_.create` without support for assigning
             * properties to the created object.
             *
             * @private
             * @param {Object} proto The object to inherit from.
             * @returns {Object} Returns the new object.
             */
            var baseCreate = (function () {
              function object() {}
              return function (proto) {
                if (!isObject(proto)) {
                  return {}
                }
                if (objectCreate) {
                  return objectCreate(proto)
                }
                object.prototype = proto
                var result = new object()
                object.prototype = undefined
                return result
              }
            })()

            /**
             * The function whose prototype chain sequence wrappers inherit from.
             *
             * @private
             */
            function baseLodash() {
              // No operation performed.
            }

            /**
             * The base constructor for creating `lodash` wrapper objects.
             *
             * @private
             * @param {*} value The value to wrap.
             * @param {boolean} [chainAll] Enable explicit method chain sequences.
             */
            function LodashWrapper(value, chainAll) {
              this.__wrapped__ = value
              this.__actions__ = []
              this.__chain__ = !!chainAll
              this.__index__ = 0
              this.__values__ = undefined
            }

            /**
             * By default, the template delimiters used by lodash are like those in
             * embedded Ruby (ERB) as well as ES2015 template strings. Change the
             * following template settings to use alternative delimiters.
             *
             * @static
             * @memberOf _
             * @type {Object}
             */
            lodash.templateSettings = {
              /**
               * Used to detect `data` property values to be HTML-escaped.
               *
               * @memberOf _.templateSettings
               * @type {RegExp}
               */
              escape: reEscape,

              /**
               * Used to detect code to be evaluated.
               *
               * @memberOf _.templateSettings
               * @type {RegExp}
               */
              evaluate: reEvaluate,

              /**
               * Used to detect `data` property values to inject.
               *
               * @memberOf _.templateSettings
               * @type {RegExp}
               */
              interpolate: reInterpolate,

              /**
               * Used to reference the data object in the template text.
               *
               * @memberOf _.templateSettings
               * @type {string}
               */
              variable: '',

              /**
               * Used to import variables into the compiled template.
               *
               * @memberOf _.templateSettings
               * @type {Object}
               */
              imports: {
                /**
                 * A reference to the `lodash` function.
                 *
                 * @memberOf _.templateSettings.imports
                 * @type {Function}
                 */
                _: lodash,
              },
            }

            // Ensure wrappers are instances of `baseLodash`.
            lodash.prototype = baseLodash.prototype
            lodash.prototype.constructor = lodash

            LodashWrapper.prototype = baseCreate(baseLodash.prototype)
            LodashWrapper.prototype.constructor = LodashWrapper

            /*------------------------------------------------------------------------*/

            /**
             * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
             *
             * @private
             * @constructor
             * @param {*} value The value to wrap.
             */
            function LazyWrapper(value) {
              this.__wrapped__ = value
              this.__actions__ = []
              this.__dir__ = 1
              this.__filtered__ = false
              this.__iteratees__ = []
              this.__takeCount__ = MAX_ARRAY_LENGTH
              this.__views__ = []
            }

            /**
             * Creates a clone of the lazy wrapper object.
             *
             * @private
             * @name clone
             * @memberOf LazyWrapper
             * @returns {Object} Returns the cloned `LazyWrapper` object.
             */
            function lazyClone() {
              var result = new LazyWrapper(this.__wrapped__)
              result.__actions__ = copyArray(this.__actions__)
              result.__dir__ = this.__dir__
              result.__filtered__ = this.__filtered__
              result.__iteratees__ = copyArray(this.__iteratees__)
              result.__takeCount__ = this.__takeCount__
              result.__views__ = copyArray(this.__views__)
              return result
            }

            /**
             * Reverses the direction of lazy iteration.
             *
             * @private
             * @name reverse
             * @memberOf LazyWrapper
             * @returns {Object} Returns the new reversed `LazyWrapper` object.
             */
            function lazyReverse() {
              if (this.__filtered__) {
                var result = new LazyWrapper(this)
                result.__dir__ = -1
                result.__filtered__ = true
              } else {
                result = this.clone()
                result.__dir__ *= -1
              }
              return result
            }

            /**
             * Extracts the unwrapped value from its lazy wrapper.
             *
             * @private
             * @name value
             * @memberOf LazyWrapper
             * @returns {*} Returns the unwrapped value.
             */
            function lazyValue() {
              var array = this.__wrapped__.value(),
                dir = this.__dir__,
                isArr = isArray(array),
                isRight = dir < 0,
                arrLength = isArr ? array.length : 0,
                view = getView(0, arrLength, this.__views__),
                start = view.start,
                end = view.end,
                length = end - start,
                index = isRight ? end : start - 1,
                iteratees = this.__iteratees__,
                iterLength = iteratees.length,
                resIndex = 0,
                takeCount = nativeMin(length, this.__takeCount__)

              if (
                !isArr ||
                (!isRight && arrLength == length && takeCount == length)
              ) {
                return baseWrapperValue(array, this.__actions__)
              }
              var result = []

              outer: while (length-- && resIndex < takeCount) {
                index += dir

                var iterIndex = -1,
                  value = array[index]

                while (++iterIndex < iterLength) {
                  var data = iteratees[iterIndex],
                    iteratee = data.iteratee,
                    type = data.type,
                    computed = iteratee(value)

                  if (type == LAZY_MAP_FLAG) {
                    value = computed
                  } else if (!computed) {
                    if (type == LAZY_FILTER_FLAG) {
                      continue outer
                    } else {
                      break outer
                    }
                  }
                }
                result[resIndex++] = value
              }
              return result
            }

            // Ensure `LazyWrapper` is an instance of `baseLodash`.
            LazyWrapper.prototype = baseCreate(baseLodash.prototype)
            LazyWrapper.prototype.constructor = LazyWrapper

            /*------------------------------------------------------------------------*/

            /**
             * Creates a hash object.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function Hash(entries) {
              var index = -1,
                length = entries == null ? 0 : entries.length

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the hash.
             *
             * @private
             * @name clear
             * @memberOf Hash
             */
            function hashClear() {
              this.__data__ = nativeCreate ? nativeCreate(null) : {}
              this.size = 0
            }

            /**
             * Removes `key` and its value from the hash.
             *
             * @private
             * @name delete
             * @memberOf Hash
             * @param {Object} hash The hash to modify.
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function hashDelete(key) {
              var result = this.has(key) && delete this.__data__[key]
              this.size -= result ? 1 : 0
              return result
            }

            /**
             * Gets the hash value for `key`.
             *
             * @private
             * @name get
             * @memberOf Hash
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function hashGet(key) {
              var data = this.__data__
              if (nativeCreate) {
                var result = data[key]
                return result === HASH_UNDEFINED ? undefined : result
              }
              return hasOwnProperty.call(data, key) ? data[key] : undefined
            }

            /**
             * Checks if a hash value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf Hash
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function hashHas(key) {
              var data = this.__data__
              return nativeCreate
                ? data[key] !== undefined
                : hasOwnProperty.call(data, key)
            }

            /**
             * Sets the hash `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf Hash
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the hash instance.
             */
            function hashSet(key, value) {
              var data = this.__data__
              this.size += this.has(key) ? 0 : 1
              data[key] =
                nativeCreate && value === undefined ? HASH_UNDEFINED : value
              return this
            }

            // Add methods to `Hash`.
            Hash.prototype.clear = hashClear
            Hash.prototype['delete'] = hashDelete
            Hash.prototype.get = hashGet
            Hash.prototype.has = hashHas
            Hash.prototype.set = hashSet

            /*------------------------------------------------------------------------*/

            /**
             * Creates an list cache object.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function ListCache(entries) {
              var index = -1,
                length = entries == null ? 0 : entries.length

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the list cache.
             *
             * @private
             * @name clear
             * @memberOf ListCache
             */
            function listCacheClear() {
              this.__data__ = []
              this.size = 0
            }

            /**
             * Removes `key` and its value from the list cache.
             *
             * @private
             * @name delete
             * @memberOf ListCache
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function listCacheDelete(key) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              if (index < 0) {
                return false
              }
              var lastIndex = data.length - 1
              if (index == lastIndex) {
                data.pop()
              } else {
                splice.call(data, index, 1)
              }
              --this.size
              return true
            }

            /**
             * Gets the list cache value for `key`.
             *
             * @private
             * @name get
             * @memberOf ListCache
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function listCacheGet(key) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              return index < 0 ? undefined : data[index][1]
            }

            /**
             * Checks if a list cache value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf ListCache
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function listCacheHas(key) {
              return assocIndexOf(this.__data__, key) > -1
            }

            /**
             * Sets the list cache `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf ListCache
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the list cache instance.
             */
            function listCacheSet(key, value) {
              var data = this.__data__,
                index = assocIndexOf(data, key)

              if (index < 0) {
                ++this.size
                data.push([key, value])
              } else {
                data[index][1] = value
              }
              return this
            }

            // Add methods to `ListCache`.
            ListCache.prototype.clear = listCacheClear
            ListCache.prototype['delete'] = listCacheDelete
            ListCache.prototype.get = listCacheGet
            ListCache.prototype.has = listCacheHas
            ListCache.prototype.set = listCacheSet

            /*------------------------------------------------------------------------*/

            /**
             * Creates a map cache object to store key-value pairs.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function MapCache(entries) {
              var index = -1,
                length = entries == null ? 0 : entries.length

              this.clear()
              while (++index < length) {
                var entry = entries[index]
                this.set(entry[0], entry[1])
              }
            }

            /**
             * Removes all key-value entries from the map.
             *
             * @private
             * @name clear
             * @memberOf MapCache
             */
            function mapCacheClear() {
              this.size = 0
              this.__data__ = {
                hash: new Hash(),
                map: new (Map || ListCache)(),
                string: new Hash(),
              }
            }

            /**
             * Removes `key` and its value from the map.
             *
             * @private
             * @name delete
             * @memberOf MapCache
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function mapCacheDelete(key) {
              var result = getMapData(this, key)['delete'](key)
              this.size -= result ? 1 : 0
              return result
            }

            /**
             * Gets the map value for `key`.
             *
             * @private
             * @name get
             * @memberOf MapCache
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function mapCacheGet(key) {
              return getMapData(this, key).get(key)
            }

            /**
             * Checks if a map value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf MapCache
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function mapCacheHas(key) {
              return getMapData(this, key).has(key)
            }

            /**
             * Sets the map `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf MapCache
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the map cache instance.
             */
            function mapCacheSet(key, value) {
              var data = getMapData(this, key),
                size = data.size

              data.set(key, value)
              this.size += data.size == size ? 0 : 1
              return this
            }

            // Add methods to `MapCache`.
            MapCache.prototype.clear = mapCacheClear
            MapCache.prototype['delete'] = mapCacheDelete
            MapCache.prototype.get = mapCacheGet
            MapCache.prototype.has = mapCacheHas
            MapCache.prototype.set = mapCacheSet

            /*------------------------------------------------------------------------*/

            /**
             *
             * Creates an array cache object to store unique values.
             *
             * @private
             * @constructor
             * @param {Array} [values] The values to cache.
             */
            function SetCache(values) {
              var index = -1,
                length = values == null ? 0 : values.length

              this.__data__ = new MapCache()
              while (++index < length) {
                this.add(values[index])
              }
            }

            /**
             * Adds `value` to the array cache.
             *
             * @private
             * @name add
             * @memberOf SetCache
             * @alias push
             * @param {*} value The value to cache.
             * @returns {Object} Returns the cache instance.
             */
            function setCacheAdd(value) {
              this.__data__.set(value, HASH_UNDEFINED)
              return this
            }

            /**
             * Checks if `value` is in the array cache.
             *
             * @private
             * @name has
             * @memberOf SetCache
             * @param {*} value The value to search for.
             * @returns {number} Returns `true` if `value` is found, else `false`.
             */
            function setCacheHas(value) {
              return this.__data__.has(value)
            }

            // Add methods to `SetCache`.
            SetCache.prototype.add = SetCache.prototype.push = setCacheAdd
            SetCache.prototype.has = setCacheHas

            /*------------------------------------------------------------------------*/

            /**
             * Creates a stack cache object to store key-value pairs.
             *
             * @private
             * @constructor
             * @param {Array} [entries] The key-value pairs to cache.
             */
            function Stack(entries) {
              var data = (this.__data__ = new ListCache(entries))
              this.size = data.size
            }

            /**
             * Removes all key-value entries from the stack.
             *
             * @private
             * @name clear
             * @memberOf Stack
             */
            function stackClear() {
              this.__data__ = new ListCache()
              this.size = 0
            }

            /**
             * Removes `key` and its value from the stack.
             *
             * @private
             * @name delete
             * @memberOf Stack
             * @param {string} key The key of the value to remove.
             * @returns {boolean} Returns `true` if the entry was removed, else `false`.
             */
            function stackDelete(key) {
              var data = this.__data__,
                result = data['delete'](key)

              this.size = data.size
              return result
            }

            /**
             * Gets the stack value for `key`.
             *
             * @private
             * @name get
             * @memberOf Stack
             * @param {string} key The key of the value to get.
             * @returns {*} Returns the entry value.
             */
            function stackGet(key) {
              return this.__data__.get(key)
            }

            /**
             * Checks if a stack value for `key` exists.
             *
             * @private
             * @name has
             * @memberOf Stack
             * @param {string} key The key of the entry to check.
             * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
             */
            function stackHas(key) {
              return this.__data__.has(key)
            }

            /**
             * Sets the stack `key` to `value`.
             *
             * @private
             * @name set
             * @memberOf Stack
             * @param {string} key The key of the value to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns the stack cache instance.
             */
            function stackSet(key, value) {
              var data = this.__data__
              if (data instanceof ListCache) {
                var pairs = data.__data__
                if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                  pairs.push([key, value])
                  this.size = ++data.size
                  return this
                }
                data = this.__data__ = new MapCache(pairs)
              }
              data.set(key, value)
              this.size = data.size
              return this
            }

            // Add methods to `Stack`.
            Stack.prototype.clear = stackClear
            Stack.prototype['delete'] = stackDelete
            Stack.prototype.get = stackGet
            Stack.prototype.has = stackHas
            Stack.prototype.set = stackSet

            /*------------------------------------------------------------------------*/

            /**
             * Creates an array of the enumerable property names of the array-like `value`.
             *
             * @private
             * @param {*} value The value to query.
             * @param {boolean} inherited Specify returning inherited property names.
             * @returns {Array} Returns the array of property names.
             */
            function arrayLikeKeys(value, inherited) {
              var isArr = isArray(value),
                isArg = !isArr && isArguments(value),
                isBuff = !isArr && !isArg && isBuffer(value),
                isType = !isArr && !isArg && !isBuff && isTypedArray(value),
                skipIndexes = isArr || isArg || isBuff || isType,
                result = skipIndexes ? baseTimes(value.length, String) : [],
                length = result.length

              for (var key in value) {
                if (
                  (inherited || hasOwnProperty.call(value, key)) &&
                  !(
                    skipIndexes &&
                    // Safari 9 has enumerable `arguments.length` in strict mode.
                    (key == 'length' ||
                      // Node.js 0.10 has enumerable non-index properties on buffers.
                      (isBuff && (key == 'offset' || key == 'parent')) ||
                      // PhantomJS 2 has enumerable non-index properties on typed arrays.
                      (isType &&
                        (key == 'buffer' ||
                          key == 'byteLength' ||
                          key == 'byteOffset')) ||
                      // Skip index properties.
                      isIndex(key, length))
                  )
                ) {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * A specialized version of `_.sample` for arrays.
             *
             * @private
             * @param {Array} array The array to sample.
             * @returns {*} Returns the random element.
             */
            function arraySample(array) {
              var length = array.length
              return length ? array[baseRandom(0, length - 1)] : undefined
            }

            /**
             * A specialized version of `_.sampleSize` for arrays.
             *
             * @private
             * @param {Array} array The array to sample.
             * @param {number} n The number of elements to sample.
             * @returns {Array} Returns the random elements.
             */
            function arraySampleSize(array, n) {
              return shuffleSelf(
                copyArray(array),
                baseClamp(n, 0, array.length)
              )
            }

            /**
             * A specialized version of `_.shuffle` for arrays.
             *
             * @private
             * @param {Array} array The array to shuffle.
             * @returns {Array} Returns the new shuffled array.
             */
            function arrayShuffle(array) {
              return shuffleSelf(copyArray(array))
            }

            /**
             * This function is like `assignValue` except that it doesn't assign
             * `undefined` values.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {string} key The key of the property to assign.
             * @param {*} value The value to assign.
             */
            function assignMergeValue(object, key, value) {
              if (
                (value !== undefined && !eq(object[key], value)) ||
                (value === undefined && !(key in object))
              ) {
                baseAssignValue(object, key, value)
              }
            }

            /**
             * Assigns `value` to `key` of `object` if the existing value is not equivalent
             * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {string} key The key of the property to assign.
             * @param {*} value The value to assign.
             */
            function assignValue(object, key, value) {
              var objValue = object[key]
              if (
                !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
                (value === undefined && !(key in object))
              ) {
                baseAssignValue(object, key, value)
              }
            }

            /**
             * Gets the index at which the `key` is found in `array` of key-value pairs.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {*} key The key to search for.
             * @returns {number} Returns the index of the matched value, else `-1`.
             */
            function assocIndexOf(array, key) {
              var length = array.length
              while (length--) {
                if (eq(array[length][0], key)) {
                  return length
                }
              }
              return -1
            }

            /**
             * Aggregates elements of `collection` on `accumulator` with keys transformed
             * by `iteratee` and values set by `setter`.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} setter The function to set `accumulator` values.
             * @param {Function} iteratee The iteratee to transform keys.
             * @param {Object} accumulator The initial aggregated object.
             * @returns {Function} Returns `accumulator`.
             */
            function baseAggregator(collection, setter, iteratee, accumulator) {
              baseEach(collection, function (value, key, collection) {
                setter(accumulator, value, iteratee(value), collection)
              })
              return accumulator
            }

            /**
             * The base implementation of `_.assign` without support for multiple sources
             * or `customizer` functions.
             *
             * @private
             * @param {Object} object The destination object.
             * @param {Object} source The source object.
             * @returns {Object} Returns `object`.
             */
            function baseAssign(object, source) {
              return object && copyObject(source, keys(source), object)
            }

            /**
             * The base implementation of `_.assignIn` without support for multiple sources
             * or `customizer` functions.
             *
             * @private
             * @param {Object} object The destination object.
             * @param {Object} source The source object.
             * @returns {Object} Returns `object`.
             */
            function baseAssignIn(object, source) {
              return object && copyObject(source, keysIn(source), object)
            }

            /**
             * The base implementation of `assignValue` and `assignMergeValue` without
             * value checks.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {string} key The key of the property to assign.
             * @param {*} value The value to assign.
             */
            function baseAssignValue(object, key, value) {
              if (key == '__proto__' && defineProperty) {
                defineProperty(object, key, {
                  configurable: true,
                  enumerable: true,
                  value: value,
                  writable: true,
                })
              } else {
                object[key] = value
              }
            }

            /**
             * The base implementation of `_.at` without support for individual paths.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {string[]} paths The property paths to pick.
             * @returns {Array} Returns the picked elements.
             */
            function baseAt(object, paths) {
              var index = -1,
                length = paths.length,
                result = Array(length),
                skip = object == null

              while (++index < length) {
                result[index] = skip ? undefined : get(object, paths[index])
              }
              return result
            }

            /**
             * The base implementation of `_.clamp` which doesn't coerce arguments.
             *
             * @private
             * @param {number} number The number to clamp.
             * @param {number} [lower] The lower bound.
             * @param {number} upper The upper bound.
             * @returns {number} Returns the clamped number.
             */
            function baseClamp(number, lower, upper) {
              if (number === number) {
                if (upper !== undefined) {
                  number = number <= upper ? number : upper
                }
                if (lower !== undefined) {
                  number = number >= lower ? number : lower
                }
              }
              return number
            }

            /**
             * The base implementation of `_.clone` and `_.cloneDeep` which tracks
             * traversed objects.
             *
             * @private
             * @param {*} value The value to clone.
             * @param {boolean} bitmask The bitmask flags.
             *  1 - Deep clone
             *  2 - Flatten inherited properties
             *  4 - Clone symbols
             * @param {Function} [customizer] The function to customize cloning.
             * @param {string} [key] The key of `value`.
             * @param {Object} [object] The parent object of `value`.
             * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
             * @returns {*} Returns the cloned value.
             */
            function baseClone(value, bitmask, customizer, key, object, stack) {
              var result,
                isDeep = bitmask & CLONE_DEEP_FLAG,
                isFlat = bitmask & CLONE_FLAT_FLAG,
                isFull = bitmask & CLONE_SYMBOLS_FLAG

              if (customizer) {
                result = object
                  ? customizer(value, key, object, stack)
                  : customizer(value)
              }
              if (result !== undefined) {
                return result
              }
              if (!isObject(value)) {
                return value
              }
              var isArr = isArray(value)
              if (isArr) {
                result = initCloneArray(value)
                if (!isDeep) {
                  return copyArray(value, result)
                }
              } else {
                var tag = getTag(value),
                  isFunc = tag == funcTag || tag == genTag

                if (isBuffer(value)) {
                  return cloneBuffer(value, isDeep)
                }
                if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
                  result = isFlat || isFunc ? {} : initCloneObject(value)
                  if (!isDeep) {
                    return isFlat
                      ? copySymbolsIn(value, baseAssignIn(result, value))
                      : copySymbols(value, baseAssign(result, value))
                  }
                } else {
                  if (!cloneableTags[tag]) {
                    return object ? value : {}
                  }
                  result = initCloneByTag(value, tag, isDeep)
                }
              }
              // Check for circular references and return its corresponding clone.
              stack || (stack = new Stack())
              var stacked = stack.get(value)
              if (stacked) {
                return stacked
              }
              stack.set(value, result)

              if (isSet(value)) {
                value.forEach(function (subValue) {
                  result.add(
                    baseClone(
                      subValue,
                      bitmask,
                      customizer,
                      subValue,
                      value,
                      stack
                    )
                  )
                })
              } else if (isMap(value)) {
                value.forEach(function (subValue, key) {
                  result.set(
                    key,
                    baseClone(subValue, bitmask, customizer, key, value, stack)
                  )
                })
              }

              var keysFunc = isFull
                ? isFlat
                  ? getAllKeysIn
                  : getAllKeys
                : isFlat
                ? keysIn
                : keys

              var props = isArr ? undefined : keysFunc(value)
              arrayEach(props || value, function (subValue, key) {
                if (props) {
                  key = subValue
                  subValue = value[key]
                }
                // Recursively populate clone (susceptible to call stack limits).
                assignValue(
                  result,
                  key,
                  baseClone(subValue, bitmask, customizer, key, value, stack)
                )
              })
              return result
            }

            /**
             * The base implementation of `_.conforms` which doesn't clone `source`.
             *
             * @private
             * @param {Object} source The object of property predicates to conform to.
             * @returns {Function} Returns the new spec function.
             */
            function baseConforms(source) {
              var props = keys(source)
              return function (object) {
                return baseConformsTo(object, source, props)
              }
            }

            /**
             * The base implementation of `_.conformsTo` which accepts `props` to check.
             *
             * @private
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property predicates to conform to.
             * @returns {boolean} Returns `true` if `object` conforms, else `false`.
             */
            function baseConformsTo(object, source, props) {
              var length = props.length
              if (object == null) {
                return !length
              }
              object = Object(object)
              while (length--) {
                var key = props[length],
                  predicate = source[key],
                  value = object[key]

                if (
                  (value === undefined && !(key in object)) ||
                  !predicate(value)
                ) {
                  return false
                }
              }
              return true
            }

            /**
             * The base implementation of `_.delay` and `_.defer` which accepts `args`
             * to provide to `func`.
             *
             * @private
             * @param {Function} func The function to delay.
             * @param {number} wait The number of milliseconds to delay invocation.
             * @param {Array} args The arguments to provide to `func`.
             * @returns {number|Object} Returns the timer id or timeout object.
             */
            function baseDelay(func, wait, args) {
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              return setTimeout(function () {
                func.apply(undefined, args)
              }, wait)
            }

            /**
             * The base implementation of methods like `_.difference` without support
             * for excluding multiple arrays or iteratee shorthands.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {Array} values The values to exclude.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of filtered values.
             */
            function baseDifference(array, values, iteratee, comparator) {
              var index = -1,
                includes = arrayIncludes,
                isCommon = true,
                length = array.length,
                result = [],
                valuesLength = values.length

              if (!length) {
                return result
              }
              if (iteratee) {
                values = arrayMap(values, baseUnary(iteratee))
              }
              if (comparator) {
                includes = arrayIncludesWith
                isCommon = false
              } else if (values.length >= LARGE_ARRAY_SIZE) {
                includes = cacheHas
                isCommon = false
                values = new SetCache(values)
              }
              outer: while (++index < length) {
                var value = array[index],
                  computed = iteratee == null ? value : iteratee(value)

                value = comparator || value !== 0 ? value : 0
                if (isCommon && computed === computed) {
                  var valuesIndex = valuesLength
                  while (valuesIndex--) {
                    if (values[valuesIndex] === computed) {
                      continue outer
                    }
                  }
                  result.push(value)
                } else if (!includes(values, computed, comparator)) {
                  result.push(value)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.forEach` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Array|Object} Returns `collection`.
             */
            var baseEach = createBaseEach(baseForOwn)

            /**
             * The base implementation of `_.forEachRight` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Array|Object} Returns `collection`.
             */
            var baseEachRight = createBaseEach(baseForOwnRight, true)

            /**
             * The base implementation of `_.every` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} predicate The function invoked per iteration.
             * @returns {boolean} Returns `true` if all elements pass the predicate check,
             *  else `false`
             */
            function baseEvery(collection, predicate) {
              var result = true
              baseEach(collection, function (value, index, collection) {
                result = !!predicate(value, index, collection)
                return result
              })
              return result
            }

            /**
             * The base implementation of methods like `_.max` and `_.min` which accepts a
             * `comparator` to determine the extremum value.
             *
             * @private
             * @param {Array} array The array to iterate over.
             * @param {Function} iteratee The iteratee invoked per iteration.
             * @param {Function} comparator The comparator used to compare values.
             * @returns {*} Returns the extremum value.
             */
            function baseExtremum(array, iteratee, comparator) {
              var index = -1,
                length = array.length

              while (++index < length) {
                var value = array[index],
                  current = iteratee(value)

                if (
                  current != null &&
                  (computed === undefined
                    ? current === current && !isSymbol(current)
                    : comparator(current, computed))
                ) {
                  var computed = current,
                    result = value
                }
              }
              return result
            }

            /**
             * The base implementation of `_.fill` without an iteratee call guard.
             *
             * @private
             * @param {Array} array The array to fill.
             * @param {*} value The value to fill `array` with.
             * @param {number} [start=0] The start position.
             * @param {number} [end=array.length] The end position.
             * @returns {Array} Returns `array`.
             */
            function baseFill(array, value, start, end) {
              var length = array.length

              start = toInteger(start)
              if (start < 0) {
                start = -start > length ? 0 : length + start
              }
              end = end === undefined || end > length ? length : toInteger(end)
              if (end < 0) {
                end += length
              }
              end = start > end ? 0 : toLength(end)
              while (start < end) {
                array[start++] = value
              }
              return array
            }

            /**
             * The base implementation of `_.filter` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} predicate The function invoked per iteration.
             * @returns {Array} Returns the new filtered array.
             */
            function baseFilter(collection, predicate) {
              var result = []
              baseEach(collection, function (value, index, collection) {
                if (predicate(value, index, collection)) {
                  result.push(value)
                }
              })
              return result
            }

            /**
             * The base implementation of `_.flatten` with support for restricting flattening.
             *
             * @private
             * @param {Array} array The array to flatten.
             * @param {number} depth The maximum recursion depth.
             * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
             * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
             * @param {Array} [result=[]] The initial result value.
             * @returns {Array} Returns the new flattened array.
             */
            function baseFlatten(array, depth, predicate, isStrict, result) {
              var index = -1,
                length = array.length

              predicate || (predicate = isFlattenable)
              result || (result = [])

              while (++index < length) {
                var value = array[index]
                if (depth > 0 && predicate(value)) {
                  if (depth > 1) {
                    // Recursively flatten arrays (susceptible to call stack limits).
                    baseFlatten(value, depth - 1, predicate, isStrict, result)
                  } else {
                    arrayPush(result, value)
                  }
                } else if (!isStrict) {
                  result[result.length] = value
                }
              }
              return result
            }

            /**
             * The base implementation of `baseForOwn` which iterates over `object`
             * properties returned by `keysFunc` and invokes `iteratee` for each property.
             * Iteratee functions may exit iteration early by explicitly returning `false`.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @param {Function} keysFunc The function to get the keys of `object`.
             * @returns {Object} Returns `object`.
             */
            var baseFor = createBaseFor()

            /**
             * This function is like `baseFor` except that it iterates over properties
             * in the opposite order.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @param {Function} keysFunc The function to get the keys of `object`.
             * @returns {Object} Returns `object`.
             */
            var baseForRight = createBaseFor(true)

            /**
             * The base implementation of `_.forOwn` without support for iteratee shorthands.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Object} Returns `object`.
             */
            function baseForOwn(object, iteratee) {
              return object && baseFor(object, iteratee, keys)
            }

            /**
             * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Object} Returns `object`.
             */
            function baseForOwnRight(object, iteratee) {
              return object && baseForRight(object, iteratee, keys)
            }

            /**
             * The base implementation of `_.functions` which creates an array of
             * `object` function property names filtered from `props`.
             *
             * @private
             * @param {Object} object The object to inspect.
             * @param {Array} props The property names to filter.
             * @returns {Array} Returns the function names.
             */
            function baseFunctions(object, props) {
              return arrayFilter(props, function (key) {
                return isFunction(object[key])
              })
            }

            /**
             * The base implementation of `_.get` without support for default values.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the property to get.
             * @returns {*} Returns the resolved value.
             */
            function baseGet(object, path) {
              path = castPath(path, object)

              var index = 0,
                length = path.length

              while (object != null && index < length) {
                object = object[toKey(path[index++])]
              }
              return index && index == length ? object : undefined
            }

            /**
             * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
             * `keysFunc` and `symbolsFunc` to get the enumerable property names and
             * symbols of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Function} keysFunc The function to get the keys of `object`.
             * @param {Function} symbolsFunc The function to get the symbols of `object`.
             * @returns {Array} Returns the array of property names and symbols.
             */
            function baseGetAllKeys(object, keysFunc, symbolsFunc) {
              var result = keysFunc(object)
              return isArray(object)
                ? result
                : arrayPush(result, symbolsFunc(object))
            }

            /**
             * The base implementation of `getTag` without fallbacks for buggy environments.
             *
             * @private
             * @param {*} value The value to query.
             * @returns {string} Returns the `toStringTag`.
             */
            function baseGetTag(value) {
              if (value == null) {
                return value === undefined ? undefinedTag : nullTag
              }
              return symToStringTag && symToStringTag in Object(value)
                ? getRawTag(value)
                : objectToString(value)
            }

            /**
             * The base implementation of `_.gt` which doesn't coerce arguments.
             *
             * @private
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is greater than `other`,
             *  else `false`.
             */
            function baseGt(value, other) {
              return value > other
            }

            /**
             * The base implementation of `_.has` without support for deep paths.
             *
             * @private
             * @param {Object} [object] The object to query.
             * @param {Array|string} key The key to check.
             * @returns {boolean} Returns `true` if `key` exists, else `false`.
             */
            function baseHas(object, key) {
              return object != null && hasOwnProperty.call(object, key)
            }

            /**
             * The base implementation of `_.hasIn` without support for deep paths.
             *
             * @private
             * @param {Object} [object] The object to query.
             * @param {Array|string} key The key to check.
             * @returns {boolean} Returns `true` if `key` exists, else `false`.
             */
            function baseHasIn(object, key) {
              return object != null && key in Object(object)
            }

            /**
             * The base implementation of `_.inRange` which doesn't coerce arguments.
             *
             * @private
             * @param {number} number The number to check.
             * @param {number} start The start of the range.
             * @param {number} end The end of the range.
             * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
             */
            function baseInRange(number, start, end) {
              return (
                number >= nativeMin(start, end) &&
                number < nativeMax(start, end)
              )
            }

            /**
             * The base implementation of methods like `_.intersection`, without support
             * for iteratee shorthands, that accepts an array of arrays to inspect.
             *
             * @private
             * @param {Array} arrays The arrays to inspect.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of shared values.
             */
            function baseIntersection(arrays, iteratee, comparator) {
              var includes = comparator ? arrayIncludesWith : arrayIncludes,
                length = arrays[0].length,
                othLength = arrays.length,
                othIndex = othLength,
                caches = Array(othLength),
                maxLength = Infinity,
                result = []

              while (othIndex--) {
                var array = arrays[othIndex]
                if (othIndex && iteratee) {
                  array = arrayMap(array, baseUnary(iteratee))
                }
                maxLength = nativeMin(array.length, maxLength)
                caches[othIndex] =
                  !comparator &&
                  (iteratee || (length >= 120 && array.length >= 120))
                    ? new SetCache(othIndex && array)
                    : undefined
              }
              array = arrays[0]

              var index = -1,
                seen = caches[0]

              outer: while (++index < length && result.length < maxLength) {
                var value = array[index],
                  computed = iteratee ? iteratee(value) : value

                value = comparator || value !== 0 ? value : 0
                if (
                  !(seen
                    ? cacheHas(seen, computed)
                    : includes(result, computed, comparator))
                ) {
                  othIndex = othLength
                  while (--othIndex) {
                    var cache = caches[othIndex]
                    if (
                      !(cache
                        ? cacheHas(cache, computed)
                        : includes(arrays[othIndex], computed, comparator))
                    ) {
                      continue outer
                    }
                  }
                  if (seen) {
                    seen.push(computed)
                  }
                  result.push(value)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.invert` and `_.invertBy` which inverts
             * `object` with values transformed by `iteratee` and set by `setter`.
             *
             * @private
             * @param {Object} object The object to iterate over.
             * @param {Function} setter The function to set `accumulator` values.
             * @param {Function} iteratee The iteratee to transform values.
             * @param {Object} accumulator The initial inverted object.
             * @returns {Function} Returns `accumulator`.
             */
            function baseInverter(object, setter, iteratee, accumulator) {
              baseForOwn(object, function (value, key, object) {
                setter(accumulator, iteratee(value), key, object)
              })
              return accumulator
            }

            /**
             * The base implementation of `_.invoke` without support for individual
             * method arguments.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the method to invoke.
             * @param {Array} args The arguments to invoke the method with.
             * @returns {*} Returns the result of the invoked method.
             */
            function baseInvoke(object, path, args) {
              path = castPath(path, object)
              object = parent(object, path)
              var func = object == null ? object : object[toKey(last(path))]
              return func == null ? undefined : apply(func, object, args)
            }

            /**
             * The base implementation of `_.isArguments`.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an `arguments` object,
             */
            function baseIsArguments(value) {
              return isObjectLike(value) && baseGetTag(value) == argsTag
            }

            /**
             * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
             */
            function baseIsArrayBuffer(value) {
              return isObjectLike(value) && baseGetTag(value) == arrayBufferTag
            }

            /**
             * The base implementation of `_.isDate` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
             */
            function baseIsDate(value) {
              return isObjectLike(value) && baseGetTag(value) == dateTag
            }

            /**
             * The base implementation of `_.isEqual` which supports partial comparisons
             * and tracks traversed objects.
             *
             * @private
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @param {boolean} bitmask The bitmask flags.
             *  1 - Unordered comparison
             *  2 - Partial comparison
             * @param {Function} [customizer] The function to customize comparisons.
             * @param {Object} [stack] Tracks traversed `value` and `other` objects.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             */
            function baseIsEqual(value, other, bitmask, customizer, stack) {
              if (value === other) {
                return true
              }
              if (
                value == null ||
                other == null ||
                (!isObjectLike(value) && !isObjectLike(other))
              ) {
                return value !== value && other !== other
              }
              return baseIsEqualDeep(
                value,
                other,
                bitmask,
                customizer,
                baseIsEqual,
                stack
              )
            }

            /**
             * A specialized version of `baseIsEqual` for arrays and objects which performs
             * deep comparisons and tracks traversed objects enabling objects with circular
             * references to be compared.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
             * @param {Function} customizer The function to customize comparisons.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Object} [stack] Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function baseIsEqualDeep(
              object,
              other,
              bitmask,
              customizer,
              equalFunc,
              stack
            ) {
              var objIsArr = isArray(object),
                othIsArr = isArray(other),
                objTag = objIsArr ? arrayTag : getTag(object),
                othTag = othIsArr ? arrayTag : getTag(other)

              objTag = objTag == argsTag ? objectTag : objTag
              othTag = othTag == argsTag ? objectTag : othTag

              var objIsObj = objTag == objectTag,
                othIsObj = othTag == objectTag,
                isSameTag = objTag == othTag

              if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) {
                  return false
                }
                objIsArr = true
                objIsObj = false
              }
              if (isSameTag && !objIsObj) {
                stack || (stack = new Stack())
                return objIsArr || isTypedArray(object)
                  ? equalArrays(
                      object,
                      other,
                      bitmask,
                      customizer,
                      equalFunc,
                      stack
                    )
                  : equalByTag(
                      object,
                      other,
                      objTag,
                      bitmask,
                      customizer,
                      equalFunc,
                      stack
                    )
              }
              if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped =
                    objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                  othIsWrapped =
                    othIsObj && hasOwnProperty.call(other, '__wrapped__')

                if (objIsWrapped || othIsWrapped) {
                  var objUnwrapped = objIsWrapped ? object.value() : object,
                    othUnwrapped = othIsWrapped ? other.value() : other

                  stack || (stack = new Stack())
                  return equalFunc(
                    objUnwrapped,
                    othUnwrapped,
                    bitmask,
                    customizer,
                    stack
                  )
                }
              }
              if (!isSameTag) {
                return false
              }
              stack || (stack = new Stack())
              return equalObjects(
                object,
                other,
                bitmask,
                customizer,
                equalFunc,
                stack
              )
            }

            /**
             * The base implementation of `_.isMap` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a map, else `false`.
             */
            function baseIsMap(value) {
              return isObjectLike(value) && getTag(value) == mapTag
            }

            /**
             * The base implementation of `_.isMatch` without support for iteratee shorthands.
             *
             * @private
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property values to match.
             * @param {Array} matchData The property names, values, and compare flags to match.
             * @param {Function} [customizer] The function to customize comparisons.
             * @returns {boolean} Returns `true` if `object` is a match, else `false`.
             */
            function baseIsMatch(object, source, matchData, customizer) {
              var index = matchData.length,
                length = index,
                noCustomizer = !customizer

              if (object == null) {
                return !length
              }
              object = Object(object)
              while (index--) {
                var data = matchData[index]
                if (
                  noCustomizer && data[2]
                    ? data[1] !== object[data[0]]
                    : !(data[0] in object)
                ) {
                  return false
                }
              }
              while (++index < length) {
                data = matchData[index]
                var key = data[0],
                  objValue = object[key],
                  srcValue = data[1]

                if (noCustomizer && data[2]) {
                  if (objValue === undefined && !(key in object)) {
                    return false
                  }
                } else {
                  var stack = new Stack()
                  if (customizer) {
                    var result = customizer(
                      objValue,
                      srcValue,
                      key,
                      object,
                      source,
                      stack
                    )
                  }
                  if (
                    !(result === undefined
                      ? baseIsEqual(
                          srcValue,
                          objValue,
                          COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG,
                          customizer,
                          stack
                        )
                      : result)
                  ) {
                    return false
                  }
                }
              }
              return true
            }

            /**
             * The base implementation of `_.isNative` without bad shim checks.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a native function,
             *  else `false`.
             */
            function baseIsNative(value) {
              if (!isObject(value) || isMasked(value)) {
                return false
              }
              var pattern = isFunction(value) ? reIsNative : reIsHostCtor
              return pattern.test(toSource(value))
            }

            /**
             * The base implementation of `_.isRegExp` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
             */
            function baseIsRegExp(value) {
              return isObjectLike(value) && baseGetTag(value) == regexpTag
            }

            /**
             * The base implementation of `_.isSet` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a set, else `false`.
             */
            function baseIsSet(value) {
              return isObjectLike(value) && getTag(value) == setTag
            }

            /**
             * The base implementation of `_.isTypedArray` without Node.js optimizations.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
             */
            function baseIsTypedArray(value) {
              return (
                isObjectLike(value) &&
                isLength(value.length) &&
                !!typedArrayTags[baseGetTag(value)]
              )
            }

            /**
             * The base implementation of `_.iteratee`.
             *
             * @private
             * @param {*} [value=_.identity] The value to convert to an iteratee.
             * @returns {Function} Returns the iteratee.
             */
            function baseIteratee(value) {
              // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
              // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
              if (typeof value == 'function') {
                return value
              }
              if (value == null) {
                return identity
              }
              if (typeof value == 'object') {
                return isArray(value)
                  ? baseMatchesProperty(value[0], value[1])
                  : baseMatches(value)
              }
              return property(value)
            }

            /**
             * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             */
            function baseKeys(object) {
              if (!isPrototype(object)) {
                return nativeKeys(object)
              }
              var result = []
              for (var key in Object(object)) {
                if (hasOwnProperty.call(object, key) && key != 'constructor') {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             */
            function baseKeysIn(object) {
              if (!isObject(object)) {
                return nativeKeysIn(object)
              }
              var isProto = isPrototype(object),
                result = []

              for (var key in object) {
                if (
                  !(
                    key == 'constructor' &&
                    (isProto || !hasOwnProperty.call(object, key))
                  )
                ) {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.lt` which doesn't coerce arguments.
             *
             * @private
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is less than `other`,
             *  else `false`.
             */
            function baseLt(value, other) {
              return value < other
            }

            /**
             * The base implementation of `_.map` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} iteratee The function invoked per iteration.
             * @returns {Array} Returns the new mapped array.
             */
            function baseMap(collection, iteratee) {
              var index = -1,
                result = isArrayLike(collection) ? Array(collection.length) : []

              baseEach(collection, function (value, key, collection) {
                result[++index] = iteratee(value, key, collection)
              })
              return result
            }

            /**
             * The base implementation of `_.matches` which doesn't clone `source`.
             *
             * @private
             * @param {Object} source The object of property values to match.
             * @returns {Function} Returns the new spec function.
             */
            function baseMatches(source) {
              var matchData = getMatchData(source)
              if (matchData.length == 1 && matchData[0][2]) {
                return matchesStrictComparable(matchData[0][0], matchData[0][1])
              }
              return function (object) {
                return (
                  object === source || baseIsMatch(object, source, matchData)
                )
              }
            }

            /**
             * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
             *
             * @private
             * @param {string} path The path of the property to get.
             * @param {*} srcValue The value to match.
             * @returns {Function} Returns the new spec function.
             */
            function baseMatchesProperty(path, srcValue) {
              if (isKey(path) && isStrictComparable(srcValue)) {
                return matchesStrictComparable(toKey(path), srcValue)
              }
              return function (object) {
                var objValue = get(object, path)
                return objValue === undefined && objValue === srcValue
                  ? hasIn(object, path)
                  : baseIsEqual(
                      srcValue,
                      objValue,
                      COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG
                    )
              }
            }

            /**
             * The base implementation of `_.merge` without support for multiple sources.
             *
             * @private
             * @param {Object} object The destination object.
             * @param {Object} source The source object.
             * @param {number} srcIndex The index of `source`.
             * @param {Function} [customizer] The function to customize merged values.
             * @param {Object} [stack] Tracks traversed source values and their merged
             *  counterparts.
             */
            function baseMerge(object, source, srcIndex, customizer, stack) {
              if (object === source) {
                return
              }
              baseFor(
                source,
                function (srcValue, key) {
                  stack || (stack = new Stack())
                  if (isObject(srcValue)) {
                    baseMergeDeep(
                      object,
                      source,
                      key,
                      srcIndex,
                      baseMerge,
                      customizer,
                      stack
                    )
                  } else {
                    var newValue = customizer
                      ? customizer(
                          safeGet(object, key),
                          srcValue,
                          key + '',
                          object,
                          source,
                          stack
                        )
                      : undefined

                    if (newValue === undefined) {
                      newValue = srcValue
                    }
                    assignMergeValue(object, key, newValue)
                  }
                },
                keysIn
              )
            }

            /**
             * A specialized version of `baseMerge` for arrays and objects which performs
             * deep merges and tracks traversed objects enabling objects with circular
             * references to be merged.
             *
             * @private
             * @param {Object} object The destination object.
             * @param {Object} source The source object.
             * @param {string} key The key of the value to merge.
             * @param {number} srcIndex The index of `source`.
             * @param {Function} mergeFunc The function to merge values.
             * @param {Function} [customizer] The function to customize assigned values.
             * @param {Object} [stack] Tracks traversed source values and their merged
             *  counterparts.
             */
            function baseMergeDeep(
              object,
              source,
              key,
              srcIndex,
              mergeFunc,
              customizer,
              stack
            ) {
              var objValue = safeGet(object, key),
                srcValue = safeGet(source, key),
                stacked = stack.get(srcValue)

              if (stacked) {
                assignMergeValue(object, key, stacked)
                return
              }
              var newValue = customizer
                ? customizer(
                    objValue,
                    srcValue,
                    key + '',
                    object,
                    source,
                    stack
                  )
                : undefined

              var isCommon = newValue === undefined

              if (isCommon) {
                var isArr = isArray(srcValue),
                  isBuff = !isArr && isBuffer(srcValue),
                  isTyped = !isArr && !isBuff && isTypedArray(srcValue)

                newValue = srcValue
                if (isArr || isBuff || isTyped) {
                  if (isArray(objValue)) {
                    newValue = objValue
                  } else if (isArrayLikeObject(objValue)) {
                    newValue = copyArray(objValue)
                  } else if (isBuff) {
                    isCommon = false
                    newValue = cloneBuffer(srcValue, true)
                  } else if (isTyped) {
                    isCommon = false
                    newValue = cloneTypedArray(srcValue, true)
                  } else {
                    newValue = []
                  }
                } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                  newValue = objValue
                  if (isArguments(objValue)) {
                    newValue = toPlainObject(objValue)
                  } else if (!isObject(objValue) || isFunction(objValue)) {
                    newValue = initCloneObject(srcValue)
                  }
                } else {
                  isCommon = false
                }
              }
              if (isCommon) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, newValue)
                mergeFunc(newValue, srcValue, srcIndex, customizer, stack)
                stack['delete'](srcValue)
              }
              assignMergeValue(object, key, newValue)
            }

            /**
             * The base implementation of `_.nth` which doesn't coerce arguments.
             *
             * @private
             * @param {Array} array The array to query.
             * @param {number} n The index of the element to return.
             * @returns {*} Returns the nth element of `array`.
             */
            function baseNth(array, n) {
              var length = array.length
              if (!length) {
                return
              }
              n += n < 0 ? length : 0
              return isIndex(n, length) ? array[n] : undefined
            }

            /**
             * The base implementation of `_.orderBy` without param guards.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
             * @param {string[]} orders The sort orders of `iteratees`.
             * @returns {Array} Returns the new sorted array.
             */
            function baseOrderBy(collection, iteratees, orders) {
              if (iteratees.length) {
                iteratees = arrayMap(iteratees, function (iteratee) {
                  if (isArray(iteratee)) {
                    return function (value) {
                      return baseGet(
                        value,
                        iteratee.length === 1 ? iteratee[0] : iteratee
                      )
                    }
                  }
                  return iteratee
                })
              } else {
                iteratees = [identity]
              }

              var index = -1
              iteratees = arrayMap(iteratees, baseUnary(getIteratee()))

              var result = baseMap(
                collection,
                function (value, key, collection) {
                  var criteria = arrayMap(iteratees, function (iteratee) {
                    return iteratee(value)
                  })
                  return { criteria: criteria, index: ++index, value: value }
                }
              )

              return baseSortBy(result, function (object, other) {
                return compareMultiple(object, other, orders)
              })
            }

            /**
             * The base implementation of `_.pick` without support for individual
             * property identifiers.
             *
             * @private
             * @param {Object} object The source object.
             * @param {string[]} paths The property paths to pick.
             * @returns {Object} Returns the new object.
             */
            function basePick(object, paths) {
              return basePickBy(object, paths, function (value, path) {
                return hasIn(object, path)
              })
            }

            /**
             * The base implementation of  `_.pickBy` without support for iteratee shorthands.
             *
             * @private
             * @param {Object} object The source object.
             * @param {string[]} paths The property paths to pick.
             * @param {Function} predicate The function invoked per property.
             * @returns {Object} Returns the new object.
             */
            function basePickBy(object, paths, predicate) {
              var index = -1,
                length = paths.length,
                result = {}

              while (++index < length) {
                var path = paths[index],
                  value = baseGet(object, path)

                if (predicate(value, path)) {
                  baseSet(result, castPath(path, object), value)
                }
              }
              return result
            }

            /**
             * A specialized version of `baseProperty` which supports deep paths.
             *
             * @private
             * @param {Array|string} path The path of the property to get.
             * @returns {Function} Returns the new accessor function.
             */
            function basePropertyDeep(path) {
              return function (object) {
                return baseGet(object, path)
              }
            }

            /**
             * The base implementation of `_.pullAllBy` without support for iteratee
             * shorthands.
             *
             * @private
             * @param {Array} array The array to modify.
             * @param {Array} values The values to remove.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns `array`.
             */
            function basePullAll(array, values, iteratee, comparator) {
              var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
                index = -1,
                length = values.length,
                seen = array

              if (array === values) {
                values = copyArray(values)
              }
              if (iteratee) {
                seen = arrayMap(array, baseUnary(iteratee))
              }
              while (++index < length) {
                var fromIndex = 0,
                  value = values[index],
                  computed = iteratee ? iteratee(value) : value

                while (
                  (fromIndex = indexOf(seen, computed, fromIndex, comparator)) >
                  -1
                ) {
                  if (seen !== array) {
                    splice.call(seen, fromIndex, 1)
                  }
                  splice.call(array, fromIndex, 1)
                }
              }
              return array
            }

            /**
             * The base implementation of `_.pullAt` without support for individual
             * indexes or capturing the removed elements.
             *
             * @private
             * @param {Array} array The array to modify.
             * @param {number[]} indexes The indexes of elements to remove.
             * @returns {Array} Returns `array`.
             */
            function basePullAt(array, indexes) {
              var length = array ? indexes.length : 0,
                lastIndex = length - 1

              while (length--) {
                var index = indexes[length]
                if (length == lastIndex || index !== previous) {
                  var previous = index
                  if (isIndex(index)) {
                    splice.call(array, index, 1)
                  } else {
                    baseUnset(array, index)
                  }
                }
              }
              return array
            }

            /**
             * The base implementation of `_.random` without support for returning
             * floating-point numbers.
             *
             * @private
             * @param {number} lower The lower bound.
             * @param {number} upper The upper bound.
             * @returns {number} Returns the random number.
             */
            function baseRandom(lower, upper) {
              return lower + nativeFloor(nativeRandom() * (upper - lower + 1))
            }

            /**
             * The base implementation of `_.range` and `_.rangeRight` which doesn't
             * coerce arguments.
             *
             * @private
             * @param {number} start The start of the range.
             * @param {number} end The end of the range.
             * @param {number} step The value to increment or decrement by.
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Array} Returns the range of numbers.
             */
            function baseRange(start, end, step, fromRight) {
              var index = -1,
                length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
                result = Array(length)

              while (length--) {
                result[fromRight ? length : ++index] = start
                start += step
              }
              return result
            }

            /**
             * The base implementation of `_.repeat` which doesn't coerce arguments.
             *
             * @private
             * @param {string} string The string to repeat.
             * @param {number} n The number of times to repeat the string.
             * @returns {string} Returns the repeated string.
             */
            function baseRepeat(string, n) {
              var result = ''
              if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
                return result
              }
              // Leverage the exponentiation by squaring algorithm for a faster repeat.
              // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
              do {
                if (n % 2) {
                  result += string
                }
                n = nativeFloor(n / 2)
                if (n) {
                  string += string
                }
              } while (n)

              return result
            }

            /**
             * The base implementation of `_.rest` which doesn't validate or coerce arguments.
             *
             * @private
             * @param {Function} func The function to apply a rest parameter to.
             * @param {number} [start=func.length-1] The start position of the rest parameter.
             * @returns {Function} Returns the new function.
             */
            function baseRest(func, start) {
              return setToString(overRest(func, start, identity), func + '')
            }

            /**
             * The base implementation of `_.sample`.
             *
             * @private
             * @param {Array|Object} collection The collection to sample.
             * @returns {*} Returns the random element.
             */
            function baseSample(collection) {
              return arraySample(values(collection))
            }

            /**
             * The base implementation of `_.sampleSize` without param guards.
             *
             * @private
             * @param {Array|Object} collection The collection to sample.
             * @param {number} n The number of elements to sample.
             * @returns {Array} Returns the random elements.
             */
            function baseSampleSize(collection, n) {
              var array = values(collection)
              return shuffleSelf(array, baseClamp(n, 0, array.length))
            }

            /**
             * The base implementation of `_.set`.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to set.
             * @param {*} value The value to set.
             * @param {Function} [customizer] The function to customize path creation.
             * @returns {Object} Returns `object`.
             */
            function baseSet(object, path, value, customizer) {
              if (!isObject(object)) {
                return object
              }
              path = castPath(path, object)

              var index = -1,
                length = path.length,
                lastIndex = length - 1,
                nested = object

              while (nested != null && ++index < length) {
                var key = toKey(path[index]),
                  newValue = value

                if (
                  key === '__proto__' ||
                  key === 'constructor' ||
                  key === 'prototype'
                ) {
                  return object
                }

                if (index != lastIndex) {
                  var objValue = nested[key]
                  newValue = customizer
                    ? customizer(objValue, key, nested)
                    : undefined
                  if (newValue === undefined) {
                    newValue = isObject(objValue)
                      ? objValue
                      : isIndex(path[index + 1])
                      ? []
                      : {}
                  }
                }
                assignValue(nested, key, newValue)
                nested = nested[key]
              }
              return object
            }

            /**
             * The base implementation of `setData` without support for hot loop shorting.
             *
             * @private
             * @param {Function} func The function to associate metadata with.
             * @param {*} data The metadata.
             * @returns {Function} Returns `func`.
             */
            var baseSetData = !metaMap
              ? identity
              : function (func, data) {
                  metaMap.set(func, data)
                  return func
                }

            /**
             * The base implementation of `setToString` without support for hot loop shorting.
             *
             * @private
             * @param {Function} func The function to modify.
             * @param {Function} string The `toString` result.
             * @returns {Function} Returns `func`.
             */
            var baseSetToString = !defineProperty
              ? identity
              : function (func, string) {
                  return defineProperty(func, 'toString', {
                    configurable: true,
                    enumerable: false,
                    value: constant(string),
                    writable: true,
                  })
                }

            /**
             * The base implementation of `_.shuffle`.
             *
             * @private
             * @param {Array|Object} collection The collection to shuffle.
             * @returns {Array} Returns the new shuffled array.
             */
            function baseShuffle(collection) {
              return shuffleSelf(values(collection))
            }

            /**
             * The base implementation of `_.slice` without an iteratee call guard.
             *
             * @private
             * @param {Array} array The array to slice.
             * @param {number} [start=0] The start position.
             * @param {number} [end=array.length] The end position.
             * @returns {Array} Returns the slice of `array`.
             */
            function baseSlice(array, start, end) {
              var index = -1,
                length = array.length

              if (start < 0) {
                start = -start > length ? 0 : length + start
              }
              end = end > length ? length : end
              if (end < 0) {
                end += length
              }
              length = start > end ? 0 : (end - start) >>> 0
              start >>>= 0

              var result = Array(length)
              while (++index < length) {
                result[index] = array[index + start]
              }
              return result
            }

            /**
             * The base implementation of `_.some` without support for iteratee shorthands.
             *
             * @private
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} predicate The function invoked per iteration.
             * @returns {boolean} Returns `true` if any element passes the predicate check,
             *  else `false`.
             */
            function baseSome(collection, predicate) {
              var result

              baseEach(collection, function (value, index, collection) {
                result = predicate(value, index, collection)
                return !result
              })
              return !!result
            }

            /**
             * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
             * performs a binary search of `array` to determine the index at which `value`
             * should be inserted into `array` in order to maintain its sort order.
             *
             * @private
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @param {boolean} [retHighest] Specify returning the highest qualified index.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             */
            function baseSortedIndex(array, value, retHighest) {
              var low = 0,
                high = array == null ? low : array.length

              if (
                typeof value == 'number' &&
                value === value &&
                high <= HALF_MAX_ARRAY_LENGTH
              ) {
                while (low < high) {
                  var mid = (low + high) >>> 1,
                    computed = array[mid]

                  if (
                    computed !== null &&
                    !isSymbol(computed) &&
                    (retHighest ? computed <= value : computed < value)
                  ) {
                    low = mid + 1
                  } else {
                    high = mid
                  }
                }
                return high
              }
              return baseSortedIndexBy(array, value, identity, retHighest)
            }

            /**
             * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
             * which invokes `iteratee` for `value` and each element of `array` to compute
             * their sort ranking. The iteratee is invoked with one argument; (value).
             *
             * @private
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @param {Function} iteratee The iteratee invoked per element.
             * @param {boolean} [retHighest] Specify returning the highest qualified index.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             */
            function baseSortedIndexBy(array, value, iteratee, retHighest) {
              var low = 0,
                high = array == null ? 0 : array.length
              if (high === 0) {
                return 0
              }

              value = iteratee(value)
              var valIsNaN = value !== value,
                valIsNull = value === null,
                valIsSymbol = isSymbol(value),
                valIsUndefined = value === undefined

              while (low < high) {
                var mid = nativeFloor((low + high) / 2),
                  computed = iteratee(array[mid]),
                  othIsDefined = computed !== undefined,
                  othIsNull = computed === null,
                  othIsReflexive = computed === computed,
                  othIsSymbol = isSymbol(computed)

                if (valIsNaN) {
                  var setLow = retHighest || othIsReflexive
                } else if (valIsUndefined) {
                  setLow = othIsReflexive && (retHighest || othIsDefined)
                } else if (valIsNull) {
                  setLow =
                    othIsReflexive && othIsDefined && (retHighest || !othIsNull)
                } else if (valIsSymbol) {
                  setLow =
                    othIsReflexive &&
                    othIsDefined &&
                    !othIsNull &&
                    (retHighest || !othIsSymbol)
                } else if (othIsNull || othIsSymbol) {
                  setLow = false
                } else {
                  setLow = retHighest ? computed <= value : computed < value
                }
                if (setLow) {
                  low = mid + 1
                } else {
                  high = mid
                }
              }
              return nativeMin(high, MAX_ARRAY_INDEX)
            }

            /**
             * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
             * support for iteratee shorthands.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @returns {Array} Returns the new duplicate free array.
             */
            function baseSortedUniq(array, iteratee) {
              var index = -1,
                length = array.length,
                resIndex = 0,
                result = []

              while (++index < length) {
                var value = array[index],
                  computed = iteratee ? iteratee(value) : value

                if (!index || !eq(computed, seen)) {
                  var seen = computed
                  result[resIndex++] = value === 0 ? 0 : value
                }
              }
              return result
            }

            /**
             * The base implementation of `_.toNumber` which doesn't ensure correct
             * conversions of binary, hexadecimal, or octal string values.
             *
             * @private
             * @param {*} value The value to process.
             * @returns {number} Returns the number.
             */
            function baseToNumber(value) {
              if (typeof value == 'number') {
                return value
              }
              if (isSymbol(value)) {
                return NAN
              }
              return +value
            }

            /**
             * The base implementation of `_.toString` which doesn't convert nullish
             * values to empty strings.
             *
             * @private
             * @param {*} value The value to process.
             * @returns {string} Returns the string.
             */
            function baseToString(value) {
              // Exit early for strings to avoid a performance hit in some environments.
              if (typeof value == 'string') {
                return value
              }
              if (isArray(value)) {
                // Recursively convert values (susceptible to call stack limits).
                return arrayMap(value, baseToString) + ''
              }
              if (isSymbol(value)) {
                return symbolToString ? symbolToString.call(value) : ''
              }
              var result = value + ''
              return result == '0' && 1 / value == -INFINITY ? '-0' : result
            }

            /**
             * The base implementation of `_.uniqBy` without support for iteratee shorthands.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new duplicate free array.
             */
            function baseUniq(array, iteratee, comparator) {
              var index = -1,
                includes = arrayIncludes,
                length = array.length,
                isCommon = true,
                result = [],
                seen = result

              if (comparator) {
                isCommon = false
                includes = arrayIncludesWith
              } else if (length >= LARGE_ARRAY_SIZE) {
                var set = iteratee ? null : createSet(array)
                if (set) {
                  return setToArray(set)
                }
                isCommon = false
                includes = cacheHas
                seen = new SetCache()
              } else {
                seen = iteratee ? [] : result
              }
              outer: while (++index < length) {
                var value = array[index],
                  computed = iteratee ? iteratee(value) : value

                value = comparator || value !== 0 ? value : 0
                if (isCommon && computed === computed) {
                  var seenIndex = seen.length
                  while (seenIndex--) {
                    if (seen[seenIndex] === computed) {
                      continue outer
                    }
                  }
                  if (iteratee) {
                    seen.push(computed)
                  }
                  result.push(value)
                } else if (!includes(seen, computed, comparator)) {
                  if (seen !== result) {
                    seen.push(computed)
                  }
                  result.push(value)
                }
              }
              return result
            }

            /**
             * The base implementation of `_.unset`.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {Array|string} path The property path to unset.
             * @returns {boolean} Returns `true` if the property is deleted, else `false`.
             */
            function baseUnset(object, path) {
              path = castPath(path, object)
              object = parent(object, path)
              return object == null || delete object[toKey(last(path))]
            }

            /**
             * The base implementation of `_.update`.
             *
             * @private
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to update.
             * @param {Function} updater The function to produce the updated value.
             * @param {Function} [customizer] The function to customize path creation.
             * @returns {Object} Returns `object`.
             */
            function baseUpdate(object, path, updater, customizer) {
              return baseSet(
                object,
                path,
                updater(baseGet(object, path)),
                customizer
              )
            }

            /**
             * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
             * without support for iteratee shorthands.
             *
             * @private
             * @param {Array} array The array to query.
             * @param {Function} predicate The function invoked per iteration.
             * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Array} Returns the slice of `array`.
             */
            function baseWhile(array, predicate, isDrop, fromRight) {
              var length = array.length,
                index = fromRight ? length : -1

              while (
                (fromRight ? index-- : ++index < length) &&
                predicate(array[index], index, array)
              ) {}

              return isDrop
                ? baseSlice(
                    array,
                    fromRight ? 0 : index,
                    fromRight ? index + 1 : length
                  )
                : baseSlice(
                    array,
                    fromRight ? index + 1 : 0,
                    fromRight ? length : index
                  )
            }

            /**
             * The base implementation of `wrapperValue` which returns the result of
             * performing a sequence of actions on the unwrapped `value`, where each
             * successive action is supplied the return value of the previous.
             *
             * @private
             * @param {*} value The unwrapped value.
             * @param {Array} actions Actions to perform to resolve the unwrapped value.
             * @returns {*} Returns the resolved value.
             */
            function baseWrapperValue(value, actions) {
              var result = value
              if (result instanceof LazyWrapper) {
                result = result.value()
              }
              return arrayReduce(
                actions,
                function (result, action) {
                  return action.func.apply(
                    action.thisArg,
                    arrayPush([result], action.args)
                  )
                },
                result
              )
            }

            /**
             * The base implementation of methods like `_.xor`, without support for
             * iteratee shorthands, that accepts an array of arrays to inspect.
             *
             * @private
             * @param {Array} arrays The arrays to inspect.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of values.
             */
            function baseXor(arrays, iteratee, comparator) {
              var length = arrays.length
              if (length < 2) {
                return length ? baseUniq(arrays[0]) : []
              }
              var index = -1,
                result = Array(length)

              while (++index < length) {
                var array = arrays[index],
                  othIndex = -1

                while (++othIndex < length) {
                  if (othIndex != index) {
                    result[index] = baseDifference(
                      result[index] || array,
                      arrays[othIndex],
                      iteratee,
                      comparator
                    )
                  }
                }
              }
              return baseUniq(baseFlatten(result, 1), iteratee, comparator)
            }

            /**
             * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
             *
             * @private
             * @param {Array} props The property identifiers.
             * @param {Array} values The property values.
             * @param {Function} assignFunc The function to assign values.
             * @returns {Object} Returns the new object.
             */
            function baseZipObject(props, values, assignFunc) {
              var index = -1,
                length = props.length,
                valsLength = values.length,
                result = {}

              while (++index < length) {
                var value = index < valsLength ? values[index] : undefined
                assignFunc(result, props[index], value)
              }
              return result
            }

            /**
             * Casts `value` to an empty array if it's not an array like object.
             *
             * @private
             * @param {*} value The value to inspect.
             * @returns {Array|Object} Returns the cast array-like object.
             */
            function castArrayLikeObject(value) {
              return isArrayLikeObject(value) ? value : []
            }

            /**
             * Casts `value` to `identity` if it's not a function.
             *
             * @private
             * @param {*} value The value to inspect.
             * @returns {Function} Returns cast function.
             */
            function castFunction(value) {
              return typeof value == 'function' ? value : identity
            }

            /**
             * Casts `value` to a path array if it's not one.
             *
             * @private
             * @param {*} value The value to inspect.
             * @param {Object} [object] The object to query keys on.
             * @returns {Array} Returns the cast property path array.
             */
            function castPath(value, object) {
              if (isArray(value)) {
                return value
              }
              return isKey(value, object)
                ? [value]
                : stringToPath(toString(value))
            }

            /**
             * A `baseRest` alias which can be replaced with `identity` by module
             * replacement plugins.
             *
             * @private
             * @type {Function}
             * @param {Function} func The function to apply a rest parameter to.
             * @returns {Function} Returns the new function.
             */
            var castRest = baseRest

            /**
             * Casts `array` to a slice if it's needed.
             *
             * @private
             * @param {Array} array The array to inspect.
             * @param {number} start The start position.
             * @param {number} [end=array.length] The end position.
             * @returns {Array} Returns the cast slice.
             */
            function castSlice(array, start, end) {
              var length = array.length
              end = end === undefined ? length : end
              return !start && end >= length
                ? array
                : baseSlice(array, start, end)
            }

            /**
             * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
             *
             * @private
             * @param {number|Object} id The timer id or timeout object of the timer to clear.
             */
            var clearTimeout =
              ctxClearTimeout ||
              function (id) {
                return root.clearTimeout(id)
              }

            /**
             * Creates a clone of  `buffer`.
             *
             * @private
             * @param {Buffer} buffer The buffer to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Buffer} Returns the cloned buffer.
             */
            function cloneBuffer(buffer, isDeep) {
              if (isDeep) {
                return buffer.slice()
              }
              var length = buffer.length,
                result = allocUnsafe
                  ? allocUnsafe(length)
                  : new buffer.constructor(length)

              buffer.copy(result)
              return result
            }

            /**
             * Creates a clone of `arrayBuffer`.
             *
             * @private
             * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
             * @returns {ArrayBuffer} Returns the cloned array buffer.
             */
            function cloneArrayBuffer(arrayBuffer) {
              var result = new arrayBuffer.constructor(arrayBuffer.byteLength)
              new Uint8Array(result).set(new Uint8Array(arrayBuffer))
              return result
            }

            /**
             * Creates a clone of `dataView`.
             *
             * @private
             * @param {Object} dataView The data view to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Object} Returns the cloned data view.
             */
            function cloneDataView(dataView, isDeep) {
              var buffer = isDeep
                ? cloneArrayBuffer(dataView.buffer)
                : dataView.buffer
              return new dataView.constructor(
                buffer,
                dataView.byteOffset,
                dataView.byteLength
              )
            }

            /**
             * Creates a clone of `regexp`.
             *
             * @private
             * @param {Object} regexp The regexp to clone.
             * @returns {Object} Returns the cloned regexp.
             */
            function cloneRegExp(regexp) {
              var result = new regexp.constructor(
                regexp.source,
                reFlags.exec(regexp)
              )
              result.lastIndex = regexp.lastIndex
              return result
            }

            /**
             * Creates a clone of the `symbol` object.
             *
             * @private
             * @param {Object} symbol The symbol object to clone.
             * @returns {Object} Returns the cloned symbol object.
             */
            function cloneSymbol(symbol) {
              return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {}
            }

            /**
             * Creates a clone of `typedArray`.
             *
             * @private
             * @param {Object} typedArray The typed array to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Object} Returns the cloned typed array.
             */
            function cloneTypedArray(typedArray, isDeep) {
              var buffer = isDeep
                ? cloneArrayBuffer(typedArray.buffer)
                : typedArray.buffer
              return new typedArray.constructor(
                buffer,
                typedArray.byteOffset,
                typedArray.length
              )
            }

            /**
             * Compares values to sort them in ascending order.
             *
             * @private
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {number} Returns the sort order indicator for `value`.
             */
            function compareAscending(value, other) {
              if (value !== other) {
                var valIsDefined = value !== undefined,
                  valIsNull = value === null,
                  valIsReflexive = value === value,
                  valIsSymbol = isSymbol(value)

                var othIsDefined = other !== undefined,
                  othIsNull = other === null,
                  othIsReflexive = other === other,
                  othIsSymbol = isSymbol(other)

                if (
                  (!othIsNull &&
                    !othIsSymbol &&
                    !valIsSymbol &&
                    value > other) ||
                  (valIsSymbol &&
                    othIsDefined &&
                    othIsReflexive &&
                    !othIsNull &&
                    !othIsSymbol) ||
                  (valIsNull && othIsDefined && othIsReflexive) ||
                  (!valIsDefined && othIsReflexive) ||
                  !valIsReflexive
                ) {
                  return 1
                }
                if (
                  (!valIsNull &&
                    !valIsSymbol &&
                    !othIsSymbol &&
                    value < other) ||
                  (othIsSymbol &&
                    valIsDefined &&
                    valIsReflexive &&
                    !valIsNull &&
                    !valIsSymbol) ||
                  (othIsNull && valIsDefined && valIsReflexive) ||
                  (!othIsDefined && valIsReflexive) ||
                  !othIsReflexive
                ) {
                  return -1
                }
              }
              return 0
            }

            /**
             * Used by `_.orderBy` to compare multiple properties of a value to another
             * and stable sort them.
             *
             * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
             * specify an order of "desc" for descending or "asc" for ascending sort order
             * of corresponding values.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {boolean[]|string[]} orders The order to sort by for each property.
             * @returns {number} Returns the sort order indicator for `object`.
             */
            function compareMultiple(object, other, orders) {
              var index = -1,
                objCriteria = object.criteria,
                othCriteria = other.criteria,
                length = objCriteria.length,
                ordersLength = orders.length

              while (++index < length) {
                var result = compareAscending(
                  objCriteria[index],
                  othCriteria[index]
                )
                if (result) {
                  if (index >= ordersLength) {
                    return result
                  }
                  var order = orders[index]
                  return result * (order == 'desc' ? -1 : 1)
                }
              }
              // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
              // that causes it, under certain circumstances, to provide the same value for
              // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
              // for more details.
              //
              // This also ensures a stable sort in V8 and other engines.
              // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
              return object.index - other.index
            }

            /**
             * Creates an array that is the composition of partially applied arguments,
             * placeholders, and provided arguments into a single array of arguments.
             *
             * @private
             * @param {Array} args The provided arguments.
             * @param {Array} partials The arguments to prepend to those provided.
             * @param {Array} holders The `partials` placeholder indexes.
             * @params {boolean} [isCurried] Specify composing for a curried function.
             * @returns {Array} Returns the new array of composed arguments.
             */
            function composeArgs(args, partials, holders, isCurried) {
              var argsIndex = -1,
                argsLength = args.length,
                holdersLength = holders.length,
                leftIndex = -1,
                leftLength = partials.length,
                rangeLength = nativeMax(argsLength - holdersLength, 0),
                result = Array(leftLength + rangeLength),
                isUncurried = !isCurried

              while (++leftIndex < leftLength) {
                result[leftIndex] = partials[leftIndex]
              }
              while (++argsIndex < holdersLength) {
                if (isUncurried || argsIndex < argsLength) {
                  result[holders[argsIndex]] = args[argsIndex]
                }
              }
              while (rangeLength--) {
                result[leftIndex++] = args[argsIndex++]
              }
              return result
            }

            /**
             * This function is like `composeArgs` except that the arguments composition
             * is tailored for `_.partialRight`.
             *
             * @private
             * @param {Array} args The provided arguments.
             * @param {Array} partials The arguments to append to those provided.
             * @param {Array} holders The `partials` placeholder indexes.
             * @params {boolean} [isCurried] Specify composing for a curried function.
             * @returns {Array} Returns the new array of composed arguments.
             */
            function composeArgsRight(args, partials, holders, isCurried) {
              var argsIndex = -1,
                argsLength = args.length,
                holdersIndex = -1,
                holdersLength = holders.length,
                rightIndex = -1,
                rightLength = partials.length,
                rangeLength = nativeMax(argsLength - holdersLength, 0),
                result = Array(rangeLength + rightLength),
                isUncurried = !isCurried

              while (++argsIndex < rangeLength) {
                result[argsIndex] = args[argsIndex]
              }
              var offset = argsIndex
              while (++rightIndex < rightLength) {
                result[offset + rightIndex] = partials[rightIndex]
              }
              while (++holdersIndex < holdersLength) {
                if (isUncurried || argsIndex < argsLength) {
                  result[offset + holders[holdersIndex]] = args[argsIndex++]
                }
              }
              return result
            }

            /**
             * Copies the values of `source` to `array`.
             *
             * @private
             * @param {Array} source The array to copy values from.
             * @param {Array} [array=[]] The array to copy values to.
             * @returns {Array} Returns `array`.
             */
            function copyArray(source, array) {
              var index = -1,
                length = source.length

              array || (array = Array(length))
              while (++index < length) {
                array[index] = source[index]
              }
              return array
            }

            /**
             * Copies properties of `source` to `object`.
             *
             * @private
             * @param {Object} source The object to copy properties from.
             * @param {Array} props The property identifiers to copy.
             * @param {Object} [object={}] The object to copy properties to.
             * @param {Function} [customizer] The function to customize copied values.
             * @returns {Object} Returns `object`.
             */
            function copyObject(source, props, object, customizer) {
              var isNew = !object
              object || (object = {})

              var index = -1,
                length = props.length

              while (++index < length) {
                var key = props[index]

                var newValue = customizer
                  ? customizer(object[key], source[key], key, object, source)
                  : undefined

                if (newValue === undefined) {
                  newValue = source[key]
                }
                if (isNew) {
                  baseAssignValue(object, key, newValue)
                } else {
                  assignValue(object, key, newValue)
                }
              }
              return object
            }

            /**
             * Copies own symbols of `source` to `object`.
             *
             * @private
             * @param {Object} source The object to copy symbols from.
             * @param {Object} [object={}] The object to copy symbols to.
             * @returns {Object} Returns `object`.
             */
            function copySymbols(source, object) {
              return copyObject(source, getSymbols(source), object)
            }

            /**
             * Copies own and inherited symbols of `source` to `object`.
             *
             * @private
             * @param {Object} source The object to copy symbols from.
             * @param {Object} [object={}] The object to copy symbols to.
             * @returns {Object} Returns `object`.
             */
            function copySymbolsIn(source, object) {
              return copyObject(source, getSymbolsIn(source), object)
            }

            /**
             * Creates a function like `_.groupBy`.
             *
             * @private
             * @param {Function} setter The function to set accumulator values.
             * @param {Function} [initializer] The accumulator object initializer.
             * @returns {Function} Returns the new aggregator function.
             */
            function createAggregator(setter, initializer) {
              return function (collection, iteratee) {
                var func = isArray(collection)
                    ? arrayAggregator
                    : baseAggregator,
                  accumulator = initializer ? initializer() : {}

                return func(
                  collection,
                  setter,
                  getIteratee(iteratee, 2),
                  accumulator
                )
              }
            }

            /**
             * Creates a function like `_.assign`.
             *
             * @private
             * @param {Function} assigner The function to assign values.
             * @returns {Function} Returns the new assigner function.
             */
            function createAssigner(assigner) {
              return baseRest(function (object, sources) {
                var index = -1,
                  length = sources.length,
                  customizer = length > 1 ? sources[length - 1] : undefined,
                  guard = length > 2 ? sources[2] : undefined

                customizer =
                  assigner.length > 3 && typeof customizer == 'function'
                    ? (length--, customizer)
                    : undefined

                if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                  customizer = length < 3 ? undefined : customizer
                  length = 1
                }
                object = Object(object)
                while (++index < length) {
                  var source = sources[index]
                  if (source) {
                    assigner(object, source, index, customizer)
                  }
                }
                return object
              })
            }

            /**
             * Creates a `baseEach` or `baseEachRight` function.
             *
             * @private
             * @param {Function} eachFunc The function to iterate over a collection.
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Function} Returns the new base function.
             */
            function createBaseEach(eachFunc, fromRight) {
              return function (collection, iteratee) {
                if (collection == null) {
                  return collection
                }
                if (!isArrayLike(collection)) {
                  return eachFunc(collection, iteratee)
                }
                var length = collection.length,
                  index = fromRight ? length : -1,
                  iterable = Object(collection)

                while (fromRight ? index-- : ++index < length) {
                  if (iteratee(iterable[index], index, iterable) === false) {
                    break
                  }
                }
                return collection
              }
            }

            /**
             * Creates a base function for methods like `_.forIn` and `_.forOwn`.
             *
             * @private
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Function} Returns the new base function.
             */
            function createBaseFor(fromRight) {
              return function (object, iteratee, keysFunc) {
                var index = -1,
                  iterable = Object(object),
                  props = keysFunc(object),
                  length = props.length

                while (length--) {
                  var key = props[fromRight ? length : ++index]
                  if (iteratee(iterable[key], key, iterable) === false) {
                    break
                  }
                }
                return object
              }
            }

            /**
             * Creates a function that wraps `func` to invoke it with the optional `this`
             * binding of `thisArg`.
             *
             * @private
             * @param {Function} func The function to wrap.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @param {*} [thisArg] The `this` binding of `func`.
             * @returns {Function} Returns the new wrapped function.
             */
            function createBind(func, bitmask, thisArg) {
              var isBind = bitmask & WRAP_BIND_FLAG,
                Ctor = createCtor(func)

              function wrapper() {
                var fn =
                  this && this !== root && this instanceof wrapper ? Ctor : func
                return fn.apply(isBind ? thisArg : this, arguments)
              }
              return wrapper
            }

            /**
             * Creates a function like `_.lowerFirst`.
             *
             * @private
             * @param {string} methodName The name of the `String` case method to use.
             * @returns {Function} Returns the new case function.
             */
            function createCaseFirst(methodName) {
              return function (string) {
                string = toString(string)

                var strSymbols = hasUnicode(string)
                  ? stringToArray(string)
                  : undefined

                var chr = strSymbols ? strSymbols[0] : string.charAt(0)

                var trailing = strSymbols
                  ? castSlice(strSymbols, 1).join('')
                  : string.slice(1)

                return chr[methodName]() + trailing
              }
            }

            /**
             * Creates a function like `_.camelCase`.
             *
             * @private
             * @param {Function} callback The function to combine each word.
             * @returns {Function} Returns the new compounder function.
             */
            function createCompounder(callback) {
              return function (string) {
                return arrayReduce(
                  words(deburr(string).replace(reApos, '')),
                  callback,
                  ''
                )
              }
            }

            /**
             * Creates a function that produces an instance of `Ctor` regardless of
             * whether it was invoked as part of a `new` expression or by `call` or `apply`.
             *
             * @private
             * @param {Function} Ctor The constructor to wrap.
             * @returns {Function} Returns the new wrapped function.
             */
            function createCtor(Ctor) {
              return function () {
                // Use a `switch` statement to work with class constructors. See
                // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
                // for more details.
                var args = arguments
                switch (args.length) {
                  case 0:
                    return new Ctor()
                  case 1:
                    return new Ctor(args[0])
                  case 2:
                    return new Ctor(args[0], args[1])
                  case 3:
                    return new Ctor(args[0], args[1], args[2])
                  case 4:
                    return new Ctor(args[0], args[1], args[2], args[3])
                  case 5:
                    return new Ctor(args[0], args[1], args[2], args[3], args[4])
                  case 6:
                    return new Ctor(
                      args[0],
                      args[1],
                      args[2],
                      args[3],
                      args[4],
                      args[5]
                    )
                  case 7:
                    return new Ctor(
                      args[0],
                      args[1],
                      args[2],
                      args[3],
                      args[4],
                      args[5],
                      args[6]
                    )
                }
                var thisBinding = baseCreate(Ctor.prototype),
                  result = Ctor.apply(thisBinding, args)

                // Mimic the constructor's `return` behavior.
                // See https://es5.github.io/#x13.2.2 for more details.
                return isObject(result) ? result : thisBinding
              }
            }

            /**
             * Creates a function that wraps `func` to enable currying.
             *
             * @private
             * @param {Function} func The function to wrap.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @param {number} arity The arity of `func`.
             * @returns {Function} Returns the new wrapped function.
             */
            function createCurry(func, bitmask, arity) {
              var Ctor = createCtor(func)

              function wrapper() {
                var length = arguments.length,
                  args = Array(length),
                  index = length,
                  placeholder = getHolder(wrapper)

                while (index--) {
                  args[index] = arguments[index]
                }
                var holders =
                  length < 3 &&
                  args[0] !== placeholder &&
                  args[length - 1] !== placeholder
                    ? []
                    : replaceHolders(args, placeholder)

                length -= holders.length
                if (length < arity) {
                  return createRecurry(
                    func,
                    bitmask,
                    createHybrid,
                    wrapper.placeholder,
                    undefined,
                    args,
                    holders,
                    undefined,
                    undefined,
                    arity - length
                  )
                }
                var fn =
                  this && this !== root && this instanceof wrapper ? Ctor : func
                return apply(fn, this, args)
              }
              return wrapper
            }

            /**
             * Creates a `_.find` or `_.findLast` function.
             *
             * @private
             * @param {Function} findIndexFunc The function to find the collection index.
             * @returns {Function} Returns the new find function.
             */
            function createFind(findIndexFunc) {
              return function (collection, predicate, fromIndex) {
                var iterable = Object(collection)
                if (!isArrayLike(collection)) {
                  var iteratee = getIteratee(predicate, 3)
                  collection = keys(collection)
                  predicate = function (key) {
                    return iteratee(iterable[key], key, iterable)
                  }
                }
                var index = findIndexFunc(collection, predicate, fromIndex)
                return index > -1
                  ? iterable[iteratee ? collection[index] : index]
                  : undefined
              }
            }

            /**
             * Creates a `_.flow` or `_.flowRight` function.
             *
             * @private
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Function} Returns the new flow function.
             */
            function createFlow(fromRight) {
              return flatRest(function (funcs) {
                var length = funcs.length,
                  index = length,
                  prereq = LodashWrapper.prototype.thru

                if (fromRight) {
                  funcs.reverse()
                }
                while (index--) {
                  var func = funcs[index]
                  if (typeof func != 'function') {
                    throw new TypeError(FUNC_ERROR_TEXT)
                  }
                  if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                    var wrapper = new LodashWrapper([], true)
                  }
                }
                index = wrapper ? index : length
                while (++index < length) {
                  func = funcs[index]

                  var funcName = getFuncName(func),
                    data = funcName == 'wrapper' ? getData(func) : undefined

                  if (
                    data &&
                    isLaziable(data[0]) &&
                    data[1] ==
                      (WRAP_ARY_FLAG |
                        WRAP_CURRY_FLAG |
                        WRAP_PARTIAL_FLAG |
                        WRAP_REARG_FLAG) &&
                    !data[4].length &&
                    data[9] == 1
                  ) {
                    wrapper = wrapper[getFuncName(data[0])].apply(
                      wrapper,
                      data[3]
                    )
                  } else {
                    wrapper =
                      func.length == 1 && isLaziable(func)
                        ? wrapper[funcName]()
                        : wrapper.thru(func)
                  }
                }
                return function () {
                  var args = arguments,
                    value = args[0]

                  if (wrapper && args.length == 1 && isArray(value)) {
                    return wrapper.plant(value).value()
                  }
                  var index = 0,
                    result = length ? funcs[index].apply(this, args) : value

                  while (++index < length) {
                    result = funcs[index].call(this, result)
                  }
                  return result
                }
              })
            }

            /**
             * Creates a function that wraps `func` to invoke it with optional `this`
             * binding of `thisArg`, partial application, and currying.
             *
             * @private
             * @param {Function|string} func The function or method name to wrap.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @param {*} [thisArg] The `this` binding of `func`.
             * @param {Array} [partials] The arguments to prepend to those provided to
             *  the new function.
             * @param {Array} [holders] The `partials` placeholder indexes.
             * @param {Array} [partialsRight] The arguments to append to those provided
             *  to the new function.
             * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
             * @param {Array} [argPos] The argument positions of the new function.
             * @param {number} [ary] The arity cap of `func`.
             * @param {number} [arity] The arity of `func`.
             * @returns {Function} Returns the new wrapped function.
             */
            function createHybrid(
              func,
              bitmask,
              thisArg,
              partials,
              holders,
              partialsRight,
              holdersRight,
              argPos,
              ary,
              arity
            ) {
              var isAry = bitmask & WRAP_ARY_FLAG,
                isBind = bitmask & WRAP_BIND_FLAG,
                isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
                isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
                isFlip = bitmask & WRAP_FLIP_FLAG,
                Ctor = isBindKey ? undefined : createCtor(func)

              function wrapper() {
                var length = arguments.length,
                  args = Array(length),
                  index = length

                while (index--) {
                  args[index] = arguments[index]
                }
                if (isCurried) {
                  var placeholder = getHolder(wrapper),
                    holdersCount = countHolders(args, placeholder)
                }
                if (partials) {
                  args = composeArgs(args, partials, holders, isCurried)
                }
                if (partialsRight) {
                  args = composeArgsRight(
                    args,
                    partialsRight,
                    holdersRight,
                    isCurried
                  )
                }
                length -= holdersCount
                if (isCurried && length < arity) {
                  var newHolders = replaceHolders(args, placeholder)
                  return createRecurry(
                    func,
                    bitmask,
                    createHybrid,
                    wrapper.placeholder,
                    thisArg,
                    args,
                    newHolders,
                    argPos,
                    ary,
                    arity - length
                  )
                }
                var thisBinding = isBind ? thisArg : this,
                  fn = isBindKey ? thisBinding[func] : func

                length = args.length
                if (argPos) {
                  args = reorder(args, argPos)
                } else if (isFlip && length > 1) {
                  args.reverse()
                }
                if (isAry && ary < length) {
                  args.length = ary
                }
                if (this && this !== root && this instanceof wrapper) {
                  fn = Ctor || createCtor(fn)
                }
                return fn.apply(thisBinding, args)
              }
              return wrapper
            }

            /**
             * Creates a function like `_.invertBy`.
             *
             * @private
             * @param {Function} setter The function to set accumulator values.
             * @param {Function} toIteratee The function to resolve iteratees.
             * @returns {Function} Returns the new inverter function.
             */
            function createInverter(setter, toIteratee) {
              return function (object, iteratee) {
                return baseInverter(object, setter, toIteratee(iteratee), {})
              }
            }

            /**
             * Creates a function that performs a mathematical operation on two values.
             *
             * @private
             * @param {Function} operator The function to perform the operation.
             * @param {number} [defaultValue] The value used for `undefined` arguments.
             * @returns {Function} Returns the new mathematical operation function.
             */
            function createMathOperation(operator, defaultValue) {
              return function (value, other) {
                var result
                if (value === undefined && other === undefined) {
                  return defaultValue
                }
                if (value !== undefined) {
                  result = value
                }
                if (other !== undefined) {
                  if (result === undefined) {
                    return other
                  }
                  if (typeof value == 'string' || typeof other == 'string') {
                    value = baseToString(value)
                    other = baseToString(other)
                  } else {
                    value = baseToNumber(value)
                    other = baseToNumber(other)
                  }
                  result = operator(value, other)
                }
                return result
              }
            }

            /**
             * Creates a function like `_.over`.
             *
             * @private
             * @param {Function} arrayFunc The function to iterate over iteratees.
             * @returns {Function} Returns the new over function.
             */
            function createOver(arrayFunc) {
              return flatRest(function (iteratees) {
                iteratees = arrayMap(iteratees, baseUnary(getIteratee()))
                return baseRest(function (args) {
                  var thisArg = this
                  return arrayFunc(iteratees, function (iteratee) {
                    return apply(iteratee, thisArg, args)
                  })
                })
              })
            }

            /**
             * Creates the padding for `string` based on `length`. The `chars` string
             * is truncated if the number of characters exceeds `length`.
             *
             * @private
             * @param {number} length The padding length.
             * @param {string} [chars=' '] The string used as padding.
             * @returns {string} Returns the padding for `string`.
             */
            function createPadding(length, chars) {
              chars = chars === undefined ? ' ' : baseToString(chars)

              var charsLength = chars.length
              if (charsLength < 2) {
                return charsLength ? baseRepeat(chars, length) : chars
              }
              var result = baseRepeat(
                chars,
                nativeCeil(length / stringSize(chars))
              )
              return hasUnicode(chars)
                ? castSlice(stringToArray(result), 0, length).join('')
                : result.slice(0, length)
            }

            /**
             * Creates a function that wraps `func` to invoke it with the `this` binding
             * of `thisArg` and `partials` prepended to the arguments it receives.
             *
             * @private
             * @param {Function} func The function to wrap.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @param {*} thisArg The `this` binding of `func`.
             * @param {Array} partials The arguments to prepend to those provided to
             *  the new function.
             * @returns {Function} Returns the new wrapped function.
             */
            function createPartial(func, bitmask, thisArg, partials) {
              var isBind = bitmask & WRAP_BIND_FLAG,
                Ctor = createCtor(func)

              function wrapper() {
                var argsIndex = -1,
                  argsLength = arguments.length,
                  leftIndex = -1,
                  leftLength = partials.length,
                  args = Array(leftLength + argsLength),
                  fn =
                    this && this !== root && this instanceof wrapper
                      ? Ctor
                      : func

                while (++leftIndex < leftLength) {
                  args[leftIndex] = partials[leftIndex]
                }
                while (argsLength--) {
                  args[leftIndex++] = arguments[++argsIndex]
                }
                return apply(fn, isBind ? thisArg : this, args)
              }
              return wrapper
            }

            /**
             * Creates a `_.range` or `_.rangeRight` function.
             *
             * @private
             * @param {boolean} [fromRight] Specify iterating from right to left.
             * @returns {Function} Returns the new range function.
             */
            function createRange(fromRight) {
              return function (start, end, step) {
                if (
                  step &&
                  typeof step != 'number' &&
                  isIterateeCall(start, end, step)
                ) {
                  end = step = undefined
                }
                // Ensure the sign of `-0` is preserved.
                start = toFinite(start)
                if (end === undefined) {
                  end = start
                  start = 0
                } else {
                  end = toFinite(end)
                }
                step =
                  step === undefined ? (start < end ? 1 : -1) : toFinite(step)
                return baseRange(start, end, step, fromRight)
              }
            }

            /**
             * Creates a function that performs a relational operation on two values.
             *
             * @private
             * @param {Function} operator The function to perform the operation.
             * @returns {Function} Returns the new relational operation function.
             */
            function createRelationalOperation(operator) {
              return function (value, other) {
                if (!(typeof value == 'string' && typeof other == 'string')) {
                  value = toNumber(value)
                  other = toNumber(other)
                }
                return operator(value, other)
              }
            }

            /**
             * Creates a function that wraps `func` to continue currying.
             *
             * @private
             * @param {Function} func The function to wrap.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @param {Function} wrapFunc The function to create the `func` wrapper.
             * @param {*} placeholder The placeholder value.
             * @param {*} [thisArg] The `this` binding of `func`.
             * @param {Array} [partials] The arguments to prepend to those provided to
             *  the new function.
             * @param {Array} [holders] The `partials` placeholder indexes.
             * @param {Array} [argPos] The argument positions of the new function.
             * @param {number} [ary] The arity cap of `func`.
             * @param {number} [arity] The arity of `func`.
             * @returns {Function} Returns the new wrapped function.
             */
            function createRecurry(
              func,
              bitmask,
              wrapFunc,
              placeholder,
              thisArg,
              partials,
              holders,
              argPos,
              ary,
              arity
            ) {
              var isCurry = bitmask & WRAP_CURRY_FLAG,
                newHolders = isCurry ? holders : undefined,
                newHoldersRight = isCurry ? undefined : holders,
                newPartials = isCurry ? partials : undefined,
                newPartialsRight = isCurry ? undefined : partials

              bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG
              bitmask &= ~(isCurry
                ? WRAP_PARTIAL_RIGHT_FLAG
                : WRAP_PARTIAL_FLAG)

              if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
                bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG)
              }
              var newData = [
                func,
                bitmask,
                thisArg,
                newPartials,
                newHolders,
                newPartialsRight,
                newHoldersRight,
                argPos,
                ary,
                arity,
              ]

              var result = wrapFunc.apply(undefined, newData)
              if (isLaziable(func)) {
                setData(result, newData)
              }
              result.placeholder = placeholder
              return setWrapToString(result, func, bitmask)
            }

            /**
             * Creates a function like `_.round`.
             *
             * @private
             * @param {string} methodName The name of the `Math` method to use when rounding.
             * @returns {Function} Returns the new round function.
             */
            function createRound(methodName) {
              var func = Math[methodName]
              return function (number, precision) {
                number = toNumber(number)
                precision =
                  precision == null ? 0 : nativeMin(toInteger(precision), 292)
                if (precision && nativeIsFinite(number)) {
                  // Shift with exponential notation to avoid floating-point issues.
                  // See [MDN](https://mdn.io/round#Examples) for more details.
                  var pair = (toString(number) + 'e').split('e'),
                    value = func(pair[0] + 'e' + (+pair[1] + precision))

                  pair = (toString(value) + 'e').split('e')
                  return +(pair[0] + 'e' + (+pair[1] - precision))
                }
                return func(number)
              }
            }

            /**
             * Creates a set object of `values`.
             *
             * @private
             * @param {Array} values The values to add to the set.
             * @returns {Object} Returns the new set.
             */
            var createSet = !(
              Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY
            )
              ? noop
              : function (values) {
                  return new Set(values)
                }

            /**
             * Creates a `_.toPairs` or `_.toPairsIn` function.
             *
             * @private
             * @param {Function} keysFunc The function to get the keys of a given object.
             * @returns {Function} Returns the new pairs function.
             */
            function createToPairs(keysFunc) {
              return function (object) {
                var tag = getTag(object)
                if (tag == mapTag) {
                  return mapToArray(object)
                }
                if (tag == setTag) {
                  return setToPairs(object)
                }
                return baseToPairs(object, keysFunc(object))
              }
            }

            /**
             * Creates a function that either curries or invokes `func` with optional
             * `this` binding and partially applied arguments.
             *
             * @private
             * @param {Function|string} func The function or method name to wrap.
             * @param {number} bitmask The bitmask flags.
             *    1 - `_.bind`
             *    2 - `_.bindKey`
             *    4 - `_.curry` or `_.curryRight` of a bound function
             *    8 - `_.curry`
             *   16 - `_.curryRight`
             *   32 - `_.partial`
             *   64 - `_.partialRight`
             *  128 - `_.rearg`
             *  256 - `_.ary`
             *  512 - `_.flip`
             * @param {*} [thisArg] The `this` binding of `func`.
             * @param {Array} [partials] The arguments to be partially applied.
             * @param {Array} [holders] The `partials` placeholder indexes.
             * @param {Array} [argPos] The argument positions of the new function.
             * @param {number} [ary] The arity cap of `func`.
             * @param {number} [arity] The arity of `func`.
             * @returns {Function} Returns the new wrapped function.
             */
            function createWrap(
              func,
              bitmask,
              thisArg,
              partials,
              holders,
              argPos,
              ary,
              arity
            ) {
              var isBindKey = bitmask & WRAP_BIND_KEY_FLAG
              if (!isBindKey && typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              var length = partials ? partials.length : 0
              if (!length) {
                bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG)
                partials = holders = undefined
              }
              ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0)
              arity = arity === undefined ? arity : toInteger(arity)
              length -= holders ? holders.length : 0

              if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                var partialsRight = partials,
                  holdersRight = holders

                partials = holders = undefined
              }
              var data = isBindKey ? undefined : getData(func)

              var newData = [
                func,
                bitmask,
                thisArg,
                partials,
                holders,
                partialsRight,
                holdersRight,
                argPos,
                ary,
                arity,
              ]

              if (data) {
                mergeData(newData, data)
              }
              func = newData[0]
              bitmask = newData[1]
              thisArg = newData[2]
              partials = newData[3]
              holders = newData[4]
              arity = newData[9] =
                newData[9] === undefined
                  ? isBindKey
                    ? 0
                    : func.length
                  : nativeMax(newData[9] - length, 0)

              if (
                !arity &&
                bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)
              ) {
                bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)
              }
              if (!bitmask || bitmask == WRAP_BIND_FLAG) {
                var result = createBind(func, bitmask, thisArg)
              } else if (
                bitmask == WRAP_CURRY_FLAG ||
                bitmask == WRAP_CURRY_RIGHT_FLAG
              ) {
                result = createCurry(func, bitmask, arity)
              } else if (
                (bitmask == WRAP_PARTIAL_FLAG ||
                  bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) &&
                !holders.length
              ) {
                result = createPartial(func, bitmask, thisArg, partials)
              } else {
                result = createHybrid.apply(undefined, newData)
              }
              var setter = data ? baseSetData : setData
              return setWrapToString(setter(result, newData), func, bitmask)
            }

            /**
             * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
             * of source objects to the destination object for all destination properties
             * that resolve to `undefined`.
             *
             * @private
             * @param {*} objValue The destination value.
             * @param {*} srcValue The source value.
             * @param {string} key The key of the property to assign.
             * @param {Object} object The parent object of `objValue`.
             * @returns {*} Returns the value to assign.
             */
            function customDefaultsAssignIn(objValue, srcValue, key, object) {
              if (
                objValue === undefined ||
                (eq(objValue, objectProto[key]) &&
                  !hasOwnProperty.call(object, key))
              ) {
                return srcValue
              }
              return objValue
            }

            /**
             * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
             * objects into destination objects that are passed thru.
             *
             * @private
             * @param {*} objValue The destination value.
             * @param {*} srcValue The source value.
             * @param {string} key The key of the property to merge.
             * @param {Object} object The parent object of `objValue`.
             * @param {Object} source The parent object of `srcValue`.
             * @param {Object} [stack] Tracks traversed source values and their merged
             *  counterparts.
             * @returns {*} Returns the value to assign.
             */
            function customDefaultsMerge(
              objValue,
              srcValue,
              key,
              object,
              source,
              stack
            ) {
              if (isObject(objValue) && isObject(srcValue)) {
                // Recursively merge objects and arrays (susceptible to call stack limits).
                stack.set(srcValue, objValue)
                baseMerge(
                  objValue,
                  srcValue,
                  undefined,
                  customDefaultsMerge,
                  stack
                )
                stack['delete'](srcValue)
              }
              return objValue
            }

            /**
             * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
             * objects.
             *
             * @private
             * @param {*} value The value to inspect.
             * @param {string} key The key of the property to inspect.
             * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
             */
            function customOmitClone(value) {
              return isPlainObject(value) ? undefined : value
            }

            /**
             * A specialized version of `baseIsEqualDeep` for arrays with support for
             * partial deep comparisons.
             *
             * @private
             * @param {Array} array The array to compare.
             * @param {Array} other The other array to compare.
             * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
             * @param {Function} customizer The function to customize comparisons.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Object} stack Tracks traversed `array` and `other` objects.
             * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
             */
            function equalArrays(
              array,
              other,
              bitmask,
              customizer,
              equalFunc,
              stack
            ) {
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                arrLength = array.length,
                othLength = other.length

              if (
                arrLength != othLength &&
                !(isPartial && othLength > arrLength)
              ) {
                return false
              }
              // Check that cyclic values are equal.
              var arrStacked = stack.get(array)
              var othStacked = stack.get(other)
              if (arrStacked && othStacked) {
                return arrStacked == other && othStacked == array
              }
              var index = -1,
                result = true,
                seen =
                  bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined

              stack.set(array, other)
              stack.set(other, array)

              // Ignore non-index properties.
              while (++index < arrLength) {
                var arrValue = array[index],
                  othValue = other[index]

                if (customizer) {
                  var compared = isPartial
                    ? customizer(othValue, arrValue, index, other, array, stack)
                    : customizer(arrValue, othValue, index, array, other, stack)
                }
                if (compared !== undefined) {
                  if (compared) {
                    continue
                  }
                  result = false
                  break
                }
                // Recursively compare arrays (susceptible to call stack limits).
                if (seen) {
                  if (
                    !arraySome(other, function (othValue, othIndex) {
                      if (
                        !cacheHas(seen, othIndex) &&
                        (arrValue === othValue ||
                          equalFunc(
                            arrValue,
                            othValue,
                            bitmask,
                            customizer,
                            stack
                          ))
                      ) {
                        return seen.push(othIndex)
                      }
                    })
                  ) {
                    result = false
                    break
                  }
                } else if (
                  !(
                    arrValue === othValue ||
                    equalFunc(arrValue, othValue, bitmask, customizer, stack)
                  )
                ) {
                  result = false
                  break
                }
              }
              stack['delete'](array)
              stack['delete'](other)
              return result
            }

            /**
             * A specialized version of `baseIsEqualDeep` for comparing objects of
             * the same `toStringTag`.
             *
             * **Note:** This function only supports comparing values with tags of
             * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {string} tag The `toStringTag` of the objects to compare.
             * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
             * @param {Function} customizer The function to customize comparisons.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Object} stack Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function equalByTag(
              object,
              other,
              tag,
              bitmask,
              customizer,
              equalFunc,
              stack
            ) {
              switch (tag) {
                case dataViewTag:
                  if (
                    object.byteLength != other.byteLength ||
                    object.byteOffset != other.byteOffset
                  ) {
                    return false
                  }
                  object = object.buffer
                  other = other.buffer

                case arrayBufferTag:
                  if (
                    object.byteLength != other.byteLength ||
                    !equalFunc(new Uint8Array(object), new Uint8Array(other))
                  ) {
                    return false
                  }
                  return true

                case boolTag:
                case dateTag:
                case numberTag:
                  // Coerce booleans to `1` or `0` and dates to milliseconds.
                  // Invalid dates are coerced to `NaN`.
                  return eq(+object, +other)

                case errorTag:
                  return (
                    object.name == other.name && object.message == other.message
                  )

                case regexpTag:
                case stringTag:
                  // Coerce regexes to strings and treat strings, primitives and objects,
                  // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                  // for more details.
                  return object == other + ''

                case mapTag:
                  var convert = mapToArray

                case setTag:
                  var isPartial = bitmask & COMPARE_PARTIAL_FLAG
                  convert || (convert = setToArray)

                  if (object.size != other.size && !isPartial) {
                    return false
                  }
                  // Assume cyclic values are equal.
                  var stacked = stack.get(object)
                  if (stacked) {
                    return stacked == other
                  }
                  bitmask |= COMPARE_UNORDERED_FLAG

                  // Recursively compare objects (susceptible to call stack limits).
                  stack.set(object, other)
                  var result = equalArrays(
                    convert(object),
                    convert(other),
                    bitmask,
                    customizer,
                    equalFunc,
                    stack
                  )
                  stack['delete'](object)
                  return result

                case symbolTag:
                  if (symbolValueOf) {
                    return (
                      symbolValueOf.call(object) == symbolValueOf.call(other)
                    )
                  }
              }
              return false
            }

            /**
             * A specialized version of `baseIsEqualDeep` for objects with support for
             * partial deep comparisons.
             *
             * @private
             * @param {Object} object The object to compare.
             * @param {Object} other The other object to compare.
             * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
             * @param {Function} customizer The function to customize comparisons.
             * @param {Function} equalFunc The function to determine equivalents of values.
             * @param {Object} stack Tracks traversed `object` and `other` objects.
             * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
             */
            function equalObjects(
              object,
              other,
              bitmask,
              customizer,
              equalFunc,
              stack
            ) {
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
                objProps = getAllKeys(object),
                objLength = objProps.length,
                othProps = getAllKeys(other),
                othLength = othProps.length

              if (objLength != othLength && !isPartial) {
                return false
              }
              var index = objLength
              while (index--) {
                var key = objProps[index]
                if (
                  !(isPartial ? key in other : hasOwnProperty.call(other, key))
                ) {
                  return false
                }
              }
              // Check that cyclic values are equal.
              var objStacked = stack.get(object)
              var othStacked = stack.get(other)
              if (objStacked && othStacked) {
                return objStacked == other && othStacked == object
              }
              var result = true
              stack.set(object, other)
              stack.set(other, object)

              var skipCtor = isPartial
              while (++index < objLength) {
                key = objProps[index]
                var objValue = object[key],
                  othValue = other[key]

                if (customizer) {
                  var compared = isPartial
                    ? customizer(othValue, objValue, key, other, object, stack)
                    : customizer(objValue, othValue, key, object, other, stack)
                }
                // Recursively compare objects (susceptible to call stack limits).
                if (
                  !(compared === undefined
                    ? objValue === othValue ||
                      equalFunc(objValue, othValue, bitmask, customizer, stack)
                    : compared)
                ) {
                  result = false
                  break
                }
                skipCtor || (skipCtor = key == 'constructor')
              }
              if (result && !skipCtor) {
                var objCtor = object.constructor,
                  othCtor = other.constructor

                // Non `Object` object instances with different constructors are not equal.
                if (
                  objCtor != othCtor &&
                  'constructor' in object &&
                  'constructor' in other &&
                  !(
                    typeof objCtor == 'function' &&
                    objCtor instanceof objCtor &&
                    typeof othCtor == 'function' &&
                    othCtor instanceof othCtor
                  )
                ) {
                  result = false
                }
              }
              stack['delete'](object)
              stack['delete'](other)
              return result
            }

            /**
             * A specialized version of `baseRest` which flattens the rest array.
             *
             * @private
             * @param {Function} func The function to apply a rest parameter to.
             * @returns {Function} Returns the new function.
             */
            function flatRest(func) {
              return setToString(overRest(func, undefined, flatten), func + '')
            }

            /**
             * Creates an array of own enumerable property names and symbols of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names and symbols.
             */
            function getAllKeys(object) {
              return baseGetAllKeys(object, keys, getSymbols)
            }

            /**
             * Creates an array of own and inherited enumerable property names and
             * symbols of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names and symbols.
             */
            function getAllKeysIn(object) {
              return baseGetAllKeys(object, keysIn, getSymbolsIn)
            }

            /**
             * Gets metadata for `func`.
             *
             * @private
             * @param {Function} func The function to query.
             * @returns {*} Returns the metadata for `func`.
             */
            var getData = !metaMap
              ? noop
              : function (func) {
                  return metaMap.get(func)
                }

            /**
             * Gets the name of `func`.
             *
             * @private
             * @param {Function} func The function to query.
             * @returns {string} Returns the function name.
             */
            function getFuncName(func) {
              var result = func.name + '',
                array = realNames[result],
                length = hasOwnProperty.call(realNames, result)
                  ? array.length
                  : 0

              while (length--) {
                var data = array[length],
                  otherFunc = data.func
                if (otherFunc == null || otherFunc == func) {
                  return data.name
                }
              }
              return result
            }

            /**
             * Gets the argument placeholder value for `func`.
             *
             * @private
             * @param {Function} func The function to inspect.
             * @returns {*} Returns the placeholder value.
             */
            function getHolder(func) {
              var object = hasOwnProperty.call(lodash, 'placeholder')
                ? lodash
                : func
              return object.placeholder
            }

            /**
             * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
             * this function returns the custom method, otherwise it returns `baseIteratee`.
             * If arguments are provided, the chosen function is invoked with them and
             * its result is returned.
             *
             * @private
             * @param {*} [value] The value to convert to an iteratee.
             * @param {number} [arity] The arity of the created iteratee.
             * @returns {Function} Returns the chosen function or its result.
             */
            function getIteratee() {
              var result = lodash.iteratee || iteratee
              result = result === iteratee ? baseIteratee : result
              return arguments.length
                ? result(arguments[0], arguments[1])
                : result
            }

            /**
             * Gets the data for `map`.
             *
             * @private
             * @param {Object} map The map to query.
             * @param {string} key The reference key.
             * @returns {*} Returns the map data.
             */
            function getMapData(map, key) {
              var data = map.__data__
              return isKeyable(key)
                ? data[typeof key == 'string' ? 'string' : 'hash']
                : data.map
            }

            /**
             * Gets the property names, values, and compare flags of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the match data of `object`.
             */
            function getMatchData(object) {
              var result = keys(object),
                length = result.length

              while (length--) {
                var key = result[length],
                  value = object[key]

                result[length] = [key, value, isStrictComparable(value)]
              }
              return result
            }

            /**
             * Gets the native function at `key` of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {string} key The key of the method to get.
             * @returns {*} Returns the function if it's native, else `undefined`.
             */
            function getNative(object, key) {
              var value = getValue(object, key)
              return baseIsNative(value) ? value : undefined
            }

            /**
             * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
             *
             * @private
             * @param {*} value The value to query.
             * @returns {string} Returns the raw `toStringTag`.
             */
            function getRawTag(value) {
              var isOwn = hasOwnProperty.call(value, symToStringTag),
                tag = value[symToStringTag]

              try {
                value[symToStringTag] = undefined
                var unmasked = true
              } catch (e) {}

              var result = nativeObjectToString.call(value)
              if (unmasked) {
                if (isOwn) {
                  value[symToStringTag] = tag
                } else {
                  delete value[symToStringTag]
                }
              }
              return result
            }

            /**
             * Creates an array of the own enumerable symbols of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of symbols.
             */
            var getSymbols = !nativeGetSymbols
              ? stubArray
              : function (object) {
                  if (object == null) {
                    return []
                  }
                  object = Object(object)
                  return arrayFilter(
                    nativeGetSymbols(object),
                    function (symbol) {
                      return propertyIsEnumerable.call(object, symbol)
                    }
                  )
                }

            /**
             * Creates an array of the own and inherited enumerable symbols of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of symbols.
             */
            var getSymbolsIn = !nativeGetSymbols
              ? stubArray
              : function (object) {
                  var result = []
                  while (object) {
                    arrayPush(result, getSymbols(object))
                    object = getPrototype(object)
                  }
                  return result
                }

            /**
             * Gets the `toStringTag` of `value`.
             *
             * @private
             * @param {*} value The value to query.
             * @returns {string} Returns the `toStringTag`.
             */
            var getTag = baseGetTag

            // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
            if (
              (DataView &&
                getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
              (Map && getTag(new Map()) != mapTag) ||
              (Promise && getTag(Promise.resolve()) != promiseTag) ||
              (Set && getTag(new Set()) != setTag) ||
              (WeakMap && getTag(new WeakMap()) != weakMapTag)
            ) {
              getTag = function (value) {
                var result = baseGetTag(value),
                  Ctor = result == objectTag ? value.constructor : undefined,
                  ctorString = Ctor ? toSource(Ctor) : ''

                if (ctorString) {
                  switch (ctorString) {
                    case dataViewCtorString:
                      return dataViewTag
                    case mapCtorString:
                      return mapTag
                    case promiseCtorString:
                      return promiseTag
                    case setCtorString:
                      return setTag
                    case weakMapCtorString:
                      return weakMapTag
                  }
                }
                return result
              }
            }

            /**
             * Gets the view, applying any `transforms` to the `start` and `end` positions.
             *
             * @private
             * @param {number} start The start of the view.
             * @param {number} end The end of the view.
             * @param {Array} transforms The transformations to apply to the view.
             * @returns {Object} Returns an object containing the `start` and `end`
             *  positions of the view.
             */
            function getView(start, end, transforms) {
              var index = -1,
                length = transforms.length

              while (++index < length) {
                var data = transforms[index],
                  size = data.size

                switch (data.type) {
                  case 'drop':
                    start += size
                    break
                  case 'dropRight':
                    end -= size
                    break
                  case 'take':
                    end = nativeMin(end, start + size)
                    break
                  case 'takeRight':
                    start = nativeMax(start, end - size)
                    break
                }
              }
              return { start: start, end: end }
            }

            /**
             * Extracts wrapper details from the `source` body comment.
             *
             * @private
             * @param {string} source The source to inspect.
             * @returns {Array} Returns the wrapper details.
             */
            function getWrapDetails(source) {
              var match = source.match(reWrapDetails)
              return match ? match[1].split(reSplitDetails) : []
            }

            /**
             * Checks if `path` exists on `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array|string} path The path to check.
             * @param {Function} hasFunc The function to check properties.
             * @returns {boolean} Returns `true` if `path` exists, else `false`.
             */
            function hasPath(object, path, hasFunc) {
              path = castPath(path, object)

              var index = -1,
                length = path.length,
                result = false

              while (++index < length) {
                var key = toKey(path[index])
                if (!(result = object != null && hasFunc(object, key))) {
                  break
                }
                object = object[key]
              }
              if (result || ++index != length) {
                return result
              }
              length = object == null ? 0 : object.length
              return (
                !!length &&
                isLength(length) &&
                isIndex(key, length) &&
                (isArray(object) || isArguments(object))
              )
            }

            /**
             * Initializes an array clone.
             *
             * @private
             * @param {Array} array The array to clone.
             * @returns {Array} Returns the initialized clone.
             */
            function initCloneArray(array) {
              var length = array.length,
                result = new array.constructor(length)

              // Add properties assigned by `RegExp#exec`.
              if (
                length &&
                typeof array[0] == 'string' &&
                hasOwnProperty.call(array, 'index')
              ) {
                result.index = array.index
                result.input = array.input
              }
              return result
            }

            /**
             * Initializes an object clone.
             *
             * @private
             * @param {Object} object The object to clone.
             * @returns {Object} Returns the initialized clone.
             */
            function initCloneObject(object) {
              return typeof object.constructor == 'function' &&
                !isPrototype(object)
                ? baseCreate(getPrototype(object))
                : {}
            }

            /**
             * Initializes an object clone based on its `toStringTag`.
             *
             * **Note:** This function only supports cloning values with tags of
             * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
             *
             * @private
             * @param {Object} object The object to clone.
             * @param {string} tag The `toStringTag` of the object to clone.
             * @param {boolean} [isDeep] Specify a deep clone.
             * @returns {Object} Returns the initialized clone.
             */
            function initCloneByTag(object, tag, isDeep) {
              var Ctor = object.constructor
              switch (tag) {
                case arrayBufferTag:
                  return cloneArrayBuffer(object)

                case boolTag:
                case dateTag:
                  return new Ctor(+object)

                case dataViewTag:
                  return cloneDataView(object, isDeep)

                case float32Tag:
                case float64Tag:
                case int8Tag:
                case int16Tag:
                case int32Tag:
                case uint8Tag:
                case uint8ClampedTag:
                case uint16Tag:
                case uint32Tag:
                  return cloneTypedArray(object, isDeep)

                case mapTag:
                  return new Ctor()

                case numberTag:
                case stringTag:
                  return new Ctor(object)

                case regexpTag:
                  return cloneRegExp(object)

                case setTag:
                  return new Ctor()

                case symbolTag:
                  return cloneSymbol(object)
              }
            }

            /**
             * Inserts wrapper `details` in a comment at the top of the `source` body.
             *
             * @private
             * @param {string} source The source to modify.
             * @returns {Array} details The details to insert.
             * @returns {string} Returns the modified source.
             */
            function insertWrapDetails(source, details) {
              var length = details.length
              if (!length) {
                return source
              }
              var lastIndex = length - 1
              details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex]
              details = details.join(length > 2 ? ', ' : ' ')
              return source.replace(
                reWrapComment,
                '{\n/* [wrapped with ' + details + '] */\n'
              )
            }

            /**
             * Checks if `value` is a flattenable `arguments` object or array.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
             */
            function isFlattenable(value) {
              return (
                isArray(value) ||
                isArguments(value) ||
                !!(spreadableSymbol && value && value[spreadableSymbol])
              )
            }

            /**
             * Checks if `value` is a valid array-like index.
             *
             * @private
             * @param {*} value The value to check.
             * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
             * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
             */
            function isIndex(value, length) {
              var type = typeof value
              length = length == null ? MAX_SAFE_INTEGER : length

              return (
                !!length &&
                (type == 'number' ||
                  (type != 'symbol' && reIsUint.test(value))) &&
                value > -1 &&
                value % 1 == 0 &&
                value < length
              )
            }

            /**
             * Checks if the given arguments are from an iteratee call.
             *
             * @private
             * @param {*} value The potential iteratee value argument.
             * @param {*} index The potential iteratee index or key argument.
             * @param {*} object The potential iteratee object argument.
             * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
             *  else `false`.
             */
            function isIterateeCall(value, index, object) {
              if (!isObject(object)) {
                return false
              }
              var type = typeof index
              if (
                type == 'number'
                  ? isArrayLike(object) && isIndex(index, object.length)
                  : type == 'string' && index in object
              ) {
                return eq(object[index], value)
              }
              return false
            }

            /**
             * Checks if `value` is a property name and not a property path.
             *
             * @private
             * @param {*} value The value to check.
             * @param {Object} [object] The object to query keys on.
             * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
             */
            function isKey(value, object) {
              if (isArray(value)) {
                return false
              }
              var type = typeof value
              if (
                type == 'number' ||
                type == 'symbol' ||
                type == 'boolean' ||
                value == null ||
                isSymbol(value)
              ) {
                return true
              }
              return (
                reIsPlainProp.test(value) ||
                !reIsDeepProp.test(value) ||
                (object != null && value in Object(object))
              )
            }

            /**
             * Checks if `value` is suitable for use as unique object key.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
             */
            function isKeyable(value) {
              var type = typeof value
              return type == 'string' ||
                type == 'number' ||
                type == 'symbol' ||
                type == 'boolean'
                ? value !== '__proto__'
                : value === null
            }

            /**
             * Checks if `func` has a lazy counterpart.
             *
             * @private
             * @param {Function} func The function to check.
             * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
             *  else `false`.
             */
            function isLaziable(func) {
              var funcName = getFuncName(func),
                other = lodash[funcName]

              if (
                typeof other != 'function' ||
                !(funcName in LazyWrapper.prototype)
              ) {
                return false
              }
              if (func === other) {
                return true
              }
              var data = getData(other)
              return !!data && func === data[0]
            }

            /**
             * Checks if `func` has its source masked.
             *
             * @private
             * @param {Function} func The function to check.
             * @returns {boolean} Returns `true` if `func` is masked, else `false`.
             */
            function isMasked(func) {
              return !!maskSrcKey && maskSrcKey in func
            }

            /**
             * Checks if `func` is capable of being masked.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
             */
            var isMaskable = coreJsData ? isFunction : stubFalse

            /**
             * Checks if `value` is likely a prototype object.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
             */
            function isPrototype(value) {
              var Ctor = value && value.constructor,
                proto =
                  (typeof Ctor == 'function' && Ctor.prototype) || objectProto

              return value === proto
            }

            /**
             * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
             *
             * @private
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` if suitable for strict
             *  equality comparisons, else `false`.
             */
            function isStrictComparable(value) {
              return value === value && !isObject(value)
            }

            /**
             * A specialized version of `matchesProperty` for source values suitable
             * for strict equality comparisons, i.e. `===`.
             *
             * @private
             * @param {string} key The key of the property to get.
             * @param {*} srcValue The value to match.
             * @returns {Function} Returns the new spec function.
             */
            function matchesStrictComparable(key, srcValue) {
              return function (object) {
                if (object == null) {
                  return false
                }
                return (
                  object[key] === srcValue &&
                  (srcValue !== undefined || key in Object(object))
                )
              }
            }

            /**
             * A specialized version of `_.memoize` which clears the memoized function's
             * cache when it exceeds `MAX_MEMOIZE_SIZE`.
             *
             * @private
             * @param {Function} func The function to have its output memoized.
             * @returns {Function} Returns the new memoized function.
             */
            function memoizeCapped(func) {
              var result = memoize(func, function (key) {
                if (cache.size === MAX_MEMOIZE_SIZE) {
                  cache.clear()
                }
                return key
              })

              var cache = result.cache
              return result
            }

            /**
             * Merges the function metadata of `source` into `data`.
             *
             * Merging metadata reduces the number of wrappers used to invoke a function.
             * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
             * may be applied regardless of execution order. Methods like `_.ary` and
             * `_.rearg` modify function arguments, making the order in which they are
             * executed important, preventing the merging of metadata. However, we make
             * an exception for a safe combined case where curried functions have `_.ary`
             * and or `_.rearg` applied.
             *
             * @private
             * @param {Array} data The destination metadata.
             * @param {Array} source The source metadata.
             * @returns {Array} Returns `data`.
             */
            function mergeData(data, source) {
              var bitmask = data[1],
                srcBitmask = source[1],
                newBitmask = bitmask | srcBitmask,
                isCommon =
                  newBitmask <
                  (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG)

              var isCombo =
                (srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG) ||
                (srcBitmask == WRAP_ARY_FLAG &&
                  bitmask == WRAP_REARG_FLAG &&
                  data[7].length <= source[8]) ||
                (srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) &&
                  source[7].length <= source[8] &&
                  bitmask == WRAP_CURRY_FLAG)

              // Exit early if metadata can't be merged.
              if (!(isCommon || isCombo)) {
                return data
              }
              // Use source `thisArg` if available.
              if (srcBitmask & WRAP_BIND_FLAG) {
                data[2] = source[2]
                // Set when currying a bound function.
                newBitmask |=
                  bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG
              }
              // Compose partial arguments.
              var value = source[3]
              if (value) {
                var partials = data[3]
                data[3] = partials
                  ? composeArgs(partials, value, source[4])
                  : value
                data[4] = partials
                  ? replaceHolders(data[3], PLACEHOLDER)
                  : source[4]
              }
              // Compose partial right arguments.
              value = source[5]
              if (value) {
                partials = data[5]
                data[5] = partials
                  ? composeArgsRight(partials, value, source[6])
                  : value
                data[6] = partials
                  ? replaceHolders(data[5], PLACEHOLDER)
                  : source[6]
              }
              // Use source `argPos` if available.
              value = source[7]
              if (value) {
                data[7] = value
              }
              // Use source `ary` if it's smaller.
              if (srcBitmask & WRAP_ARY_FLAG) {
                data[8] =
                  data[8] == null ? source[8] : nativeMin(data[8], source[8])
              }
              // Use source `arity` if one is not provided.
              if (data[9] == null) {
                data[9] = source[9]
              }
              // Use source `func` and merge bitmasks.
              data[0] = source[0]
              data[1] = newBitmask

              return data
            }

            /**
             * This function is like
             * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
             * except that it includes inherited enumerable properties.
             *
             * @private
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             */
            function nativeKeysIn(object) {
              var result = []
              if (object != null) {
                for (var key in Object(object)) {
                  result.push(key)
                }
              }
              return result
            }

            /**
             * Converts `value` to a string using `Object.prototype.toString`.
             *
             * @private
             * @param {*} value The value to convert.
             * @returns {string} Returns the converted string.
             */
            function objectToString(value) {
              return nativeObjectToString.call(value)
            }

            /**
             * A specialized version of `baseRest` which transforms the rest array.
             *
             * @private
             * @param {Function} func The function to apply a rest parameter to.
             * @param {number} [start=func.length-1] The start position of the rest parameter.
             * @param {Function} transform The rest array transform.
             * @returns {Function} Returns the new function.
             */
            function overRest(func, start, transform) {
              start = nativeMax(
                start === undefined ? func.length - 1 : start,
                0
              )
              return function () {
                var args = arguments,
                  index = -1,
                  length = nativeMax(args.length - start, 0),
                  array = Array(length)

                while (++index < length) {
                  array[index] = args[start + index]
                }
                index = -1
                var otherArgs = Array(start + 1)
                while (++index < start) {
                  otherArgs[index] = args[index]
                }
                otherArgs[start] = transform(array)
                return apply(func, this, otherArgs)
              }
            }

            /**
             * Gets the parent value at `path` of `object`.
             *
             * @private
             * @param {Object} object The object to query.
             * @param {Array} path The path to get the parent value of.
             * @returns {*} Returns the parent value.
             */
            function parent(object, path) {
              return path.length < 2
                ? object
                : baseGet(object, baseSlice(path, 0, -1))
            }

            /**
             * Reorder `array` according to the specified indexes where the element at
             * the first index is assigned as the first element, the element at
             * the second index is assigned as the second element, and so on.
             *
             * @private
             * @param {Array} array The array to reorder.
             * @param {Array} indexes The arranged array indexes.
             * @returns {Array} Returns `array`.
             */
            function reorder(array, indexes) {
              var arrLength = array.length,
                length = nativeMin(indexes.length, arrLength),
                oldArray = copyArray(array)

              while (length--) {
                var index = indexes[length]
                array[length] = isIndex(index, arrLength)
                  ? oldArray[index]
                  : undefined
              }
              return array
            }

            /**
             * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
             *
             * @private
             * @param {Object} object The object to query.
             * @param {string} key The key of the property to get.
             * @returns {*} Returns the property value.
             */
            function safeGet(object, key) {
              if (key === 'constructor' && typeof object[key] === 'function') {
                return
              }

              if (key == '__proto__') {
                return
              }

              return object[key]
            }

            /**
             * Sets metadata for `func`.
             *
             * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
             * period of time, it will trip its breaker and transition to an identity
             * function to avoid garbage collection pauses in V8. See
             * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
             * for more details.
             *
             * @private
             * @param {Function} func The function to associate metadata with.
             * @param {*} data The metadata.
             * @returns {Function} Returns `func`.
             */
            var setData = shortOut(baseSetData)

            /**
             * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
             *
             * @private
             * @param {Function} func The function to delay.
             * @param {number} wait The number of milliseconds to delay invocation.
             * @returns {number|Object} Returns the timer id or timeout object.
             */
            var setTimeout =
              ctxSetTimeout ||
              function (func, wait) {
                return root.setTimeout(func, wait)
              }

            /**
             * Sets the `toString` method of `func` to return `string`.
             *
             * @private
             * @param {Function} func The function to modify.
             * @param {Function} string The `toString` result.
             * @returns {Function} Returns `func`.
             */
            var setToString = shortOut(baseSetToString)

            /**
             * Sets the `toString` method of `wrapper` to mimic the source of `reference`
             * with wrapper details in a comment at the top of the source body.
             *
             * @private
             * @param {Function} wrapper The function to modify.
             * @param {Function} reference The reference function.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @returns {Function} Returns `wrapper`.
             */
            function setWrapToString(wrapper, reference, bitmask) {
              var source = reference + ''
              return setToString(
                wrapper,
                insertWrapDetails(
                  source,
                  updateWrapDetails(getWrapDetails(source), bitmask)
                )
              )
            }

            /**
             * Creates a function that'll short out and invoke `identity` instead
             * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
             * milliseconds.
             *
             * @private
             * @param {Function} func The function to restrict.
             * @returns {Function} Returns the new shortable function.
             */
            function shortOut(func) {
              var count = 0,
                lastCalled = 0

              return function () {
                var stamp = nativeNow(),
                  remaining = HOT_SPAN - (stamp - lastCalled)

                lastCalled = stamp
                if (remaining > 0) {
                  if (++count >= HOT_COUNT) {
                    return arguments[0]
                  }
                } else {
                  count = 0
                }
                return func.apply(undefined, arguments)
              }
            }

            /**
             * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
             *
             * @private
             * @param {Array} array The array to shuffle.
             * @param {number} [size=array.length] The size of `array`.
             * @returns {Array} Returns `array`.
             */
            function shuffleSelf(array, size) {
              var index = -1,
                length = array.length,
                lastIndex = length - 1

              size = size === undefined ? length : size
              while (++index < size) {
                var rand = baseRandom(index, lastIndex),
                  value = array[rand]

                array[rand] = array[index]
                array[index] = value
              }
              array.length = size
              return array
            }

            /**
             * Converts `string` to a property path array.
             *
             * @private
             * @param {string} string The string to convert.
             * @returns {Array} Returns the property path array.
             */
            var stringToPath = memoizeCapped(function (string) {
              var result = []
              if (string.charCodeAt(0) === 46 /* . */) {
                result.push('')
              }
              string.replace(
                rePropName,
                function (match, number, quote, subString) {
                  result.push(
                    quote
                      ? subString.replace(reEscapeChar, '$1')
                      : number || match
                  )
                }
              )
              return result
            })

            /**
             * Converts `value` to a string key if it's not a string or symbol.
             *
             * @private
             * @param {*} value The value to inspect.
             * @returns {string|symbol} Returns the key.
             */
            function toKey(value) {
              if (typeof value == 'string' || isSymbol(value)) {
                return value
              }
              var result = value + ''
              return result == '0' && 1 / value == -INFINITY ? '-0' : result
            }

            /**
             * Converts `func` to its source code.
             *
             * @private
             * @param {Function} func The function to convert.
             * @returns {string} Returns the source code.
             */
            function toSource(func) {
              if (func != null) {
                try {
                  return funcToString.call(func)
                } catch (e) {}
                try {
                  return func + ''
                } catch (e) {}
              }
              return ''
            }

            /**
             * Updates wrapper `details` based on `bitmask` flags.
             *
             * @private
             * @returns {Array} details The details to modify.
             * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
             * @returns {Array} Returns `details`.
             */
            function updateWrapDetails(details, bitmask) {
              arrayEach(wrapFlags, function (pair) {
                var value = '_.' + pair[0]
                if (bitmask & pair[1] && !arrayIncludes(details, value)) {
                  details.push(value)
                }
              })
              return details.sort()
            }

            /**
             * Creates a clone of `wrapper`.
             *
             * @private
             * @param {Object} wrapper The wrapper to clone.
             * @returns {Object} Returns the cloned wrapper.
             */
            function wrapperClone(wrapper) {
              if (wrapper instanceof LazyWrapper) {
                return wrapper.clone()
              }
              var result = new LodashWrapper(
                wrapper.__wrapped__,
                wrapper.__chain__
              )
              result.__actions__ = copyArray(wrapper.__actions__)
              result.__index__ = wrapper.__index__
              result.__values__ = wrapper.__values__
              return result
            }

            /*------------------------------------------------------------------------*/

            /**
             * Creates an array of elements split into groups the length of `size`.
             * If `array` can't be split evenly, the final chunk will be the remaining
             * elements.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to process.
             * @param {number} [size=1] The length of each chunk
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the new array of chunks.
             * @example
             *
             * _.chunk(['a', 'b', 'c', 'd'], 2);
             * // => [['a', 'b'], ['c', 'd']]
             *
             * _.chunk(['a', 'b', 'c', 'd'], 3);
             * // => [['a', 'b', 'c'], ['d']]
             */
            function chunk(array, size, guard) {
              if (
                guard ? isIterateeCall(array, size, guard) : size === undefined
              ) {
                size = 1
              } else {
                size = nativeMax(toInteger(size), 0)
              }
              var length = array == null ? 0 : array.length
              if (!length || size < 1) {
                return []
              }
              var index = 0,
                resIndex = 0,
                result = Array(nativeCeil(length / size))

              while (index < length) {
                result[resIndex++] = baseSlice(array, index, (index += size))
              }
              return result
            }

            /**
             * Creates an array with all falsey values removed. The values `false`, `null`,
             * `0`, `""`, `undefined`, and `NaN` are falsey.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to compact.
             * @returns {Array} Returns the new array of filtered values.
             * @example
             *
             * _.compact([0, 1, false, 2, '', 3]);
             * // => [1, 2, 3]
             */
            function compact(array) {
              var index = -1,
                length = array == null ? 0 : array.length,
                resIndex = 0,
                result = []

              while (++index < length) {
                var value = array[index]
                if (value) {
                  result[resIndex++] = value
                }
              }
              return result
            }

            /**
             * Creates a new array concatenating `array` with any additional arrays
             * and/or values.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to concatenate.
             * @param {...*} [values] The values to concatenate.
             * @returns {Array} Returns the new concatenated array.
             * @example
             *
             * var array = [1];
             * var other = _.concat(array, 2, [3], [[4]]);
             *
             * console.log(other);
             * // => [1, 2, 3, [4]]
             *
             * console.log(array);
             * // => [1]
             */
            function concat() {
              var length = arguments.length
              if (!length) {
                return []
              }
              var args = Array(length - 1),
                array = arguments[0],
                index = length

              while (index--) {
                args[index - 1] = arguments[index]
              }
              return arrayPush(
                isArray(array) ? copyArray(array) : [array],
                baseFlatten(args, 1)
              )
            }

            /**
             * Creates an array of `array` values not included in the other given arrays
             * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons. The order and references of result values are
             * determined by the first array.
             *
             * **Note:** Unlike `_.pullAll`, this method returns a new array.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {...Array} [values] The values to exclude.
             * @returns {Array} Returns the new array of filtered values.
             * @see _.without, _.xor
             * @example
             *
             * _.difference([2, 1], [2, 3]);
             * // => [1]
             */
            var difference = baseRest(function (array, values) {
              return isArrayLikeObject(array)
                ? baseDifference(
                    array,
                    baseFlatten(values, 1, isArrayLikeObject, true)
                  )
                : []
            })

            /**
             * This method is like `_.difference` except that it accepts `iteratee` which
             * is invoked for each element of `array` and `values` to generate the criterion
             * by which they're compared. The order and references of result values are
             * determined by the first array. The iteratee is invoked with one argument:
             * (value).
             *
             * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {...Array} [values] The values to exclude.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns the new array of filtered values.
             * @example
             *
             * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
             * // => [1.2]
             *
             * // The `_.property` iteratee shorthand.
             * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
             * // => [{ 'x': 2 }]
             */
            var differenceBy = baseRest(function (array, values) {
              var iteratee = last(values)
              if (isArrayLikeObject(iteratee)) {
                iteratee = undefined
              }
              return isArrayLikeObject(array)
                ? baseDifference(
                    array,
                    baseFlatten(values, 1, isArrayLikeObject, true),
                    getIteratee(iteratee, 2)
                  )
                : []
            })

            /**
             * This method is like `_.difference` except that it accepts `comparator`
             * which is invoked to compare elements of `array` to `values`. The order and
             * references of result values are determined by the first array. The comparator
             * is invoked with two arguments: (arrVal, othVal).
             *
             * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {...Array} [values] The values to exclude.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of filtered values.
             * @example
             *
             * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
             *
             * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
             * // => [{ 'x': 2, 'y': 1 }]
             */
            var differenceWith = baseRest(function (array, values) {
              var comparator = last(values)
              if (isArrayLikeObject(comparator)) {
                comparator = undefined
              }
              return isArrayLikeObject(array)
                ? baseDifference(
                    array,
                    baseFlatten(values, 1, isArrayLikeObject, true),
                    undefined,
                    comparator
                  )
                : []
            })

            /**
             * Creates a slice of `array` with `n` elements dropped from the beginning.
             *
             * @static
             * @memberOf _
             * @since 0.5.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {number} [n=1] The number of elements to drop.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.drop([1, 2, 3]);
             * // => [2, 3]
             *
             * _.drop([1, 2, 3], 2);
             * // => [3]
             *
             * _.drop([1, 2, 3], 5);
             * // => []
             *
             * _.drop([1, 2, 3], 0);
             * // => [1, 2, 3]
             */
            function drop(array, n, guard) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              n = guard || n === undefined ? 1 : toInteger(n)
              return baseSlice(array, n < 0 ? 0 : n, length)
            }

            /**
             * Creates a slice of `array` with `n` elements dropped from the end.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {number} [n=1] The number of elements to drop.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.dropRight([1, 2, 3]);
             * // => [1, 2]
             *
             * _.dropRight([1, 2, 3], 2);
             * // => [1]
             *
             * _.dropRight([1, 2, 3], 5);
             * // => []
             *
             * _.dropRight([1, 2, 3], 0);
             * // => [1, 2, 3]
             */
            function dropRight(array, n, guard) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              n = guard || n === undefined ? 1 : toInteger(n)
              n = length - n
              return baseSlice(array, 0, n < 0 ? 0 : n)
            }

            /**
             * Creates a slice of `array` excluding elements dropped from the end.
             * Elements are dropped until `predicate` returns falsey. The predicate is
             * invoked with three arguments: (value, index, array).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': true },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': false }
             * ];
             *
             * _.dropRightWhile(users, function(o) { return !o.active; });
             * // => objects for ['barney']
             *
             * // The `_.matches` iteratee shorthand.
             * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
             * // => objects for ['barney', 'fred']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.dropRightWhile(users, ['active', false]);
             * // => objects for ['barney']
             *
             * // The `_.property` iteratee shorthand.
             * _.dropRightWhile(users, 'active');
             * // => objects for ['barney', 'fred', 'pebbles']
             */
            function dropRightWhile(array, predicate) {
              return array && array.length
                ? baseWhile(array, getIteratee(predicate, 3), true, true)
                : []
            }

            /**
             * Creates a slice of `array` excluding elements dropped from the beginning.
             * Elements are dropped until `predicate` returns falsey. The predicate is
             * invoked with three arguments: (value, index, array).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': false },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': true }
             * ];
             *
             * _.dropWhile(users, function(o) { return !o.active; });
             * // => objects for ['pebbles']
             *
             * // The `_.matches` iteratee shorthand.
             * _.dropWhile(users, { 'user': 'barney', 'active': false });
             * // => objects for ['fred', 'pebbles']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.dropWhile(users, ['active', false]);
             * // => objects for ['pebbles']
             *
             * // The `_.property` iteratee shorthand.
             * _.dropWhile(users, 'active');
             * // => objects for ['barney', 'fred', 'pebbles']
             */
            function dropWhile(array, predicate) {
              return array && array.length
                ? baseWhile(array, getIteratee(predicate, 3), true)
                : []
            }

            /**
             * Fills elements of `array` with `value` from `start` up to, but not
             * including, `end`.
             *
             * **Note:** This method mutates `array`.
             *
             * @static
             * @memberOf _
             * @since 3.2.0
             * @category Array
             * @param {Array} array The array to fill.
             * @param {*} value The value to fill `array` with.
             * @param {number} [start=0] The start position.
             * @param {number} [end=array.length] The end position.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = [1, 2, 3];
             *
             * _.fill(array, 'a');
             * console.log(array);
             * // => ['a', 'a', 'a']
             *
             * _.fill(Array(3), 2);
             * // => [2, 2, 2]
             *
             * _.fill([4, 6, 8, 10], '*', 1, 3);
             * // => [4, '*', '*', 10]
             */
            function fill(array, value, start, end) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              if (
                start &&
                typeof start != 'number' &&
                isIterateeCall(array, value, start)
              ) {
                start = 0
                end = length
              }
              return baseFill(array, value, start, end)
            }

            /**
             * This method is like `_.find` except that it returns the index of the first
             * element `predicate` returns truthy for instead of the element itself.
             *
             * @static
             * @memberOf _
             * @since 1.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param {number} [fromIndex=0] The index to search from.
             * @returns {number} Returns the index of the found element, else `-1`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': false },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': true }
             * ];
             *
             * _.findIndex(users, function(o) { return o.user == 'barney'; });
             * // => 0
             *
             * // The `_.matches` iteratee shorthand.
             * _.findIndex(users, { 'user': 'fred', 'active': false });
             * // => 1
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.findIndex(users, ['active', false]);
             * // => 0
             *
             * // The `_.property` iteratee shorthand.
             * _.findIndex(users, 'active');
             * // => 2
             */
            function findIndex(array, predicate, fromIndex) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return -1
              }
              var index = fromIndex == null ? 0 : toInteger(fromIndex)
              if (index < 0) {
                index = nativeMax(length + index, 0)
              }
              return baseFindIndex(array, getIteratee(predicate, 3), index)
            }

            /**
             * This method is like `_.findIndex` except that it iterates over elements
             * of `collection` from right to left.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param {number} [fromIndex=array.length-1] The index to search from.
             * @returns {number} Returns the index of the found element, else `-1`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': true },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': false }
             * ];
             *
             * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
             * // => 2
             *
             * // The `_.matches` iteratee shorthand.
             * _.findLastIndex(users, { 'user': 'barney', 'active': true });
             * // => 0
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.findLastIndex(users, ['active', false]);
             * // => 2
             *
             * // The `_.property` iteratee shorthand.
             * _.findLastIndex(users, 'active');
             * // => 0
             */
            function findLastIndex(array, predicate, fromIndex) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return -1
              }
              var index = length - 1
              if (fromIndex !== undefined) {
                index = toInteger(fromIndex)
                index =
                  fromIndex < 0
                    ? nativeMax(length + index, 0)
                    : nativeMin(index, length - 1)
              }
              return baseFindIndex(
                array,
                getIteratee(predicate, 3),
                index,
                true
              )
            }

            /**
             * Flattens `array` a single level deep.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to flatten.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * _.flatten([1, [2, [3, [4]], 5]]);
             * // => [1, 2, [3, [4]], 5]
             */
            function flatten(array) {
              var length = array == null ? 0 : array.length
              return length ? baseFlatten(array, 1) : []
            }

            /**
             * Recursively flattens `array`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to flatten.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * _.flattenDeep([1, [2, [3, [4]], 5]]);
             * // => [1, 2, 3, 4, 5]
             */
            function flattenDeep(array) {
              var length = array == null ? 0 : array.length
              return length ? baseFlatten(array, INFINITY) : []
            }

            /**
             * Recursively flatten `array` up to `depth` times.
             *
             * @static
             * @memberOf _
             * @since 4.4.0
             * @category Array
             * @param {Array} array The array to flatten.
             * @param {number} [depth=1] The maximum recursion depth.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * var array = [1, [2, [3, [4]], 5]];
             *
             * _.flattenDepth(array, 1);
             * // => [1, 2, [3, [4]], 5]
             *
             * _.flattenDepth(array, 2);
             * // => [1, 2, 3, [4], 5]
             */
            function flattenDepth(array, depth) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              depth = depth === undefined ? 1 : toInteger(depth)
              return baseFlatten(array, depth)
            }

            /**
             * The inverse of `_.toPairs`; this method returns an object composed
             * from key-value `pairs`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} pairs The key-value pairs.
             * @returns {Object} Returns the new object.
             * @example
             *
             * _.fromPairs([['a', 1], ['b', 2]]);
             * // => { 'a': 1, 'b': 2 }
             */
            function fromPairs(pairs) {
              var index = -1,
                length = pairs == null ? 0 : pairs.length,
                result = {}

              while (++index < length) {
                var pair = pairs[index]
                result[pair[0]] = pair[1]
              }
              return result
            }

            /**
             * Gets the first element of `array`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @alias first
             * @category Array
             * @param {Array} array The array to query.
             * @returns {*} Returns the first element of `array`.
             * @example
             *
             * _.head([1, 2, 3]);
             * // => 1
             *
             * _.head([]);
             * // => undefined
             */
            function head(array) {
              return array && array.length ? array[0] : undefined
            }

            /**
             * Gets the index at which the first occurrence of `value` is found in `array`
             * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons. If `fromIndex` is negative, it's used as the
             * offset from the end of `array`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {*} value The value to search for.
             * @param {number} [fromIndex=0] The index to search from.
             * @returns {number} Returns the index of the matched value, else `-1`.
             * @example
             *
             * _.indexOf([1, 2, 1, 2], 2);
             * // => 1
             *
             * // Search from the `fromIndex`.
             * _.indexOf([1, 2, 1, 2], 2, 2);
             * // => 3
             */
            function indexOf(array, value, fromIndex) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return -1
              }
              var index = fromIndex == null ? 0 : toInteger(fromIndex)
              if (index < 0) {
                index = nativeMax(length + index, 0)
              }
              return baseIndexOf(array, value, index)
            }

            /**
             * Gets all but the last element of `array`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to query.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.initial([1, 2, 3]);
             * // => [1, 2]
             */
            function initial(array) {
              var length = array == null ? 0 : array.length
              return length ? baseSlice(array, 0, -1) : []
            }

            /**
             * Creates an array of unique values that are included in all given arrays
             * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons. The order and references of result values are
             * determined by the first array.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @returns {Array} Returns the new array of intersecting values.
             * @example
             *
             * _.intersection([2, 1], [2, 3]);
             * // => [2]
             */
            var intersection = baseRest(function (arrays) {
              var mapped = arrayMap(arrays, castArrayLikeObject)
              return mapped.length && mapped[0] === arrays[0]
                ? baseIntersection(mapped)
                : []
            })

            /**
             * This method is like `_.intersection` except that it accepts `iteratee`
             * which is invoked for each element of each `arrays` to generate the criterion
             * by which they're compared. The order and references of result values are
             * determined by the first array. The iteratee is invoked with one argument:
             * (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns the new array of intersecting values.
             * @example
             *
             * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
             * // => [2.1]
             *
             * // The `_.property` iteratee shorthand.
             * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
             * // => [{ 'x': 1 }]
             */
            var intersectionBy = baseRest(function (arrays) {
              var iteratee = last(arrays),
                mapped = arrayMap(arrays, castArrayLikeObject)

              if (iteratee === last(mapped)) {
                iteratee = undefined
              } else {
                mapped.pop()
              }
              return mapped.length && mapped[0] === arrays[0]
                ? baseIntersection(mapped, getIteratee(iteratee, 2))
                : []
            })

            /**
             * This method is like `_.intersection` except that it accepts `comparator`
             * which is invoked to compare elements of `arrays`. The order and references
             * of result values are determined by the first array. The comparator is
             * invoked with two arguments: (arrVal, othVal).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of intersecting values.
             * @example
             *
             * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
             * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
             *
             * _.intersectionWith(objects, others, _.isEqual);
             * // => [{ 'x': 1, 'y': 2 }]
             */
            var intersectionWith = baseRest(function (arrays) {
              var comparator = last(arrays),
                mapped = arrayMap(arrays, castArrayLikeObject)

              comparator =
                typeof comparator == 'function' ? comparator : undefined
              if (comparator) {
                mapped.pop()
              }
              return mapped.length && mapped[0] === arrays[0]
                ? baseIntersection(mapped, undefined, comparator)
                : []
            })

            /**
             * Converts all elements in `array` into a string separated by `separator`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to convert.
             * @param {string} [separator=','] The element separator.
             * @returns {string} Returns the joined string.
             * @example
             *
             * _.join(['a', 'b', 'c'], '~');
             * // => 'a~b~c'
             */
            function join(array, separator) {
              return array == null ? '' : nativeJoin.call(array, separator)
            }

            /**
             * Gets the last element of `array`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to query.
             * @returns {*} Returns the last element of `array`.
             * @example
             *
             * _.last([1, 2, 3]);
             * // => 3
             */
            function last(array) {
              var length = array == null ? 0 : array.length
              return length ? array[length - 1] : undefined
            }

            /**
             * This method is like `_.indexOf` except that it iterates over elements of
             * `array` from right to left.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {*} value The value to search for.
             * @param {number} [fromIndex=array.length-1] The index to search from.
             * @returns {number} Returns the index of the matched value, else `-1`.
             * @example
             *
             * _.lastIndexOf([1, 2, 1, 2], 2);
             * // => 3
             *
             * // Search from the `fromIndex`.
             * _.lastIndexOf([1, 2, 1, 2], 2, 2);
             * // => 1
             */
            function lastIndexOf(array, value, fromIndex) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return -1
              }
              var index = length
              if (fromIndex !== undefined) {
                index = toInteger(fromIndex)
                index =
                  index < 0
                    ? nativeMax(length + index, 0)
                    : nativeMin(index, length - 1)
              }
              return value === value
                ? strictLastIndexOf(array, value, index)
                : baseFindIndex(array, baseIsNaN, index, true)
            }

            /**
             * Gets the element at index `n` of `array`. If `n` is negative, the nth
             * element from the end is returned.
             *
             * @static
             * @memberOf _
             * @since 4.11.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {number} [n=0] The index of the element to return.
             * @returns {*} Returns the nth element of `array`.
             * @example
             *
             * var array = ['a', 'b', 'c', 'd'];
             *
             * _.nth(array, 1);
             * // => 'b'
             *
             * _.nth(array, -2);
             * // => 'c';
             */
            function nth(array, n) {
              return array && array.length
                ? baseNth(array, toInteger(n))
                : undefined
            }

            /**
             * Removes all given values from `array` using
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons.
             *
             * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
             * to remove elements from an array by predicate.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {...*} [values] The values to remove.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
             *
             * _.pull(array, 'a', 'c');
             * console.log(array);
             * // => ['b', 'b']
             */
            var pull = baseRest(pullAll)

            /**
             * This method is like `_.pull` except that it accepts an array of values to remove.
             *
             * **Note:** Unlike `_.difference`, this method mutates `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {Array} values The values to remove.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
             *
             * _.pullAll(array, ['a', 'c']);
             * console.log(array);
             * // => ['b', 'b']
             */
            function pullAll(array, values) {
              return array && array.length && values && values.length
                ? basePullAll(array, values)
                : array
            }

            /**
             * This method is like `_.pullAll` except that it accepts `iteratee` which is
             * invoked for each element of `array` and `values` to generate the criterion
             * by which they're compared. The iteratee is invoked with one argument: (value).
             *
             * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {Array} values The values to remove.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
             *
             * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
             * console.log(array);
             * // => [{ 'x': 2 }]
             */
            function pullAllBy(array, values, iteratee) {
              return array && array.length && values && values.length
                ? basePullAll(array, values, getIteratee(iteratee, 2))
                : array
            }

            /**
             * This method is like `_.pullAll` except that it accepts `comparator` which
             * is invoked to compare elements of `array` to `values`. The comparator is
             * invoked with two arguments: (arrVal, othVal).
             *
             * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
             *
             * @static
             * @memberOf _
             * @since 4.6.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {Array} values The values to remove.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
             *
             * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
             * console.log(array);
             * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
             */
            function pullAllWith(array, values, comparator) {
              return array && array.length && values && values.length
                ? basePullAll(array, values, undefined, comparator)
                : array
            }

            /**
             * Removes elements from `array` corresponding to `indexes` and returns an
             * array of removed elements.
             *
             * **Note:** Unlike `_.at`, this method mutates `array`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {...(number|number[])} [indexes] The indexes of elements to remove.
             * @returns {Array} Returns the new array of removed elements.
             * @example
             *
             * var array = ['a', 'b', 'c', 'd'];
             * var pulled = _.pullAt(array, [1, 3]);
             *
             * console.log(array);
             * // => ['a', 'c']
             *
             * console.log(pulled);
             * // => ['b', 'd']
             */
            var pullAt = flatRest(function (array, indexes) {
              var length = array == null ? 0 : array.length,
                result = baseAt(array, indexes)

              basePullAt(
                array,
                arrayMap(indexes, function (index) {
                  return isIndex(index, length) ? +index : index
                }).sort(compareAscending)
              )

              return result
            })

            /**
             * Removes all elements from `array` that `predicate` returns truthy for
             * and returns an array of the removed elements. The predicate is invoked
             * with three arguments: (value, index, array).
             *
             * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
             * to pull elements from an array by value.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new array of removed elements.
             * @example
             *
             * var array = [1, 2, 3, 4];
             * var evens = _.remove(array, function(n) {
             *   return n % 2 == 0;
             * });
             *
             * console.log(array);
             * // => [1, 3]
             *
             * console.log(evens);
             * // => [2, 4]
             */
            function remove(array, predicate) {
              var result = []
              if (!(array && array.length)) {
                return result
              }
              var index = -1,
                indexes = [],
                length = array.length

              predicate = getIteratee(predicate, 3)
              while (++index < length) {
                var value = array[index]
                if (predicate(value, index, array)) {
                  result.push(value)
                  indexes.push(index)
                }
              }
              basePullAt(array, indexes)
              return result
            }

            /**
             * Reverses `array` so that the first element becomes the last, the second
             * element becomes the second to last, and so on.
             *
             * **Note:** This method mutates `array` and is based on
             * [`Array#reverse`](https://mdn.io/Array/reverse).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to modify.
             * @returns {Array} Returns `array`.
             * @example
             *
             * var array = [1, 2, 3];
             *
             * _.reverse(array);
             * // => [3, 2, 1]
             *
             * console.log(array);
             * // => [3, 2, 1]
             */
            function reverse(array) {
              return array == null ? array : nativeReverse.call(array)
            }

            /**
             * Creates a slice of `array` from `start` up to, but not including, `end`.
             *
             * **Note:** This method is used instead of
             * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
             * returned.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to slice.
             * @param {number} [start=0] The start position.
             * @param {number} [end=array.length] The end position.
             * @returns {Array} Returns the slice of `array`.
             */
            function slice(array, start, end) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              if (
                end &&
                typeof end != 'number' &&
                isIterateeCall(array, start, end)
              ) {
                start = 0
                end = length
              } else {
                start = start == null ? 0 : toInteger(start)
                end = end === undefined ? length : toInteger(end)
              }
              return baseSlice(array, start, end)
            }

            /**
             * Uses a binary search to determine the lowest index at which `value`
             * should be inserted into `array` in order to maintain its sort order.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             * @example
             *
             * _.sortedIndex([30, 50], 40);
             * // => 1
             */
            function sortedIndex(array, value) {
              return baseSortedIndex(array, value)
            }

            /**
             * This method is like `_.sortedIndex` except that it accepts `iteratee`
             * which is invoked for `value` and each element of `array` to compute their
             * sort ranking. The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             * @example
             *
             * var objects = [{ 'x': 4 }, { 'x': 5 }];
             *
             * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
             * // => 0
             *
             * // The `_.property` iteratee shorthand.
             * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
             * // => 0
             */
            function sortedIndexBy(array, value, iteratee) {
              return baseSortedIndexBy(array, value, getIteratee(iteratee, 2))
            }

            /**
             * This method is like `_.indexOf` except that it performs a binary
             * search on a sorted `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {*} value The value to search for.
             * @returns {number} Returns the index of the matched value, else `-1`.
             * @example
             *
             * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
             * // => 1
             */
            function sortedIndexOf(array, value) {
              var length = array == null ? 0 : array.length
              if (length) {
                var index = baseSortedIndex(array, value)
                if (index < length && eq(array[index], value)) {
                  return index
                }
              }
              return -1
            }

            /**
             * This method is like `_.sortedIndex` except that it returns the highest
             * index at which `value` should be inserted into `array` in order to
             * maintain its sort order.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             * @example
             *
             * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
             * // => 4
             */
            function sortedLastIndex(array, value) {
              return baseSortedIndex(array, value, true)
            }

            /**
             * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
             * which is invoked for `value` and each element of `array` to compute their
             * sort ranking. The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The sorted array to inspect.
             * @param {*} value The value to evaluate.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {number} Returns the index at which `value` should be inserted
             *  into `array`.
             * @example
             *
             * var objects = [{ 'x': 4 }, { 'x': 5 }];
             *
             * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
             * // => 1
             *
             * // The `_.property` iteratee shorthand.
             * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
             * // => 1
             */
            function sortedLastIndexBy(array, value, iteratee) {
              return baseSortedIndexBy(
                array,
                value,
                getIteratee(iteratee, 2),
                true
              )
            }

            /**
             * This method is like `_.lastIndexOf` except that it performs a binary
             * search on a sorted `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {*} value The value to search for.
             * @returns {number} Returns the index of the matched value, else `-1`.
             * @example
             *
             * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
             * // => 3
             */
            function sortedLastIndexOf(array, value) {
              var length = array == null ? 0 : array.length
              if (length) {
                var index = baseSortedIndex(array, value, true) - 1
                if (eq(array[index], value)) {
                  return index
                }
              }
              return -1
            }

            /**
             * This method is like `_.uniq` except that it's designed and optimized
             * for sorted arrays.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @returns {Array} Returns the new duplicate free array.
             * @example
             *
             * _.sortedUniq([1, 1, 2]);
             * // => [1, 2]
             */
            function sortedUniq(array) {
              return array && array.length ? baseSortedUniq(array) : []
            }

            /**
             * This method is like `_.uniqBy` except that it's designed and optimized
             * for sorted arrays.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [iteratee] The iteratee invoked per element.
             * @returns {Array} Returns the new duplicate free array.
             * @example
             *
             * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
             * // => [1.1, 2.3]
             */
            function sortedUniqBy(array, iteratee) {
              return array && array.length
                ? baseSortedUniq(array, getIteratee(iteratee, 2))
                : []
            }

            /**
             * Gets all but the first element of `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.tail([1, 2, 3]);
             * // => [2, 3]
             */
            function tail(array) {
              var length = array == null ? 0 : array.length
              return length ? baseSlice(array, 1, length) : []
            }

            /**
             * Creates a slice of `array` with `n` elements taken from the beginning.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {number} [n=1] The number of elements to take.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.take([1, 2, 3]);
             * // => [1]
             *
             * _.take([1, 2, 3], 2);
             * // => [1, 2]
             *
             * _.take([1, 2, 3], 5);
             * // => [1, 2, 3]
             *
             * _.take([1, 2, 3], 0);
             * // => []
             */
            function take(array, n, guard) {
              if (!(array && array.length)) {
                return []
              }
              n = guard || n === undefined ? 1 : toInteger(n)
              return baseSlice(array, 0, n < 0 ? 0 : n)
            }

            /**
             * Creates a slice of `array` with `n` elements taken from the end.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {number} [n=1] The number of elements to take.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * _.takeRight([1, 2, 3]);
             * // => [3]
             *
             * _.takeRight([1, 2, 3], 2);
             * // => [2, 3]
             *
             * _.takeRight([1, 2, 3], 5);
             * // => [1, 2, 3]
             *
             * _.takeRight([1, 2, 3], 0);
             * // => []
             */
            function takeRight(array, n, guard) {
              var length = array == null ? 0 : array.length
              if (!length) {
                return []
              }
              n = guard || n === undefined ? 1 : toInteger(n)
              n = length - n
              return baseSlice(array, n < 0 ? 0 : n, length)
            }

            /**
             * Creates a slice of `array` with elements taken from the end. Elements are
             * taken until `predicate` returns falsey. The predicate is invoked with
             * three arguments: (value, index, array).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': true },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': false }
             * ];
             *
             * _.takeRightWhile(users, function(o) { return !o.active; });
             * // => objects for ['fred', 'pebbles']
             *
             * // The `_.matches` iteratee shorthand.
             * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
             * // => objects for ['pebbles']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.takeRightWhile(users, ['active', false]);
             * // => objects for ['fred', 'pebbles']
             *
             * // The `_.property` iteratee shorthand.
             * _.takeRightWhile(users, 'active');
             * // => []
             */
            function takeRightWhile(array, predicate) {
              return array && array.length
                ? baseWhile(array, getIteratee(predicate, 3), false, true)
                : []
            }

            /**
             * Creates a slice of `array` with elements taken from the beginning. Elements
             * are taken until `predicate` returns falsey. The predicate is invoked with
             * three arguments: (value, index, array).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Array
             * @param {Array} array The array to query.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the slice of `array`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'active': false },
             *   { 'user': 'fred',    'active': false },
             *   { 'user': 'pebbles', 'active': true }
             * ];
             *
             * _.takeWhile(users, function(o) { return !o.active; });
             * // => objects for ['barney', 'fred']
             *
             * // The `_.matches` iteratee shorthand.
             * _.takeWhile(users, { 'user': 'barney', 'active': false });
             * // => objects for ['barney']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.takeWhile(users, ['active', false]);
             * // => objects for ['barney', 'fred']
             *
             * // The `_.property` iteratee shorthand.
             * _.takeWhile(users, 'active');
             * // => []
             */
            function takeWhile(array, predicate) {
              return array && array.length
                ? baseWhile(array, getIteratee(predicate, 3))
                : []
            }

            /**
             * Creates an array of unique values, in order, from all given arrays using
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @returns {Array} Returns the new array of combined values.
             * @example
             *
             * _.union([2], [1, 2]);
             * // => [2, 1]
             */
            var union = baseRest(function (arrays) {
              return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true))
            })

            /**
             * This method is like `_.union` except that it accepts `iteratee` which is
             * invoked for each element of each `arrays` to generate the criterion by
             * which uniqueness is computed. Result values are chosen from the first
             * array in which the value occurs. The iteratee is invoked with one argument:
             * (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns the new array of combined values.
             * @example
             *
             * _.unionBy([2.1], [1.2, 2.3], Math.floor);
             * // => [2.1, 1.2]
             *
             * // The `_.property` iteratee shorthand.
             * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
             * // => [{ 'x': 1 }, { 'x': 2 }]
             */
            var unionBy = baseRest(function (arrays) {
              var iteratee = last(arrays)
              if (isArrayLikeObject(iteratee)) {
                iteratee = undefined
              }
              return baseUniq(
                baseFlatten(arrays, 1, isArrayLikeObject, true),
                getIteratee(iteratee, 2)
              )
            })

            /**
             * This method is like `_.union` except that it accepts `comparator` which
             * is invoked to compare elements of `arrays`. Result values are chosen from
             * the first array in which the value occurs. The comparator is invoked
             * with two arguments: (arrVal, othVal).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of combined values.
             * @example
             *
             * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
             * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
             *
             * _.unionWith(objects, others, _.isEqual);
             * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
             */
            var unionWith = baseRest(function (arrays) {
              var comparator = last(arrays)
              comparator =
                typeof comparator == 'function' ? comparator : undefined
              return baseUniq(
                baseFlatten(arrays, 1, isArrayLikeObject, true),
                undefined,
                comparator
              )
            })

            /**
             * Creates a duplicate-free version of an array, using
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons, in which only the first occurrence of each element
             * is kept. The order of result values is determined by the order they occur
             * in the array.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @returns {Array} Returns the new duplicate free array.
             * @example
             *
             * _.uniq([2, 1, 2]);
             * // => [2, 1]
             */
            function uniq(array) {
              return array && array.length ? baseUniq(array) : []
            }

            /**
             * This method is like `_.uniq` except that it accepts `iteratee` which is
             * invoked for each element in `array` to generate the criterion by which
             * uniqueness is computed. The order of result values is determined by the
             * order they occur in the array. The iteratee is invoked with one argument:
             * (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns the new duplicate free array.
             * @example
             *
             * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
             * // => [2.1, 1.2]
             *
             * // The `_.property` iteratee shorthand.
             * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
             * // => [{ 'x': 1 }, { 'x': 2 }]
             */
            function uniqBy(array, iteratee) {
              return array && array.length
                ? baseUniq(array, getIteratee(iteratee, 2))
                : []
            }

            /**
             * This method is like `_.uniq` except that it accepts `comparator` which
             * is invoked to compare elements of `array`. The order of result values is
             * determined by the order they occur in the array.The comparator is invoked
             * with two arguments: (arrVal, othVal).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new duplicate free array.
             * @example
             *
             * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
             *
             * _.uniqWith(objects, _.isEqual);
             * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
             */
            function uniqWith(array, comparator) {
              comparator =
                typeof comparator == 'function' ? comparator : undefined
              return array && array.length
                ? baseUniq(array, undefined, comparator)
                : []
            }

            /**
             * This method is like `_.zip` except that it accepts an array of grouped
             * elements and creates an array regrouping the elements to their pre-zip
             * configuration.
             *
             * @static
             * @memberOf _
             * @since 1.2.0
             * @category Array
             * @param {Array} array The array of grouped elements to process.
             * @returns {Array} Returns the new array of regrouped elements.
             * @example
             *
             * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
             * // => [['a', 1, true], ['b', 2, false]]
             *
             * _.unzip(zipped);
             * // => [['a', 'b'], [1, 2], [true, false]]
             */
            function unzip(array) {
              if (!(array && array.length)) {
                return []
              }
              var length = 0
              array = arrayFilter(array, function (group) {
                if (isArrayLikeObject(group)) {
                  length = nativeMax(group.length, length)
                  return true
                }
              })
              return baseTimes(length, function (index) {
                return arrayMap(array, baseProperty(index))
              })
            }

            /**
             * This method is like `_.unzip` except that it accepts `iteratee` to specify
             * how regrouped values should be combined. The iteratee is invoked with the
             * elements of each group: (...group).
             *
             * @static
             * @memberOf _
             * @since 3.8.0
             * @category Array
             * @param {Array} array The array of grouped elements to process.
             * @param {Function} [iteratee=_.identity] The function to combine
             *  regrouped values.
             * @returns {Array} Returns the new array of regrouped elements.
             * @example
             *
             * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
             * // => [[1, 10, 100], [2, 20, 200]]
             *
             * _.unzipWith(zipped, _.add);
             * // => [3, 30, 300]
             */
            function unzipWith(array, iteratee) {
              if (!(array && array.length)) {
                return []
              }
              var result = unzip(array)
              if (iteratee == null) {
                return result
              }
              return arrayMap(result, function (group) {
                return apply(iteratee, undefined, group)
              })
            }

            /**
             * Creates an array excluding all given values using
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * for equality comparisons.
             *
             * **Note:** Unlike `_.pull`, this method returns a new array.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {Array} array The array to inspect.
             * @param {...*} [values] The values to exclude.
             * @returns {Array} Returns the new array of filtered values.
             * @see _.difference, _.xor
             * @example
             *
             * _.without([2, 1, 2, 3], 1, 2);
             * // => [3]
             */
            var without = baseRest(function (array, values) {
              return isArrayLikeObject(array)
                ? baseDifference(array, values)
                : []
            })

            /**
             * Creates an array of unique values that is the
             * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
             * of the given arrays. The order of result values is determined by the order
             * they occur in the arrays.
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @returns {Array} Returns the new array of filtered values.
             * @see _.difference, _.without
             * @example
             *
             * _.xor([2, 1], [2, 3]);
             * // => [1, 3]
             */
            var xor = baseRest(function (arrays) {
              return baseXor(arrayFilter(arrays, isArrayLikeObject))
            })

            /**
             * This method is like `_.xor` except that it accepts `iteratee` which is
             * invoked for each element of each `arrays` to generate the criterion by
             * which by which they're compared. The order of result values is determined
             * by the order they occur in the arrays. The iteratee is invoked with one
             * argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Array} Returns the new array of filtered values.
             * @example
             *
             * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
             * // => [1.2, 3.4]
             *
             * // The `_.property` iteratee shorthand.
             * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
             * // => [{ 'x': 2 }]
             */
            var xorBy = baseRest(function (arrays) {
              var iteratee = last(arrays)
              if (isArrayLikeObject(iteratee)) {
                iteratee = undefined
              }
              return baseXor(
                arrayFilter(arrays, isArrayLikeObject),
                getIteratee(iteratee, 2)
              )
            })

            /**
             * This method is like `_.xor` except that it accepts `comparator` which is
             * invoked to compare elements of `arrays`. The order of result values is
             * determined by the order they occur in the arrays. The comparator is invoked
             * with two arguments: (arrVal, othVal).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Array
             * @param {...Array} [arrays] The arrays to inspect.
             * @param {Function} [comparator] The comparator invoked per element.
             * @returns {Array} Returns the new array of filtered values.
             * @example
             *
             * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
             * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
             *
             * _.xorWith(objects, others, _.isEqual);
             * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
             */
            var xorWith = baseRest(function (arrays) {
              var comparator = last(arrays)
              comparator =
                typeof comparator == 'function' ? comparator : undefined
              return baseXor(
                arrayFilter(arrays, isArrayLikeObject),
                undefined,
                comparator
              )
            })

            /**
             * Creates an array of grouped elements, the first of which contains the
             * first elements of the given arrays, the second of which contains the
             * second elements of the given arrays, and so on.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Array
             * @param {...Array} [arrays] The arrays to process.
             * @returns {Array} Returns the new array of grouped elements.
             * @example
             *
             * _.zip(['a', 'b'], [1, 2], [true, false]);
             * // => [['a', 1, true], ['b', 2, false]]
             */
            var zip = baseRest(unzip)

            /**
             * This method is like `_.fromPairs` except that it accepts two arrays,
             * one of property identifiers and one of corresponding values.
             *
             * @static
             * @memberOf _
             * @since 0.4.0
             * @category Array
             * @param {Array} [props=[]] The property identifiers.
             * @param {Array} [values=[]] The property values.
             * @returns {Object} Returns the new object.
             * @example
             *
             * _.zipObject(['a', 'b'], [1, 2]);
             * // => { 'a': 1, 'b': 2 }
             */
            function zipObject(props, values) {
              return baseZipObject(props || [], values || [], assignValue)
            }

            /**
             * This method is like `_.zipObject` except that it supports property paths.
             *
             * @static
             * @memberOf _
             * @since 4.1.0
             * @category Array
             * @param {Array} [props=[]] The property identifiers.
             * @param {Array} [values=[]] The property values.
             * @returns {Object} Returns the new object.
             * @example
             *
             * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
             * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
             */
            function zipObjectDeep(props, values) {
              return baseZipObject(props || [], values || [], baseSet)
            }

            /**
             * This method is like `_.zip` except that it accepts `iteratee` to specify
             * how grouped values should be combined. The iteratee is invoked with the
             * elements of each group: (...group).
             *
             * @static
             * @memberOf _
             * @since 3.8.0
             * @category Array
             * @param {...Array} [arrays] The arrays to process.
             * @param {Function} [iteratee=_.identity] The function to combine
             *  grouped values.
             * @returns {Array} Returns the new array of grouped elements.
             * @example
             *
             * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
             *   return a + b + c;
             * });
             * // => [111, 222]
             */
            var zipWith = baseRest(function (arrays) {
              var length = arrays.length,
                iteratee = length > 1 ? arrays[length - 1] : undefined

              iteratee =
                typeof iteratee == 'function'
                  ? (arrays.pop(), iteratee)
                  : undefined
              return unzipWith(arrays, iteratee)
            })

            /*------------------------------------------------------------------------*/

            /**
             * Creates a `lodash` wrapper instance that wraps `value` with explicit method
             * chain sequences enabled. The result of such sequences must be unwrapped
             * with `_#value`.
             *
             * @static
             * @memberOf _
             * @since 1.3.0
             * @category Seq
             * @param {*} value The value to wrap.
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'age': 36 },
             *   { 'user': 'fred',    'age': 40 },
             *   { 'user': 'pebbles', 'age': 1 }
             * ];
             *
             * var youngest = _
             *   .chain(users)
             *   .sortBy('age')
             *   .map(function(o) {
             *     return o.user + ' is ' + o.age;
             *   })
             *   .head()
             *   .value();
             * // => 'pebbles is 1'
             */
            function chain(value) {
              var result = lodash(value)
              result.__chain__ = true
              return result
            }

            /**
             * This method invokes `interceptor` and returns `value`. The interceptor
             * is invoked with one argument; (value). The purpose of this method is to
             * "tap into" a method chain sequence in order to modify intermediate results.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Seq
             * @param {*} value The value to provide to `interceptor`.
             * @param {Function} interceptor The function to invoke.
             * @returns {*} Returns `value`.
             * @example
             *
             * _([1, 2, 3])
             *  .tap(function(array) {
             *    // Mutate input array.
             *    array.pop();
             *  })
             *  .reverse()
             *  .value();
             * // => [2, 1]
             */
            function tap(value, interceptor) {
              interceptor(value)
              return value
            }

            /**
             * This method is like `_.tap` except that it returns the result of `interceptor`.
             * The purpose of this method is to "pass thru" values replacing intermediate
             * results in a method chain sequence.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Seq
             * @param {*} value The value to provide to `interceptor`.
             * @param {Function} interceptor The function to invoke.
             * @returns {*} Returns the result of `interceptor`.
             * @example
             *
             * _('  abc  ')
             *  .chain()
             *  .trim()
             *  .thru(function(value) {
             *    return [value];
             *  })
             *  .value();
             * // => ['abc']
             */
            function thru(value, interceptor) {
              return interceptor(value)
            }

            /**
             * This method is the wrapper version of `_.at`.
             *
             * @name at
             * @memberOf _
             * @since 1.0.0
             * @category Seq
             * @param {...(string|string[])} [paths] The property paths to pick.
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
             *
             * _(object).at(['a[0].b.c', 'a[1]']).value();
             * // => [3, 4]
             */
            var wrapperAt = flatRest(function (paths) {
              var length = paths.length,
                start = length ? paths[0] : 0,
                value = this.__wrapped__,
                interceptor = function (object) {
                  return baseAt(object, paths)
                }

              if (
                length > 1 ||
                this.__actions__.length ||
                !(value instanceof LazyWrapper) ||
                !isIndex(start)
              ) {
                return this.thru(interceptor)
              }
              value = value.slice(start, +start + (length ? 1 : 0))
              value.__actions__.push({
                func: thru,
                args: [interceptor],
                thisArg: undefined,
              })
              return new LodashWrapper(value, this.__chain__).thru(function (
                array
              ) {
                if (length && !array.length) {
                  array.push(undefined)
                }
                return array
              })
            })

            /**
             * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
             *
             * @name chain
             * @memberOf _
             * @since 0.1.0
             * @category Seq
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * var users = [
             *   { 'user': 'barney', 'age': 36 },
             *   { 'user': 'fred',   'age': 40 }
             * ];
             *
             * // A sequence without explicit chaining.
             * _(users).head();
             * // => { 'user': 'barney', 'age': 36 }
             *
             * // A sequence with explicit chaining.
             * _(users)
             *   .chain()
             *   .head()
             *   .pick('user')
             *   .value();
             * // => { 'user': 'barney' }
             */
            function wrapperChain() {
              return chain(this)
            }

            /**
             * Executes the chain sequence and returns the wrapped result.
             *
             * @name commit
             * @memberOf _
             * @since 3.2.0
             * @category Seq
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * var array = [1, 2];
             * var wrapped = _(array).push(3);
             *
             * console.log(array);
             * // => [1, 2]
             *
             * wrapped = wrapped.commit();
             * console.log(array);
             * // => [1, 2, 3]
             *
             * wrapped.last();
             * // => 3
             *
             * console.log(array);
             * // => [1, 2, 3]
             */
            function wrapperCommit() {
              return new LodashWrapper(this.value(), this.__chain__)
            }

            /**
             * Gets the next value on a wrapped object following the
             * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
             *
             * @name next
             * @memberOf _
             * @since 4.0.0
             * @category Seq
             * @returns {Object} Returns the next iterator value.
             * @example
             *
             * var wrapped = _([1, 2]);
             *
             * wrapped.next();
             * // => { 'done': false, 'value': 1 }
             *
             * wrapped.next();
             * // => { 'done': false, 'value': 2 }
             *
             * wrapped.next();
             * // => { 'done': true, 'value': undefined }
             */
            function wrapperNext() {
              if (this.__values__ === undefined) {
                this.__values__ = toArray(this.value())
              }
              var done = this.__index__ >= this.__values__.length,
                value = done ? undefined : this.__values__[this.__index__++]

              return { done: done, value: value }
            }

            /**
             * Enables the wrapper to be iterable.
             *
             * @name Symbol.iterator
             * @memberOf _
             * @since 4.0.0
             * @category Seq
             * @returns {Object} Returns the wrapper object.
             * @example
             *
             * var wrapped = _([1, 2]);
             *
             * wrapped[Symbol.iterator]() === wrapped;
             * // => true
             *
             * Array.from(wrapped);
             * // => [1, 2]
             */
            function wrapperToIterator() {
              return this
            }

            /**
             * Creates a clone of the chain sequence planting `value` as the wrapped value.
             *
             * @name plant
             * @memberOf _
             * @since 3.2.0
             * @category Seq
             * @param {*} value The value to plant.
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * var wrapped = _([1, 2]).map(square);
             * var other = wrapped.plant([3, 4]);
             *
             * other.value();
             * // => [9, 16]
             *
             * wrapped.value();
             * // => [1, 4]
             */
            function wrapperPlant(value) {
              var result,
                parent = this

              while (parent instanceof baseLodash) {
                var clone = wrapperClone(parent)
                clone.__index__ = 0
                clone.__values__ = undefined
                if (result) {
                  previous.__wrapped__ = clone
                } else {
                  result = clone
                }
                var previous = clone
                parent = parent.__wrapped__
              }
              previous.__wrapped__ = value
              return result
            }

            /**
             * This method is the wrapper version of `_.reverse`.
             *
             * **Note:** This method mutates the wrapped array.
             *
             * @name reverse
             * @memberOf _
             * @since 0.1.0
             * @category Seq
             * @returns {Object} Returns the new `lodash` wrapper instance.
             * @example
             *
             * var array = [1, 2, 3];
             *
             * _(array).reverse().value()
             * // => [3, 2, 1]
             *
             * console.log(array);
             * // => [3, 2, 1]
             */
            function wrapperReverse() {
              var value = this.__wrapped__
              if (value instanceof LazyWrapper) {
                var wrapped = value
                if (this.__actions__.length) {
                  wrapped = new LazyWrapper(this)
                }
                wrapped = wrapped.reverse()
                wrapped.__actions__.push({
                  func: thru,
                  args: [reverse],
                  thisArg: undefined,
                })
                return new LodashWrapper(wrapped, this.__chain__)
              }
              return this.thru(reverse)
            }

            /**
             * Executes the chain sequence to resolve the unwrapped value.
             *
             * @name value
             * @memberOf _
             * @since 0.1.0
             * @alias toJSON, valueOf
             * @category Seq
             * @returns {*} Returns the resolved unwrapped value.
             * @example
             *
             * _([1, 2, 3]).value();
             * // => [1, 2, 3]
             */
            function wrapperValue() {
              return baseWrapperValue(this.__wrapped__, this.__actions__)
            }

            /*------------------------------------------------------------------------*/

            /**
             * Creates an object composed of keys generated from the results of running
             * each element of `collection` thru `iteratee`. The corresponding value of
             * each key is the number of times the key was returned by `iteratee`. The
             * iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 0.5.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
             * @returns {Object} Returns the composed aggregate object.
             * @example
             *
             * _.countBy([6.1, 4.2, 6.3], Math.floor);
             * // => { '4': 1, '6': 2 }
             *
             * // The `_.property` iteratee shorthand.
             * _.countBy(['one', 'two', 'three'], 'length');
             * // => { '3': 2, '5': 1 }
             */
            var countBy = createAggregator(function (result, value, key) {
              if (hasOwnProperty.call(result, key)) {
                ++result[key]
              } else {
                baseAssignValue(result, key, 1)
              }
            })

            /**
             * Checks if `predicate` returns truthy for **all** elements of `collection`.
             * Iteration is stopped once `predicate` returns falsey. The predicate is
             * invoked with three arguments: (value, index|key, collection).
             *
             * **Note:** This method returns `true` for
             * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
             * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
             * elements of empty collections.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {boolean} Returns `true` if all elements pass the predicate check,
             *  else `false`.
             * @example
             *
             * _.every([true, 1, null, 'yes'], Boolean);
             * // => false
             *
             * var users = [
             *   { 'user': 'barney', 'age': 36, 'active': false },
             *   { 'user': 'fred',   'age': 40, 'active': false }
             * ];
             *
             * // The `_.matches` iteratee shorthand.
             * _.every(users, { 'user': 'barney', 'active': false });
             * // => false
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.every(users, ['active', false]);
             * // => true
             *
             * // The `_.property` iteratee shorthand.
             * _.every(users, 'active');
             * // => false
             */
            function every(collection, predicate, guard) {
              var func = isArray(collection) ? arrayEvery : baseEvery
              if (guard && isIterateeCall(collection, predicate, guard)) {
                predicate = undefined
              }
              return func(collection, getIteratee(predicate, 3))
            }

            /**
             * Iterates over elements of `collection`, returning an array of all elements
             * `predicate` returns truthy for. The predicate is invoked with three
             * arguments: (value, index|key, collection).
             *
             * **Note:** Unlike `_.remove`, this method returns a new array.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new filtered array.
             * @see _.reject
             * @example
             *
             * var users = [
             *   { 'user': 'barney', 'age': 36, 'active': true },
             *   { 'user': 'fred',   'age': 40, 'active': false }
             * ];
             *
             * _.filter(users, function(o) { return !o.active; });
             * // => objects for ['fred']
             *
             * // The `_.matches` iteratee shorthand.
             * _.filter(users, { 'age': 36, 'active': true });
             * // => objects for ['barney']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.filter(users, ['active', false]);
             * // => objects for ['fred']
             *
             * // The `_.property` iteratee shorthand.
             * _.filter(users, 'active');
             * // => objects for ['barney']
             *
             * // Combining several predicates using `_.overEvery` or `_.overSome`.
             * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
             * // => objects for ['fred', 'barney']
             */
            function filter(collection, predicate) {
              var func = isArray(collection) ? arrayFilter : baseFilter
              return func(collection, getIteratee(predicate, 3))
            }

            /**
             * Iterates over elements of `collection`, returning the first element
             * `predicate` returns truthy for. The predicate is invoked with three
             * arguments: (value, index|key, collection).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param {number} [fromIndex=0] The index to search from.
             * @returns {*} Returns the matched element, else `undefined`.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'age': 36, 'active': true },
             *   { 'user': 'fred',    'age': 40, 'active': false },
             *   { 'user': 'pebbles', 'age': 1,  'active': true }
             * ];
             *
             * _.find(users, function(o) { return o.age < 40; });
             * // => object for 'barney'
             *
             * // The `_.matches` iteratee shorthand.
             * _.find(users, { 'age': 1, 'active': true });
             * // => object for 'pebbles'
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.find(users, ['active', false]);
             * // => object for 'fred'
             *
             * // The `_.property` iteratee shorthand.
             * _.find(users, 'active');
             * // => object for 'barney'
             */
            var find = createFind(findIndex)

            /**
             * This method is like `_.find` except that it iterates over elements of
             * `collection` from right to left.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param {number} [fromIndex=collection.length-1] The index to search from.
             * @returns {*} Returns the matched element, else `undefined`.
             * @example
             *
             * _.findLast([1, 2, 3, 4], function(n) {
             *   return n % 2 == 1;
             * });
             * // => 3
             */
            var findLast = createFind(findLastIndex)

            /**
             * Creates a flattened array of values by running each element in `collection`
             * thru `iteratee` and flattening the mapped results. The iteratee is invoked
             * with three arguments: (value, index|key, collection).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * function duplicate(n) {
             *   return [n, n];
             * }
             *
             * _.flatMap([1, 2], duplicate);
             * // => [1, 1, 2, 2]
             */
            function flatMap(collection, iteratee) {
              return baseFlatten(map(collection, iteratee), 1)
            }

            /**
             * This method is like `_.flatMap` except that it recursively flattens the
             * mapped results.
             *
             * @static
             * @memberOf _
             * @since 4.7.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * function duplicate(n) {
             *   return [[[n, n]]];
             * }
             *
             * _.flatMapDeep([1, 2], duplicate);
             * // => [1, 1, 2, 2]
             */
            function flatMapDeep(collection, iteratee) {
              return baseFlatten(map(collection, iteratee), INFINITY)
            }

            /**
             * This method is like `_.flatMap` except that it recursively flattens the
             * mapped results up to `depth` times.
             *
             * @static
             * @memberOf _
             * @since 4.7.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @param {number} [depth=1] The maximum recursion depth.
             * @returns {Array} Returns the new flattened array.
             * @example
             *
             * function duplicate(n) {
             *   return [[[n, n]]];
             * }
             *
             * _.flatMapDepth([1, 2], duplicate, 2);
             * // => [[1, 1], [2, 2]]
             */
            function flatMapDepth(collection, iteratee, depth) {
              depth = depth === undefined ? 1 : toInteger(depth)
              return baseFlatten(map(collection, iteratee), depth)
            }

            /**
             * Iterates over elements of `collection` and invokes `iteratee` for each element.
             * The iteratee is invoked with three arguments: (value, index|key, collection).
             * Iteratee functions may exit iteration early by explicitly returning `false`.
             *
             * **Note:** As with other "Collections" methods, objects with a "length"
             * property are iterated like arrays. To avoid this behavior use `_.forIn`
             * or `_.forOwn` for object iteration.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @alias each
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array|Object} Returns `collection`.
             * @see _.forEachRight
             * @example
             *
             * _.forEach([1, 2], function(value) {
             *   console.log(value);
             * });
             * // => Logs `1` then `2`.
             *
             * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
             *   console.log(key);
             * });
             * // => Logs 'a' then 'b' (iteration order is not guaranteed).
             */
            function forEach(collection, iteratee) {
              var func = isArray(collection) ? arrayEach : baseEach
              return func(collection, getIteratee(iteratee, 3))
            }

            /**
             * This method is like `_.forEach` except that it iterates over elements of
             * `collection` from right to left.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @alias eachRight
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array|Object} Returns `collection`.
             * @see _.forEach
             * @example
             *
             * _.forEachRight([1, 2], function(value) {
             *   console.log(value);
             * });
             * // => Logs `2` then `1`.
             */
            function forEachRight(collection, iteratee) {
              var func = isArray(collection) ? arrayEachRight : baseEachRight
              return func(collection, getIteratee(iteratee, 3))
            }

            /**
             * Creates an object composed of keys generated from the results of running
             * each element of `collection` thru `iteratee`. The order of grouped values
             * is determined by the order they occur in `collection`. The corresponding
             * value of each key is an array of elements responsible for generating the
             * key. The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
             * @returns {Object} Returns the composed aggregate object.
             * @example
             *
             * _.groupBy([6.1, 4.2, 6.3], Math.floor);
             * // => { '4': [4.2], '6': [6.1, 6.3] }
             *
             * // The `_.property` iteratee shorthand.
             * _.groupBy(['one', 'two', 'three'], 'length');
             * // => { '3': ['one', 'two'], '5': ['three'] }
             */
            var groupBy = createAggregator(function (result, value, key) {
              if (hasOwnProperty.call(result, key)) {
                result[key].push(value)
              } else {
                baseAssignValue(result, key, [value])
              }
            })

            /**
             * Checks if `value` is in `collection`. If `collection` is a string, it's
             * checked for a substring of `value`, otherwise
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * is used for equality comparisons. If `fromIndex` is negative, it's used as
             * the offset from the end of `collection`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object|string} collection The collection to inspect.
             * @param {*} value The value to search for.
             * @param {number} [fromIndex=0] The index to search from.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
             * @returns {boolean} Returns `true` if `value` is found, else `false`.
             * @example
             *
             * _.includes([1, 2, 3], 1);
             * // => true
             *
             * _.includes([1, 2, 3], 1, 2);
             * // => false
             *
             * _.includes({ 'a': 1, 'b': 2 }, 1);
             * // => true
             *
             * _.includes('abcd', 'bc');
             * // => true
             */
            function includes(collection, value, fromIndex, guard) {
              collection = isArrayLike(collection)
                ? collection
                : values(collection)
              fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0

              var length = collection.length
              if (fromIndex < 0) {
                fromIndex = nativeMax(length + fromIndex, 0)
              }
              return isString(collection)
                ? fromIndex <= length &&
                    collection.indexOf(value, fromIndex) > -1
                : !!length && baseIndexOf(collection, value, fromIndex) > -1
            }

            /**
             * Invokes the method at `path` of each element in `collection`, returning
             * an array of the results of each invoked method. Any additional arguments
             * are provided to each invoked method. If `path` is a function, it's invoked
             * for, and `this` bound to, each element in `collection`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Array|Function|string} path The path of the method to invoke or
             *  the function invoked per iteration.
             * @param {...*} [args] The arguments to invoke each method with.
             * @returns {Array} Returns the array of results.
             * @example
             *
             * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
             * // => [[1, 5, 7], [1, 2, 3]]
             *
             * _.invokeMap([123, 456], String.prototype.split, '');
             * // => [['1', '2', '3'], ['4', '5', '6']]
             */
            var invokeMap = baseRest(function (collection, path, args) {
              var index = -1,
                isFunc = typeof path == 'function',
                result = isArrayLike(collection) ? Array(collection.length) : []

              baseEach(collection, function (value) {
                result[++index] = isFunc
                  ? apply(path, value, args)
                  : baseInvoke(value, path, args)
              })
              return result
            })

            /**
             * Creates an object composed of keys generated from the results of running
             * each element of `collection` thru `iteratee`. The corresponding value of
             * each key is the last element responsible for generating the key. The
             * iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
             * @returns {Object} Returns the composed aggregate object.
             * @example
             *
             * var array = [
             *   { 'dir': 'left', 'code': 97 },
             *   { 'dir': 'right', 'code': 100 }
             * ];
             *
             * _.keyBy(array, function(o) {
             *   return String.fromCharCode(o.code);
             * });
             * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
             *
             * _.keyBy(array, 'dir');
             * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
             */
            var keyBy = createAggregator(function (result, value, key) {
              baseAssignValue(result, key, value)
            })

            /**
             * Creates an array of values by running each element in `collection` thru
             * `iteratee`. The iteratee is invoked with three arguments:
             * (value, index|key, collection).
             *
             * Many lodash methods are guarded to work as iteratees for methods like
             * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
             *
             * The guarded methods are:
             * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
             * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
             * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
             * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new mapped array.
             * @example
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * _.map([4, 8], square);
             * // => [16, 64]
             *
             * _.map({ 'a': 4, 'b': 8 }, square);
             * // => [16, 64] (iteration order is not guaranteed)
             *
             * var users = [
             *   { 'user': 'barney' },
             *   { 'user': 'fred' }
             * ];
             *
             * // The `_.property` iteratee shorthand.
             * _.map(users, 'user');
             * // => ['barney', 'fred']
             */
            function map(collection, iteratee) {
              var func = isArray(collection) ? arrayMap : baseMap
              return func(collection, getIteratee(iteratee, 3))
            }

            /**
             * This method is like `_.sortBy` except that it allows specifying the sort
             * orders of the iteratees to sort by. If `orders` is unspecified, all values
             * are sorted in ascending order. Otherwise, specify an order of "desc" for
             * descending or "asc" for ascending sort order of corresponding values.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
             *  The iteratees to sort by.
             * @param {string[]} [orders] The sort orders of `iteratees`.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
             * @returns {Array} Returns the new sorted array.
             * @example
             *
             * var users = [
             *   { 'user': 'fred',   'age': 48 },
             *   { 'user': 'barney', 'age': 34 },
             *   { 'user': 'fred',   'age': 40 },
             *   { 'user': 'barney', 'age': 36 }
             * ];
             *
             * // Sort by `user` in ascending order and by `age` in descending order.
             * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
             * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
             */
            function orderBy(collection, iteratees, orders, guard) {
              if (collection == null) {
                return []
              }
              if (!isArray(iteratees)) {
                iteratees = iteratees == null ? [] : [iteratees]
              }
              orders = guard ? undefined : orders
              if (!isArray(orders)) {
                orders = orders == null ? [] : [orders]
              }
              return baseOrderBy(collection, iteratees, orders)
            }

            /**
             * Creates an array of elements split into two groups, the first of which
             * contains elements `predicate` returns truthy for, the second of which
             * contains elements `predicate` returns falsey for. The predicate is
             * invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the array of grouped elements.
             * @example
             *
             * var users = [
             *   { 'user': 'barney',  'age': 36, 'active': false },
             *   { 'user': 'fred',    'age': 40, 'active': true },
             *   { 'user': 'pebbles', 'age': 1,  'active': false }
             * ];
             *
             * _.partition(users, function(o) { return o.active; });
             * // => objects for [['fred'], ['barney', 'pebbles']]
             *
             * // The `_.matches` iteratee shorthand.
             * _.partition(users, { 'age': 1, 'active': false });
             * // => objects for [['pebbles'], ['barney', 'fred']]
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.partition(users, ['active', false]);
             * // => objects for [['barney', 'pebbles'], ['fred']]
             *
             * // The `_.property` iteratee shorthand.
             * _.partition(users, 'active');
             * // => objects for [['fred'], ['barney', 'pebbles']]
             */
            var partition = createAggregator(
              function (result, value, key) {
                result[key ? 0 : 1].push(value)
              },
              function () {
                return [[], []]
              }
            )

            /**
             * Reduces `collection` to a value which is the accumulated result of running
             * each element in `collection` thru `iteratee`, where each successive
             * invocation is supplied the return value of the previous. If `accumulator`
             * is not given, the first element of `collection` is used as the initial
             * value. The iteratee is invoked with four arguments:
             * (accumulator, value, index|key, collection).
             *
             * Many lodash methods are guarded to work as iteratees for methods like
             * `_.reduce`, `_.reduceRight`, and `_.transform`.
             *
             * The guarded methods are:
             * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
             * and `sortBy`
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @param {*} [accumulator] The initial value.
             * @returns {*} Returns the accumulated value.
             * @see _.reduceRight
             * @example
             *
             * _.reduce([1, 2], function(sum, n) {
             *   return sum + n;
             * }, 0);
             * // => 3
             *
             * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
             *   (result[value] || (result[value] = [])).push(key);
             *   return result;
             * }, {});
             * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
             */
            function reduce(collection, iteratee, accumulator) {
              var func = isArray(collection) ? arrayReduce : baseReduce,
                initAccum = arguments.length < 3

              return func(
                collection,
                getIteratee(iteratee, 4),
                accumulator,
                initAccum,
                baseEach
              )
            }

            /**
             * This method is like `_.reduce` except that it iterates over elements of
             * `collection` from right to left.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @param {*} [accumulator] The initial value.
             * @returns {*} Returns the accumulated value.
             * @see _.reduce
             * @example
             *
             * var array = [[0, 1], [2, 3], [4, 5]];
             *
             * _.reduceRight(array, function(flattened, other) {
             *   return flattened.concat(other);
             * }, []);
             * // => [4, 5, 2, 3, 0, 1]
             */
            function reduceRight(collection, iteratee, accumulator) {
              var func = isArray(collection) ? arrayReduceRight : baseReduce,
                initAccum = arguments.length < 3

              return func(
                collection,
                getIteratee(iteratee, 4),
                accumulator,
                initAccum,
                baseEachRight
              )
            }

            /**
             * The opposite of `_.filter`; this method returns the elements of `collection`
             * that `predicate` does **not** return truthy for.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the new filtered array.
             * @see _.filter
             * @example
             *
             * var users = [
             *   { 'user': 'barney', 'age': 36, 'active': false },
             *   { 'user': 'fred',   'age': 40, 'active': true }
             * ];
             *
             * _.reject(users, function(o) { return !o.active; });
             * // => objects for ['fred']
             *
             * // The `_.matches` iteratee shorthand.
             * _.reject(users, { 'age': 40, 'active': true });
             * // => objects for ['barney']
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.reject(users, ['active', false]);
             * // => objects for ['fred']
             *
             * // The `_.property` iteratee shorthand.
             * _.reject(users, 'active');
             * // => objects for ['barney']
             */
            function reject(collection, predicate) {
              var func = isArray(collection) ? arrayFilter : baseFilter
              return func(collection, negate(getIteratee(predicate, 3)))
            }

            /**
             * Gets a random element from `collection`.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to sample.
             * @returns {*} Returns the random element.
             * @example
             *
             * _.sample([1, 2, 3, 4]);
             * // => 2
             */
            function sample(collection) {
              var func = isArray(collection) ? arraySample : baseSample
              return func(collection)
            }

            /**
             * Gets `n` random elements at unique keys from `collection` up to the
             * size of `collection`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Collection
             * @param {Array|Object} collection The collection to sample.
             * @param {number} [n=1] The number of elements to sample.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the random elements.
             * @example
             *
             * _.sampleSize([1, 2, 3], 2);
             * // => [3, 1]
             *
             * _.sampleSize([1, 2, 3], 4);
             * // => [2, 3, 1]
             */
            function sampleSize(collection, n, guard) {
              if (
                guard ? isIterateeCall(collection, n, guard) : n === undefined
              ) {
                n = 1
              } else {
                n = toInteger(n)
              }
              var func = isArray(collection) ? arraySampleSize : baseSampleSize
              return func(collection, n)
            }

            /**
             * Creates an array of shuffled values, using a version of the
             * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to shuffle.
             * @returns {Array} Returns the new shuffled array.
             * @example
             *
             * _.shuffle([1, 2, 3, 4]);
             * // => [4, 1, 3, 2]
             */
            function shuffle(collection) {
              var func = isArray(collection) ? arrayShuffle : baseShuffle
              return func(collection)
            }

            /**
             * Gets the size of `collection` by returning its length for array-like
             * values or the number of own enumerable string keyed properties for objects.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object|string} collection The collection to inspect.
             * @returns {number} Returns the collection size.
             * @example
             *
             * _.size([1, 2, 3]);
             * // => 3
             *
             * _.size({ 'a': 1, 'b': 2 });
             * // => 2
             *
             * _.size('pebbles');
             * // => 7
             */
            function size(collection) {
              if (collection == null) {
                return 0
              }
              if (isArrayLike(collection)) {
                return isString(collection)
                  ? stringSize(collection)
                  : collection.length
              }
              var tag = getTag(collection)
              if (tag == mapTag || tag == setTag) {
                return collection.size
              }
              return baseKeys(collection).length
            }

            /**
             * Checks if `predicate` returns truthy for **any** element of `collection`.
             * Iteration is stopped once `predicate` returns truthy. The predicate is
             * invoked with three arguments: (value, index|key, collection).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {boolean} Returns `true` if any element passes the predicate check,
             *  else `false`.
             * @example
             *
             * _.some([null, 0, 'yes', false], Boolean);
             * // => true
             *
             * var users = [
             *   { 'user': 'barney', 'active': true },
             *   { 'user': 'fred',   'active': false }
             * ];
             *
             * // The `_.matches` iteratee shorthand.
             * _.some(users, { 'user': 'barney', 'active': false });
             * // => false
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.some(users, ['active', false]);
             * // => true
             *
             * // The `_.property` iteratee shorthand.
             * _.some(users, 'active');
             * // => true
             */
            function some(collection, predicate, guard) {
              var func = isArray(collection) ? arraySome : baseSome
              if (guard && isIterateeCall(collection, predicate, guard)) {
                predicate = undefined
              }
              return func(collection, getIteratee(predicate, 3))
            }

            /**
             * Creates an array of elements, sorted in ascending order by the results of
             * running each element in a collection thru each iteratee. This method
             * performs a stable sort, that is, it preserves the original sort order of
             * equal elements. The iteratees are invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Collection
             * @param {Array|Object} collection The collection to iterate over.
             * @param {...(Function|Function[])} [iteratees=[_.identity]]
             *  The iteratees to sort by.
             * @returns {Array} Returns the new sorted array.
             * @example
             *
             * var users = [
             *   { 'user': 'fred',   'age': 48 },
             *   { 'user': 'barney', 'age': 36 },
             *   { 'user': 'fred',   'age': 30 },
             *   { 'user': 'barney', 'age': 34 }
             * ];
             *
             * _.sortBy(users, [function(o) { return o.user; }]);
             * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
             *
             * _.sortBy(users, ['user', 'age']);
             * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
             */
            var sortBy = baseRest(function (collection, iteratees) {
              if (collection == null) {
                return []
              }
              var length = iteratees.length
              if (
                length > 1 &&
                isIterateeCall(collection, iteratees[0], iteratees[1])
              ) {
                iteratees = []
              } else if (
                length > 2 &&
                isIterateeCall(iteratees[0], iteratees[1], iteratees[2])
              ) {
                iteratees = [iteratees[0]]
              }
              return baseOrderBy(collection, baseFlatten(iteratees, 1), [])
            })

            /*------------------------------------------------------------------------*/

            /**
             * Gets the timestamp of the number of milliseconds that have elapsed since
             * the Unix epoch (1 January 1970 00:00:00 UTC).
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Date
             * @returns {number} Returns the timestamp.
             * @example
             *
             * _.defer(function(stamp) {
             *   console.log(_.now() - stamp);
             * }, _.now());
             * // => Logs the number of milliseconds it took for the deferred invocation.
             */
            var now =
              ctxNow ||
              function () {
                return root.Date.now()
              }

            /*------------------------------------------------------------------------*/

            /**
             * The opposite of `_.before`; this method creates a function that invokes
             * `func` once it's called `n` or more times.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {number} n The number of calls before `func` is invoked.
             * @param {Function} func The function to restrict.
             * @returns {Function} Returns the new restricted function.
             * @example
             *
             * var saves = ['profile', 'settings'];
             *
             * var done = _.after(saves.length, function() {
             *   console.log('done saving!');
             * });
             *
             * _.forEach(saves, function(type) {
             *   asyncSave({ 'type': type, 'complete': done });
             * });
             * // => Logs 'done saving!' after the two async saves have completed.
             */
            function after(n, func) {
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              n = toInteger(n)
              return function () {
                if (--n < 1) {
                  return func.apply(this, arguments)
                }
              }
            }

            /**
             * Creates a function that invokes `func`, with up to `n` arguments,
             * ignoring any additional arguments.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Function
             * @param {Function} func The function to cap arguments for.
             * @param {number} [n=func.length] The arity cap.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Function} Returns the new capped function.
             * @example
             *
             * _.map(['6', '8', '10'], _.ary(parseInt, 1));
             * // => [6, 8, 10]
             */
            function ary(func, n, guard) {
              n = guard ? undefined : n
              n = func && n == null ? func.length : n
              return createWrap(
                func,
                WRAP_ARY_FLAG,
                undefined,
                undefined,
                undefined,
                undefined,
                n
              )
            }

            /**
             * Creates a function that invokes `func`, with the `this` binding and arguments
             * of the created function, while it's called less than `n` times. Subsequent
             * calls to the created function return the result of the last `func` invocation.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Function
             * @param {number} n The number of calls at which `func` is no longer invoked.
             * @param {Function} func The function to restrict.
             * @returns {Function} Returns the new restricted function.
             * @example
             *
             * jQuery(element).on('click', _.before(5, addContactToList));
             * // => Allows adding up to 4 contacts to the list.
             */
            function before(n, func) {
              var result
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              n = toInteger(n)
              return function () {
                if (--n > 0) {
                  result = func.apply(this, arguments)
                }
                if (n <= 1) {
                  func = undefined
                }
                return result
              }
            }

            /**
             * Creates a function that invokes `func` with the `this` binding of `thisArg`
             * and `partials` prepended to the arguments it receives.
             *
             * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
             * may be used as a placeholder for partially applied arguments.
             *
             * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
             * property of bound functions.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to bind.
             * @param {*} thisArg The `this` binding of `func`.
             * @param {...*} [partials] The arguments to be partially applied.
             * @returns {Function} Returns the new bound function.
             * @example
             *
             * function greet(greeting, punctuation) {
             *   return greeting + ' ' + this.user + punctuation;
             * }
             *
             * var object = { 'user': 'fred' };
             *
             * var bound = _.bind(greet, object, 'hi');
             * bound('!');
             * // => 'hi fred!'
             *
             * // Bound with placeholders.
             * var bound = _.bind(greet, object, _, '!');
             * bound('hi');
             * // => 'hi fred!'
             */
            var bind = baseRest(function (func, thisArg, partials) {
              var bitmask = WRAP_BIND_FLAG
              if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bind))
                bitmask |= WRAP_PARTIAL_FLAG
              }
              return createWrap(func, bitmask, thisArg, partials, holders)
            })

            /**
             * Creates a function that invokes the method at `object[key]` with `partials`
             * prepended to the arguments it receives.
             *
             * This method differs from `_.bind` by allowing bound functions to reference
             * methods that may be redefined or don't yet exist. See
             * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
             * for more details.
             *
             * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
             * builds, may be used as a placeholder for partially applied arguments.
             *
             * @static
             * @memberOf _
             * @since 0.10.0
             * @category Function
             * @param {Object} object The object to invoke the method on.
             * @param {string} key The key of the method.
             * @param {...*} [partials] The arguments to be partially applied.
             * @returns {Function} Returns the new bound function.
             * @example
             *
             * var object = {
             *   'user': 'fred',
             *   'greet': function(greeting, punctuation) {
             *     return greeting + ' ' + this.user + punctuation;
             *   }
             * };
             *
             * var bound = _.bindKey(object, 'greet', 'hi');
             * bound('!');
             * // => 'hi fred!'
             *
             * object.greet = function(greeting, punctuation) {
             *   return greeting + 'ya ' + this.user + punctuation;
             * };
             *
             * bound('!');
             * // => 'hiya fred!'
             *
             * // Bound with placeholders.
             * var bound = _.bindKey(object, 'greet', _, '!');
             * bound('hi');
             * // => 'hiya fred!'
             */
            var bindKey = baseRest(function (object, key, partials) {
              var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG
              if (partials.length) {
                var holders = replaceHolders(partials, getHolder(bindKey))
                bitmask |= WRAP_PARTIAL_FLAG
              }
              return createWrap(key, bitmask, object, partials, holders)
            })

            /**
             * Creates a function that accepts arguments of `func` and either invokes
             * `func` returning its result, if at least `arity` number of arguments have
             * been provided, or returns a function that accepts the remaining `func`
             * arguments, and so on. The arity of `func` may be specified if `func.length`
             * is not sufficient.
             *
             * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
             * may be used as a placeholder for provided arguments.
             *
             * **Note:** This method doesn't set the "length" property of curried functions.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Function
             * @param {Function} func The function to curry.
             * @param {number} [arity=func.length] The arity of `func`.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Function} Returns the new curried function.
             * @example
             *
             * var abc = function(a, b, c) {
             *   return [a, b, c];
             * };
             *
             * var curried = _.curry(abc);
             *
             * curried(1)(2)(3);
             * // => [1, 2, 3]
             *
             * curried(1, 2)(3);
             * // => [1, 2, 3]
             *
             * curried(1, 2, 3);
             * // => [1, 2, 3]
             *
             * // Curried with placeholders.
             * curried(1)(_, 3)(2);
             * // => [1, 2, 3]
             */
            function curry(func, arity, guard) {
              arity = guard ? undefined : arity
              var result = createWrap(
                func,
                WRAP_CURRY_FLAG,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                arity
              )
              result.placeholder = curry.placeholder
              return result
            }

            /**
             * This method is like `_.curry` except that arguments are applied to `func`
             * in the manner of `_.partialRight` instead of `_.partial`.
             *
             * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
             * builds, may be used as a placeholder for provided arguments.
             *
             * **Note:** This method doesn't set the "length" property of curried functions.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Function
             * @param {Function} func The function to curry.
             * @param {number} [arity=func.length] The arity of `func`.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Function} Returns the new curried function.
             * @example
             *
             * var abc = function(a, b, c) {
             *   return [a, b, c];
             * };
             *
             * var curried = _.curryRight(abc);
             *
             * curried(3)(2)(1);
             * // => [1, 2, 3]
             *
             * curried(2, 3)(1);
             * // => [1, 2, 3]
             *
             * curried(1, 2, 3);
             * // => [1, 2, 3]
             *
             * // Curried with placeholders.
             * curried(3)(1, _)(2);
             * // => [1, 2, 3]
             */
            function curryRight(func, arity, guard) {
              arity = guard ? undefined : arity
              var result = createWrap(
                func,
                WRAP_CURRY_RIGHT_FLAG,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                arity
              )
              result.placeholder = curryRight.placeholder
              return result
            }

            /**
             * Creates a debounced function that delays invoking `func` until after `wait`
             * milliseconds have elapsed since the last time the debounced function was
             * invoked. The debounced function comes with a `cancel` method to cancel
             * delayed `func` invocations and a `flush` method to immediately invoke them.
             * Provide `options` to indicate whether `func` should be invoked on the
             * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
             * with the last arguments provided to the debounced function. Subsequent
             * calls to the debounced function return the result of the last `func`
             * invocation.
             *
             * **Note:** If `leading` and `trailing` options are `true`, `func` is
             * invoked on the trailing edge of the timeout only if the debounced function
             * is invoked more than once during the `wait` timeout.
             *
             * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
             * until to the next tick, similar to `setTimeout` with a timeout of `0`.
             *
             * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
             * for details over the differences between `_.debounce` and `_.throttle`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to debounce.
             * @param {number} [wait=0] The number of milliseconds to delay.
             * @param {Object} [options={}] The options object.
             * @param {boolean} [options.leading=false]
             *  Specify invoking on the leading edge of the timeout.
             * @param {number} [options.maxWait]
             *  The maximum time `func` is allowed to be delayed before it's invoked.
             * @param {boolean} [options.trailing=true]
             *  Specify invoking on the trailing edge of the timeout.
             * @returns {Function} Returns the new debounced function.
             * @example
             *
             * // Avoid costly calculations while the window size is in flux.
             * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
             *
             * // Invoke `sendMail` when clicked, debouncing subsequent calls.
             * jQuery(element).on('click', _.debounce(sendMail, 300, {
             *   'leading': true,
             *   'trailing': false
             * }));
             *
             * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
             * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
             * var source = new EventSource('/stream');
             * jQuery(source).on('message', debounced);
             *
             * // Cancel the trailing debounced invocation.
             * jQuery(window).on('popstate', debounced.cancel);
             */
            function debounce(func, wait, options) {
              var lastArgs,
                lastThis,
                maxWait,
                result,
                timerId,
                lastCallTime,
                lastInvokeTime = 0,
                leading = false,
                maxing = false,
                trailing = true

              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              wait = toNumber(wait) || 0
              if (isObject(options)) {
                leading = !!options.leading
                maxing = 'maxWait' in options
                maxWait = maxing
                  ? nativeMax(toNumber(options.maxWait) || 0, wait)
                  : maxWait
                trailing = 'trailing' in options ? !!options.trailing : trailing
              }

              function invokeFunc(time) {
                var args = lastArgs,
                  thisArg = lastThis

                lastArgs = lastThis = undefined
                lastInvokeTime = time
                result = func.apply(thisArg, args)
                return result
              }

              function leadingEdge(time) {
                // Reset any `maxWait` timer.
                lastInvokeTime = time
                // Start the timer for the trailing edge.
                timerId = setTimeout(timerExpired, wait)
                // Invoke the leading edge.
                return leading ? invokeFunc(time) : result
              }

              function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime,
                  timeSinceLastInvoke = time - lastInvokeTime,
                  timeWaiting = wait - timeSinceLastCall

                return maxing
                  ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
                  : timeWaiting
              }

              function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime,
                  timeSinceLastInvoke = time - lastInvokeTime

                // Either this is the first call, activity has stopped and we're at the
                // trailing edge, the system time has gone backwards and we're treating
                // it as the trailing edge, or we've hit the `maxWait` limit.
                return (
                  lastCallTime === undefined ||
                  timeSinceLastCall >= wait ||
                  timeSinceLastCall < 0 ||
                  (maxing && timeSinceLastInvoke >= maxWait)
                )
              }

              function timerExpired() {
                var time = now()
                if (shouldInvoke(time)) {
                  return trailingEdge(time)
                }
                // Restart the timer.
                timerId = setTimeout(timerExpired, remainingWait(time))
              }

              function trailingEdge(time) {
                timerId = undefined

                // Only invoke if we have `lastArgs` which means `func` has been
                // debounced at least once.
                if (trailing && lastArgs) {
                  return invokeFunc(time)
                }
                lastArgs = lastThis = undefined
                return result
              }

              function cancel() {
                if (timerId !== undefined) {
                  clearTimeout(timerId)
                }
                lastInvokeTime = 0
                lastArgs = lastCallTime = lastThis = timerId = undefined
              }

              function flush() {
                return timerId === undefined ? result : trailingEdge(now())
              }

              function debounced() {
                var time = now(),
                  isInvoking = shouldInvoke(time)

                lastArgs = arguments
                lastThis = this
                lastCallTime = time

                if (isInvoking) {
                  if (timerId === undefined) {
                    return leadingEdge(lastCallTime)
                  }
                  if (maxing) {
                    // Handle invocations in a tight loop.
                    clearTimeout(timerId)
                    timerId = setTimeout(timerExpired, wait)
                    return invokeFunc(lastCallTime)
                  }
                }
                if (timerId === undefined) {
                  timerId = setTimeout(timerExpired, wait)
                }
                return result
              }
              debounced.cancel = cancel
              debounced.flush = flush
              return debounced
            }

            /**
             * Defers invoking the `func` until the current call stack has cleared. Any
             * additional arguments are provided to `func` when it's invoked.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to defer.
             * @param {...*} [args] The arguments to invoke `func` with.
             * @returns {number} Returns the timer id.
             * @example
             *
             * _.defer(function(text) {
             *   console.log(text);
             * }, 'deferred');
             * // => Logs 'deferred' after one millisecond.
             */
            var defer = baseRest(function (func, args) {
              return baseDelay(func, 1, args)
            })

            /**
             * Invokes `func` after `wait` milliseconds. Any additional arguments are
             * provided to `func` when it's invoked.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to delay.
             * @param {number} wait The number of milliseconds to delay invocation.
             * @param {...*} [args] The arguments to invoke `func` with.
             * @returns {number} Returns the timer id.
             * @example
             *
             * _.delay(function(text) {
             *   console.log(text);
             * }, 1000, 'later');
             * // => Logs 'later' after one second.
             */
            var delay = baseRest(function (func, wait, args) {
              return baseDelay(func, toNumber(wait) || 0, args)
            })

            /**
             * Creates a function that invokes `func` with arguments reversed.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Function
             * @param {Function} func The function to flip arguments for.
             * @returns {Function} Returns the new flipped function.
             * @example
             *
             * var flipped = _.flip(function() {
             *   return _.toArray(arguments);
             * });
             *
             * flipped('a', 'b', 'c', 'd');
             * // => ['d', 'c', 'b', 'a']
             */
            function flip(func) {
              return createWrap(func, WRAP_FLIP_FLAG)
            }

            /**
             * Creates a function that memoizes the result of `func`. If `resolver` is
             * provided, it determines the cache key for storing the result based on the
             * arguments provided to the memoized function. By default, the first argument
             * provided to the memoized function is used as the map cache key. The `func`
             * is invoked with the `this` binding of the memoized function.
             *
             * **Note:** The cache is exposed as the `cache` property on the memoized
             * function. Its creation may be customized by replacing the `_.memoize.Cache`
             * constructor with one whose instances implement the
             * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
             * method interface of `clear`, `delete`, `get`, `has`, and `set`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to have its output memoized.
             * @param {Function} [resolver] The function to resolve the cache key.
             * @returns {Function} Returns the new memoized function.
             * @example
             *
             * var object = { 'a': 1, 'b': 2 };
             * var other = { 'c': 3, 'd': 4 };
             *
             * var values = _.memoize(_.values);
             * values(object);
             * // => [1, 2]
             *
             * values(other);
             * // => [3, 4]
             *
             * object.a = 2;
             * values(object);
             * // => [1, 2]
             *
             * // Modify the result cache.
             * values.cache.set(object, ['a', 'b']);
             * values(object);
             * // => ['a', 'b']
             *
             * // Replace `_.memoize.Cache`.
             * _.memoize.Cache = WeakMap;
             */
            function memoize(func, resolver) {
              if (
                typeof func != 'function' ||
                (resolver != null && typeof resolver != 'function')
              ) {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              var memoized = function () {
                var args = arguments,
                  key = resolver ? resolver.apply(this, args) : args[0],
                  cache = memoized.cache

                if (cache.has(key)) {
                  return cache.get(key)
                }
                var result = func.apply(this, args)
                memoized.cache = cache.set(key, result) || cache
                return result
              }
              memoized.cache = new (memoize.Cache || MapCache)()
              return memoized
            }

            // Expose `MapCache`.
            memoize.Cache = MapCache

            /**
             * Creates a function that negates the result of the predicate `func`. The
             * `func` predicate is invoked with the `this` binding and arguments of the
             * created function.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Function
             * @param {Function} predicate The predicate to negate.
             * @returns {Function} Returns the new negated function.
             * @example
             *
             * function isEven(n) {
             *   return n % 2 == 0;
             * }
             *
             * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
             * // => [1, 3, 5]
             */
            function negate(predicate) {
              if (typeof predicate != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              return function () {
                var args = arguments
                switch (args.length) {
                  case 0:
                    return !predicate.call(this)
                  case 1:
                    return !predicate.call(this, args[0])
                  case 2:
                    return !predicate.call(this, args[0], args[1])
                  case 3:
                    return !predicate.call(this, args[0], args[1], args[2])
                }
                return !predicate.apply(this, args)
              }
            }

            /**
             * Creates a function that is restricted to invoking `func` once. Repeat calls
             * to the function return the value of the first invocation. The `func` is
             * invoked with the `this` binding and arguments of the created function.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to restrict.
             * @returns {Function} Returns the new restricted function.
             * @example
             *
             * var initialize = _.once(createApplication);
             * initialize();
             * initialize();
             * // => `createApplication` is invoked once
             */
            function once(func) {
              return before(2, func)
            }

            /**
             * Creates a function that invokes `func` with its arguments transformed.
             *
             * @static
             * @since 4.0.0
             * @memberOf _
             * @category Function
             * @param {Function} func The function to wrap.
             * @param {...(Function|Function[])} [transforms=[_.identity]]
             *  The argument transforms.
             * @returns {Function} Returns the new function.
             * @example
             *
             * function doubled(n) {
             *   return n * 2;
             * }
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * var func = _.overArgs(function(x, y) {
             *   return [x, y];
             * }, [square, doubled]);
             *
             * func(9, 3);
             * // => [81, 6]
             *
             * func(10, 5);
             * // => [100, 10]
             */
            var overArgs = castRest(function (func, transforms) {
              transforms =
                transforms.length == 1 && isArray(transforms[0])
                  ? arrayMap(transforms[0], baseUnary(getIteratee()))
                  : arrayMap(
                      baseFlatten(transforms, 1),
                      baseUnary(getIteratee())
                    )

              var funcsLength = transforms.length
              return baseRest(function (args) {
                var index = -1,
                  length = nativeMin(args.length, funcsLength)

                while (++index < length) {
                  args[index] = transforms[index].call(this, args[index])
                }
                return apply(func, this, args)
              })
            })

            /**
             * Creates a function that invokes `func` with `partials` prepended to the
             * arguments it receives. This method is like `_.bind` except it does **not**
             * alter the `this` binding.
             *
             * The `_.partial.placeholder` value, which defaults to `_` in monolithic
             * builds, may be used as a placeholder for partially applied arguments.
             *
             * **Note:** This method doesn't set the "length" property of partially
             * applied functions.
             *
             * @static
             * @memberOf _
             * @since 0.2.0
             * @category Function
             * @param {Function} func The function to partially apply arguments to.
             * @param {...*} [partials] The arguments to be partially applied.
             * @returns {Function} Returns the new partially applied function.
             * @example
             *
             * function greet(greeting, name) {
             *   return greeting + ' ' + name;
             * }
             *
             * var sayHelloTo = _.partial(greet, 'hello');
             * sayHelloTo('fred');
             * // => 'hello fred'
             *
             * // Partially applied with placeholders.
             * var greetFred = _.partial(greet, _, 'fred');
             * greetFred('hi');
             * // => 'hi fred'
             */
            var partial = baseRest(function (func, partials) {
              var holders = replaceHolders(partials, getHolder(partial))
              return createWrap(
                func,
                WRAP_PARTIAL_FLAG,
                undefined,
                partials,
                holders
              )
            })

            /**
             * This method is like `_.partial` except that partially applied arguments
             * are appended to the arguments it receives.
             *
             * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
             * builds, may be used as a placeholder for partially applied arguments.
             *
             * **Note:** This method doesn't set the "length" property of partially
             * applied functions.
             *
             * @static
             * @memberOf _
             * @since 1.0.0
             * @category Function
             * @param {Function} func The function to partially apply arguments to.
             * @param {...*} [partials] The arguments to be partially applied.
             * @returns {Function} Returns the new partially applied function.
             * @example
             *
             * function greet(greeting, name) {
             *   return greeting + ' ' + name;
             * }
             *
             * var greetFred = _.partialRight(greet, 'fred');
             * greetFred('hi');
             * // => 'hi fred'
             *
             * // Partially applied with placeholders.
             * var sayHelloTo = _.partialRight(greet, 'hello', _);
             * sayHelloTo('fred');
             * // => 'hello fred'
             */
            var partialRight = baseRest(function (func, partials) {
              var holders = replaceHolders(partials, getHolder(partialRight))
              return createWrap(
                func,
                WRAP_PARTIAL_RIGHT_FLAG,
                undefined,
                partials,
                holders
              )
            })

            /**
             * Creates a function that invokes `func` with arguments arranged according
             * to the specified `indexes` where the argument value at the first index is
             * provided as the first argument, the argument value at the second index is
             * provided as the second argument, and so on.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Function
             * @param {Function} func The function to rearrange arguments for.
             * @param {...(number|number[])} indexes The arranged argument indexes.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var rearged = _.rearg(function(a, b, c) {
             *   return [a, b, c];
             * }, [2, 0, 1]);
             *
             * rearged('b', 'c', 'a')
             * // => ['a', 'b', 'c']
             */
            var rearg = flatRest(function (func, indexes) {
              return createWrap(
                func,
                WRAP_REARG_FLAG,
                undefined,
                undefined,
                undefined,
                indexes
              )
            })

            /**
             * Creates a function that invokes `func` with the `this` binding of the
             * created function and arguments from `start` and beyond provided as
             * an array.
             *
             * **Note:** This method is based on the
             * [rest parameter](https://mdn.io/rest_parameters).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Function
             * @param {Function} func The function to apply a rest parameter to.
             * @param {number} [start=func.length-1] The start position of the rest parameter.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var say = _.rest(function(what, names) {
             *   return what + ' ' + _.initial(names).join(', ') +
             *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
             * });
             *
             * say('hello', 'fred', 'barney', 'pebbles');
             * // => 'hello fred, barney, & pebbles'
             */
            function rest(func, start) {
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              start = start === undefined ? start : toInteger(start)
              return baseRest(func, start)
            }

            /**
             * Creates a function that invokes `func` with the `this` binding of the
             * create function and an array of arguments much like
             * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
             *
             * **Note:** This method is based on the
             * [spread operator](https://mdn.io/spread_operator).
             *
             * @static
             * @memberOf _
             * @since 3.2.0
             * @category Function
             * @param {Function} func The function to spread arguments over.
             * @param {number} [start=0] The start position of the spread.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var say = _.spread(function(who, what) {
             *   return who + ' says ' + what;
             * });
             *
             * say(['fred', 'hello']);
             * // => 'fred says hello'
             *
             * var numbers = Promise.all([
             *   Promise.resolve(40),
             *   Promise.resolve(36)
             * ]);
             *
             * numbers.then(_.spread(function(x, y) {
             *   return x + y;
             * }));
             * // => a Promise of 76
             */
            function spread(func, start) {
              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              start = start == null ? 0 : nativeMax(toInteger(start), 0)
              return baseRest(function (args) {
                var array = args[start],
                  otherArgs = castSlice(args, 0, start)

                if (array) {
                  arrayPush(otherArgs, array)
                }
                return apply(func, this, otherArgs)
              })
            }

            /**
             * Creates a throttled function that only invokes `func` at most once per
             * every `wait` milliseconds. The throttled function comes with a `cancel`
             * method to cancel delayed `func` invocations and a `flush` method to
             * immediately invoke them. Provide `options` to indicate whether `func`
             * should be invoked on the leading and/or trailing edge of the `wait`
             * timeout. The `func` is invoked with the last arguments provided to the
             * throttled function. Subsequent calls to the throttled function return the
             * result of the last `func` invocation.
             *
             * **Note:** If `leading` and `trailing` options are `true`, `func` is
             * invoked on the trailing edge of the timeout only if the throttled function
             * is invoked more than once during the `wait` timeout.
             *
             * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
             * until to the next tick, similar to `setTimeout` with a timeout of `0`.
             *
             * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
             * for details over the differences between `_.throttle` and `_.debounce`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {Function} func The function to throttle.
             * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
             * @param {Object} [options={}] The options object.
             * @param {boolean} [options.leading=true]
             *  Specify invoking on the leading edge of the timeout.
             * @param {boolean} [options.trailing=true]
             *  Specify invoking on the trailing edge of the timeout.
             * @returns {Function} Returns the new throttled function.
             * @example
             *
             * // Avoid excessively updating the position while scrolling.
             * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
             *
             * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
             * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
             * jQuery(element).on('click', throttled);
             *
             * // Cancel the trailing throttled invocation.
             * jQuery(window).on('popstate', throttled.cancel);
             */
            function throttle(func, wait, options) {
              var leading = true,
                trailing = true

              if (typeof func != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT)
              }
              if (isObject(options)) {
                leading = 'leading' in options ? !!options.leading : leading
                trailing = 'trailing' in options ? !!options.trailing : trailing
              }
              return debounce(func, wait, {
                leading: leading,
                maxWait: wait,
                trailing: trailing,
              })
            }

            /**
             * Creates a function that accepts up to one argument, ignoring any
             * additional arguments.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Function
             * @param {Function} func The function to cap arguments for.
             * @returns {Function} Returns the new capped function.
             * @example
             *
             * _.map(['6', '8', '10'], _.unary(parseInt));
             * // => [6, 8, 10]
             */
            function unary(func) {
              return ary(func, 1)
            }

            /**
             * Creates a function that provides `value` to `wrapper` as its first
             * argument. Any additional arguments provided to the function are appended
             * to those provided to the `wrapper`. The wrapper is invoked with the `this`
             * binding of the created function.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Function
             * @param {*} value The value to wrap.
             * @param {Function} [wrapper=identity] The wrapper function.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var p = _.wrap(_.escape, function(func, text) {
             *   return '<p>' + func(text) + '</p>';
             * });
             *
             * p('fred, barney, & pebbles');
             * // => '<p>fred, barney, &amp; pebbles</p>'
             */
            function wrap(value, wrapper) {
              return partial(castFunction(wrapper), value)
            }

            /*------------------------------------------------------------------------*/

            /**
             * Casts `value` as an array if it's not one.
             *
             * @static
             * @memberOf _
             * @since 4.4.0
             * @category Lang
             * @param {*} value The value to inspect.
             * @returns {Array} Returns the cast array.
             * @example
             *
             * _.castArray(1);
             * // => [1]
             *
             * _.castArray({ 'a': 1 });
             * // => [{ 'a': 1 }]
             *
             * _.castArray('abc');
             * // => ['abc']
             *
             * _.castArray(null);
             * // => [null]
             *
             * _.castArray(undefined);
             * // => [undefined]
             *
             * _.castArray();
             * // => []
             *
             * var array = [1, 2, 3];
             * console.log(_.castArray(array) === array);
             * // => true
             */
            function castArray() {
              if (!arguments.length) {
                return []
              }
              var value = arguments[0]
              return isArray(value) ? value : [value]
            }

            /**
             * Creates a shallow clone of `value`.
             *
             * **Note:** This method is loosely based on the
             * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
             * and supports cloning arrays, array buffers, booleans, date objects, maps,
             * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
             * arrays. The own enumerable properties of `arguments` objects are cloned
             * as plain objects. An empty object is returned for uncloneable values such
             * as error objects, functions, DOM nodes, and WeakMaps.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to clone.
             * @returns {*} Returns the cloned value.
             * @see _.cloneDeep
             * @example
             *
             * var objects = [{ 'a': 1 }, { 'b': 2 }];
             *
             * var shallow = _.clone(objects);
             * console.log(shallow[0] === objects[0]);
             * // => true
             */
            function clone(value) {
              return baseClone(value, CLONE_SYMBOLS_FLAG)
            }

            /**
             * This method is like `_.clone` except that it accepts `customizer` which
             * is invoked to produce the cloned value. If `customizer` returns `undefined`,
             * cloning is handled by the method instead. The `customizer` is invoked with
             * up to four arguments; (value [, index|key, object, stack]).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to clone.
             * @param {Function} [customizer] The function to customize cloning.
             * @returns {*} Returns the cloned value.
             * @see _.cloneDeepWith
             * @example
             *
             * function customizer(value) {
             *   if (_.isElement(value)) {
             *     return value.cloneNode(false);
             *   }
             * }
             *
             * var el = _.cloneWith(document.body, customizer);
             *
             * console.log(el === document.body);
             * // => false
             * console.log(el.nodeName);
             * // => 'BODY'
             * console.log(el.childNodes.length);
             * // => 0
             */
            function cloneWith(value, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              return baseClone(value, CLONE_SYMBOLS_FLAG, customizer)
            }

            /**
             * This method is like `_.clone` except that it recursively clones `value`.
             *
             * @static
             * @memberOf _
             * @since 1.0.0
             * @category Lang
             * @param {*} value The value to recursively clone.
             * @returns {*} Returns the deep cloned value.
             * @see _.clone
             * @example
             *
             * var objects = [{ 'a': 1 }, { 'b': 2 }];
             *
             * var deep = _.cloneDeep(objects);
             * console.log(deep[0] === objects[0]);
             * // => false
             */
            function cloneDeep(value) {
              return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG)
            }

            /**
             * This method is like `_.cloneWith` except that it recursively clones `value`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to recursively clone.
             * @param {Function} [customizer] The function to customize cloning.
             * @returns {*} Returns the deep cloned value.
             * @see _.cloneWith
             * @example
             *
             * function customizer(value) {
             *   if (_.isElement(value)) {
             *     return value.cloneNode(true);
             *   }
             * }
             *
             * var el = _.cloneDeepWith(document.body, customizer);
             *
             * console.log(el === document.body);
             * // => false
             * console.log(el.nodeName);
             * // => 'BODY'
             * console.log(el.childNodes.length);
             * // => 20
             */
            function cloneDeepWith(value, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              return baseClone(
                value,
                CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG,
                customizer
              )
            }

            /**
             * Checks if `object` conforms to `source` by invoking the predicate
             * properties of `source` with the corresponding property values of `object`.
             *
             * **Note:** This method is equivalent to `_.conforms` when `source` is
             * partially applied.
             *
             * @static
             * @memberOf _
             * @since 4.14.0
             * @category Lang
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property predicates to conform to.
             * @returns {boolean} Returns `true` if `object` conforms, else `false`.
             * @example
             *
             * var object = { 'a': 1, 'b': 2 };
             *
             * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
             * // => true
             *
             * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
             * // => false
             */
            function conformsTo(object, source) {
              return (
                source == null || baseConformsTo(object, source, keys(source))
              )
            }

            /**
             * Performs a
             * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
             * comparison between two values to determine if they are equivalent.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             * @example
             *
             * var object = { 'a': 1 };
             * var other = { 'a': 1 };
             *
             * _.eq(object, object);
             * // => true
             *
             * _.eq(object, other);
             * // => false
             *
             * _.eq('a', 'a');
             * // => true
             *
             * _.eq('a', Object('a'));
             * // => false
             *
             * _.eq(NaN, NaN);
             * // => true
             */
            function eq(value, other) {
              return value === other || (value !== value && other !== other)
            }

            /**
             * Checks if `value` is greater than `other`.
             *
             * @static
             * @memberOf _
             * @since 3.9.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is greater than `other`,
             *  else `false`.
             * @see _.lt
             * @example
             *
             * _.gt(3, 1);
             * // => true
             *
             * _.gt(3, 3);
             * // => false
             *
             * _.gt(1, 3);
             * // => false
             */
            var gt = createRelationalOperation(baseGt)

            /**
             * Checks if `value` is greater than or equal to `other`.
             *
             * @static
             * @memberOf _
             * @since 3.9.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is greater than or equal to
             *  `other`, else `false`.
             * @see _.lte
             * @example
             *
             * _.gte(3, 1);
             * // => true
             *
             * _.gte(3, 3);
             * // => true
             *
             * _.gte(1, 3);
             * // => false
             */
            var gte = createRelationalOperation(function (value, other) {
              return value >= other
            })

            /**
             * Checks if `value` is likely an `arguments` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an `arguments` object,
             *  else `false`.
             * @example
             *
             * _.isArguments(function() { return arguments; }());
             * // => true
             *
             * _.isArguments([1, 2, 3]);
             * // => false
             */
            var isArguments = baseIsArguments(
              (function () {
                return arguments
              })()
            )
              ? baseIsArguments
              : function (value) {
                  return (
                    isObjectLike(value) &&
                    hasOwnProperty.call(value, 'callee') &&
                    !propertyIsEnumerable.call(value, 'callee')
                  )
                }

            /**
             * Checks if `value` is classified as an `Array` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array, else `false`.
             * @example
             *
             * _.isArray([1, 2, 3]);
             * // => true
             *
             * _.isArray(document.body.children);
             * // => false
             *
             * _.isArray('abc');
             * // => false
             *
             * _.isArray(_.noop);
             * // => false
             */
            var isArray = Array.isArray

            /**
             * Checks if `value` is classified as an `ArrayBuffer` object.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
             * @example
             *
             * _.isArrayBuffer(new ArrayBuffer(2));
             * // => true
             *
             * _.isArrayBuffer(new Array(2));
             * // => false
             */
            var isArrayBuffer = nodeIsArrayBuffer
              ? baseUnary(nodeIsArrayBuffer)
              : baseIsArrayBuffer

            /**
             * Checks if `value` is array-like. A value is considered array-like if it's
             * not a function and has a `value.length` that's an integer greater than or
             * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
             * @example
             *
             * _.isArrayLike([1, 2, 3]);
             * // => true
             *
             * _.isArrayLike(document.body.children);
             * // => true
             *
             * _.isArrayLike('abc');
             * // => true
             *
             * _.isArrayLike(_.noop);
             * // => false
             */
            function isArrayLike(value) {
              return (
                value != null && isLength(value.length) && !isFunction(value)
              )
            }

            /**
             * This method is like `_.isArrayLike` except that it also checks if `value`
             * is an object.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an array-like object,
             *  else `false`.
             * @example
             *
             * _.isArrayLikeObject([1, 2, 3]);
             * // => true
             *
             * _.isArrayLikeObject(document.body.children);
             * // => true
             *
             * _.isArrayLikeObject('abc');
             * // => false
             *
             * _.isArrayLikeObject(_.noop);
             * // => false
             */
            function isArrayLikeObject(value) {
              return isObjectLike(value) && isArrayLike(value)
            }

            /**
             * Checks if `value` is classified as a boolean primitive or object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
             * @example
             *
             * _.isBoolean(false);
             * // => true
             *
             * _.isBoolean(null);
             * // => false
             */
            function isBoolean(value) {
              return (
                value === true ||
                value === false ||
                (isObjectLike(value) && baseGetTag(value) == boolTag)
              )
            }

            /**
             * Checks if `value` is a buffer.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
             * @example
             *
             * _.isBuffer(new Buffer(2));
             * // => true
             *
             * _.isBuffer(new Uint8Array(2));
             * // => false
             */
            var isBuffer = nativeIsBuffer || stubFalse

            /**
             * Checks if `value` is classified as a `Date` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
             * @example
             *
             * _.isDate(new Date);
             * // => true
             *
             * _.isDate('Mon April 23 2012');
             * // => false
             */
            var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate

            /**
             * Checks if `value` is likely a DOM element.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
             * @example
             *
             * _.isElement(document.body);
             * // => true
             *
             * _.isElement('<body>');
             * // => false
             */
            function isElement(value) {
              return (
                isObjectLike(value) &&
                value.nodeType === 1 &&
                !isPlainObject(value)
              )
            }

            /**
             * Checks if `value` is an empty object, collection, map, or set.
             *
             * Objects are considered empty if they have no own enumerable string keyed
             * properties.
             *
             * Array-like values such as `arguments` objects, arrays, buffers, strings, or
             * jQuery-like collections are considered empty if they have a `length` of `0`.
             * Similarly, maps and sets are considered empty if they have a `size` of `0`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is empty, else `false`.
             * @example
             *
             * _.isEmpty(null);
             * // => true
             *
             * _.isEmpty(true);
             * // => true
             *
             * _.isEmpty(1);
             * // => true
             *
             * _.isEmpty([1, 2, 3]);
             * // => false
             *
             * _.isEmpty({ 'a': 1 });
             * // => false
             */
            function isEmpty(value) {
              if (value == null) {
                return true
              }
              if (
                isArrayLike(value) &&
                (isArray(value) ||
                  typeof value == 'string' ||
                  typeof value.splice == 'function' ||
                  isBuffer(value) ||
                  isTypedArray(value) ||
                  isArguments(value))
              ) {
                return !value.length
              }
              var tag = getTag(value)
              if (tag == mapTag || tag == setTag) {
                return !value.size
              }
              if (isPrototype(value)) {
                return !baseKeys(value).length
              }
              for (var key in value) {
                if (hasOwnProperty.call(value, key)) {
                  return false
                }
              }
              return true
            }

            /**
             * Performs a deep comparison between two values to determine if they are
             * equivalent.
             *
             * **Note:** This method supports comparing arrays, array buffers, booleans,
             * date objects, error objects, maps, numbers, `Object` objects, regexes,
             * sets, strings, symbols, and typed arrays. `Object` objects are compared
             * by their own, not inherited, enumerable properties. Functions and DOM
             * nodes are compared by strict equality, i.e. `===`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             * @example
             *
             * var object = { 'a': 1 };
             * var other = { 'a': 1 };
             *
             * _.isEqual(object, other);
             * // => true
             *
             * object === other;
             * // => false
             */
            function isEqual(value, other) {
              return baseIsEqual(value, other)
            }

            /**
             * This method is like `_.isEqual` except that it accepts `customizer` which
             * is invoked to compare values. If `customizer` returns `undefined`, comparisons
             * are handled by the method instead. The `customizer` is invoked with up to
             * six arguments: (objValue, othValue [, index|key, object, other, stack]).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @param {Function} [customizer] The function to customize comparisons.
             * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
             * @example
             *
             * function isGreeting(value) {
             *   return /^h(?:i|ello)$/.test(value);
             * }
             *
             * function customizer(objValue, othValue) {
             *   if (isGreeting(objValue) && isGreeting(othValue)) {
             *     return true;
             *   }
             * }
             *
             * var array = ['hello', 'goodbye'];
             * var other = ['hi', 'goodbye'];
             *
             * _.isEqualWith(array, other, customizer);
             * // => true
             */
            function isEqualWith(value, other, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              var result = customizer ? customizer(value, other) : undefined
              return result === undefined
                ? baseIsEqual(value, other, undefined, customizer)
                : !!result
            }

            /**
             * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
             * `SyntaxError`, `TypeError`, or `URIError` object.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
             * @example
             *
             * _.isError(new Error);
             * // => true
             *
             * _.isError(Error);
             * // => false
             */
            function isError(value) {
              if (!isObjectLike(value)) {
                return false
              }
              var tag = baseGetTag(value)
              return (
                tag == errorTag ||
                tag == domExcTag ||
                (typeof value.message == 'string' &&
                  typeof value.name == 'string' &&
                  !isPlainObject(value))
              )
            }

            /**
             * Checks if `value` is a finite primitive number.
             *
             * **Note:** This method is based on
             * [`Number.isFinite`](https://mdn.io/Number/isFinite).
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
             * @example
             *
             * _.isFinite(3);
             * // => true
             *
             * _.isFinite(Number.MIN_VALUE);
             * // => true
             *
             * _.isFinite(Infinity);
             * // => false
             *
             * _.isFinite('3');
             * // => false
             */
            function isFinite(value) {
              return typeof value == 'number' && nativeIsFinite(value)
            }

            /**
             * Checks if `value` is classified as a `Function` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a function, else `false`.
             * @example
             *
             * _.isFunction(_);
             * // => true
             *
             * _.isFunction(/abc/);
             * // => false
             */
            function isFunction(value) {
              if (!isObject(value)) {
                return false
              }
              // The use of `Object#toString` avoids issues with the `typeof` operator
              // in Safari 9 which returns 'object' for typed arrays and other constructors.
              var tag = baseGetTag(value)
              return (
                tag == funcTag ||
                tag == genTag ||
                tag == asyncTag ||
                tag == proxyTag
              )
            }

            /**
             * Checks if `value` is an integer.
             *
             * **Note:** This method is based on
             * [`Number.isInteger`](https://mdn.io/Number/isInteger).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
             * @example
             *
             * _.isInteger(3);
             * // => true
             *
             * _.isInteger(Number.MIN_VALUE);
             * // => false
             *
             * _.isInteger(Infinity);
             * // => false
             *
             * _.isInteger('3');
             * // => false
             */
            function isInteger(value) {
              return typeof value == 'number' && value == toInteger(value)
            }

            /**
             * Checks if `value` is a valid array-like length.
             *
             * **Note:** This method is loosely based on
             * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
             * @example
             *
             * _.isLength(3);
             * // => true
             *
             * _.isLength(Number.MIN_VALUE);
             * // => false
             *
             * _.isLength(Infinity);
             * // => false
             *
             * _.isLength('3');
             * // => false
             */
            function isLength(value) {
              return (
                typeof value == 'number' &&
                value > -1 &&
                value % 1 == 0 &&
                value <= MAX_SAFE_INTEGER
              )
            }

            /**
             * Checks if `value` is the
             * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
             * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is an object, else `false`.
             * @example
             *
             * _.isObject({});
             * // => true
             *
             * _.isObject([1, 2, 3]);
             * // => true
             *
             * _.isObject(_.noop);
             * // => true
             *
             * _.isObject(null);
             * // => false
             */
            function isObject(value) {
              var type = typeof value
              return value != null && (type == 'object' || type == 'function')
            }

            /**
             * Checks if `value` is object-like. A value is object-like if it's not `null`
             * and has a `typeof` result of "object".
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
             * @example
             *
             * _.isObjectLike({});
             * // => true
             *
             * _.isObjectLike([1, 2, 3]);
             * // => true
             *
             * _.isObjectLike(_.noop);
             * // => false
             *
             * _.isObjectLike(null);
             * // => false
             */
            function isObjectLike(value) {
              return value != null && typeof value == 'object'
            }

            /**
             * Checks if `value` is classified as a `Map` object.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a map, else `false`.
             * @example
             *
             * _.isMap(new Map);
             * // => true
             *
             * _.isMap(new WeakMap);
             * // => false
             */
            var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap

            /**
             * Performs a partial deep comparison between `object` and `source` to
             * determine if `object` contains equivalent property values.
             *
             * **Note:** This method is equivalent to `_.matches` when `source` is
             * partially applied.
             *
             * Partial comparisons will match empty array and empty object `source`
             * values against any array or object value, respectively. See `_.isEqual`
             * for a list of supported value comparisons.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property values to match.
             * @returns {boolean} Returns `true` if `object` is a match, else `false`.
             * @example
             *
             * var object = { 'a': 1, 'b': 2 };
             *
             * _.isMatch(object, { 'b': 2 });
             * // => true
             *
             * _.isMatch(object, { 'b': 1 });
             * // => false
             */
            function isMatch(object, source) {
              return (
                object === source ||
                baseIsMatch(object, source, getMatchData(source))
              )
            }

            /**
             * This method is like `_.isMatch` except that it accepts `customizer` which
             * is invoked to compare values. If `customizer` returns `undefined`, comparisons
             * are handled by the method instead. The `customizer` is invoked with five
             * arguments: (objValue, srcValue, index|key, object, source).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {Object} object The object to inspect.
             * @param {Object} source The object of property values to match.
             * @param {Function} [customizer] The function to customize comparisons.
             * @returns {boolean} Returns `true` if `object` is a match, else `false`.
             * @example
             *
             * function isGreeting(value) {
             *   return /^h(?:i|ello)$/.test(value);
             * }
             *
             * function customizer(objValue, srcValue) {
             *   if (isGreeting(objValue) && isGreeting(srcValue)) {
             *     return true;
             *   }
             * }
             *
             * var object = { 'greeting': 'hello' };
             * var source = { 'greeting': 'hi' };
             *
             * _.isMatchWith(object, source, customizer);
             * // => true
             */
            function isMatchWith(object, source, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              return baseIsMatch(
                object,
                source,
                getMatchData(source),
                customizer
              )
            }

            /**
             * Checks if `value` is `NaN`.
             *
             * **Note:** This method is based on
             * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
             * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
             * `undefined` and other non-number values.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
             * @example
             *
             * _.isNaN(NaN);
             * // => true
             *
             * _.isNaN(new Number(NaN));
             * // => true
             *
             * isNaN(undefined);
             * // => true
             *
             * _.isNaN(undefined);
             * // => false
             */
            function isNaN(value) {
              // An `NaN` primitive is the only value that is not equal to itself.
              // Perform the `toStringTag` check first to avoid errors with some
              // ActiveX objects in IE.
              return isNumber(value) && value != +value
            }

            /**
             * Checks if `value` is a pristine native function.
             *
             * **Note:** This method can't reliably detect native functions in the presence
             * of the core-js package because core-js circumvents this kind of detection.
             * Despite multiple requests, the core-js maintainer has made it clear: any
             * attempt to fix the detection will be obstructed. As a result, we're left
             * with little choice but to throw an error. Unfortunately, this also affects
             * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
             * which rely on core-js.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a native function,
             *  else `false`.
             * @example
             *
             * _.isNative(Array.prototype.push);
             * // => true
             *
             * _.isNative(_);
             * // => false
             */
            function isNative(value) {
              if (isMaskable(value)) {
                throw new Error(CORE_ERROR_TEXT)
              }
              return baseIsNative(value)
            }

            /**
             * Checks if `value` is `null`.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
             * @example
             *
             * _.isNull(null);
             * // => true
             *
             * _.isNull(void 0);
             * // => false
             */
            function isNull(value) {
              return value === null
            }

            /**
             * Checks if `value` is `null` or `undefined`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
             * @example
             *
             * _.isNil(null);
             * // => true
             *
             * _.isNil(void 0);
             * // => true
             *
             * _.isNil(NaN);
             * // => false
             */
            function isNil(value) {
              return value == null
            }

            /**
             * Checks if `value` is classified as a `Number` primitive or object.
             *
             * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
             * classified as numbers, use the `_.isFinite` method.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a number, else `false`.
             * @example
             *
             * _.isNumber(3);
             * // => true
             *
             * _.isNumber(Number.MIN_VALUE);
             * // => true
             *
             * _.isNumber(Infinity);
             * // => true
             *
             * _.isNumber('3');
             * // => false
             */
            function isNumber(value) {
              return (
                typeof value == 'number' ||
                (isObjectLike(value) && baseGetTag(value) == numberTag)
              )
            }

            /**
             * Checks if `value` is a plain object, that is, an object created by the
             * `Object` constructor or one with a `[[Prototype]]` of `null`.
             *
             * @static
             * @memberOf _
             * @since 0.8.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             * }
             *
             * _.isPlainObject(new Foo);
             * // => false
             *
             * _.isPlainObject([1, 2, 3]);
             * // => false
             *
             * _.isPlainObject({ 'x': 0, 'y': 0 });
             * // => true
             *
             * _.isPlainObject(Object.create(null));
             * // => true
             */
            function isPlainObject(value) {
              if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
                return false
              }
              var proto = getPrototype(value)
              if (proto === null) {
                return true
              }
              var Ctor =
                hasOwnProperty.call(proto, 'constructor') && proto.constructor
              return (
                typeof Ctor == 'function' &&
                Ctor instanceof Ctor &&
                funcToString.call(Ctor) == objectCtorString
              )
            }

            /**
             * Checks if `value` is classified as a `RegExp` object.
             *
             * @static
             * @memberOf _
             * @since 0.1.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
             * @example
             *
             * _.isRegExp(/abc/);
             * // => true
             *
             * _.isRegExp('/abc/');
             * // => false
             */
            var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp

            /**
             * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
             * double precision number which isn't the result of a rounded unsafe integer.
             *
             * **Note:** This method is based on
             * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
             * @example
             *
             * _.isSafeInteger(3);
             * // => true
             *
             * _.isSafeInteger(Number.MIN_VALUE);
             * // => false
             *
             * _.isSafeInteger(Infinity);
             * // => false
             *
             * _.isSafeInteger('3');
             * // => false
             */
            function isSafeInteger(value) {
              return (
                isInteger(value) &&
                value >= -MAX_SAFE_INTEGER &&
                value <= MAX_SAFE_INTEGER
              )
            }

            /**
             * Checks if `value` is classified as a `Set` object.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a set, else `false`.
             * @example
             *
             * _.isSet(new Set);
             * // => true
             *
             * _.isSet(new WeakSet);
             * // => false
             */
            var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet

            /**
             * Checks if `value` is classified as a `String` primitive or object.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a string, else `false`.
             * @example
             *
             * _.isString('abc');
             * // => true
             *
             * _.isString(1);
             * // => false
             */
            function isString(value) {
              return (
                typeof value == 'string' ||
                (!isArray(value) &&
                  isObjectLike(value) &&
                  baseGetTag(value) == stringTag)
              )
            }

            /**
             * Checks if `value` is classified as a `Symbol` primitive or object.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
             * @example
             *
             * _.isSymbol(Symbol.iterator);
             * // => true
             *
             * _.isSymbol('abc');
             * // => false
             */
            function isSymbol(value) {
              return (
                typeof value == 'symbol' ||
                (isObjectLike(value) && baseGetTag(value) == symbolTag)
              )
            }

            /**
             * Checks if `value` is classified as a typed array.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
             * @example
             *
             * _.isTypedArray(new Uint8Array);
             * // => true
             *
             * _.isTypedArray([]);
             * // => false
             */
            var isTypedArray = nodeIsTypedArray
              ? baseUnary(nodeIsTypedArray)
              : baseIsTypedArray

            /**
             * Checks if `value` is `undefined`.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
             * @example
             *
             * _.isUndefined(void 0);
             * // => true
             *
             * _.isUndefined(null);
             * // => false
             */
            function isUndefined(value) {
              return value === undefined
            }

            /**
             * Checks if `value` is classified as a `WeakMap` object.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
             * @example
             *
             * _.isWeakMap(new WeakMap);
             * // => true
             *
             * _.isWeakMap(new Map);
             * // => false
             */
            function isWeakMap(value) {
              return isObjectLike(value) && getTag(value) == weakMapTag
            }

            /**
             * Checks if `value` is classified as a `WeakSet` object.
             *
             * @static
             * @memberOf _
             * @since 4.3.0
             * @category Lang
             * @param {*} value The value to check.
             * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
             * @example
             *
             * _.isWeakSet(new WeakSet);
             * // => true
             *
             * _.isWeakSet(new Set);
             * // => false
             */
            function isWeakSet(value) {
              return isObjectLike(value) && baseGetTag(value) == weakSetTag
            }

            /**
             * Checks if `value` is less than `other`.
             *
             * @static
             * @memberOf _
             * @since 3.9.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is less than `other`,
             *  else `false`.
             * @see _.gt
             * @example
             *
             * _.lt(1, 3);
             * // => true
             *
             * _.lt(3, 3);
             * // => false
             *
             * _.lt(3, 1);
             * // => false
             */
            var lt = createRelationalOperation(baseLt)

            /**
             * Checks if `value` is less than or equal to `other`.
             *
             * @static
             * @memberOf _
             * @since 3.9.0
             * @category Lang
             * @param {*} value The value to compare.
             * @param {*} other The other value to compare.
             * @returns {boolean} Returns `true` if `value` is less than or equal to
             *  `other`, else `false`.
             * @see _.gte
             * @example
             *
             * _.lte(1, 3);
             * // => true
             *
             * _.lte(3, 3);
             * // => true
             *
             * _.lte(3, 1);
             * // => false
             */
            var lte = createRelationalOperation(function (value, other) {
              return value <= other
            })

            /**
             * Converts `value` to an array.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {Array} Returns the converted array.
             * @example
             *
             * _.toArray({ 'a': 1, 'b': 2 });
             * // => [1, 2]
             *
             * _.toArray('abc');
             * // => ['a', 'b', 'c']
             *
             * _.toArray(1);
             * // => []
             *
             * _.toArray(null);
             * // => []
             */
            function toArray(value) {
              if (!value) {
                return []
              }
              if (isArrayLike(value)) {
                return isString(value) ? stringToArray(value) : copyArray(value)
              }
              if (symIterator && value[symIterator]) {
                return iteratorToArray(value[symIterator]())
              }
              var tag = getTag(value),
                func =
                  tag == mapTag
                    ? mapToArray
                    : tag == setTag
                    ? setToArray
                    : values

              return func(value)
            }

            /**
             * Converts `value` to a finite number.
             *
             * @static
             * @memberOf _
             * @since 4.12.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted number.
             * @example
             *
             * _.toFinite(3.2);
             * // => 3.2
             *
             * _.toFinite(Number.MIN_VALUE);
             * // => 5e-324
             *
             * _.toFinite(Infinity);
             * // => 1.7976931348623157e+308
             *
             * _.toFinite('3.2');
             * // => 3.2
             */
            function toFinite(value) {
              if (!value) {
                return value === 0 ? value : 0
              }
              value = toNumber(value)
              if (value === INFINITY || value === -INFINITY) {
                var sign = value < 0 ? -1 : 1
                return sign * MAX_INTEGER
              }
              return value === value ? value : 0
            }

            /**
             * Converts `value` to an integer.
             *
             * **Note:** This method is loosely based on
             * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted integer.
             * @example
             *
             * _.toInteger(3.2);
             * // => 3
             *
             * _.toInteger(Number.MIN_VALUE);
             * // => 0
             *
             * _.toInteger(Infinity);
             * // => 1.7976931348623157e+308
             *
             * _.toInteger('3.2');
             * // => 3
             */
            function toInteger(value) {
              var result = toFinite(value),
                remainder = result % 1

              return result === result
                ? remainder
                  ? result - remainder
                  : result
                : 0
            }

            /**
             * Converts `value` to an integer suitable for use as the length of an
             * array-like object.
             *
             * **Note:** This method is based on
             * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted integer.
             * @example
             *
             * _.toLength(3.2);
             * // => 3
             *
             * _.toLength(Number.MIN_VALUE);
             * // => 0
             *
             * _.toLength(Infinity);
             * // => 4294967295
             *
             * _.toLength('3.2');
             * // => 3
             */
            function toLength(value) {
              return value
                ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH)
                : 0
            }

            /**
             * Converts `value` to a number.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to process.
             * @returns {number} Returns the number.
             * @example
             *
             * _.toNumber(3.2);
             * // => 3.2
             *
             * _.toNumber(Number.MIN_VALUE);
             * // => 5e-324
             *
             * _.toNumber(Infinity);
             * // => Infinity
             *
             * _.toNumber('3.2');
             * // => 3.2
             */
            function toNumber(value) {
              if (typeof value == 'number') {
                return value
              }
              if (isSymbol(value)) {
                return NAN
              }
              if (isObject(value)) {
                var other =
                  typeof value.valueOf == 'function' ? value.valueOf() : value
                value = isObject(other) ? other + '' : other
              }
              if (typeof value != 'string') {
                return value === 0 ? value : +value
              }
              value = baseTrim(value)
              var isBinary = reIsBinary.test(value)
              return isBinary || reIsOctal.test(value)
                ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
                : reIsBadHex.test(value)
                ? NAN
                : +value
            }

            /**
             * Converts `value` to a plain object flattening inherited enumerable string
             * keyed properties of `value` to own properties of the plain object.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {Object} Returns the converted plain object.
             * @example
             *
             * function Foo() {
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.assign({ 'a': 1 }, new Foo);
             * // => { 'a': 1, 'b': 2 }
             *
             * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
             * // => { 'a': 1, 'b': 2, 'c': 3 }
             */
            function toPlainObject(value) {
              return copyObject(value, keysIn(value))
            }

            /**
             * Converts `value` to a safe integer. A safe integer can be compared and
             * represented correctly.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {number} Returns the converted integer.
             * @example
             *
             * _.toSafeInteger(3.2);
             * // => 3
             *
             * _.toSafeInteger(Number.MIN_VALUE);
             * // => 0
             *
             * _.toSafeInteger(Infinity);
             * // => 9007199254740991
             *
             * _.toSafeInteger('3.2');
             * // => 3
             */
            function toSafeInteger(value) {
              return value
                ? baseClamp(
                    toInteger(value),
                    -MAX_SAFE_INTEGER,
                    MAX_SAFE_INTEGER
                  )
                : value === 0
                ? value
                : 0
            }

            /**
             * Converts `value` to a string. An empty string is returned for `null`
             * and `undefined` values. The sign of `-0` is preserved.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Lang
             * @param {*} value The value to convert.
             * @returns {string} Returns the converted string.
             * @example
             *
             * _.toString(null);
             * // => ''
             *
             * _.toString(-0);
             * // => '-0'
             *
             * _.toString([1, 2, 3]);
             * // => '1,2,3'
             */
            function toString(value) {
              return value == null ? '' : baseToString(value)
            }

            /*------------------------------------------------------------------------*/

            /**
             * Assigns own enumerable string keyed properties of source objects to the
             * destination object. Source objects are applied from left to right.
             * Subsequent sources overwrite property assignments of previous sources.
             *
             * **Note:** This method mutates `object` and is loosely based on
             * [`Object.assign`](https://mdn.io/Object/assign).
             *
             * @static
             * @memberOf _
             * @since 0.10.0
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} [sources] The source objects.
             * @returns {Object} Returns `object`.
             * @see _.assignIn
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             * }
             *
             * function Bar() {
             *   this.c = 3;
             * }
             *
             * Foo.prototype.b = 2;
             * Bar.prototype.d = 4;
             *
             * _.assign({ 'a': 0 }, new Foo, new Bar);
             * // => { 'a': 1, 'c': 3 }
             */
            var assign = createAssigner(function (object, source) {
              if (isPrototype(source) || isArrayLike(source)) {
                copyObject(source, keys(source), object)
                return
              }
              for (var key in source) {
                if (hasOwnProperty.call(source, key)) {
                  assignValue(object, key, source[key])
                }
              }
            })

            /**
             * This method is like `_.assign` except that it iterates over own and
             * inherited source properties.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @alias extend
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} [sources] The source objects.
             * @returns {Object} Returns `object`.
             * @see _.assign
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             * }
             *
             * function Bar() {
             *   this.c = 3;
             * }
             *
             * Foo.prototype.b = 2;
             * Bar.prototype.d = 4;
             *
             * _.assignIn({ 'a': 0 }, new Foo, new Bar);
             * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
             */
            var assignIn = createAssigner(function (object, source) {
              copyObject(source, keysIn(source), object)
            })

            /**
             * This method is like `_.assignIn` except that it accepts `customizer`
             * which is invoked to produce the assigned values. If `customizer` returns
             * `undefined`, assignment is handled by the method instead. The `customizer`
             * is invoked with five arguments: (objValue, srcValue, key, object, source).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @alias extendWith
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} sources The source objects.
             * @param {Function} [customizer] The function to customize assigned values.
             * @returns {Object} Returns `object`.
             * @see _.assignWith
             * @example
             *
             * function customizer(objValue, srcValue) {
             *   return _.isUndefined(objValue) ? srcValue : objValue;
             * }
             *
             * var defaults = _.partialRight(_.assignInWith, customizer);
             *
             * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
             * // => { 'a': 1, 'b': 2 }
             */
            var assignInWith = createAssigner(function (
              object,
              source,
              srcIndex,
              customizer
            ) {
              copyObject(source, keysIn(source), object, customizer)
            })

            /**
             * This method is like `_.assign` except that it accepts `customizer`
             * which is invoked to produce the assigned values. If `customizer` returns
             * `undefined`, assignment is handled by the method instead. The `customizer`
             * is invoked with five arguments: (objValue, srcValue, key, object, source).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} sources The source objects.
             * @param {Function} [customizer] The function to customize assigned values.
             * @returns {Object} Returns `object`.
             * @see _.assignInWith
             * @example
             *
             * function customizer(objValue, srcValue) {
             *   return _.isUndefined(objValue) ? srcValue : objValue;
             * }
             *
             * var defaults = _.partialRight(_.assignWith, customizer);
             *
             * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
             * // => { 'a': 1, 'b': 2 }
             */
            var assignWith = createAssigner(function (
              object,
              source,
              srcIndex,
              customizer
            ) {
              copyObject(source, keys(source), object, customizer)
            })

            /**
             * Creates an array of values corresponding to `paths` of `object`.
             *
             * @static
             * @memberOf _
             * @since 1.0.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {...(string|string[])} [paths] The property paths to pick.
             * @returns {Array} Returns the picked values.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
             *
             * _.at(object, ['a[0].b.c', 'a[1]']);
             * // => [3, 4]
             */
            var at = flatRest(baseAt)

            /**
             * Creates an object that inherits from the `prototype` object. If a
             * `properties` object is given, its own enumerable string keyed properties
             * are assigned to the created object.
             *
             * @static
             * @memberOf _
             * @since 2.3.0
             * @category Object
             * @param {Object} prototype The object to inherit from.
             * @param {Object} [properties] The properties to assign to the object.
             * @returns {Object} Returns the new object.
             * @example
             *
             * function Shape() {
             *   this.x = 0;
             *   this.y = 0;
             * }
             *
             * function Circle() {
             *   Shape.call(this);
             * }
             *
             * Circle.prototype = _.create(Shape.prototype, {
             *   'constructor': Circle
             * });
             *
             * var circle = new Circle;
             * circle instanceof Circle;
             * // => true
             *
             * circle instanceof Shape;
             * // => true
             */
            function create(prototype, properties) {
              var result = baseCreate(prototype)
              return properties == null
                ? result
                : baseAssign(result, properties)
            }

            /**
             * Assigns own and inherited enumerable string keyed properties of source
             * objects to the destination object for all destination properties that
             * resolve to `undefined`. Source objects are applied from left to right.
             * Once a property is set, additional values of the same property are ignored.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} [sources] The source objects.
             * @returns {Object} Returns `object`.
             * @see _.defaultsDeep
             * @example
             *
             * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
             * // => { 'a': 1, 'b': 2 }
             */
            var defaults = baseRest(function (object, sources) {
              object = Object(object)

              var index = -1
              var length = sources.length
              var guard = length > 2 ? sources[2] : undefined

              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                length = 1
              }

              while (++index < length) {
                var source = sources[index]
                var props = keysIn(source)
                var propsIndex = -1
                var propsLength = props.length

                while (++propsIndex < propsLength) {
                  var key = props[propsIndex]
                  var value = object[key]

                  if (
                    value === undefined ||
                    (eq(value, objectProto[key]) &&
                      !hasOwnProperty.call(object, key))
                  ) {
                    object[key] = source[key]
                  }
                }
              }

              return object
            })

            /**
             * This method is like `_.defaults` except that it recursively assigns
             * default properties.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 3.10.0
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} [sources] The source objects.
             * @returns {Object} Returns `object`.
             * @see _.defaults
             * @example
             *
             * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
             * // => { 'a': { 'b': 2, 'c': 3 } }
             */
            var defaultsDeep = baseRest(function (args) {
              args.push(undefined, customDefaultsMerge)
              return apply(mergeWith, undefined, args)
            })

            /**
             * This method is like `_.find` except that it returns the key of the first
             * element `predicate` returns truthy for instead of the element itself.
             *
             * @static
             * @memberOf _
             * @since 1.1.0
             * @category Object
             * @param {Object} object The object to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {string|undefined} Returns the key of the matched element,
             *  else `undefined`.
             * @example
             *
             * var users = {
             *   'barney':  { 'age': 36, 'active': true },
             *   'fred':    { 'age': 40, 'active': false },
             *   'pebbles': { 'age': 1,  'active': true }
             * };
             *
             * _.findKey(users, function(o) { return o.age < 40; });
             * // => 'barney' (iteration order is not guaranteed)
             *
             * // The `_.matches` iteratee shorthand.
             * _.findKey(users, { 'age': 1, 'active': true });
             * // => 'pebbles'
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.findKey(users, ['active', false]);
             * // => 'fred'
             *
             * // The `_.property` iteratee shorthand.
             * _.findKey(users, 'active');
             * // => 'barney'
             */
            function findKey(object, predicate) {
              return baseFindKey(object, getIteratee(predicate, 3), baseForOwn)
            }

            /**
             * This method is like `_.findKey` except that it iterates over elements of
             * a collection in the opposite order.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Object
             * @param {Object} object The object to inspect.
             * @param {Function} [predicate=_.identity] The function invoked per iteration.
             * @returns {string|undefined} Returns the key of the matched element,
             *  else `undefined`.
             * @example
             *
             * var users = {
             *   'barney':  { 'age': 36, 'active': true },
             *   'fred':    { 'age': 40, 'active': false },
             *   'pebbles': { 'age': 1,  'active': true }
             * };
             *
             * _.findLastKey(users, function(o) { return o.age < 40; });
             * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
             *
             * // The `_.matches` iteratee shorthand.
             * _.findLastKey(users, { 'age': 36, 'active': true });
             * // => 'barney'
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.findLastKey(users, ['active', false]);
             * // => 'fred'
             *
             * // The `_.property` iteratee shorthand.
             * _.findLastKey(users, 'active');
             * // => 'pebbles'
             */
            function findLastKey(object, predicate) {
              return baseFindKey(
                object,
                getIteratee(predicate, 3),
                baseForOwnRight
              )
            }

            /**
             * Iterates over own and inherited enumerable string keyed properties of an
             * object and invokes `iteratee` for each property. The iteratee is invoked
             * with three arguments: (value, key, object). Iteratee functions may exit
             * iteration early by explicitly returning `false`.
             *
             * @static
             * @memberOf _
             * @since 0.3.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns `object`.
             * @see _.forInRight
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.forIn(new Foo, function(value, key) {
             *   console.log(key);
             * });
             * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
             */
            function forIn(object, iteratee) {
              return object == null
                ? object
                : baseFor(object, getIteratee(iteratee, 3), keysIn)
            }

            /**
             * This method is like `_.forIn` except that it iterates over properties of
             * `object` in the opposite order.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns `object`.
             * @see _.forIn
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.forInRight(new Foo, function(value, key) {
             *   console.log(key);
             * });
             * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
             */
            function forInRight(object, iteratee) {
              return object == null
                ? object
                : baseForRight(object, getIteratee(iteratee, 3), keysIn)
            }

            /**
             * Iterates over own enumerable string keyed properties of an object and
             * invokes `iteratee` for each property. The iteratee is invoked with three
             * arguments: (value, key, object). Iteratee functions may exit iteration
             * early by explicitly returning `false`.
             *
             * @static
             * @memberOf _
             * @since 0.3.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns `object`.
             * @see _.forOwnRight
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.forOwn(new Foo, function(value, key) {
             *   console.log(key);
             * });
             * // => Logs 'a' then 'b' (iteration order is not guaranteed).
             */
            function forOwn(object, iteratee) {
              return object && baseForOwn(object, getIteratee(iteratee, 3))
            }

            /**
             * This method is like `_.forOwn` except that it iterates over properties of
             * `object` in the opposite order.
             *
             * @static
             * @memberOf _
             * @since 2.0.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns `object`.
             * @see _.forOwn
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.forOwnRight(new Foo, function(value, key) {
             *   console.log(key);
             * });
             * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
             */
            function forOwnRight(object, iteratee) {
              return object && baseForOwnRight(object, getIteratee(iteratee, 3))
            }

            /**
             * Creates an array of function property names from own enumerable properties
             * of `object`.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to inspect.
             * @returns {Array} Returns the function names.
             * @see _.functionsIn
             * @example
             *
             * function Foo() {
             *   this.a = _.constant('a');
             *   this.b = _.constant('b');
             * }
             *
             * Foo.prototype.c = _.constant('c');
             *
             * _.functions(new Foo);
             * // => ['a', 'b']
             */
            function functions(object) {
              return object == null ? [] : baseFunctions(object, keys(object))
            }

            /**
             * Creates an array of function property names from own and inherited
             * enumerable properties of `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to inspect.
             * @returns {Array} Returns the function names.
             * @see _.functions
             * @example
             *
             * function Foo() {
             *   this.a = _.constant('a');
             *   this.b = _.constant('b');
             * }
             *
             * Foo.prototype.c = _.constant('c');
             *
             * _.functionsIn(new Foo);
             * // => ['a', 'b', 'c']
             */
            function functionsIn(object) {
              return object == null ? [] : baseFunctions(object, keysIn(object))
            }

            /**
             * Gets the value at `path` of `object`. If the resolved value is
             * `undefined`, the `defaultValue` is returned in its place.
             *
             * @static
             * @memberOf _
             * @since 3.7.0
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the property to get.
             * @param {*} [defaultValue] The value returned for `undefined` resolved values.
             * @returns {*} Returns the resolved value.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }] };
             *
             * _.get(object, 'a[0].b.c');
             * // => 3
             *
             * _.get(object, ['a', '0', 'b', 'c']);
             * // => 3
             *
             * _.get(object, 'a.b.c', 'default');
             * // => 'default'
             */
            function get(object, path, defaultValue) {
              var result = object == null ? undefined : baseGet(object, path)
              return result === undefined ? defaultValue : result
            }

            /**
             * Checks if `path` is a direct property of `object`.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path to check.
             * @returns {boolean} Returns `true` if `path` exists, else `false`.
             * @example
             *
             * var object = { 'a': { 'b': 2 } };
             * var other = _.create({ 'a': _.create({ 'b': 2 }) });
             *
             * _.has(object, 'a');
             * // => true
             *
             * _.has(object, 'a.b');
             * // => true
             *
             * _.has(object, ['a', 'b']);
             * // => true
             *
             * _.has(other, 'a');
             * // => false
             */
            function has(object, path) {
              return object != null && hasPath(object, path, baseHas)
            }

            /**
             * Checks if `path` is a direct or inherited property of `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path to check.
             * @returns {boolean} Returns `true` if `path` exists, else `false`.
             * @example
             *
             * var object = _.create({ 'a': _.create({ 'b': 2 }) });
             *
             * _.hasIn(object, 'a');
             * // => true
             *
             * _.hasIn(object, 'a.b');
             * // => true
             *
             * _.hasIn(object, ['a', 'b']);
             * // => true
             *
             * _.hasIn(object, 'b');
             * // => false
             */
            function hasIn(object, path) {
              return object != null && hasPath(object, path, baseHasIn)
            }

            /**
             * Creates an object composed of the inverted keys and values of `object`.
             * If `object` contains duplicate values, subsequent values overwrite
             * property assignments of previous values.
             *
             * @static
             * @memberOf _
             * @since 0.7.0
             * @category Object
             * @param {Object} object The object to invert.
             * @returns {Object} Returns the new inverted object.
             * @example
             *
             * var object = { 'a': 1, 'b': 2, 'c': 1 };
             *
             * _.invert(object);
             * // => { '1': 'c', '2': 'b' }
             */
            var invert = createInverter(function (result, value, key) {
              if (value != null && typeof value.toString != 'function') {
                value = nativeObjectToString.call(value)
              }

              result[value] = key
            }, constant(identity))

            /**
             * This method is like `_.invert` except that the inverted object is generated
             * from the results of running each element of `object` thru `iteratee`. The
             * corresponding inverted value of each inverted key is an array of keys
             * responsible for generating the inverted value. The iteratee is invoked
             * with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.1.0
             * @category Object
             * @param {Object} object The object to invert.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {Object} Returns the new inverted object.
             * @example
             *
             * var object = { 'a': 1, 'b': 2, 'c': 1 };
             *
             * _.invertBy(object);
             * // => { '1': ['a', 'c'], '2': ['b'] }
             *
             * _.invertBy(object, function(value) {
             *   return 'group' + value;
             * });
             * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
             */
            var invertBy = createInverter(function (result, value, key) {
              if (value != null && typeof value.toString != 'function') {
                value = nativeObjectToString.call(value)
              }

              if (hasOwnProperty.call(result, value)) {
                result[value].push(key)
              } else {
                result[value] = [key]
              }
            }, getIteratee)

            /**
             * Invokes the method at `path` of `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the method to invoke.
             * @param {...*} [args] The arguments to invoke the method with.
             * @returns {*} Returns the result of the invoked method.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
             *
             * _.invoke(object, 'a[0].b.c.slice', 1, 3);
             * // => [2, 3]
             */
            var invoke = baseRest(baseInvoke)

            /**
             * Creates an array of the own enumerable property names of `object`.
             *
             * **Note:** Non-object values are coerced to objects. See the
             * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
             * for more details.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.keys(new Foo);
             * // => ['a', 'b'] (iteration order is not guaranteed)
             *
             * _.keys('hi');
             * // => ['0', '1']
             */
            function keys(object) {
              return isArrayLike(object)
                ? arrayLikeKeys(object)
                : baseKeys(object)
            }

            /**
             * Creates an array of the own and inherited enumerable property names of `object`.
             *
             * **Note:** Non-object values are coerced to objects.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property names.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.keysIn(new Foo);
             * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
             */
            function keysIn(object) {
              return isArrayLike(object)
                ? arrayLikeKeys(object, true)
                : baseKeysIn(object)
            }

            /**
             * The opposite of `_.mapValues`; this method creates an object with the
             * same values as `object` and keys generated by running each own enumerable
             * string keyed property of `object` thru `iteratee`. The iteratee is invoked
             * with three arguments: (value, key, object).
             *
             * @static
             * @memberOf _
             * @since 3.8.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns the new mapped object.
             * @see _.mapValues
             * @example
             *
             * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
             *   return key + value;
             * });
             * // => { 'a1': 1, 'b2': 2 }
             */
            function mapKeys(object, iteratee) {
              var result = {}
              iteratee = getIteratee(iteratee, 3)

              baseForOwn(object, function (value, key, object) {
                baseAssignValue(result, iteratee(value, key, object), value)
              })
              return result
            }

            /**
             * Creates an object with the same keys as `object` and values generated
             * by running each own enumerable string keyed property of `object` thru
             * `iteratee`. The iteratee is invoked with three arguments:
             * (value, key, object).
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Object} Returns the new mapped object.
             * @see _.mapKeys
             * @example
             *
             * var users = {
             *   'fred':    { 'user': 'fred',    'age': 40 },
             *   'pebbles': { 'user': 'pebbles', 'age': 1 }
             * };
             *
             * _.mapValues(users, function(o) { return o.age; });
             * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
             *
             * // The `_.property` iteratee shorthand.
             * _.mapValues(users, 'age');
             * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
             */
            function mapValues(object, iteratee) {
              var result = {}
              iteratee = getIteratee(iteratee, 3)

              baseForOwn(object, function (value, key, object) {
                baseAssignValue(result, key, iteratee(value, key, object))
              })
              return result
            }

            /**
             * This method is like `_.assign` except that it recursively merges own and
             * inherited enumerable string keyed properties of source objects into the
             * destination object. Source properties that resolve to `undefined` are
             * skipped if a destination value exists. Array and plain object properties
             * are merged recursively. Other objects and value types are overridden by
             * assignment. Source objects are applied from left to right. Subsequent
             * sources overwrite property assignments of previous sources.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 0.5.0
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} [sources] The source objects.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var object = {
             *   'a': [{ 'b': 2 }, { 'd': 4 }]
             * };
             *
             * var other = {
             *   'a': [{ 'c': 3 }, { 'e': 5 }]
             * };
             *
             * _.merge(object, other);
             * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
             */
            var merge = createAssigner(function (object, source, srcIndex) {
              baseMerge(object, source, srcIndex)
            })

            /**
             * This method is like `_.merge` except that it accepts `customizer` which
             * is invoked to produce the merged values of the destination and source
             * properties. If `customizer` returns `undefined`, merging is handled by the
             * method instead. The `customizer` is invoked with six arguments:
             * (objValue, srcValue, key, object, source, stack).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The destination object.
             * @param {...Object} sources The source objects.
             * @param {Function} customizer The function to customize assigned values.
             * @returns {Object} Returns `object`.
             * @example
             *
             * function customizer(objValue, srcValue) {
             *   if (_.isArray(objValue)) {
             *     return objValue.concat(srcValue);
             *   }
             * }
             *
             * var object = { 'a': [1], 'b': [2] };
             * var other = { 'a': [3], 'b': [4] };
             *
             * _.mergeWith(object, other, customizer);
             * // => { 'a': [1, 3], 'b': [2, 4] }
             */
            var mergeWith = createAssigner(function (
              object,
              source,
              srcIndex,
              customizer
            ) {
              baseMerge(object, source, srcIndex, customizer)
            })

            /**
             * The opposite of `_.pick`; this method creates an object composed of the
             * own and inherited enumerable property paths of `object` that are not omitted.
             *
             * **Note:** This method is considerably slower than `_.pick`.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The source object.
             * @param {...(string|string[])} [paths] The property paths to omit.
             * @returns {Object} Returns the new object.
             * @example
             *
             * var object = { 'a': 1, 'b': '2', 'c': 3 };
             *
             * _.omit(object, ['a', 'c']);
             * // => { 'b': '2' }
             */
            var omit = flatRest(function (object, paths) {
              var result = {}
              if (object == null) {
                return result
              }
              var isDeep = false
              paths = arrayMap(paths, function (path) {
                path = castPath(path, object)
                isDeep || (isDeep = path.length > 1)
                return path
              })
              copyObject(object, getAllKeysIn(object), result)
              if (isDeep) {
                result = baseClone(
                  result,
                  CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG,
                  customOmitClone
                )
              }
              var length = paths.length
              while (length--) {
                baseUnset(result, paths[length])
              }
              return result
            })

            /**
             * The opposite of `_.pickBy`; this method creates an object composed of
             * the own and inherited enumerable string keyed properties of `object` that
             * `predicate` doesn't return truthy for. The predicate is invoked with two
             * arguments: (value, key).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The source object.
             * @param {Function} [predicate=_.identity] The function invoked per property.
             * @returns {Object} Returns the new object.
             * @example
             *
             * var object = { 'a': 1, 'b': '2', 'c': 3 };
             *
             * _.omitBy(object, _.isNumber);
             * // => { 'b': '2' }
             */
            function omitBy(object, predicate) {
              return pickBy(object, negate(getIteratee(predicate)))
            }

            /**
             * Creates an object composed of the picked `object` properties.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The source object.
             * @param {...(string|string[])} [paths] The property paths to pick.
             * @returns {Object} Returns the new object.
             * @example
             *
             * var object = { 'a': 1, 'b': '2', 'c': 3 };
             *
             * _.pick(object, ['a', 'c']);
             * // => { 'a': 1, 'c': 3 }
             */
            var pick = flatRest(function (object, paths) {
              return object == null ? {} : basePick(object, paths)
            })

            /**
             * Creates an object composed of the `object` properties `predicate` returns
             * truthy for. The predicate is invoked with two arguments: (value, key).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The source object.
             * @param {Function} [predicate=_.identity] The function invoked per property.
             * @returns {Object} Returns the new object.
             * @example
             *
             * var object = { 'a': 1, 'b': '2', 'c': 3 };
             *
             * _.pickBy(object, _.isNumber);
             * // => { 'a': 1, 'c': 3 }
             */
            function pickBy(object, predicate) {
              if (object == null) {
                return {}
              }
              var props = arrayMap(getAllKeysIn(object), function (prop) {
                return [prop]
              })
              predicate = getIteratee(predicate)
              return basePickBy(object, props, function (value, path) {
                return predicate(value, path[0])
              })
            }

            /**
             * This method is like `_.get` except that if the resolved value is a
             * function it's invoked with the `this` binding of its parent object and
             * its result is returned.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to query.
             * @param {Array|string} path The path of the property to resolve.
             * @param {*} [defaultValue] The value returned for `undefined` resolved values.
             * @returns {*} Returns the resolved value.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
             *
             * _.result(object, 'a[0].b.c1');
             * // => 3
             *
             * _.result(object, 'a[0].b.c2');
             * // => 4
             *
             * _.result(object, 'a[0].b.c3', 'default');
             * // => 'default'
             *
             * _.result(object, 'a[0].b.c3', _.constant('default'));
             * // => 'default'
             */
            function result(object, path, defaultValue) {
              path = castPath(path, object)

              var index = -1,
                length = path.length

              // Ensure the loop is entered when path is empty.
              if (!length) {
                length = 1
                object = undefined
              }
              while (++index < length) {
                var value =
                  object == null ? undefined : object[toKey(path[index])]
                if (value === undefined) {
                  index = length
                  value = defaultValue
                }
                object = isFunction(value) ? value.call(object) : value
              }
              return object
            }

            /**
             * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
             * it's created. Arrays are created for missing index properties while objects
             * are created for all other missing properties. Use `_.setWith` to customize
             * `path` creation.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 3.7.0
             * @category Object
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to set.
             * @param {*} value The value to set.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }] };
             *
             * _.set(object, 'a[0].b.c', 4);
             * console.log(object.a[0].b.c);
             * // => 4
             *
             * _.set(object, ['x', '0', 'y', 'z'], 5);
             * console.log(object.x[0].y.z);
             * // => 5
             */
            function set(object, path, value) {
              return object == null ? object : baseSet(object, path, value)
            }

            /**
             * This method is like `_.set` except that it accepts `customizer` which is
             * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
             * path creation is handled by the method instead. The `customizer` is invoked
             * with three arguments: (nsValue, key, nsObject).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to set.
             * @param {*} value The value to set.
             * @param {Function} [customizer] The function to customize assigned values.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var object = {};
             *
             * _.setWith(object, '[0][1]', 'a', Object);
             * // => { '0': { '1': 'a' } }
             */
            function setWith(object, path, value, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              return object == null
                ? object
                : baseSet(object, path, value, customizer)
            }

            /**
             * Creates an array of own enumerable string keyed-value pairs for `object`
             * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
             * entries are returned.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @alias entries
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the key-value pairs.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.toPairs(new Foo);
             * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
             */
            var toPairs = createToPairs(keys)

            /**
             * Creates an array of own and inherited enumerable string keyed-value pairs
             * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
             * or set, its entries are returned.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @alias entriesIn
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the key-value pairs.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.toPairsIn(new Foo);
             * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
             */
            var toPairsIn = createToPairs(keysIn)

            /**
             * An alternative to `_.reduce`; this method transforms `object` to a new
             * `accumulator` object which is the result of running each of its own
             * enumerable string keyed properties thru `iteratee`, with each invocation
             * potentially mutating the `accumulator` object. If `accumulator` is not
             * provided, a new object with the same `[[Prototype]]` will be used. The
             * iteratee is invoked with four arguments: (accumulator, value, key, object).
             * Iteratee functions may exit iteration early by explicitly returning `false`.
             *
             * @static
             * @memberOf _
             * @since 1.3.0
             * @category Object
             * @param {Object} object The object to iterate over.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @param {*} [accumulator] The custom accumulator value.
             * @returns {*} Returns the accumulated value.
             * @example
             *
             * _.transform([2, 3, 4], function(result, n) {
             *   result.push(n *= n);
             *   return n % 2 == 0;
             * }, []);
             * // => [4, 9]
             *
             * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
             *   (result[value] || (result[value] = [])).push(key);
             * }, {});
             * // => { '1': ['a', 'c'], '2': ['b'] }
             */
            function transform(object, iteratee, accumulator) {
              var isArr = isArray(object),
                isArrLike = isArr || isBuffer(object) || isTypedArray(object)

              iteratee = getIteratee(iteratee, 4)
              if (accumulator == null) {
                var Ctor = object && object.constructor
                if (isArrLike) {
                  accumulator = isArr ? new Ctor() : []
                } else if (isObject(object)) {
                  accumulator = isFunction(Ctor)
                    ? baseCreate(getPrototype(object))
                    : {}
                } else {
                  accumulator = {}
                }
              }
              ;(isArrLike ? arrayEach : baseForOwn)(
                object,
                function (value, index, object) {
                  return iteratee(accumulator, value, index, object)
                }
              )
              return accumulator
            }

            /**
             * Removes the property at `path` of `object`.
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Object
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to unset.
             * @returns {boolean} Returns `true` if the property is deleted, else `false`.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 7 } }] };
             * _.unset(object, 'a[0].b.c');
             * // => true
             *
             * console.log(object);
             * // => { 'a': [{ 'b': {} }] };
             *
             * _.unset(object, ['a', '0', 'b', 'c']);
             * // => true
             *
             * console.log(object);
             * // => { 'a': [{ 'b': {} }] };
             */
            function unset(object, path) {
              return object == null ? true : baseUnset(object, path)
            }

            /**
             * This method is like `_.set` except that accepts `updater` to produce the
             * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
             * is invoked with one argument: (value).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.6.0
             * @category Object
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to set.
             * @param {Function} updater The function to produce the updated value.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var object = { 'a': [{ 'b': { 'c': 3 } }] };
             *
             * _.update(object, 'a[0].b.c', function(n) { return n * n; });
             * console.log(object.a[0].b.c);
             * // => 9
             *
             * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
             * console.log(object.x[0].y.z);
             * // => 0
             */
            function update(object, path, updater) {
              return object == null
                ? object
                : baseUpdate(object, path, castFunction(updater))
            }

            /**
             * This method is like `_.update` except that it accepts `customizer` which is
             * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
             * path creation is handled by the method instead. The `customizer` is invoked
             * with three arguments: (nsValue, key, nsObject).
             *
             * **Note:** This method mutates `object`.
             *
             * @static
             * @memberOf _
             * @since 4.6.0
             * @category Object
             * @param {Object} object The object to modify.
             * @param {Array|string} path The path of the property to set.
             * @param {Function} updater The function to produce the updated value.
             * @param {Function} [customizer] The function to customize assigned values.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var object = {};
             *
             * _.updateWith(object, '[0][1]', _.constant('a'), Object);
             * // => { '0': { '1': 'a' } }
             */
            function updateWith(object, path, updater, customizer) {
              customizer =
                typeof customizer == 'function' ? customizer : undefined
              return object == null
                ? object
                : baseUpdate(object, path, castFunction(updater), customizer)
            }

            /**
             * Creates an array of the own enumerable string keyed property values of `object`.
             *
             * **Note:** Non-object values are coerced to objects.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property values.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.values(new Foo);
             * // => [1, 2] (iteration order is not guaranteed)
             *
             * _.values('hi');
             * // => ['h', 'i']
             */
            function values(object) {
              return object == null ? [] : baseValues(object, keys(object))
            }

            /**
             * Creates an array of the own and inherited enumerable string keyed property
             * values of `object`.
             *
             * **Note:** Non-object values are coerced to objects.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Object
             * @param {Object} object The object to query.
             * @returns {Array} Returns the array of property values.
             * @example
             *
             * function Foo() {
             *   this.a = 1;
             *   this.b = 2;
             * }
             *
             * Foo.prototype.c = 3;
             *
             * _.valuesIn(new Foo);
             * // => [1, 2, 3] (iteration order is not guaranteed)
             */
            function valuesIn(object) {
              return object == null ? [] : baseValues(object, keysIn(object))
            }

            /*------------------------------------------------------------------------*/

            /**
             * Clamps `number` within the inclusive `lower` and `upper` bounds.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Number
             * @param {number} number The number to clamp.
             * @param {number} [lower] The lower bound.
             * @param {number} upper The upper bound.
             * @returns {number} Returns the clamped number.
             * @example
             *
             * _.clamp(-10, -5, 5);
             * // => -5
             *
             * _.clamp(10, -5, 5);
             * // => 5
             */
            function clamp(number, lower, upper) {
              if (upper === undefined) {
                upper = lower
                lower = undefined
              }
              if (upper !== undefined) {
                upper = toNumber(upper)
                upper = upper === upper ? upper : 0
              }
              if (lower !== undefined) {
                lower = toNumber(lower)
                lower = lower === lower ? lower : 0
              }
              return baseClamp(toNumber(number), lower, upper)
            }

            /**
             * Checks if `n` is between `start` and up to, but not including, `end`. If
             * `end` is not specified, it's set to `start` with `start` then set to `0`.
             * If `start` is greater than `end` the params are swapped to support
             * negative ranges.
             *
             * @static
             * @memberOf _
             * @since 3.3.0
             * @category Number
             * @param {number} number The number to check.
             * @param {number} [start=0] The start of the range.
             * @param {number} end The end of the range.
             * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
             * @see _.range, _.rangeRight
             * @example
             *
             * _.inRange(3, 2, 4);
             * // => true
             *
             * _.inRange(4, 8);
             * // => true
             *
             * _.inRange(4, 2);
             * // => false
             *
             * _.inRange(2, 2);
             * // => false
             *
             * _.inRange(1.2, 2);
             * // => true
             *
             * _.inRange(5.2, 4);
             * // => false
             *
             * _.inRange(-3, -2, -6);
             * // => true
             */
            function inRange(number, start, end) {
              start = toFinite(start)
              if (end === undefined) {
                end = start
                start = 0
              } else {
                end = toFinite(end)
              }
              number = toNumber(number)
              return baseInRange(number, start, end)
            }

            /**
             * Produces a random number between the inclusive `lower` and `upper` bounds.
             * If only one argument is provided a number between `0` and the given number
             * is returned. If `floating` is `true`, or either `lower` or `upper` are
             * floats, a floating-point number is returned instead of an integer.
             *
             * **Note:** JavaScript follows the IEEE-754 standard for resolving
             * floating-point values which can produce unexpected results.
             *
             * @static
             * @memberOf _
             * @since 0.7.0
             * @category Number
             * @param {number} [lower=0] The lower bound.
             * @param {number} [upper=1] The upper bound.
             * @param {boolean} [floating] Specify returning a floating-point number.
             * @returns {number} Returns the random number.
             * @example
             *
             * _.random(0, 5);
             * // => an integer between 0 and 5
             *
             * _.random(5);
             * // => also an integer between 0 and 5
             *
             * _.random(5, true);
             * // => a floating-point number between 0 and 5
             *
             * _.random(1.2, 5.2);
             * // => a floating-point number between 1.2 and 5.2
             */
            function random(lower, upper, floating) {
              if (
                floating &&
                typeof floating != 'boolean' &&
                isIterateeCall(lower, upper, floating)
              ) {
                upper = floating = undefined
              }
              if (floating === undefined) {
                if (typeof upper == 'boolean') {
                  floating = upper
                  upper = undefined
                } else if (typeof lower == 'boolean') {
                  floating = lower
                  lower = undefined
                }
              }
              if (lower === undefined && upper === undefined) {
                lower = 0
                upper = 1
              } else {
                lower = toFinite(lower)
                if (upper === undefined) {
                  upper = lower
                  lower = 0
                } else {
                  upper = toFinite(upper)
                }
              }
              if (lower > upper) {
                var temp = lower
                lower = upper
                upper = temp
              }
              if (floating || lower % 1 || upper % 1) {
                var rand = nativeRandom()
                return nativeMin(
                  lower +
                    rand *
                      (upper -
                        lower +
                        freeParseFloat('1e-' + ((rand + '').length - 1))),
                  upper
                )
              }
              return baseRandom(lower, upper)
            }

            /*------------------------------------------------------------------------*/

            /**
             * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the camel cased string.
             * @example
             *
             * _.camelCase('Foo Bar');
             * // => 'fooBar'
             *
             * _.camelCase('--foo-bar--');
             * // => 'fooBar'
             *
             * _.camelCase('__FOO_BAR__');
             * // => 'fooBar'
             */
            var camelCase = createCompounder(function (result, word, index) {
              word = word.toLowerCase()
              return result + (index ? capitalize(word) : word)
            })

            /**
             * Converts the first character of `string` to upper case and the remaining
             * to lower case.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to capitalize.
             * @returns {string} Returns the capitalized string.
             * @example
             *
             * _.capitalize('FRED');
             * // => 'Fred'
             */
            function capitalize(string) {
              return upperFirst(toString(string).toLowerCase())
            }

            /**
             * Deburrs `string` by converting
             * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
             * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
             * letters to basic Latin letters and removing
             * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to deburr.
             * @returns {string} Returns the deburred string.
             * @example
             *
             * _.deburr('déjà vu');
             * // => 'deja vu'
             */
            function deburr(string) {
              string = toString(string)
              return (
                string &&
                string.replace(reLatin, deburrLetter).replace(reComboMark, '')
              )
            }

            /**
             * Checks if `string` ends with the given target string.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to inspect.
             * @param {string} [target] The string to search for.
             * @param {number} [position=string.length] The position to search up to.
             * @returns {boolean} Returns `true` if `string` ends with `target`,
             *  else `false`.
             * @example
             *
             * _.endsWith('abc', 'c');
             * // => true
             *
             * _.endsWith('abc', 'b');
             * // => false
             *
             * _.endsWith('abc', 'b', 2);
             * // => true
             */
            function endsWith(string, target, position) {
              string = toString(string)
              target = baseToString(target)

              var length = string.length
              position =
                position === undefined
                  ? length
                  : baseClamp(toInteger(position), 0, length)

              var end = position
              position -= target.length
              return position >= 0 && string.slice(position, end) == target
            }

            /**
             * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
             * corresponding HTML entities.
             *
             * **Note:** No other characters are escaped. To escape additional
             * characters use a third-party library like [_he_](https://mths.be/he).
             *
             * Though the ">" character is escaped for symmetry, characters like
             * ">" and "/" don't need escaping in HTML and have no special meaning
             * unless they're part of a tag or unquoted attribute value. See
             * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
             * (under "semi-related fun fact") for more details.
             *
             * When working with HTML you should always
             * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
             * XSS vectors.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category String
             * @param {string} [string=''] The string to escape.
             * @returns {string} Returns the escaped string.
             * @example
             *
             * _.escape('fred, barney, & pebbles');
             * // => 'fred, barney, &amp; pebbles'
             */
            function escape(string) {
              string = toString(string)
              return string && reHasUnescapedHtml.test(string)
                ? string.replace(reUnescapedHtml, escapeHtmlChar)
                : string
            }

            /**
             * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
             * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to escape.
             * @returns {string} Returns the escaped string.
             * @example
             *
             * _.escapeRegExp('[lodash](https://lodash.com/)');
             * // => '\[lodash\]\(https://lodash\.com/\)'
             */
            function escapeRegExp(string) {
              string = toString(string)
              return string && reHasRegExpChar.test(string)
                ? string.replace(reRegExpChar, '\\$&')
                : string
            }

            /**
             * Converts `string` to
             * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the kebab cased string.
             * @example
             *
             * _.kebabCase('Foo Bar');
             * // => 'foo-bar'
             *
             * _.kebabCase('fooBar');
             * // => 'foo-bar'
             *
             * _.kebabCase('__FOO_BAR__');
             * // => 'foo-bar'
             */
            var kebabCase = createCompounder(function (result, word, index) {
              return result + (index ? '-' : '') + word.toLowerCase()
            })

            /**
             * Converts `string`, as space separated words, to lower case.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the lower cased string.
             * @example
             *
             * _.lowerCase('--Foo-Bar--');
             * // => 'foo bar'
             *
             * _.lowerCase('fooBar');
             * // => 'foo bar'
             *
             * _.lowerCase('__FOO_BAR__');
             * // => 'foo bar'
             */
            var lowerCase = createCompounder(function (result, word, index) {
              return result + (index ? ' ' : '') + word.toLowerCase()
            })

            /**
             * Converts the first character of `string` to lower case.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the converted string.
             * @example
             *
             * _.lowerFirst('Fred');
             * // => 'fred'
             *
             * _.lowerFirst('FRED');
             * // => 'fRED'
             */
            var lowerFirst = createCaseFirst('toLowerCase')

            /**
             * Pads `string` on the left and right sides if it's shorter than `length`.
             * Padding characters are truncated if they can't be evenly divided by `length`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to pad.
             * @param {number} [length=0] The padding length.
             * @param {string} [chars=' '] The string used as padding.
             * @returns {string} Returns the padded string.
             * @example
             *
             * _.pad('abc', 8);
             * // => '  abc   '
             *
             * _.pad('abc', 8, '_-');
             * // => '_-abc_-_'
             *
             * _.pad('abc', 3);
             * // => 'abc'
             */
            function pad(string, length, chars) {
              string = toString(string)
              length = toInteger(length)

              var strLength = length ? stringSize(string) : 0
              if (!length || strLength >= length) {
                return string
              }
              var mid = (length - strLength) / 2
              return (
                createPadding(nativeFloor(mid), chars) +
                string +
                createPadding(nativeCeil(mid), chars)
              )
            }

            /**
             * Pads `string` on the right side if it's shorter than `length`. Padding
             * characters are truncated if they exceed `length`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to pad.
             * @param {number} [length=0] The padding length.
             * @param {string} [chars=' '] The string used as padding.
             * @returns {string} Returns the padded string.
             * @example
             *
             * _.padEnd('abc', 6);
             * // => 'abc   '
             *
             * _.padEnd('abc', 6, '_-');
             * // => 'abc_-_'
             *
             * _.padEnd('abc', 3);
             * // => 'abc'
             */
            function padEnd(string, length, chars) {
              string = toString(string)
              length = toInteger(length)

              var strLength = length ? stringSize(string) : 0
              return length && strLength < length
                ? string + createPadding(length - strLength, chars)
                : string
            }

            /**
             * Pads `string` on the left side if it's shorter than `length`. Padding
             * characters are truncated if they exceed `length`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to pad.
             * @param {number} [length=0] The padding length.
             * @param {string} [chars=' '] The string used as padding.
             * @returns {string} Returns the padded string.
             * @example
             *
             * _.padStart('abc', 6);
             * // => '   abc'
             *
             * _.padStart('abc', 6, '_-');
             * // => '_-_abc'
             *
             * _.padStart('abc', 3);
             * // => 'abc'
             */
            function padStart(string, length, chars) {
              string = toString(string)
              length = toInteger(length)

              var strLength = length ? stringSize(string) : 0
              return length && strLength < length
                ? createPadding(length - strLength, chars) + string
                : string
            }

            /**
             * Converts `string` to an integer of the specified radix. If `radix` is
             * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
             * hexadecimal, in which case a `radix` of `16` is used.
             *
             * **Note:** This method aligns with the
             * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
             *
             * @static
             * @memberOf _
             * @since 1.1.0
             * @category String
             * @param {string} string The string to convert.
             * @param {number} [radix=10] The radix to interpret `value` by.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {number} Returns the converted integer.
             * @example
             *
             * _.parseInt('08');
             * // => 8
             *
             * _.map(['6', '08', '10'], _.parseInt);
             * // => [6, 8, 10]
             */
            function parseInt(string, radix, guard) {
              if (guard || radix == null) {
                radix = 0
              } else if (radix) {
                radix = +radix
              }
              return nativeParseInt(
                toString(string).replace(reTrimStart, ''),
                radix || 0
              )
            }

            /**
             * Repeats the given string `n` times.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to repeat.
             * @param {number} [n=1] The number of times to repeat the string.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {string} Returns the repeated string.
             * @example
             *
             * _.repeat('*', 3);
             * // => '***'
             *
             * _.repeat('abc', 2);
             * // => 'abcabc'
             *
             * _.repeat('abc', 0);
             * // => ''
             */
            function repeat(string, n, guard) {
              if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
                n = 1
              } else {
                n = toInteger(n)
              }
              return baseRepeat(toString(string), n)
            }

            /**
             * Replaces matches for `pattern` in `string` with `replacement`.
             *
             * **Note:** This method is based on
             * [`String#replace`](https://mdn.io/String/replace).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to modify.
             * @param {RegExp|string} pattern The pattern to replace.
             * @param {Function|string} replacement The match replacement.
             * @returns {string} Returns the modified string.
             * @example
             *
             * _.replace('Hi Fred', 'Fred', 'Barney');
             * // => 'Hi Barney'
             */
            function replace() {
              var args = arguments,
                string = toString(args[0])

              return args.length < 3 ? string : string.replace(args[1], args[2])
            }

            /**
             * Converts `string` to
             * [snake case](https://en.wikipedia.org/wiki/Snake_case).
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the snake cased string.
             * @example
             *
             * _.snakeCase('Foo Bar');
             * // => 'foo_bar'
             *
             * _.snakeCase('fooBar');
             * // => 'foo_bar'
             *
             * _.snakeCase('--FOO-BAR--');
             * // => 'foo_bar'
             */
            var snakeCase = createCompounder(function (result, word, index) {
              return result + (index ? '_' : '') + word.toLowerCase()
            })

            /**
             * Splits `string` by `separator`.
             *
             * **Note:** This method is based on
             * [`String#split`](https://mdn.io/String/split).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to split.
             * @param {RegExp|string} separator The separator pattern to split by.
             * @param {number} [limit] The length to truncate results to.
             * @returns {Array} Returns the string segments.
             * @example
             *
             * _.split('a-b-c', '-', 2);
             * // => ['a', 'b']
             */
            function split(string, separator, limit) {
              if (
                limit &&
                typeof limit != 'number' &&
                isIterateeCall(string, separator, limit)
              ) {
                separator = limit = undefined
              }
              limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0
              if (!limit) {
                return []
              }
              string = toString(string)
              if (
                string &&
                (typeof separator == 'string' ||
                  (separator != null && !isRegExp(separator)))
              ) {
                separator = baseToString(separator)
                if (!separator && hasUnicode(string)) {
                  return castSlice(stringToArray(string), 0, limit)
                }
              }
              return string.split(separator, limit)
            }

            /**
             * Converts `string` to
             * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
             *
             * @static
             * @memberOf _
             * @since 3.1.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the start cased string.
             * @example
             *
             * _.startCase('--foo-bar--');
             * // => 'Foo Bar'
             *
             * _.startCase('fooBar');
             * // => 'Foo Bar'
             *
             * _.startCase('__FOO_BAR__');
             * // => 'FOO BAR'
             */
            var startCase = createCompounder(function (result, word, index) {
              return result + (index ? ' ' : '') + upperFirst(word)
            })

            /**
             * Checks if `string` starts with the given target string.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to inspect.
             * @param {string} [target] The string to search for.
             * @param {number} [position=0] The position to search from.
             * @returns {boolean} Returns `true` if `string` starts with `target`,
             *  else `false`.
             * @example
             *
             * _.startsWith('abc', 'a');
             * // => true
             *
             * _.startsWith('abc', 'b');
             * // => false
             *
             * _.startsWith('abc', 'b', 1);
             * // => true
             */
            function startsWith(string, target, position) {
              string = toString(string)
              position =
                position == null
                  ? 0
                  : baseClamp(toInteger(position), 0, string.length)

              target = baseToString(target)
              return string.slice(position, position + target.length) == target
            }

            /**
             * Creates a compiled template function that can interpolate data properties
             * in "interpolate" delimiters, HTML-escape interpolated data properties in
             * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
             * properties may be accessed as free variables in the template. If a setting
             * object is given, it takes precedence over `_.templateSettings` values.
             *
             * **Note:** In the development build `_.template` utilizes
             * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
             * for easier debugging.
             *
             * For more information on precompiling templates see
             * [lodash's custom builds documentation](https://lodash.com/custom-builds).
             *
             * For more information on Chrome extension sandboxes see
             * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category String
             * @param {string} [string=''] The template string.
             * @param {Object} [options={}] The options object.
             * @param {RegExp} [options.escape=_.templateSettings.escape]
             *  The HTML "escape" delimiter.
             * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
             *  The "evaluate" delimiter.
             * @param {Object} [options.imports=_.templateSettings.imports]
             *  An object to import into the template as free variables.
             * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
             *  The "interpolate" delimiter.
             * @param {string} [options.sourceURL='lodash.templateSources[n]']
             *  The sourceURL of the compiled template.
             * @param {string} [options.variable='obj']
             *  The data object variable name.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Function} Returns the compiled template function.
             * @example
             *
             * // Use the "interpolate" delimiter to create a compiled template.
             * var compiled = _.template('hello <%= user %>!');
             * compiled({ 'user': 'fred' });
             * // => 'hello fred!'
             *
             * // Use the HTML "escape" delimiter to escape data property values.
             * var compiled = _.template('<b><%- value %></b>');
             * compiled({ 'value': '<script>' });
             * // => '<b>&lt;script&gt;</b>'
             *
             * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
             * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
             * compiled({ 'users': ['fred', 'barney'] });
             * // => '<li>fred</li><li>barney</li>'
             *
             * // Use the internal `print` function in "evaluate" delimiters.
             * var compiled = _.template('<% print("hello " + user); %>!');
             * compiled({ 'user': 'barney' });
             * // => 'hello barney!'
             *
             * // Use the ES template literal delimiter as an "interpolate" delimiter.
             * // Disable support by replacing the "interpolate" delimiter.
             * var compiled = _.template('hello ${ user }!');
             * compiled({ 'user': 'pebbles' });
             * // => 'hello pebbles!'
             *
             * // Use backslashes to treat delimiters as plain text.
             * var compiled = _.template('<%= "\\<%- value %\\>" %>');
             * compiled({ 'value': 'ignored' });
             * // => '<%- value %>'
             *
             * // Use the `imports` option to import `jQuery` as `jq`.
             * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
             * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
             * compiled({ 'users': ['fred', 'barney'] });
             * // => '<li>fred</li><li>barney</li>'
             *
             * // Use the `sourceURL` option to specify a custom sourceURL for the template.
             * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
             * compiled(data);
             * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
             *
             * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
             * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
             * compiled.source;
             * // => function(data) {
             * //   var __t, __p = '';
             * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
             * //   return __p;
             * // }
             *
             * // Use custom template delimiters.
             * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
             * var compiled = _.template('hello {{ user }}!');
             * compiled({ 'user': 'mustache' });
             * // => 'hello mustache!'
             *
             * // Use the `source` property to inline compiled templates for meaningful
             * // line numbers in error messages and stack traces.
             * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
             *   var JST = {\
             *     "main": ' + _.template(mainText).source + '\
             *   };\
             * ');
             */
            function template(string, options, guard) {
              // Based on John Resig's `tmpl` implementation
              // (http://ejohn.org/blog/javascript-micro-templating/)
              // and Laura Doktorova's doT.js (https://github.com/olado/doT).
              var settings = lodash.templateSettings

              if (guard && isIterateeCall(string, options, guard)) {
                options = undefined
              }
              string = toString(string)
              options = assignInWith(
                {},
                options,
                settings,
                customDefaultsAssignIn
              )

              var imports = assignInWith(
                  {},
                  options.imports,
                  settings.imports,
                  customDefaultsAssignIn
                ),
                importsKeys = keys(imports),
                importsValues = baseValues(imports, importsKeys)

              var isEscaping,
                isEvaluating,
                index = 0,
                interpolate = options.interpolate || reNoMatch,
                source = "__p += '"

              // Compile the regexp to match each delimiter.
              var reDelimiters = RegExp(
                (options.escape || reNoMatch).source +
                  '|' +
                  interpolate.source +
                  '|' +
                  (interpolate === reInterpolate ? reEsTemplate : reNoMatch)
                    .source +
                  '|' +
                  (options.evaluate || reNoMatch).source +
                  '|$',
                'g'
              )

              // Use a sourceURL for easier debugging.
              // The sourceURL gets injected into the source that's eval-ed, so be careful
              // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
              // and escape the comment, thus injecting code that gets evaled.
              var sourceURL =
                '//# sourceURL=' +
                (hasOwnProperty.call(options, 'sourceURL')
                  ? (options.sourceURL + '').replace(/\s/g, ' ')
                  : 'lodash.templateSources[' + ++templateCounter + ']') +
                '\n'

              string.replace(
                reDelimiters,
                function (
                  match,
                  escapeValue,
                  interpolateValue,
                  esTemplateValue,
                  evaluateValue,
                  offset
                ) {
                  interpolateValue || (interpolateValue = esTemplateValue)

                  // Escape characters that can't be included in string literals.
                  source += string
                    .slice(index, offset)
                    .replace(reUnescapedString, escapeStringChar)

                  // Replace delimiters with snippets.
                  if (escapeValue) {
                    isEscaping = true
                    source += "' +\n__e(" + escapeValue + ") +\n'"
                  }
                  if (evaluateValue) {
                    isEvaluating = true
                    source += "';\n" + evaluateValue + ";\n__p += '"
                  }
                  if (interpolateValue) {
                    source +=
                      "' +\n((__t = (" +
                      interpolateValue +
                      ")) == null ? '' : __t) +\n'"
                  }
                  index = offset + match.length

                  // The JS engine embedded in Adobe products needs `match` returned in
                  // order to produce the correct `offset` value.
                  return match
                }
              )

              source += "';\n"

              // If `variable` is not specified wrap a with-statement around the generated
              // code to add the data object to the top of the scope chain.
              var variable =
                hasOwnProperty.call(options, 'variable') && options.variable
              if (!variable) {
                source = 'with (obj) {\n' + source + '\n}\n'
              }
              // Throw an error if a forbidden character was found in `variable`, to prevent
              // potential command injection attacks.
              else if (reForbiddenIdentifierChars.test(variable)) {
                throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT)
              }

              // Cleanup code by stripping empty strings.
              source = (
                isEvaluating ? source.replace(reEmptyStringLeading, '') : source
              )
                .replace(reEmptyStringMiddle, '$1')
                .replace(reEmptyStringTrailing, '$1;')

              // Frame code as the function body.
              source =
                'function(' +
                (variable || 'obj') +
                ') {\n' +
                (variable ? '' : 'obj || (obj = {});\n') +
                "var __t, __p = ''" +
                (isEscaping ? ', __e = _.escape' : '') +
                (isEvaluating
                  ? ', __j = Array.prototype.join;\n' +
                    "function print() { __p += __j.call(arguments, '') }\n"
                  : ';\n') +
                source +
                'return __p\n}'

              var result = attempt(function () {
                return Function(
                  importsKeys,
                  sourceURL + 'return ' + source
                ).apply(undefined, importsValues)
              })

              // Provide the compiled function's source by its `toString` method or
              // the `source` property as a convenience for inlining compiled templates.
              result.source = source
              if (isError(result)) {
                throw result
              }
              return result
            }

            /**
             * Converts `string`, as a whole, to lower case just like
             * [String#toLowerCase](https://mdn.io/toLowerCase).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the lower cased string.
             * @example
             *
             * _.toLower('--Foo-Bar--');
             * // => '--foo-bar--'
             *
             * _.toLower('fooBar');
             * // => 'foobar'
             *
             * _.toLower('__FOO_BAR__');
             * // => '__foo_bar__'
             */
            function toLower(value) {
              return toString(value).toLowerCase()
            }

            /**
             * Converts `string`, as a whole, to upper case just like
             * [String#toUpperCase](https://mdn.io/toUpperCase).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the upper cased string.
             * @example
             *
             * _.toUpper('--foo-bar--');
             * // => '--FOO-BAR--'
             *
             * _.toUpper('fooBar');
             * // => 'FOOBAR'
             *
             * _.toUpper('__foo_bar__');
             * // => '__FOO_BAR__'
             */
            function toUpper(value) {
              return toString(value).toUpperCase()
            }

            /**
             * Removes leading and trailing whitespace or specified characters from `string`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to trim.
             * @param {string} [chars=whitespace] The characters to trim.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {string} Returns the trimmed string.
             * @example
             *
             * _.trim('  abc  ');
             * // => 'abc'
             *
             * _.trim('-_-abc-_-', '_-');
             * // => 'abc'
             *
             * _.map(['  foo  ', '  bar  '], _.trim);
             * // => ['foo', 'bar']
             */
            function trim(string, chars, guard) {
              string = toString(string)
              if (string && (guard || chars === undefined)) {
                return baseTrim(string)
              }
              if (!string || !(chars = baseToString(chars))) {
                return string
              }
              var strSymbols = stringToArray(string),
                chrSymbols = stringToArray(chars),
                start = charsStartIndex(strSymbols, chrSymbols),
                end = charsEndIndex(strSymbols, chrSymbols) + 1

              return castSlice(strSymbols, start, end).join('')
            }

            /**
             * Removes trailing whitespace or specified characters from `string`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to trim.
             * @param {string} [chars=whitespace] The characters to trim.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {string} Returns the trimmed string.
             * @example
             *
             * _.trimEnd('  abc  ');
             * // => '  abc'
             *
             * _.trimEnd('-_-abc-_-', '_-');
             * // => '-_-abc'
             */
            function trimEnd(string, chars, guard) {
              string = toString(string)
              if (string && (guard || chars === undefined)) {
                return string.slice(0, trimmedEndIndex(string) + 1)
              }
              if (!string || !(chars = baseToString(chars))) {
                return string
              }
              var strSymbols = stringToArray(string),
                end = charsEndIndex(strSymbols, stringToArray(chars)) + 1

              return castSlice(strSymbols, 0, end).join('')
            }

            /**
             * Removes leading whitespace or specified characters from `string`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to trim.
             * @param {string} [chars=whitespace] The characters to trim.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {string} Returns the trimmed string.
             * @example
             *
             * _.trimStart('  abc  ');
             * // => 'abc  '
             *
             * _.trimStart('-_-abc-_-', '_-');
             * // => 'abc-_-'
             */
            function trimStart(string, chars, guard) {
              string = toString(string)
              if (string && (guard || chars === undefined)) {
                return string.replace(reTrimStart, '')
              }
              if (!string || !(chars = baseToString(chars))) {
                return string
              }
              var strSymbols = stringToArray(string),
                start = charsStartIndex(strSymbols, stringToArray(chars))

              return castSlice(strSymbols, start).join('')
            }

            /**
             * Truncates `string` if it's longer than the given maximum string length.
             * The last characters of the truncated string are replaced with the omission
             * string which defaults to "...".
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to truncate.
             * @param {Object} [options={}] The options object.
             * @param {number} [options.length=30] The maximum string length.
             * @param {string} [options.omission='...'] The string to indicate text is omitted.
             * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
             * @returns {string} Returns the truncated string.
             * @example
             *
             * _.truncate('hi-diddly-ho there, neighborino');
             * // => 'hi-diddly-ho there, neighbo...'
             *
             * _.truncate('hi-diddly-ho there, neighborino', {
             *   'length': 24,
             *   'separator': ' '
             * });
             * // => 'hi-diddly-ho there,...'
             *
             * _.truncate('hi-diddly-ho there, neighborino', {
             *   'length': 24,
             *   'separator': /,? +/
             * });
             * // => 'hi-diddly-ho there...'
             *
             * _.truncate('hi-diddly-ho there, neighborino', {
             *   'omission': ' [...]'
             * });
             * // => 'hi-diddly-ho there, neig [...]'
             */
            function truncate(string, options) {
              var length = DEFAULT_TRUNC_LENGTH,
                omission = DEFAULT_TRUNC_OMISSION

              if (isObject(options)) {
                var separator =
                  'separator' in options ? options.separator : separator
                length =
                  'length' in options ? toInteger(options.length) : length
                omission =
                  'omission' in options
                    ? baseToString(options.omission)
                    : omission
              }
              string = toString(string)

              var strLength = string.length
              if (hasUnicode(string)) {
                var strSymbols = stringToArray(string)
                strLength = strSymbols.length
              }
              if (length >= strLength) {
                return string
              }
              var end = length - stringSize(omission)
              if (end < 1) {
                return omission
              }
              var result = strSymbols
                ? castSlice(strSymbols, 0, end).join('')
                : string.slice(0, end)

              if (separator === undefined) {
                return result + omission
              }
              if (strSymbols) {
                end += result.length - end
              }
              if (isRegExp(separator)) {
                if (string.slice(end).search(separator)) {
                  var match,
                    substring = result

                  if (!separator.global) {
                    separator = RegExp(
                      separator.source,
                      toString(reFlags.exec(separator)) + 'g'
                    )
                  }
                  separator.lastIndex = 0
                  while ((match = separator.exec(substring))) {
                    var newEnd = match.index
                  }
                  result = result.slice(0, newEnd === undefined ? end : newEnd)
                }
              } else if (string.indexOf(baseToString(separator), end) != end) {
                var index = result.lastIndexOf(separator)
                if (index > -1) {
                  result = result.slice(0, index)
                }
              }
              return result + omission
            }

            /**
             * The inverse of `_.escape`; this method converts the HTML entities
             * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
             * their corresponding characters.
             *
             * **Note:** No other HTML entities are unescaped. To unescape additional
             * HTML entities use a third-party library like [_he_](https://mths.be/he).
             *
             * @static
             * @memberOf _
             * @since 0.6.0
             * @category String
             * @param {string} [string=''] The string to unescape.
             * @returns {string} Returns the unescaped string.
             * @example
             *
             * _.unescape('fred, barney, &amp; pebbles');
             * // => 'fred, barney, & pebbles'
             */
            function unescape(string) {
              string = toString(string)
              return string && reHasEscapedHtml.test(string)
                ? string.replace(reEscapedHtml, unescapeHtmlChar)
                : string
            }

            /**
             * Converts `string`, as space separated words, to upper case.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the upper cased string.
             * @example
             *
             * _.upperCase('--foo-bar');
             * // => 'FOO BAR'
             *
             * _.upperCase('fooBar');
             * // => 'FOO BAR'
             *
             * _.upperCase('__foo_bar__');
             * // => 'FOO BAR'
             */
            var upperCase = createCompounder(function (result, word, index) {
              return result + (index ? ' ' : '') + word.toUpperCase()
            })

            /**
             * Converts the first character of `string` to upper case.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category String
             * @param {string} [string=''] The string to convert.
             * @returns {string} Returns the converted string.
             * @example
             *
             * _.upperFirst('fred');
             * // => 'Fred'
             *
             * _.upperFirst('FRED');
             * // => 'FRED'
             */
            var upperFirst = createCaseFirst('toUpperCase')

            /**
             * Splits `string` into an array of its words.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category String
             * @param {string} [string=''] The string to inspect.
             * @param {RegExp|string} [pattern] The pattern to match words.
             * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
             * @returns {Array} Returns the words of `string`.
             * @example
             *
             * _.words('fred, barney, & pebbles');
             * // => ['fred', 'barney', 'pebbles']
             *
             * _.words('fred, barney, & pebbles', /[^, ]+/g);
             * // => ['fred', 'barney', '&', 'pebbles']
             */
            function words(string, pattern, guard) {
              string = toString(string)
              pattern = guard ? undefined : pattern

              if (pattern === undefined) {
                return hasUnicodeWord(string)
                  ? unicodeWords(string)
                  : asciiWords(string)
              }
              return string.match(pattern) || []
            }

            /*------------------------------------------------------------------------*/

            /**
             * Attempts to invoke `func`, returning either the result or the caught error
             * object. Any additional arguments are provided to `func` when it's invoked.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Util
             * @param {Function} func The function to attempt.
             * @param {...*} [args] The arguments to invoke `func` with.
             * @returns {*} Returns the `func` result or error object.
             * @example
             *
             * // Avoid throwing errors for invalid selectors.
             * var elements = _.attempt(function(selector) {
             *   return document.querySelectorAll(selector);
             * }, '>_>');
             *
             * if (_.isError(elements)) {
             *   elements = [];
             * }
             */
            var attempt = baseRest(function (func, args) {
              try {
                return apply(func, undefined, args)
              } catch (e) {
                return isError(e) ? e : new Error(e)
              }
            })

            /**
             * Binds methods of an object to the object itself, overwriting the existing
             * method.
             *
             * **Note:** This method doesn't set the "length" property of bound functions.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {Object} object The object to bind and assign the bound methods to.
             * @param {...(string|string[])} methodNames The object method names to bind.
             * @returns {Object} Returns `object`.
             * @example
             *
             * var view = {
             *   'label': 'docs',
             *   'click': function() {
             *     console.log('clicked ' + this.label);
             *   }
             * };
             *
             * _.bindAll(view, ['click']);
             * jQuery(element).on('click', view.click);
             * // => Logs 'clicked docs' when clicked.
             */
            var bindAll = flatRest(function (object, methodNames) {
              arrayEach(methodNames, function (key) {
                key = toKey(key)
                baseAssignValue(object, key, bind(object[key], object))
              })
              return object
            })

            /**
             * Creates a function that iterates over `pairs` and invokes the corresponding
             * function of the first predicate to return truthy. The predicate-function
             * pairs are invoked with the `this` binding and arguments of the created
             * function.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {Array} pairs The predicate-function pairs.
             * @returns {Function} Returns the new composite function.
             * @example
             *
             * var func = _.cond([
             *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
             *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
             *   [_.stubTrue,                      _.constant('no match')]
             * ]);
             *
             * func({ 'a': 1, 'b': 2 });
             * // => 'matches A'
             *
             * func({ 'a': 0, 'b': 1 });
             * // => 'matches B'
             *
             * func({ 'a': '1', 'b': '2' });
             * // => 'no match'
             */
            function cond(pairs) {
              var length = pairs == null ? 0 : pairs.length,
                toIteratee = getIteratee()

              pairs = !length
                ? []
                : arrayMap(pairs, function (pair) {
                    if (typeof pair[1] != 'function') {
                      throw new TypeError(FUNC_ERROR_TEXT)
                    }
                    return [toIteratee(pair[0]), pair[1]]
                  })

              return baseRest(function (args) {
                var index = -1
                while (++index < length) {
                  var pair = pairs[index]
                  if (apply(pair[0], this, args)) {
                    return apply(pair[1], this, args)
                  }
                }
              })
            }

            /**
             * Creates a function that invokes the predicate properties of `source` with
             * the corresponding property values of a given object, returning `true` if
             * all predicates return truthy, else `false`.
             *
             * **Note:** The created function is equivalent to `_.conformsTo` with
             * `source` partially applied.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {Object} source The object of property predicates to conform to.
             * @returns {Function} Returns the new spec function.
             * @example
             *
             * var objects = [
             *   { 'a': 2, 'b': 1 },
             *   { 'a': 1, 'b': 2 }
             * ];
             *
             * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
             * // => [{ 'a': 1, 'b': 2 }]
             */
            function conforms(source) {
              return baseConforms(baseClone(source, CLONE_DEEP_FLAG))
            }

            /**
             * Creates a function that returns `value`.
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Util
             * @param {*} value The value to return from the new function.
             * @returns {Function} Returns the new constant function.
             * @example
             *
             * var objects = _.times(2, _.constant({ 'a': 1 }));
             *
             * console.log(objects);
             * // => [{ 'a': 1 }, { 'a': 1 }]
             *
             * console.log(objects[0] === objects[1]);
             * // => true
             */
            function constant(value) {
              return function () {
                return value
              }
            }

            /**
             * Checks `value` to determine whether a default value should be returned in
             * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
             * or `undefined`.
             *
             * @static
             * @memberOf _
             * @since 4.14.0
             * @category Util
             * @param {*} value The value to check.
             * @param {*} defaultValue The default value.
             * @returns {*} Returns the resolved value.
             * @example
             *
             * _.defaultTo(1, 10);
             * // => 1
             *
             * _.defaultTo(undefined, 10);
             * // => 10
             */
            function defaultTo(value, defaultValue) {
              return value == null || value !== value ? defaultValue : value
            }

            /**
             * Creates a function that returns the result of invoking the given functions
             * with the `this` binding of the created function, where each successive
             * invocation is supplied the return value of the previous.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Util
             * @param {...(Function|Function[])} [funcs] The functions to invoke.
             * @returns {Function} Returns the new composite function.
             * @see _.flowRight
             * @example
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * var addSquare = _.flow([_.add, square]);
             * addSquare(1, 2);
             * // => 9
             */
            var flow = createFlow()

            /**
             * This method is like `_.flow` except that it creates a function that
             * invokes the given functions from right to left.
             *
             * @static
             * @since 3.0.0
             * @memberOf _
             * @category Util
             * @param {...(Function|Function[])} [funcs] The functions to invoke.
             * @returns {Function} Returns the new composite function.
             * @see _.flow
             * @example
             *
             * function square(n) {
             *   return n * n;
             * }
             *
             * var addSquare = _.flowRight([square, _.add]);
             * addSquare(1, 2);
             * // => 9
             */
            var flowRight = createFlow(true)

            /**
             * This method returns the first argument it receives.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {*} value Any value.
             * @returns {*} Returns `value`.
             * @example
             *
             * var object = { 'a': 1 };
             *
             * console.log(_.identity(object) === object);
             * // => true
             */
            function identity(value) {
              return value
            }

            /**
             * Creates a function that invokes `func` with the arguments of the created
             * function. If `func` is a property name, the created function returns the
             * property value for a given element. If `func` is an array or object, the
             * created function returns `true` for elements that contain the equivalent
             * source properties, otherwise it returns `false`.
             *
             * @static
             * @since 4.0.0
             * @memberOf _
             * @category Util
             * @param {*} [func=_.identity] The value to convert to a callback.
             * @returns {Function} Returns the callback.
             * @example
             *
             * var users = [
             *   { 'user': 'barney', 'age': 36, 'active': true },
             *   { 'user': 'fred',   'age': 40, 'active': false }
             * ];
             *
             * // The `_.matches` iteratee shorthand.
             * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
             * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
             *
             * // The `_.matchesProperty` iteratee shorthand.
             * _.filter(users, _.iteratee(['user', 'fred']));
             * // => [{ 'user': 'fred', 'age': 40 }]
             *
             * // The `_.property` iteratee shorthand.
             * _.map(users, _.iteratee('user'));
             * // => ['barney', 'fred']
             *
             * // Create custom iteratee shorthands.
             * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
             *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
             *     return func.test(string);
             *   };
             * });
             *
             * _.filter(['abc', 'def'], /ef/);
             * // => ['def']
             */
            function iteratee(func) {
              return baseIteratee(
                typeof func == 'function'
                  ? func
                  : baseClone(func, CLONE_DEEP_FLAG)
              )
            }

            /**
             * Creates a function that performs a partial deep comparison between a given
             * object and `source`, returning `true` if the given object has equivalent
             * property values, else `false`.
             *
             * **Note:** The created function is equivalent to `_.isMatch` with `source`
             * partially applied.
             *
             * Partial comparisons will match empty array and empty object `source`
             * values against any array or object value, respectively. See `_.isEqual`
             * for a list of supported value comparisons.
             *
             * **Note:** Multiple values can be checked by combining several matchers
             * using `_.overSome`
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Util
             * @param {Object} source The object of property values to match.
             * @returns {Function} Returns the new spec function.
             * @example
             *
             * var objects = [
             *   { 'a': 1, 'b': 2, 'c': 3 },
             *   { 'a': 4, 'b': 5, 'c': 6 }
             * ];
             *
             * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
             * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
             *
             * // Checking for several possible values
             * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
             * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
             */
            function matches(source) {
              return baseMatches(baseClone(source, CLONE_DEEP_FLAG))
            }

            /**
             * Creates a function that performs a partial deep comparison between the
             * value at `path` of a given object to `srcValue`, returning `true` if the
             * object value is equivalent, else `false`.
             *
             * **Note:** Partial comparisons will match empty array and empty object
             * `srcValue` values against any array or object value, respectively. See
             * `_.isEqual` for a list of supported value comparisons.
             *
             * **Note:** Multiple values can be checked by combining several matchers
             * using `_.overSome`
             *
             * @static
             * @memberOf _
             * @since 3.2.0
             * @category Util
             * @param {Array|string} path The path of the property to get.
             * @param {*} srcValue The value to match.
             * @returns {Function} Returns the new spec function.
             * @example
             *
             * var objects = [
             *   { 'a': 1, 'b': 2, 'c': 3 },
             *   { 'a': 4, 'b': 5, 'c': 6 }
             * ];
             *
             * _.find(objects, _.matchesProperty('a', 4));
             * // => { 'a': 4, 'b': 5, 'c': 6 }
             *
             * // Checking for several possible values
             * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
             * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
             */
            function matchesProperty(path, srcValue) {
              return baseMatchesProperty(
                path,
                baseClone(srcValue, CLONE_DEEP_FLAG)
              )
            }

            /**
             * Creates a function that invokes the method at `path` of a given object.
             * Any additional arguments are provided to the invoked method.
             *
             * @static
             * @memberOf _
             * @since 3.7.0
             * @category Util
             * @param {Array|string} path The path of the method to invoke.
             * @param {...*} [args] The arguments to invoke the method with.
             * @returns {Function} Returns the new invoker function.
             * @example
             *
             * var objects = [
             *   { 'a': { 'b': _.constant(2) } },
             *   { 'a': { 'b': _.constant(1) } }
             * ];
             *
             * _.map(objects, _.method('a.b'));
             * // => [2, 1]
             *
             * _.map(objects, _.method(['a', 'b']));
             * // => [2, 1]
             */
            var method = baseRest(function (path, args) {
              return function (object) {
                return baseInvoke(object, path, args)
              }
            })

            /**
             * The opposite of `_.method`; this method creates a function that invokes
             * the method at a given path of `object`. Any additional arguments are
             * provided to the invoked method.
             *
             * @static
             * @memberOf _
             * @since 3.7.0
             * @category Util
             * @param {Object} object The object to query.
             * @param {...*} [args] The arguments to invoke the method with.
             * @returns {Function} Returns the new invoker function.
             * @example
             *
             * var array = _.times(3, _.constant),
             *     object = { 'a': array, 'b': array, 'c': array };
             *
             * _.map(['a[2]', 'c[0]'], _.methodOf(object));
             * // => [2, 0]
             *
             * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
             * // => [2, 0]
             */
            var methodOf = baseRest(function (object, args) {
              return function (path) {
                return baseInvoke(object, path, args)
              }
            })

            /**
             * Adds all own enumerable string keyed function properties of a source
             * object to the destination object. If `object` is a function, then methods
             * are added to its prototype as well.
             *
             * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
             * avoid conflicts caused by modifying the original.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {Function|Object} [object=lodash] The destination object.
             * @param {Object} source The object of functions to add.
             * @param {Object} [options={}] The options object.
             * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
             * @returns {Function|Object} Returns `object`.
             * @example
             *
             * function vowels(string) {
             *   return _.filter(string, function(v) {
             *     return /[aeiou]/i.test(v);
             *   });
             * }
             *
             * _.mixin({ 'vowels': vowels });
             * _.vowels('fred');
             * // => ['e']
             *
             * _('fred').vowels().value();
             * // => ['e']
             *
             * _.mixin({ 'vowels': vowels }, { 'chain': false });
             * _('fred').vowels();
             * // => ['e']
             */
            function mixin(object, source, options) {
              var props = keys(source),
                methodNames = baseFunctions(source, props)

              if (
                options == null &&
                !(isObject(source) && (methodNames.length || !props.length))
              ) {
                options = source
                source = object
                object = this
                methodNames = baseFunctions(source, keys(source))
              }
              var chain =
                  !(isObject(options) && 'chain' in options) || !!options.chain,
                isFunc = isFunction(object)

              arrayEach(methodNames, function (methodName) {
                var func = source[methodName]
                object[methodName] = func
                if (isFunc) {
                  object.prototype[methodName] = function () {
                    var chainAll = this.__chain__
                    if (chain || chainAll) {
                      var result = object(this.__wrapped__),
                        actions = (result.__actions__ = copyArray(
                          this.__actions__
                        ))

                      actions.push({
                        func: func,
                        args: arguments,
                        thisArg: object,
                      })
                      result.__chain__ = chainAll
                      return result
                    }
                    return func.apply(
                      object,
                      arrayPush([this.value()], arguments)
                    )
                  }
                }
              })

              return object
            }

            /**
             * Reverts the `_` variable to its previous value and returns a reference to
             * the `lodash` function.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @returns {Function} Returns the `lodash` function.
             * @example
             *
             * var lodash = _.noConflict();
             */
            function noConflict() {
              if (root._ === this) {
                root._ = oldDash
              }
              return this
            }

            /**
             * This method returns `undefined`.
             *
             * @static
             * @memberOf _
             * @since 2.3.0
             * @category Util
             * @example
             *
             * _.times(2, _.noop);
             * // => [undefined, undefined]
             */
            function noop() {
              // No operation performed.
            }

            /**
             * Creates a function that gets the argument at index `n`. If `n` is negative,
             * the nth argument from the end is returned.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {number} [n=0] The index of the argument to return.
             * @returns {Function} Returns the new pass-thru function.
             * @example
             *
             * var func = _.nthArg(1);
             * func('a', 'b', 'c', 'd');
             * // => 'b'
             *
             * var func = _.nthArg(-2);
             * func('a', 'b', 'c', 'd');
             * // => 'c'
             */
            function nthArg(n) {
              n = toInteger(n)
              return baseRest(function (args) {
                return baseNth(args, n)
              })
            }

            /**
             * Creates a function that invokes `iteratees` with the arguments it receives
             * and returns their results.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {...(Function|Function[])} [iteratees=[_.identity]]
             *  The iteratees to invoke.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var func = _.over([Math.max, Math.min]);
             *
             * func(1, 2, 3, 4);
             * // => [4, 1]
             */
            var over = createOver(arrayMap)

            /**
             * Creates a function that checks if **all** of the `predicates` return
             * truthy when invoked with the arguments it receives.
             *
             * Following shorthands are possible for providing predicates.
             * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
             * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {...(Function|Function[])} [predicates=[_.identity]]
             *  The predicates to check.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var func = _.overEvery([Boolean, isFinite]);
             *
             * func('1');
             * // => true
             *
             * func(null);
             * // => false
             *
             * func(NaN);
             * // => false
             */
            var overEvery = createOver(arrayEvery)

            /**
             * Creates a function that checks if **any** of the `predicates` return
             * truthy when invoked with the arguments it receives.
             *
             * Following shorthands are possible for providing predicates.
             * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
             * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {...(Function|Function[])} [predicates=[_.identity]]
             *  The predicates to check.
             * @returns {Function} Returns the new function.
             * @example
             *
             * var func = _.overSome([Boolean, isFinite]);
             *
             * func('1');
             * // => true
             *
             * func(null);
             * // => true
             *
             * func(NaN);
             * // => false
             *
             * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
             * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
             */
            var overSome = createOver(arraySome)

            /**
             * Creates a function that returns the value at `path` of a given object.
             *
             * @static
             * @memberOf _
             * @since 2.4.0
             * @category Util
             * @param {Array|string} path The path of the property to get.
             * @returns {Function} Returns the new accessor function.
             * @example
             *
             * var objects = [
             *   { 'a': { 'b': 2 } },
             *   { 'a': { 'b': 1 } }
             * ];
             *
             * _.map(objects, _.property('a.b'));
             * // => [2, 1]
             *
             * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
             * // => [1, 2]
             */
            function property(path) {
              return isKey(path)
                ? baseProperty(toKey(path))
                : basePropertyDeep(path)
            }

            /**
             * The opposite of `_.property`; this method creates a function that returns
             * the value at a given path of `object`.
             *
             * @static
             * @memberOf _
             * @since 3.0.0
             * @category Util
             * @param {Object} object The object to query.
             * @returns {Function} Returns the new accessor function.
             * @example
             *
             * var array = [0, 1, 2],
             *     object = { 'a': array, 'b': array, 'c': array };
             *
             * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
             * // => [2, 0]
             *
             * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
             * // => [2, 0]
             */
            function propertyOf(object) {
              return function (path) {
                return object == null ? undefined : baseGet(object, path)
              }
            }

            /**
             * Creates an array of numbers (positive and/or negative) progressing from
             * `start` up to, but not including, `end`. A step of `-1` is used if a negative
             * `start` is specified without an `end` or `step`. If `end` is not specified,
             * it's set to `start` with `start` then set to `0`.
             *
             * **Note:** JavaScript follows the IEEE-754 standard for resolving
             * floating-point values which can produce unexpected results.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {number} [start=0] The start of the range.
             * @param {number} end The end of the range.
             * @param {number} [step=1] The value to increment or decrement by.
             * @returns {Array} Returns the range of numbers.
             * @see _.inRange, _.rangeRight
             * @example
             *
             * _.range(4);
             * // => [0, 1, 2, 3]
             *
             * _.range(-4);
             * // => [0, -1, -2, -3]
             *
             * _.range(1, 5);
             * // => [1, 2, 3, 4]
             *
             * _.range(0, 20, 5);
             * // => [0, 5, 10, 15]
             *
             * _.range(0, -4, -1);
             * // => [0, -1, -2, -3]
             *
             * _.range(1, 4, 0);
             * // => [1, 1, 1]
             *
             * _.range(0);
             * // => []
             */
            var range = createRange()

            /**
             * This method is like `_.range` except that it populates values in
             * descending order.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {number} [start=0] The start of the range.
             * @param {number} end The end of the range.
             * @param {number} [step=1] The value to increment or decrement by.
             * @returns {Array} Returns the range of numbers.
             * @see _.inRange, _.range
             * @example
             *
             * _.rangeRight(4);
             * // => [3, 2, 1, 0]
             *
             * _.rangeRight(-4);
             * // => [-3, -2, -1, 0]
             *
             * _.rangeRight(1, 5);
             * // => [4, 3, 2, 1]
             *
             * _.rangeRight(0, 20, 5);
             * // => [15, 10, 5, 0]
             *
             * _.rangeRight(0, -4, -1);
             * // => [-3, -2, -1, 0]
             *
             * _.rangeRight(1, 4, 0);
             * // => [1, 1, 1]
             *
             * _.rangeRight(0);
             * // => []
             */
            var rangeRight = createRange(true)

            /**
             * This method returns a new empty array.
             *
             * @static
             * @memberOf _
             * @since 4.13.0
             * @category Util
             * @returns {Array} Returns the new empty array.
             * @example
             *
             * var arrays = _.times(2, _.stubArray);
             *
             * console.log(arrays);
             * // => [[], []]
             *
             * console.log(arrays[0] === arrays[1]);
             * // => false
             */
            function stubArray() {
              return []
            }

            /**
             * This method returns `false`.
             *
             * @static
             * @memberOf _
             * @since 4.13.0
             * @category Util
             * @returns {boolean} Returns `false`.
             * @example
             *
             * _.times(2, _.stubFalse);
             * // => [false, false]
             */
            function stubFalse() {
              return false
            }

            /**
             * This method returns a new empty object.
             *
             * @static
             * @memberOf _
             * @since 4.13.0
             * @category Util
             * @returns {Object} Returns the new empty object.
             * @example
             *
             * var objects = _.times(2, _.stubObject);
             *
             * console.log(objects);
             * // => [{}, {}]
             *
             * console.log(objects[0] === objects[1]);
             * // => false
             */
            function stubObject() {
              return {}
            }

            /**
             * This method returns an empty string.
             *
             * @static
             * @memberOf _
             * @since 4.13.0
             * @category Util
             * @returns {string} Returns the empty string.
             * @example
             *
             * _.times(2, _.stubString);
             * // => ['', '']
             */
            function stubString() {
              return ''
            }

            /**
             * This method returns `true`.
             *
             * @static
             * @memberOf _
             * @since 4.13.0
             * @category Util
             * @returns {boolean} Returns `true`.
             * @example
             *
             * _.times(2, _.stubTrue);
             * // => [true, true]
             */
            function stubTrue() {
              return true
            }

            /**
             * Invokes the iteratee `n` times, returning an array of the results of
             * each invocation. The iteratee is invoked with one argument; (index).
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {number} n The number of times to invoke `iteratee`.
             * @param {Function} [iteratee=_.identity] The function invoked per iteration.
             * @returns {Array} Returns the array of results.
             * @example
             *
             * _.times(3, String);
             * // => ['0', '1', '2']
             *
             *  _.times(4, _.constant(0));
             * // => [0, 0, 0, 0]
             */
            function times(n, iteratee) {
              n = toInteger(n)
              if (n < 1 || n > MAX_SAFE_INTEGER) {
                return []
              }
              var index = MAX_ARRAY_LENGTH,
                length = nativeMin(n, MAX_ARRAY_LENGTH)

              iteratee = getIteratee(iteratee)
              n -= MAX_ARRAY_LENGTH

              var result = baseTimes(length, iteratee)
              while (++index < n) {
                iteratee(index)
              }
              return result
            }

            /**
             * Converts `value` to a property path array.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Util
             * @param {*} value The value to convert.
             * @returns {Array} Returns the new property path array.
             * @example
             *
             * _.toPath('a.b.c');
             * // => ['a', 'b', 'c']
             *
             * _.toPath('a[0].b.c');
             * // => ['a', '0', 'b', 'c']
             */
            function toPath(value) {
              if (isArray(value)) {
                return arrayMap(value, toKey)
              }
              return isSymbol(value)
                ? [value]
                : copyArray(stringToPath(toString(value)))
            }

            /**
             * Generates a unique ID. If `prefix` is given, the ID is appended to it.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Util
             * @param {string} [prefix=''] The value to prefix the ID with.
             * @returns {string} Returns the unique ID.
             * @example
             *
             * _.uniqueId('contact_');
             * // => 'contact_104'
             *
             * _.uniqueId();
             * // => '105'
             */
            function uniqueId(prefix) {
              var id = ++idCounter
              return toString(prefix) + id
            }

            /*------------------------------------------------------------------------*/

            /**
             * Adds two numbers.
             *
             * @static
             * @memberOf _
             * @since 3.4.0
             * @category Math
             * @param {number} augend The first number in an addition.
             * @param {number} addend The second number in an addition.
             * @returns {number} Returns the total.
             * @example
             *
             * _.add(6, 4);
             * // => 10
             */
            var add = createMathOperation(function (augend, addend) {
              return augend + addend
            }, 0)

            /**
             * Computes `number` rounded up to `precision`.
             *
             * @static
             * @memberOf _
             * @since 3.10.0
             * @category Math
             * @param {number} number The number to round up.
             * @param {number} [precision=0] The precision to round up to.
             * @returns {number} Returns the rounded up number.
             * @example
             *
             * _.ceil(4.006);
             * // => 5
             *
             * _.ceil(6.004, 2);
             * // => 6.01
             *
             * _.ceil(6040, -2);
             * // => 6100
             */
            var ceil = createRound('ceil')

            /**
             * Divide two numbers.
             *
             * @static
             * @memberOf _
             * @since 4.7.0
             * @category Math
             * @param {number} dividend The first number in a division.
             * @param {number} divisor The second number in a division.
             * @returns {number} Returns the quotient.
             * @example
             *
             * _.divide(6, 4);
             * // => 1.5
             */
            var divide = createMathOperation(function (dividend, divisor) {
              return dividend / divisor
            }, 1)

            /**
             * Computes `number` rounded down to `precision`.
             *
             * @static
             * @memberOf _
             * @since 3.10.0
             * @category Math
             * @param {number} number The number to round down.
             * @param {number} [precision=0] The precision to round down to.
             * @returns {number} Returns the rounded down number.
             * @example
             *
             * _.floor(4.006);
             * // => 4
             *
             * _.floor(0.046, 2);
             * // => 0.04
             *
             * _.floor(4060, -2);
             * // => 4000
             */
            var floor = createRound('floor')

            /**
             * Computes the maximum value of `array`. If `array` is empty or falsey,
             * `undefined` is returned.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Math
             * @param {Array} array The array to iterate over.
             * @returns {*} Returns the maximum value.
             * @example
             *
             * _.max([4, 2, 8, 6]);
             * // => 8
             *
             * _.max([]);
             * // => undefined
             */
            function max(array) {
              return array && array.length
                ? baseExtremum(array, identity, baseGt)
                : undefined
            }

            /**
             * This method is like `_.max` except that it accepts `iteratee` which is
             * invoked for each element in `array` to generate the criterion by which
             * the value is ranked. The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {*} Returns the maximum value.
             * @example
             *
             * var objects = [{ 'n': 1 }, { 'n': 2 }];
             *
             * _.maxBy(objects, function(o) { return o.n; });
             * // => { 'n': 2 }
             *
             * // The `_.property` iteratee shorthand.
             * _.maxBy(objects, 'n');
             * // => { 'n': 2 }
             */
            function maxBy(array, iteratee) {
              return array && array.length
                ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
                : undefined
            }

            /**
             * Computes the mean of the values in `array`.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @returns {number} Returns the mean.
             * @example
             *
             * _.mean([4, 2, 8, 6]);
             * // => 5
             */
            function mean(array) {
              return baseMean(array, identity)
            }

            /**
             * This method is like `_.mean` except that it accepts `iteratee` which is
             * invoked for each element in `array` to generate the value to be averaged.
             * The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.7.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {number} Returns the mean.
             * @example
             *
             * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
             *
             * _.meanBy(objects, function(o) { return o.n; });
             * // => 5
             *
             * // The `_.property` iteratee shorthand.
             * _.meanBy(objects, 'n');
             * // => 5
             */
            function meanBy(array, iteratee) {
              return baseMean(array, getIteratee(iteratee, 2))
            }

            /**
             * Computes the minimum value of `array`. If `array` is empty or falsey,
             * `undefined` is returned.
             *
             * @static
             * @since 0.1.0
             * @memberOf _
             * @category Math
             * @param {Array} array The array to iterate over.
             * @returns {*} Returns the minimum value.
             * @example
             *
             * _.min([4, 2, 8, 6]);
             * // => 2
             *
             * _.min([]);
             * // => undefined
             */
            function min(array) {
              return array && array.length
                ? baseExtremum(array, identity, baseLt)
                : undefined
            }

            /**
             * This method is like `_.min` except that it accepts `iteratee` which is
             * invoked for each element in `array` to generate the criterion by which
             * the value is ranked. The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {*} Returns the minimum value.
             * @example
             *
             * var objects = [{ 'n': 1 }, { 'n': 2 }];
             *
             * _.minBy(objects, function(o) { return o.n; });
             * // => { 'n': 1 }
             *
             * // The `_.property` iteratee shorthand.
             * _.minBy(objects, 'n');
             * // => { 'n': 1 }
             */
            function minBy(array, iteratee) {
              return array && array.length
                ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
                : undefined
            }

            /**
             * Multiply two numbers.
             *
             * @static
             * @memberOf _
             * @since 4.7.0
             * @category Math
             * @param {number} multiplier The first number in a multiplication.
             * @param {number} multiplicand The second number in a multiplication.
             * @returns {number} Returns the product.
             * @example
             *
             * _.multiply(6, 4);
             * // => 24
             */
            var multiply = createMathOperation(function (
              multiplier,
              multiplicand
            ) {
              return multiplier * multiplicand
            },
            1)

            /**
             * Computes `number` rounded to `precision`.
             *
             * @static
             * @memberOf _
             * @since 3.10.0
             * @category Math
             * @param {number} number The number to round.
             * @param {number} [precision=0] The precision to round to.
             * @returns {number} Returns the rounded number.
             * @example
             *
             * _.round(4.006);
             * // => 4
             *
             * _.round(4.006, 2);
             * // => 4.01
             *
             * _.round(4060, -2);
             * // => 4100
             */
            var round = createRound('round')

            /**
             * Subtract two numbers.
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Math
             * @param {number} minuend The first number in a subtraction.
             * @param {number} subtrahend The second number in a subtraction.
             * @returns {number} Returns the difference.
             * @example
             *
             * _.subtract(6, 4);
             * // => 2
             */
            var subtract = createMathOperation(function (minuend, subtrahend) {
              return minuend - subtrahend
            }, 0)

            /**
             * Computes the sum of the values in `array`.
             *
             * @static
             * @memberOf _
             * @since 3.4.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @returns {number} Returns the sum.
             * @example
             *
             * _.sum([4, 2, 8, 6]);
             * // => 20
             */
            function sum(array) {
              return array && array.length ? baseSum(array, identity) : 0
            }

            /**
             * This method is like `_.sum` except that it accepts `iteratee` which is
             * invoked for each element in `array` to generate the value to be summed.
             * The iteratee is invoked with one argument: (value).
             *
             * @static
             * @memberOf _
             * @since 4.0.0
             * @category Math
             * @param {Array} array The array to iterate over.
             * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
             * @returns {number} Returns the sum.
             * @example
             *
             * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
             *
             * _.sumBy(objects, function(o) { return o.n; });
             * // => 20
             *
             * // The `_.property` iteratee shorthand.
             * _.sumBy(objects, 'n');
             * // => 20
             */
            function sumBy(array, iteratee) {
              return array && array.length
                ? baseSum(array, getIteratee(iteratee, 2))
                : 0
            }

            /*------------------------------------------------------------------------*/

            // Add methods that return wrapped values in chain sequences.
            lodash.after = after
            lodash.ary = ary
            lodash.assign = assign
            lodash.assignIn = assignIn
            lodash.assignInWith = assignInWith
            lodash.assignWith = assignWith
            lodash.at = at
            lodash.before = before
            lodash.bind = bind
            lodash.bindAll = bindAll
            lodash.bindKey = bindKey
            lodash.castArray = castArray
            lodash.chain = chain
            lodash.chunk = chunk
            lodash.compact = compact
            lodash.concat = concat
            lodash.cond = cond
            lodash.conforms = conforms
            lodash.constant = constant
            lodash.countBy = countBy
            lodash.create = create
            lodash.curry = curry
            lodash.curryRight = curryRight
            lodash.debounce = debounce
            lodash.defaults = defaults
            lodash.defaultsDeep = defaultsDeep
            lodash.defer = defer
            lodash.delay = delay
            lodash.difference = difference
            lodash.differenceBy = differenceBy
            lodash.differenceWith = differenceWith
            lodash.drop = drop
            lodash.dropRight = dropRight
            lodash.dropRightWhile = dropRightWhile
            lodash.dropWhile = dropWhile
            lodash.fill = fill
            lodash.filter = filter
            lodash.flatMap = flatMap
            lodash.flatMapDeep = flatMapDeep
            lodash.flatMapDepth = flatMapDepth
            lodash.flatten = flatten
            lodash.flattenDeep = flattenDeep
            lodash.flattenDepth = flattenDepth
            lodash.flip = flip
            lodash.flow = flow
            lodash.flowRight = flowRight
            lodash.fromPairs = fromPairs
            lodash.functions = functions
            lodash.functionsIn = functionsIn
            lodash.groupBy = groupBy
            lodash.initial = initial
            lodash.intersection = intersection
            lodash.intersectionBy = intersectionBy
            lodash.intersectionWith = intersectionWith
            lodash.invert = invert
            lodash.invertBy = invertBy
            lodash.invokeMap = invokeMap
            lodash.iteratee = iteratee
            lodash.keyBy = keyBy
            lodash.keys = keys
            lodash.keysIn = keysIn
            lodash.map = map
            lodash.mapKeys = mapKeys
            lodash.mapValues = mapValues
            lodash.matches = matches
            lodash.matchesProperty = matchesProperty
            lodash.memoize = memoize
            lodash.merge = merge
            lodash.mergeWith = mergeWith
            lodash.method = method
            lodash.methodOf = methodOf
            lodash.mixin = mixin
            lodash.negate = negate
            lodash.nthArg = nthArg
            lodash.omit = omit
            lodash.omitBy = omitBy
            lodash.once = once
            lodash.orderBy = orderBy
            lodash.over = over
            lodash.overArgs = overArgs
            lodash.overEvery = overEvery
            lodash.overSome = overSome
            lodash.partial = partial
            lodash.partialRight = partialRight
            lodash.partition = partition
            lodash.pick = pick
            lodash.pickBy = pickBy
            lodash.property = property
            lodash.propertyOf = propertyOf
            lodash.pull = pull
            lodash.pullAll = pullAll
            lodash.pullAllBy = pullAllBy
            lodash.pullAllWith = pullAllWith
            lodash.pullAt = pullAt
            lodash.range = range
            lodash.rangeRight = rangeRight
            lodash.rearg = rearg
            lodash.reject = reject
            lodash.remove = remove
            lodash.rest = rest
            lodash.reverse = reverse
            lodash.sampleSize = sampleSize
            lodash.set = set
            lodash.setWith = setWith
            lodash.shuffle = shuffle
            lodash.slice = slice
            lodash.sortBy = sortBy
            lodash.sortedUniq = sortedUniq
            lodash.sortedUniqBy = sortedUniqBy
            lodash.split = split
            lodash.spread = spread
            lodash.tail = tail
            lodash.take = take
            lodash.takeRight = takeRight
            lodash.takeRightWhile = takeRightWhile
            lodash.takeWhile = takeWhile
            lodash.tap = tap
            lodash.throttle = throttle
            lodash.thru = thru
            lodash.toArray = toArray
            lodash.toPairs = toPairs
            lodash.toPairsIn = toPairsIn
            lodash.toPath = toPath
            lodash.toPlainObject = toPlainObject
            lodash.transform = transform
            lodash.unary = unary
            lodash.union = union
            lodash.unionBy = unionBy
            lodash.unionWith = unionWith
            lodash.uniq = uniq
            lodash.uniqBy = uniqBy
            lodash.uniqWith = uniqWith
            lodash.unset = unset
            lodash.unzip = unzip
            lodash.unzipWith = unzipWith
            lodash.update = update
            lodash.updateWith = updateWith
            lodash.values = values
            lodash.valuesIn = valuesIn
            lodash.without = without
            lodash.words = words
            lodash.wrap = wrap
            lodash.xor = xor
            lodash.xorBy = xorBy
            lodash.xorWith = xorWith
            lodash.zip = zip
            lodash.zipObject = zipObject
            lodash.zipObjectDeep = zipObjectDeep
            lodash.zipWith = zipWith

            // Add aliases.
            lodash.entries = toPairs
            lodash.entriesIn = toPairsIn
            lodash.extend = assignIn
            lodash.extendWith = assignInWith

            // Add methods to `lodash.prototype`.
            mixin(lodash, lodash)

            /*------------------------------------------------------------------------*/

            // Add methods that return unwrapped values in chain sequences.
            lodash.add = add
            lodash.attempt = attempt
            lodash.camelCase = camelCase
            lodash.capitalize = capitalize
            lodash.ceil = ceil
            lodash.clamp = clamp
            lodash.clone = clone
            lodash.cloneDeep = cloneDeep
            lodash.cloneDeepWith = cloneDeepWith
            lodash.cloneWith = cloneWith
            lodash.conformsTo = conformsTo
            lodash.deburr = deburr
            lodash.defaultTo = defaultTo
            lodash.divide = divide
            lodash.endsWith = endsWith
            lodash.eq = eq
            lodash.escape = escape
            lodash.escapeRegExp = escapeRegExp
            lodash.every = every
            lodash.find = find
            lodash.findIndex = findIndex
            lodash.findKey = findKey
            lodash.findLast = findLast
            lodash.findLastIndex = findLastIndex
            lodash.findLastKey = findLastKey
            lodash.floor = floor
            lodash.forEach = forEach
            lodash.forEachRight = forEachRight
            lodash.forIn = forIn
            lodash.forInRight = forInRight
            lodash.forOwn = forOwn
            lodash.forOwnRight = forOwnRight
            lodash.get = get
            lodash.gt = gt
            lodash.gte = gte
            lodash.has = has
            lodash.hasIn = hasIn
            lodash.head = head
            lodash.identity = identity
            lodash.includes = includes
            lodash.indexOf = indexOf
            lodash.inRange = inRange
            lodash.invoke = invoke
            lodash.isArguments = isArguments
            lodash.isArray = isArray
            lodash.isArrayBuffer = isArrayBuffer
            lodash.isArrayLike = isArrayLike
            lodash.isArrayLikeObject = isArrayLikeObject
            lodash.isBoolean = isBoolean
            lodash.isBuffer = isBuffer
            lodash.isDate = isDate
            lodash.isElement = isElement
            lodash.isEmpty = isEmpty
            lodash.isEqual = isEqual
            lodash.isEqualWith = isEqualWith
            lodash.isError = isError
            lodash.isFinite = isFinite
            lodash.isFunction = isFunction
            lodash.isInteger = isInteger
            lodash.isLength = isLength
            lodash.isMap = isMap
            lodash.isMatch = isMatch
            lodash.isMatchWith = isMatchWith
            lodash.isNaN = isNaN
            lodash.isNative = isNative
            lodash.isNil = isNil
            lodash.isNull = isNull
            lodash.isNumber = isNumber
            lodash.isObject = isObject
            lodash.isObjectLike = isObjectLike
            lodash.isPlainObject = isPlainObject
            lodash.isRegExp = isRegExp
            lodash.isSafeInteger = isSafeInteger
            lodash.isSet = isSet
            lodash.isString = isString
            lodash.isSymbol = isSymbol
            lodash.isTypedArray = isTypedArray
            lodash.isUndefined = isUndefined
            lodash.isWeakMap = isWeakMap
            lodash.isWeakSet = isWeakSet
            lodash.join = join
            lodash.kebabCase = kebabCase
            lodash.last = last
            lodash.lastIndexOf = lastIndexOf
            lodash.lowerCase = lowerCase
            lodash.lowerFirst = lowerFirst
            lodash.lt = lt
            lodash.lte = lte
            lodash.max = max
            lodash.maxBy = maxBy
            lodash.mean = mean
            lodash.meanBy = meanBy
            lodash.min = min
            lodash.minBy = minBy
            lodash.stubArray = stubArray
            lodash.stubFalse = stubFalse
            lodash.stubObject = stubObject
            lodash.stubString = stubString
            lodash.stubTrue = stubTrue
            lodash.multiply = multiply
            lodash.nth = nth
            lodash.noConflict = noConflict
            lodash.noop = noop
            lodash.now = now
            lodash.pad = pad
            lodash.padEnd = padEnd
            lodash.padStart = padStart
            lodash.parseInt = parseInt
            lodash.random = random
            lodash.reduce = reduce
            lodash.reduceRight = reduceRight
            lodash.repeat = repeat
            lodash.replace = replace
            lodash.result = result
            lodash.round = round
            lodash.runInContext = runInContext
            lodash.sample = sample
            lodash.size = size
            lodash.snakeCase = snakeCase
            lodash.some = some
            lodash.sortedIndex = sortedIndex
            lodash.sortedIndexBy = sortedIndexBy
            lodash.sortedIndexOf = sortedIndexOf
            lodash.sortedLastIndex = sortedLastIndex
            lodash.sortedLastIndexBy = sortedLastIndexBy
            lodash.sortedLastIndexOf = sortedLastIndexOf
            lodash.startCase = startCase
            lodash.startsWith = startsWith
            lodash.subtract = subtract
            lodash.sum = sum
            lodash.sumBy = sumBy
            lodash.template = template
            lodash.times = times
            lodash.toFinite = toFinite
            lodash.toInteger = toInteger
            lodash.toLength = toLength
            lodash.toLower = toLower
            lodash.toNumber = toNumber
            lodash.toSafeInteger = toSafeInteger
            lodash.toString = toString
            lodash.toUpper = toUpper
            lodash.trim = trim
            lodash.trimEnd = trimEnd
            lodash.trimStart = trimStart
            lodash.truncate = truncate
            lodash.unescape = unescape
            lodash.uniqueId = uniqueId
            lodash.upperCase = upperCase
            lodash.upperFirst = upperFirst

            // Add aliases.
            lodash.each = forEach
            lodash.eachRight = forEachRight
            lodash.first = head

            mixin(
              lodash,
              (function () {
                var source = {}
                baseForOwn(lodash, function (func, methodName) {
                  if (!hasOwnProperty.call(lodash.prototype, methodName)) {
                    source[methodName] = func
                  }
                })
                return source
              })(),
              { chain: false }
            )

            /*------------------------------------------------------------------------*/

            /**
             * The semantic version number.
             *
             * @static
             * @memberOf _
             * @type {string}
             */
            lodash.VERSION = VERSION

            // Assign default placeholders.
            arrayEach(
              [
                'bind',
                'bindKey',
                'curry',
                'curryRight',
                'partial',
                'partialRight',
              ],
              function (methodName) {
                lodash[methodName].placeholder = lodash
              }
            )

            // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
            arrayEach(['drop', 'take'], function (methodName, index) {
              LazyWrapper.prototype[methodName] = function (n) {
                n = n === undefined ? 1 : nativeMax(toInteger(n), 0)

                var result =
                  this.__filtered__ && !index
                    ? new LazyWrapper(this)
                    : this.clone()

                if (result.__filtered__) {
                  result.__takeCount__ = nativeMin(n, result.__takeCount__)
                } else {
                  result.__views__.push({
                    size: nativeMin(n, MAX_ARRAY_LENGTH),
                    type: methodName + (result.__dir__ < 0 ? 'Right' : ''),
                  })
                }
                return result
              }

              LazyWrapper.prototype[methodName + 'Right'] = function (n) {
                return this.reverse()[methodName](n).reverse()
              }
            })

            // Add `LazyWrapper` methods that accept an `iteratee` value.
            arrayEach(
              ['filter', 'map', 'takeWhile'],
              function (methodName, index) {
                var type = index + 1,
                  isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG

                LazyWrapper.prototype[methodName] = function (iteratee) {
                  var result = this.clone()
                  result.__iteratees__.push({
                    iteratee: getIteratee(iteratee, 3),
                    type: type,
                  })
                  result.__filtered__ = result.__filtered__ || isFilter
                  return result
                }
              }
            )

            // Add `LazyWrapper` methods for `_.head` and `_.last`.
            arrayEach(['head', 'last'], function (methodName, index) {
              var takeName = 'take' + (index ? 'Right' : '')

              LazyWrapper.prototype[methodName] = function () {
                return this[takeName](1).value()[0]
              }
            })

            // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
            arrayEach(['initial', 'tail'], function (methodName, index) {
              var dropName = 'drop' + (index ? '' : 'Right')

              LazyWrapper.prototype[methodName] = function () {
                return this.__filtered__
                  ? new LazyWrapper(this)
                  : this[dropName](1)
              }
            })

            LazyWrapper.prototype.compact = function () {
              return this.filter(identity)
            }

            LazyWrapper.prototype.find = function (predicate) {
              return this.filter(predicate).head()
            }

            LazyWrapper.prototype.findLast = function (predicate) {
              return this.reverse().find(predicate)
            }

            LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
              if (typeof path == 'function') {
                return new LazyWrapper(this)
              }
              return this.map(function (value) {
                return baseInvoke(value, path, args)
              })
            })

            LazyWrapper.prototype.reject = function (predicate) {
              return this.filter(negate(getIteratee(predicate)))
            }

            LazyWrapper.prototype.slice = function (start, end) {
              start = toInteger(start)

              var result = this
              if (result.__filtered__ && (start > 0 || end < 0)) {
                return new LazyWrapper(result)
              }
              if (start < 0) {
                result = result.takeRight(-start)
              } else if (start) {
                result = result.drop(start)
              }
              if (end !== undefined) {
                end = toInteger(end)
                result =
                  end < 0 ? result.dropRight(-end) : result.take(end - start)
              }
              return result
            }

            LazyWrapper.prototype.takeRightWhile = function (predicate) {
              return this.reverse().takeWhile(predicate).reverse()
            }

            LazyWrapper.prototype.toArray = function () {
              return this.take(MAX_ARRAY_LENGTH)
            }

            // Add `LazyWrapper` methods to `lodash.prototype`.
            baseForOwn(LazyWrapper.prototype, function (func, methodName) {
              var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(
                  methodName
                ),
                isTaker = /^(?:head|last)$/.test(methodName),
                lodashFunc =
                  lodash[
                    isTaker
                      ? 'take' + (methodName == 'last' ? 'Right' : '')
                      : methodName
                  ],
                retUnwrapped = isTaker || /^find/.test(methodName)

              if (!lodashFunc) {
                return
              }
              lodash.prototype[methodName] = function () {
                var value = this.__wrapped__,
                  args = isTaker ? [1] : arguments,
                  isLazy = value instanceof LazyWrapper,
                  iteratee = args[0],
                  useLazy = isLazy || isArray(value)

                var interceptor = function (value) {
                  var result = lodashFunc.apply(
                    lodash,
                    arrayPush([value], args)
                  )
                  return isTaker && chainAll ? result[0] : result
                }

                if (
                  useLazy &&
                  checkIteratee &&
                  typeof iteratee == 'function' &&
                  iteratee.length != 1
                ) {
                  // Avoid lazy use if the iteratee has a "length" value other than `1`.
                  isLazy = useLazy = false
                }
                var chainAll = this.__chain__,
                  isHybrid = !!this.__actions__.length,
                  isUnwrapped = retUnwrapped && !chainAll,
                  onlyLazy = isLazy && !isHybrid

                if (!retUnwrapped && useLazy) {
                  value = onlyLazy ? value : new LazyWrapper(this)
                  var result = func.apply(value, args)
                  result.__actions__.push({
                    func: thru,
                    args: [interceptor],
                    thisArg: undefined,
                  })
                  return new LodashWrapper(result, chainAll)
                }
                if (isUnwrapped && onlyLazy) {
                  return func.apply(this, args)
                }
                result = this.thru(interceptor)
                return isUnwrapped
                  ? isTaker
                    ? result.value()[0]
                    : result.value()
                  : result
              }
            })

            // Add `Array` methods to `lodash.prototype`.
            arrayEach(
              ['pop', 'push', 'shift', 'sort', 'splice', 'unshift'],
              function (methodName) {
                var func = arrayProto[methodName],
                  chainName = /^(?:push|sort|unshift)$/.test(methodName)
                    ? 'tap'
                    : 'thru',
                  retUnwrapped = /^(?:pop|shift)$/.test(methodName)

                lodash.prototype[methodName] = function () {
                  var args = arguments
                  if (retUnwrapped && !this.__chain__) {
                    var value = this.value()
                    return func.apply(isArray(value) ? value : [], args)
                  }
                  return this[chainName](function (value) {
                    return func.apply(isArray(value) ? value : [], args)
                  })
                }
              }
            )

            // Map minified method names to their real names.
            baseForOwn(LazyWrapper.prototype, function (func, methodName) {
              var lodashFunc = lodash[methodName]
              if (lodashFunc) {
                var key = lodashFunc.name + ''
                if (!hasOwnProperty.call(realNames, key)) {
                  realNames[key] = []
                }
                realNames[key].push({ name: methodName, func: lodashFunc })
              }
            })

            realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [
              {
                name: 'wrapper',
                func: undefined,
              },
            ]

            // Add methods to `LazyWrapper`.
            LazyWrapper.prototype.clone = lazyClone
            LazyWrapper.prototype.reverse = lazyReverse
            LazyWrapper.prototype.value = lazyValue

            // Add chain sequence methods to the `lodash` wrapper.
            lodash.prototype.at = wrapperAt
            lodash.prototype.chain = wrapperChain
            lodash.prototype.commit = wrapperCommit
            lodash.prototype.next = wrapperNext
            lodash.prototype.plant = wrapperPlant
            lodash.prototype.reverse = wrapperReverse
            lodash.prototype.toJSON =
              lodash.prototype.valueOf =
              lodash.prototype.value =
                wrapperValue

            // Add lazy aliases.
            lodash.prototype.first = lodash.prototype.head

            if (symIterator) {
              lodash.prototype[symIterator] = wrapperToIterator
            }
            return lodash
          }

          /*--------------------------------------------------------------------------*/

          // Export lodash.
          var _ = runInContext()

          // Some AMD build optimizers, like r.js, check for condition patterns like:
          if (true) {
            // Expose Lodash on the global object to prevent errors when Lodash is
            // loaded by a script tag in the presence of an AMD loader.
            // See http://requirejs.org/docs/errors.html#mismatch for more details.
            // Use `_.noConflict` to remove Lodash from the global object.
            root._ = _

            // Define as an anonymous module so, through path mapping, it can be
            // referenced as the "underscore" module.
            !((__WEBPACK_AMD_DEFINE_RESULT__ = function () {
              return _
            }.call(exports, __webpack_require__, exports, module)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
          }
          // Check for `exports` after `define` in case a build optimizer adds it.
          else {
          }
        }).call(this)

        /***/
      },

    /***/ './resources/css/app.sass':
      /*!********************************!*\
  !*** ./resources/css/app.sass ***!
  \********************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        // extracted by mini-css-extract-plugin

        /***/
      },

    /***/ './node_modules/moment/locale/af.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/af.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Afrikaans [af]
        //! author : Werner Mollentze : https://github.com/wernerm

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var af = moment.defineLocale('af', {
            months:
              'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
            weekdays:
              'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
                '_'
              ),
            weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
            weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
            meridiemParse: /vm|nm/i,
            isPM: function (input) {
              return /^nm$/i.test(input)
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 12) {
                return isLower ? 'vm' : 'VM'
              } else {
                return isLower ? 'nm' : 'NM'
              }
            },
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Vandag om] LT',
              nextDay: '[Môre om] LT',
              nextWeek: 'dddd [om] LT',
              lastDay: '[Gister om] LT',
              lastWeek: '[Laas] dddd [om] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'oor %s',
              past: '%s gelede',
              s: "'n paar sekondes",
              ss: '%d sekondes',
              m: "'n minuut",
              mm: '%d minute',
              h: "'n uur",
              hh: '%d ure',
              d: "'n dag",
              dd: '%d dae',
              M: "'n maand",
              MM: '%d maande',
              y: "'n jaar",
              yy: '%d jaar',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function (number) {
              return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
              ) // Thanks to Joris Röling : https://github.com/jjupiter
            },
            week: {
              dow: 1, // Maandag is die eerste dag van die week.
              doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
            },
          })

          return af
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-dz.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-dz.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic (Algeria) [ar-dz]
        //! author : Amine Roukh: https://github.com/Amine27
        //! author : Abdel Said: https://github.com/abdelsaid
        //! author : Ahmed Elkhatib
        //! author : forabi https://github.com/forabi
        //! author : Noureddine LOUAHEDJ : https://github.com/noureddinem

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var pluralForm = function (n) {
              return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5
            },
            plurals = {
              s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
              ],
              m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
              ],
              h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
              ],
              d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
              ],
              M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
              ],
              y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
              ],
            },
            pluralize = function (u) {
              return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                  str = plurals[u][pluralForm(number)]
                if (f === 2) {
                  str = str[withoutSuffix ? 0 : 1]
                }
                return str.replace(/%d/i, number)
              }
            },
            months = [
              'جانفي',
              'فيفري',
              'مارس',
              'أفريل',
              'ماي',
              'جوان',
              'جويلية',
              'أوت',
              'سبتمبر',
              'أكتوبر',
              'نوفمبر',
              'ديسمبر',
            ]

          var arDz = moment.defineLocale('ar-dz', {
            months: months,
            monthsShort: months,
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'D/\u200FM/\u200FYYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /ص|م/,
            isPM: function (input) {
              return 'م' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ص'
              } else {
                return 'م'
              }
            },
            calendar: {
              sameDay: '[اليوم عند الساعة] LT',
              nextDay: '[غدًا عند الساعة] LT',
              nextWeek: 'dddd [عند الساعة] LT',
              lastDay: '[أمس عند الساعة] LT',
              lastWeek: 'dddd [عند الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'بعد %s',
              past: 'منذ %s',
              s: pluralize('s'),
              ss: pluralize('s'),
              m: pluralize('m'),
              mm: pluralize('m'),
              h: pluralize('h'),
              hh: pluralize('h'),
              d: pluralize('d'),
              dd: pluralize('d'),
              M: pluralize('M'),
              MM: pluralize('M'),
              y: pluralize('y'),
              yy: pluralize('y'),
            },
            postformat: function (string) {
              return string.replace(/,/g, '،')
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return arDz
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-kw.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-kw.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic (Kuwait) [ar-kw]
        //! author : Nusret Parlak: https://github.com/nusretparlak

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var arKw = moment.defineLocale('ar-kw', {
            months:
              'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
                '_'
              ),
            monthsShort:
              'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
                '_'
              ),
            weekdays:
              'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[اليوم على الساعة] LT',
              nextDay: '[غدا على الساعة] LT',
              nextWeek: 'dddd [على الساعة] LT',
              lastDay: '[أمس على الساعة] LT',
              lastWeek: 'dddd [على الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'في %s',
              past: 'منذ %s',
              s: 'ثوان',
              ss: '%d ثانية',
              m: 'دقيقة',
              mm: '%d دقائق',
              h: 'ساعة',
              hh: '%d ساعات',
              d: 'يوم',
              dd: '%d أيام',
              M: 'شهر',
              MM: '%d أشهر',
              y: 'سنة',
              yy: '%d سنوات',
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return arKw
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-ly.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ly.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic (Lybia) [ar-ly]
        //! author : Ali Hmer: https://github.com/kikoanis

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '1',
              2: '2',
              3: '3',
              4: '4',
              5: '5',
              6: '6',
              7: '7',
              8: '8',
              9: '9',
              0: '0',
            },
            pluralForm = function (n) {
              return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5
            },
            plurals = {
              s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
              ],
              m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
              ],
              h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
              ],
              d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
              ],
              M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
              ],
              y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
              ],
            },
            pluralize = function (u) {
              return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                  str = plurals[u][pluralForm(number)]
                if (f === 2) {
                  str = str[withoutSuffix ? 0 : 1]
                }
                return str.replace(/%d/i, number)
              }
            },
            months = [
              'يناير',
              'فبراير',
              'مارس',
              'أبريل',
              'مايو',
              'يونيو',
              'يوليو',
              'أغسطس',
              'سبتمبر',
              'أكتوبر',
              'نوفمبر',
              'ديسمبر',
            ]

          var arLy = moment.defineLocale('ar-ly', {
            months: months,
            monthsShort: months,
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'D/\u200FM/\u200FYYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /ص|م/,
            isPM: function (input) {
              return 'م' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ص'
              } else {
                return 'م'
              }
            },
            calendar: {
              sameDay: '[اليوم عند الساعة] LT',
              nextDay: '[غدًا عند الساعة] LT',
              nextWeek: 'dddd [عند الساعة] LT',
              lastDay: '[أمس عند الساعة] LT',
              lastWeek: 'dddd [عند الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'بعد %s',
              past: 'منذ %s',
              s: pluralize('s'),
              ss: pluralize('s'),
              m: pluralize('m'),
              mm: pluralize('m'),
              h: pluralize('h'),
              hh: pluralize('h'),
              d: pluralize('d'),
              dd: pluralize('d'),
              M: pluralize('M'),
              MM: pluralize('M'),
              y: pluralize('y'),
              yy: pluralize('y'),
            },
            preparse: function (string) {
              return string.replace(/،/g, ',')
            },
            postformat: function (string) {
              return string
                .replace(/\d/g, function (match) {
                  return symbolMap[match]
                })
                .replace(/,/g, '،')
            },
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return arLy
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-ma.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ma.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic (Morocco) [ar-ma]
        //! author : ElFadili Yassine : https://github.com/ElFadiliY
        //! author : Abdel Said : https://github.com/abdelsaid

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var arMa = moment.defineLocale('ar-ma', {
            months:
              'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
                '_'
              ),
            monthsShort:
              'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
                '_'
              ),
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[اليوم على الساعة] LT',
              nextDay: '[غدا على الساعة] LT',
              nextWeek: 'dddd [على الساعة] LT',
              lastDay: '[أمس على الساعة] LT',
              lastWeek: 'dddd [على الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'في %s',
              past: 'منذ %s',
              s: 'ثوان',
              ss: '%d ثانية',
              m: 'دقيقة',
              mm: '%d دقائق',
              h: 'ساعة',
              hh: '%d ساعات',
              d: 'يوم',
              dd: '%d أيام',
              M: 'شهر',
              MM: '%d أشهر',
              y: 'سنة',
              yy: '%d سنوات',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return arMa
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-sa.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-sa.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic (Saudi Arabia) [ar-sa]
        //! author : Suhail Alkowaileet : https://github.com/xsoh

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '١',
              2: '٢',
              3: '٣',
              4: '٤',
              5: '٥',
              6: '٦',
              7: '٧',
              8: '٨',
              9: '٩',
              0: '٠',
            },
            numberMap = {
              '١': '1',
              '٢': '2',
              '٣': '3',
              '٤': '4',
              '٥': '5',
              '٦': '6',
              '٧': '7',
              '٨': '8',
              '٩': '9',
              '٠': '0',
            }

          var arSa = moment.defineLocale('ar-sa', {
            months:
              'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
                '_'
              ),
            monthsShort:
              'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
                '_'
              ),
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /ص|م/,
            isPM: function (input) {
              return 'م' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ص'
              } else {
                return 'م'
              }
            },
            calendar: {
              sameDay: '[اليوم على الساعة] LT',
              nextDay: '[غدا على الساعة] LT',
              nextWeek: 'dddd [على الساعة] LT',
              lastDay: '[أمس على الساعة] LT',
              lastWeek: 'dddd [على الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'في %s',
              past: 'منذ %s',
              s: 'ثوان',
              ss: '%d ثانية',
              m: 'دقيقة',
              mm: '%d دقائق',
              h: 'ساعة',
              hh: '%d ساعات',
              d: 'يوم',
              dd: '%d أيام',
              M: 'شهر',
              MM: '%d أشهر',
              y: 'سنة',
              yy: '%d سنوات',
            },
            preparse: function (string) {
              return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                  return numberMap[match]
                })
                .replace(/،/g, ',')
            },
            postformat: function (string) {
              return string
                .replace(/\d/g, function (match) {
                  return symbolMap[match]
                })
                .replace(/,/g, '،')
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return arSa
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar-tn.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-tn.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale  :  Arabic (Tunisia) [ar-tn]
        //! author : Nader Toukabri : https://github.com/naderio

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var arTn = moment.defineLocale('ar-tn', {
            months:
              'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
                '_'
              ),
            monthsShort:
              'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
                '_'
              ),
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[اليوم على الساعة] LT',
              nextDay: '[غدا على الساعة] LT',
              nextWeek: 'dddd [على الساعة] LT',
              lastDay: '[أمس على الساعة] LT',
              lastWeek: 'dddd [على الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'في %s',
              past: 'منذ %s',
              s: 'ثوان',
              ss: '%d ثانية',
              m: 'دقيقة',
              mm: '%d دقائق',
              h: 'ساعة',
              hh: '%d ساعات',
              d: 'يوم',
              dd: '%d أيام',
              M: 'شهر',
              MM: '%d أشهر',
              y: 'سنة',
              yy: '%d سنوات',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return arTn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ar.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ar.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Arabic [ar]
        //! author : Abdel Said: https://github.com/abdelsaid
        //! author : Ahmed Elkhatib
        //! author : forabi https://github.com/forabi

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '١',
              2: '٢',
              3: '٣',
              4: '٤',
              5: '٥',
              6: '٦',
              7: '٧',
              8: '٨',
              9: '٩',
              0: '٠',
            },
            numberMap = {
              '١': '1',
              '٢': '2',
              '٣': '3',
              '٤': '4',
              '٥': '5',
              '٦': '6',
              '٧': '7',
              '٨': '8',
              '٩': '9',
              '٠': '0',
            },
            pluralForm = function (n) {
              return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5
            },
            plurals = {
              s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
              ],
              m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
              ],
              h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
              ],
              d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
              ],
              M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
              ],
              y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
              ],
            },
            pluralize = function (u) {
              return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                  str = plurals[u][pluralForm(number)]
                if (f === 2) {
                  str = str[withoutSuffix ? 0 : 1]
                }
                return str.replace(/%d/i, number)
              }
            },
            months = [
              'يناير',
              'فبراير',
              'مارس',
              'أبريل',
              'مايو',
              'يونيو',
              'يوليو',
              'أغسطس',
              'سبتمبر',
              'أكتوبر',
              'نوفمبر',
              'ديسمبر',
            ]

          var ar = moment.defineLocale('ar', {
            months: months,
            monthsShort: months,
            weekdays:
              'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
            weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
            weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'D/\u200FM/\u200FYYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /ص|م/,
            isPM: function (input) {
              return 'م' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ص'
              } else {
                return 'م'
              }
            },
            calendar: {
              sameDay: '[اليوم عند الساعة] LT',
              nextDay: '[غدًا عند الساعة] LT',
              nextWeek: 'dddd [عند الساعة] LT',
              lastDay: '[أمس عند الساعة] LT',
              lastWeek: 'dddd [عند الساعة] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'بعد %s',
              past: 'منذ %s',
              s: pluralize('s'),
              ss: pluralize('s'),
              m: pluralize('m'),
              mm: pluralize('m'),
              h: pluralize('h'),
              hh: pluralize('h'),
              d: pluralize('d'),
              dd: pluralize('d'),
              M: pluralize('M'),
              MM: pluralize('M'),
              y: pluralize('y'),
              yy: pluralize('y'),
            },
            preparse: function (string) {
              return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                  return numberMap[match]
                })
                .replace(/،/g, ',')
            },
            postformat: function (string) {
              return string
                .replace(/\d/g, function (match) {
                  return symbolMap[match]
                })
                .replace(/,/g, '،')
            },
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return ar
        })

        /***/
      },

    /***/ './node_modules/moment/locale/az.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/az.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Azerbaijani [az]
        //! author : topchiyev : https://github.com/topchiyev

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            1: '-inci',
            5: '-inci',
            8: '-inci',
            70: '-inci',
            80: '-inci',
            2: '-nci',
            7: '-nci',
            20: '-nci',
            50: '-nci',
            3: '-üncü',
            4: '-üncü',
            100: '-üncü',
            6: '-ncı',
            9: '-uncu',
            10: '-uncu',
            30: '-uncu',
            60: '-ıncı',
            90: '-ıncı',
          }

          var az = moment.defineLocale('az', {
            months:
              'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
                '_'
              ),
            monthsShort:
              'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
            weekdays:
              'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
                '_'
              ),
            weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
            weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[bugün saat] LT',
              nextDay: '[sabah saat] LT',
              nextWeek: '[gələn həftə] dddd [saat] LT',
              lastDay: '[dünən] LT',
              lastWeek: '[keçən həftə] dddd [saat] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s sonra',
              past: '%s əvvəl',
              s: 'bir neçə saniyə',
              ss: '%d saniyə',
              m: 'bir dəqiqə',
              mm: '%d dəqiqə',
              h: 'bir saat',
              hh: '%d saat',
              d: 'bir gün',
              dd: '%d gün',
              M: 'bir ay',
              MM: '%d ay',
              y: 'bir il',
              yy: '%d il',
            },
            meridiemParse: /gecə|səhər|gündüz|axşam/,
            isPM: function (input) {
              return /^(gündüz|axşam)$/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'gecə'
              } else if (hour < 12) {
                return 'səhər'
              } else if (hour < 17) {
                return 'gündüz'
              } else {
                return 'axşam'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
            ordinal: function (number) {
              if (number === 0) {
                // special case for zero
                return number + '-ıncı'
              }
              var a = number % 10,
                b = (number % 100) - a,
                c = number >= 100 ? 100 : null
              return number + (suffixes[a] || suffixes[b] || suffixes[c])
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return az
        })

        /***/
      },

    /***/ './node_modules/moment/locale/be.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/be.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Belarusian [be]
        //! author : Dmitry Demidov : https://github.com/demidov91
        //! author: Praleska: http://praleska.pro/
        //! Author : Menelion Elensúle : https://github.com/Oire

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function plural(word, num) {
            var forms = word.split('_')
            return num % 10 === 1 && num % 100 !== 11
              ? forms[0]
              : num % 10 >= 2 &&
                num % 10 <= 4 &&
                (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2]
          }
          function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
              ss: withoutSuffix
                ? 'секунда_секунды_секунд'
                : 'секунду_секунды_секунд',
              mm: withoutSuffix
                ? 'хвіліна_хвіліны_хвілін'
                : 'хвіліну_хвіліны_хвілін',
              hh: withoutSuffix
                ? 'гадзіна_гадзіны_гадзін'
                : 'гадзіну_гадзіны_гадзін',
              dd: 'дзень_дні_дзён',
              MM: 'месяц_месяцы_месяцаў',
              yy: 'год_гады_гадоў',
            }
            if (key === 'm') {
              return withoutSuffix ? 'хвіліна' : 'хвіліну'
            } else if (key === 'h') {
              return withoutSuffix ? 'гадзіна' : 'гадзіну'
            } else {
              return number + ' ' + plural(format[key], +number)
            }
          }

          var be = moment.defineLocale('be', {
            months: {
              format:
                'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
                  '_'
                ),
              standalone:
                'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
                  '_'
                ),
            },
            monthsShort:
              'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
                '_'
              ),
            weekdays: {
              format:
                'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
                  '_'
                ),
              standalone:
                'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
                  '_'
                ),
              isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
            },
            weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
            weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY г.',
              LLL: 'D MMMM YYYY г., HH:mm',
              LLLL: 'dddd, D MMMM YYYY г., HH:mm',
            },
            calendar: {
              sameDay: '[Сёння ў] LT',
              nextDay: '[Заўтра ў] LT',
              lastDay: '[Учора ў] LT',
              nextWeek: function () {
                return '[У] dddd [ў] LT'
              },
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                  case 3:
                  case 5:
                  case 6:
                    return '[У мінулую] dddd [ў] LT'
                  case 1:
                  case 2:
                  case 4:
                    return '[У мінулы] dddd [ў] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'праз %s',
              past: '%s таму',
              s: 'некалькі секунд',
              m: relativeTimeWithPlural,
              mm: relativeTimeWithPlural,
              h: relativeTimeWithPlural,
              hh: relativeTimeWithPlural,
              d: 'дзень',
              dd: relativeTimeWithPlural,
              M: 'месяц',
              MM: relativeTimeWithPlural,
              y: 'год',
              yy: relativeTimeWithPlural,
            },
            meridiemParse: /ночы|раніцы|дня|вечара/,
            isPM: function (input) {
              return /^(дня|вечара)$/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'ночы'
              } else if (hour < 12) {
                return 'раніцы'
              } else if (hour < 17) {
                return 'дня'
              } else {
                return 'вечара'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                  return (number % 10 === 2 || number % 10 === 3) &&
                    number % 100 !== 12 &&
                    number % 100 !== 13
                    ? number + '-і'
                    : number + '-ы'
                case 'D':
                  return number + '-га'
                default:
                  return number
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return be
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bg.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/bg.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Bulgarian [bg]
        //! author : Krasen Borisov : https://github.com/kraz

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var bg = moment.defineLocale('bg', {
            months:
              'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
                '_'
              ),
            monthsShort:
              'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
            weekdays:
              'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
                '_'
              ),
            weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
            weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'D.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY H:mm',
              LLLL: 'dddd, D MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[Днес в] LT',
              nextDay: '[Утре в] LT',
              nextWeek: 'dddd [в] LT',
              lastDay: '[Вчера в] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                  case 3:
                  case 6:
                    return '[Миналата] dddd [в] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[Миналия] dddd [в] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'след %s',
              past: 'преди %s',
              s: 'няколко секунди',
              ss: '%d секунди',
              m: 'минута',
              mm: '%d минути',
              h: 'час',
              hh: '%d часа',
              d: 'ден',
              dd: '%d дена',
              w: 'седмица',
              ww: '%d седмици',
              M: 'месец',
              MM: '%d месеца',
              y: 'година',
              yy: '%d години',
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function (number) {
              var lastDigit = number % 10,
                last2Digits = number % 100
              if (number === 0) {
                return number + '-ев'
              } else if (last2Digits === 0) {
                return number + '-ен'
              } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти'
              } else if (lastDigit === 1) {
                return number + '-ви'
              } else if (lastDigit === 2) {
                return number + '-ри'
              } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми'
              } else {
                return number + '-ти'
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return bg
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bm.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/bm.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Bambara [bm]
        //! author : Estelle Comment : https://github.com/estellecomment

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var bm = moment.defineLocale('bm', {
            months:
              'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
                '_'
              ),
            monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split(
              '_'
            ),
            weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
            weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
            weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'MMMM [tile] D [san] YYYY',
              LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
              LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            },
            calendar: {
              sameDay: '[Bi lɛrɛ] LT',
              nextDay: '[Sini lɛrɛ] LT',
              nextWeek: 'dddd [don lɛrɛ] LT',
              lastDay: '[Kunu lɛrɛ] LT',
              lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s kɔnɔ',
              past: 'a bɛ %s bɔ',
              s: 'sanga dama dama',
              ss: 'sekondi %d',
              m: 'miniti kelen',
              mm: 'miniti %d',
              h: 'lɛrɛ kelen',
              hh: 'lɛrɛ %d',
              d: 'tile kelen',
              dd: 'tile %d',
              M: 'kalo kelen',
              MM: 'kalo %d',
              y: 'san kelen',
              yy: 'san %d',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return bm
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bn-bd.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/bn-bd.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Bengali (Bangladesh) [bn-bd]
        //! author : Asraf Hossain Patoary : https://github.com/ashwoolford

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '১',
              2: '২',
              3: '৩',
              4: '৪',
              5: '৫',
              6: '৬',
              7: '৭',
              8: '৮',
              9: '৯',
              0: '০',
            },
            numberMap = {
              '১': '1',
              '২': '2',
              '৩': '3',
              '৪': '4',
              '৫': '5',
              '৬': '6',
              '৭': '7',
              '৮': '8',
              '৯': '9',
              '০': '0',
            }

          var bnBd = moment.defineLocale('bn-bd', {
            months:
              'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
                '_'
              ),
            monthsShort:
              'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
                '_'
              ),
            weekdays:
              'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
                '_'
              ),
            weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
            weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
            longDateFormat: {
              LT: 'A h:mm সময়',
              LTS: 'A h:mm:ss সময়',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm সময়',
              LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
            },
            calendar: {
              sameDay: '[আজ] LT',
              nextDay: '[আগামীকাল] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[গতকাল] LT',
              lastWeek: '[গত] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s পরে',
              past: '%s আগে',
              s: 'কয়েক সেকেন্ড',
              ss: '%d সেকেন্ড',
              m: 'এক মিনিট',
              mm: '%d মিনিট',
              h: 'এক ঘন্টা',
              hh: '%d ঘন্টা',
              d: 'এক দিন',
              dd: '%d দিন',
              M: 'এক মাস',
              MM: '%d মাস',
              y: 'এক বছর',
              yy: '%d বছর',
            },
            preparse: function (string) {
              return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },

            meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'রাত') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'ভোর') {
                return hour
              } else if (meridiem === 'সকাল') {
                return hour
              } else if (meridiem === 'দুপুর') {
                return hour >= 3 ? hour : hour + 12
              } else if (meridiem === 'বিকাল') {
                return hour + 12
              } else if (meridiem === 'সন্ধ্যা') {
                return hour + 12
              }
            },

            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'রাত'
              } else if (hour < 6) {
                return 'ভোর'
              } else if (hour < 12) {
                return 'সকাল'
              } else if (hour < 15) {
                return 'দুপুর'
              } else if (hour < 18) {
                return 'বিকাল'
              } else if (hour < 20) {
                return 'সন্ধ্যা'
              } else {
                return 'রাত'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return bnBd
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bn.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/bn.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Bengali [bn]
        //! author : Kaushik Gandhi : https://github.com/kaushikgandhi

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '১',
              2: '২',
              3: '৩',
              4: '৪',
              5: '৫',
              6: '৬',
              7: '৭',
              8: '৮',
              9: '৯',
              0: '০',
            },
            numberMap = {
              '১': '1',
              '২': '2',
              '৩': '3',
              '৪': '4',
              '৫': '5',
              '৬': '6',
              '৭': '7',
              '৮': '8',
              '৯': '9',
              '০': '0',
            }

          var bn = moment.defineLocale('bn', {
            months:
              'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
                '_'
              ),
            monthsShort:
              'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
                '_'
              ),
            weekdays:
              'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
                '_'
              ),
            weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
            weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
            longDateFormat: {
              LT: 'A h:mm সময়',
              LTS: 'A h:mm:ss সময়',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm সময়',
              LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
            },
            calendar: {
              sameDay: '[আজ] LT',
              nextDay: '[আগামীকাল] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[গতকাল] LT',
              lastWeek: '[গত] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s পরে',
              past: '%s আগে',
              s: 'কয়েক সেকেন্ড',
              ss: '%d সেকেন্ড',
              m: 'এক মিনিট',
              mm: '%d মিনিট',
              h: 'এক ঘন্টা',
              hh: '%d ঘন্টা',
              d: 'এক দিন',
              dd: '%d দিন',
              M: 'এক মাস',
              MM: '%d মাস',
              y: 'এক বছর',
              yy: '%d বছর',
            },
            preparse: function (string) {
              return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                (meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল'
              ) {
                return hour + 12
              } else {
                return hour
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'রাত'
              } else if (hour < 10) {
                return 'সকাল'
              } else if (hour < 17) {
                return 'দুপুর'
              } else if (hour < 20) {
                return 'বিকাল'
              } else {
                return 'রাত'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return bn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bo.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/bo.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Tibetan [bo]
        //! author : Thupten N. Chakrishar : https://github.com/vajradog

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '༡',
              2: '༢',
              3: '༣',
              4: '༤',
              5: '༥',
              6: '༦',
              7: '༧',
              8: '༨',
              9: '༩',
              0: '༠',
            },
            numberMap = {
              '༡': '1',
              '༢': '2',
              '༣': '3',
              '༤': '4',
              '༥': '5',
              '༦': '6',
              '༧': '7',
              '༨': '8',
              '༩': '9',
              '༠': '0',
            }

          var bo = moment.defineLocale('bo', {
            months:
              'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
                '_'
              ),
            monthsShort:
              'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
                '_'
              ),
            monthsShortRegex: /^(ཟླ་\d{1,2})/,
            monthsParseExact: true,
            weekdays:
              'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
                '_'
              ),
            weekdaysShort:
              'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
            weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
            longDateFormat: {
              LT: 'A h:mm',
              LTS: 'A h:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm',
              LLLL: 'dddd, D MMMM YYYY, A h:mm',
            },
            calendar: {
              sameDay: '[དི་རིང] LT',
              nextDay: '[སང་ཉིན] LT',
              nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
              lastDay: '[ཁ་སང] LT',
              lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s ལ་',
              past: '%s སྔན་ལ',
              s: 'ལམ་སང',
              ss: '%d སྐར་ཆ།',
              m: 'སྐར་མ་གཅིག',
              mm: '%d སྐར་མ',
              h: 'ཆུ་ཚོད་གཅིག',
              hh: '%d ཆུ་ཚོད',
              d: 'ཉིན་གཅིག',
              dd: '%d ཉིན་',
              M: 'ཟླ་བ་གཅིག',
              MM: '%d ཟླ་བ',
              y: 'ལོ་གཅིག',
              yy: '%d ལོ',
            },
            preparse: function (string) {
              return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                (meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག'
              ) {
                return hour + 12
              } else {
                return hour
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'མཚན་མོ'
              } else if (hour < 10) {
                return 'ཞོགས་ཀས'
              } else if (hour < 17) {
                return 'ཉིན་གུང'
              } else if (hour < 20) {
                return 'དགོང་དག'
              } else {
                return 'མཚན་མོ'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return bo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/br.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/br.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Breton [br]
        //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function relativeTimeWithMutation(number, withoutSuffix, key) {
            var format = {
              mm: 'munutenn',
              MM: 'miz',
              dd: 'devezh',
            }
            return number + ' ' + mutation(format[key], number)
          }
          function specialMutationForYears(number) {
            switch (lastNumber(number)) {
              case 1:
              case 3:
              case 4:
              case 5:
              case 9:
                return number + ' bloaz'
              default:
                return number + ' vloaz'
            }
          }
          function lastNumber(number) {
            if (number > 9) {
              return lastNumber(number % 10)
            }
            return number
          }
          function mutation(text, number) {
            if (number === 2) {
              return softMutation(text)
            }
            return text
          }
          function softMutation(text) {
            var mutationTable = {
              m: 'v',
              b: 'v',
              d: 'z',
            }
            if (mutationTable[text.charAt(0)] === undefined) {
              return text
            }
            return mutationTable[text.charAt(0)] + text.substring(1)
          }

          var monthsParse = [
              /^gen/i,
              /^c[ʼ\']hwe/i,
              /^meu/i,
              /^ebr/i,
              /^mae/i,
              /^(mez|eve)/i,
              /^gou/i,
              /^eos/i,
              /^gwe/i,
              /^her/i,
              /^du/i,
              /^ker/i,
            ],
            monthsRegex =
              /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
            monthsStrictRegex =
              /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
            monthsShortStrictRegex =
              /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
            fullWeekdaysParse = [
              /^sul/i,
              /^lun/i,
              /^meurzh/i,
              /^merc[ʼ\']her/i,
              /^yaou/i,
              /^gwener/i,
              /^sadorn/i,
            ],
            shortWeekdaysParse = [
              /^Sul/i,
              /^Lun/i,
              /^Meu/i,
              /^Mer/i,
              /^Yao/i,
              /^Gwe/i,
              /^Sad/i,
            ],
            minWeekdaysParse = [
              /^Su/i,
              /^Lu/i,
              /^Me([^r]|$)/i,
              /^Mer/i,
              /^Ya/i,
              /^Gw/i,
              /^Sa/i,
            ]

          var br = moment.defineLocale('br', {
            months:
              'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
                '_'
              ),
            monthsShort:
              'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
            weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
            weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
            weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
            weekdaysParse: minWeekdaysParse,
            fullWeekdaysParse: fullWeekdaysParse,
            shortWeekdaysParse: shortWeekdaysParse,
            minWeekdaysParse: minWeekdaysParse,

            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex: monthsStrictRegex,
            monthsShortStrictRegex: monthsShortStrictRegex,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,

            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [a viz] MMMM YYYY',
              LLL: 'D [a viz] MMMM YYYY HH:mm',
              LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Hiziv da] LT',
              nextDay: '[Warcʼhoazh da] LT',
              nextWeek: 'dddd [da] LT',
              lastDay: '[Decʼh da] LT',
              lastWeek: 'dddd [paset da] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'a-benn %s',
              past: '%s ʼzo',
              s: 'un nebeud segondennoù',
              ss: '%d eilenn',
              m: 'ur vunutenn',
              mm: relativeTimeWithMutation,
              h: 'un eur',
              hh: '%d eur',
              d: 'un devezh',
              dd: relativeTimeWithMutation,
              M: 'ur miz',
              MM: relativeTimeWithMutation,
              y: 'ur bloaz',
              yy: specialMutationForYears,
            },
            dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
            ordinal: function (number) {
              var output = number === 1 ? 'añ' : 'vet'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
            meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn
            isPM: function (token) {
              return token === 'g.m.'
            },
            meridiem: function (hour, minute, isLower) {
              return hour < 12 ? 'a.m.' : 'g.m.'
            },
          })

          return br
        })

        /***/
      },

    /***/ './node_modules/moment/locale/bs.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/bs.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Bosnian [bs]
        //! author : Nedim Cholich : https://github.com/frontyard
        //! based on (hr) translation by Bojan Marković

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function translate(number, withoutSuffix, key) {
            var result = number + ' '
            switch (key) {
              case 'ss':
                if (number === 1) {
                  result += 'sekunda'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sekunde'
                } else {
                  result += 'sekundi'
                }
                return result
              case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute'
              case 'mm':
                if (number === 1) {
                  result += 'minuta'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'minute'
                } else {
                  result += 'minuta'
                }
                return result
              case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata'
              case 'hh':
                if (number === 1) {
                  result += 'sat'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sata'
                } else {
                  result += 'sati'
                }
                return result
              case 'dd':
                if (number === 1) {
                  result += 'dan'
                } else {
                  result += 'dana'
                }
                return result
              case 'MM':
                if (number === 1) {
                  result += 'mjesec'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'mjeseca'
                } else {
                  result += 'mjeseci'
                }
                return result
              case 'yy':
                if (number === 1) {
                  result += 'godina'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'godine'
                } else {
                  result += 'godina'
                }
                return result
            }
          }

          var bs = moment.defineLocale('bs', {
            months:
              'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
                '_'
              ),
            weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd, D. MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[danas u] LT',
              nextDay: '[sutra u] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[u] [nedjelju] [u] LT'
                  case 3:
                    return '[u] [srijedu] [u] LT'
                  case 6:
                    return '[u] [subotu] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[u] dddd [u] LT'
                }
              },
              lastDay: '[jučer u] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                  case 3:
                    return '[prošlu] dddd [u] LT'
                  case 6:
                    return '[prošle] [subote] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[prošli] dddd [u] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'prije %s',
              s: 'par sekundi',
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: 'dan',
              dd: translate,
              M: 'mjesec',
              MM: translate,
              y: 'godinu',
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return bs
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ca.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ca.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Catalan [ca]
        //! author : Juan G. Hurtado : https://github.com/juanghurtado

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ca = moment.defineLocale('ca', {
            months: {
              standalone:
                'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
                  '_'
                ),
              format:
                "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
                  '_'
                ),
              isFormat: /D[oD]?(\s)+MMMM/,
            },
            monthsShort:
              'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
                '_'
              ),
            weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
            weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM [de] YYYY',
              ll: 'D MMM YYYY',
              LLL: 'D MMMM [de] YYYY [a les] H:mm',
              lll: 'D MMM YYYY, H:mm',
              LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
              llll: 'ddd D MMM YYYY, H:mm',
            },
            calendar: {
              sameDay: function () {
                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT'
              },
              nextDay: function () {
                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT'
              },
              lastDay: function () {
                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[el] dddd [passat a ' +
                  (this.hours() !== 1 ? 'les' : 'la') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: "d'aquí %s",
              past: 'fa %s',
              s: 'uns segons',
              ss: '%d segons',
              m: 'un minut',
              mm: '%d minuts',
              h: 'una hora',
              hh: '%d hores',
              d: 'un dia',
              dd: '%d dies',
              M: 'un mes',
              MM: '%d mesos',
              y: 'un any',
              yy: '%d anys',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
            ordinal: function (number, period) {
              var output =
                number === 1
                  ? 'r'
                  : number === 2
                  ? 'n'
                  : number === 3
                  ? 'r'
                  : number === 4
                  ? 't'
                  : 'è'
              if (period === 'w' || period === 'W') {
                output = 'a'
              }
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return ca
        })

        /***/
      },

    /***/ './node_modules/moment/locale/cs.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/cs.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Czech [cs]
        //! author : petrbela : https://github.com/petrbela

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months =
              'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
                '_'
              ),
            monthsShort =
              'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
            monthsParse = [
              /^led/i,
              /^úno/i,
              /^bře/i,
              /^dub/i,
              /^kvě/i,
              /^(čvn|červen$|června)/i,
              /^(čvc|červenec|července)/i,
              /^srp/i,
              /^zář/i,
              /^říj/i,
              /^lis/i,
              /^pro/i,
            ],
            // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
            // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
            monthsRegex =
              /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i

          function plural(n) {
            return n > 1 && n < 5 && ~~(n / 10) !== 1
          }
          function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' '
            switch (key) {
              case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture
                  ? 'pár sekund'
                  : 'pár sekundami'
              case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'sekundy' : 'sekund')
                } else {
                  return result + 'sekundami'
                }
              case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix
                  ? 'minuta'
                  : isFuture
                  ? 'minutu'
                  : 'minutou'
              case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'minuty' : 'minut')
                } else {
                  return result + 'minutami'
                }
              case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix
                  ? 'hodina'
                  : isFuture
                  ? 'hodinu'
                  : 'hodinou'
              case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'hodiny' : 'hodin')
                } else {
                  return result + 'hodinami'
                }
              case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'den' : 'dnem'
              case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'dny' : 'dní')
                } else {
                  return result + 'dny'
                }
              case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem'
              case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'měsíce' : 'měsíců')
                } else {
                  return result + 'měsíci'
                }
              case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokem'
              case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'roky' : 'let')
                } else {
                  return result + 'lety'
                }
            }
          }

          var cs = moment.defineLocale('cs', {
            months: months,
            monthsShort: monthsShort,
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
            // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
            monthsStrictRegex:
              /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
            monthsShortStrictRegex:
              /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split(
              '_'
            ),
            weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
            weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd D. MMMM YYYY H:mm',
              l: 'D. M. YYYY',
            },
            calendar: {
              sameDay: '[dnes v] LT',
              nextDay: '[zítra v] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[v neděli v] LT'
                  case 1:
                  case 2:
                    return '[v] dddd [v] LT'
                  case 3:
                    return '[ve středu v] LT'
                  case 4:
                    return '[ve čtvrtek v] LT'
                  case 5:
                    return '[v pátek v] LT'
                  case 6:
                    return '[v sobotu v] LT'
                }
              },
              lastDay: '[včera v] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[minulou neděli v] LT'
                  case 1:
                  case 2:
                    return '[minulé] dddd [v] LT'
                  case 3:
                    return '[minulou středu v] LT'
                  case 4:
                  case 5:
                    return '[minulý] dddd [v] LT'
                  case 6:
                    return '[minulou sobotu v] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'před %s',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return cs
        })

        /***/
      },

    /***/ './node_modules/moment/locale/cv.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/cv.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Chuvash [cv]
        //! author : Anatoly Mironov : https://github.com/mirontoli

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var cv = moment.defineLocale('cv', {
            months:
              'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
                '_'
              ),
            monthsShort:
              'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
            weekdays:
              'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
                '_'
              ),
            weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
            weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD-MM-YYYY',
              LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
              LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
              LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            },
            calendar: {
              sameDay: '[Паян] LT [сехетре]',
              nextDay: '[Ыран] LT [сехетре]',
              lastDay: '[Ӗнер] LT [сехетре]',
              nextWeek: '[Ҫитес] dddd LT [сехетре]',
              lastWeek: '[Иртнӗ] dddd LT [сехетре]',
              sameElse: 'L',
            },
            relativeTime: {
              future: function (output) {
                var affix = /сехет$/i.exec(output)
                  ? 'рен'
                  : /ҫул$/i.exec(output)
                  ? 'тан'
                  : 'ран'
                return output + affix
              },
              past: '%s каялла',
              s: 'пӗр-ик ҫеккунт',
              ss: '%d ҫеккунт',
              m: 'пӗр минут',
              mm: '%d минут',
              h: 'пӗр сехет',
              hh: '%d сехет',
              d: 'пӗр кун',
              dd: '%d кун',
              M: 'пӗр уйӑх',
              MM: '%d уйӑх',
              y: 'пӗр ҫул',
              yy: '%d ҫул',
            },
            dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
            ordinal: '%d-мӗш',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return cv
        })

        /***/
      },

    /***/ './node_modules/moment/locale/cy.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/cy.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Welsh [cy]
        //! author : Robert Allen : https://github.com/robgallen
        //! author : https://github.com/ryangreaves

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var cy = moment.defineLocale('cy', {
            months:
              'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
                '_'
              ),
            monthsShort:
              'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
            weekdays:
              'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
                '_'
              ),
            weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
            weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
            weekdaysParseExact: true,
            // time formats are the same as en-gb
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Heddiw am] LT',
              nextDay: '[Yfory am] LT',
              nextWeek: 'dddd [am] LT',
              lastDay: '[Ddoe am] LT',
              lastWeek: 'dddd [diwethaf am] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'mewn %s',
              past: '%s yn ôl',
              s: 'ychydig eiliadau',
              ss: '%d eiliad',
              m: 'munud',
              mm: '%d munud',
              h: 'awr',
              hh: '%d awr',
              d: 'diwrnod',
              dd: '%d diwrnod',
              M: 'mis',
              MM: '%d mis',
              y: 'blwyddyn',
              yy: '%d flynedd',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
            // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
            ordinal: function (number) {
              var b = number,
                output = '',
                lookup = [
                  '',
                  'af',
                  'il',
                  'ydd',
                  'ydd',
                  'ed',
                  'ed',
                  'ed',
                  'fed',
                  'fed',
                  'fed', // 1af to 10fed
                  'eg',
                  'fed',
                  'eg',
                  'eg',
                  'fed',
                  'eg',
                  'eg',
                  'fed',
                  'eg',
                  'fed', // 11eg to 20fed
                ]
              if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                  output = 'fed' // not 30ain, 70ain or 90ain
                } else {
                  output = 'ain'
                }
              } else if (b > 0) {
                output = lookup[b]
              }
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return cy
        })

        /***/
      },

    /***/ './node_modules/moment/locale/da.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/da.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Danish [da]
        //! author : Ulrik Nielsen : https://github.com/mrbase

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var da = moment.defineLocale('da', {
            months:
              'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            weekdays:
              'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
            weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
            weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY HH:mm',
              LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',
            },
            calendar: {
              sameDay: '[i dag kl.] LT',
              nextDay: '[i morgen kl.] LT',
              nextWeek: 'på dddd [kl.] LT',
              lastDay: '[i går kl.] LT',
              lastWeek: '[i] dddd[s kl.] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'om %s',
              past: '%s siden',
              s: 'få sekunder',
              ss: '%d sekunder',
              m: 'et minut',
              mm: '%d minutter',
              h: 'en time',
              hh: '%d timer',
              d: 'en dag',
              dd: '%d dage',
              M: 'en måned',
              MM: '%d måneder',
              y: 'et år',
              yy: '%d år',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return da
        })

        /***/
      },

    /***/ './node_modules/moment/locale/de-at.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-at.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : German (Austria) [de-at]
        //! author : lluchs : https://github.com/lluchs
        //! author: Menelion Elensúle: https://github.com/Oire
        //! author : Martin Groller : https://github.com/MadMG
        //! author : Mikolaj Dadela : https://github.com/mik01aj

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              m: ['eine Minute', 'einer Minute'],
              h: ['eine Stunde', 'einer Stunde'],
              d: ['ein Tag', 'einem Tag'],
              dd: [number + ' Tage', number + ' Tagen'],
              w: ['eine Woche', 'einer Woche'],
              M: ['ein Monat', 'einem Monat'],
              MM: [number + ' Monate', number + ' Monaten'],
              y: ['ein Jahr', 'einem Jahr'],
              yy: [number + ' Jahre', number + ' Jahren'],
            }
            return withoutSuffix ? format[key][0] : format[key][1]
          }

          var deAt = moment.defineLocale('de-at', {
            months:
              'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
                '_'
              ),
            monthsShort:
              'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
                '_'
              ),
            weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
            weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY HH:mm',
              LLLL: 'dddd, D. MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[heute um] LT [Uhr]',
              sameElse: 'L',
              nextDay: '[morgen um] LT [Uhr]',
              nextWeek: 'dddd [um] LT [Uhr]',
              lastDay: '[gestern um] LT [Uhr]',
              lastWeek: '[letzten] dddd [um] LT [Uhr]',
            },
            relativeTime: {
              future: 'in %s',
              past: 'vor %s',
              s: 'ein paar Sekunden',
              ss: '%d Sekunden',
              m: processRelativeTime,
              mm: '%d Minuten',
              h: processRelativeTime,
              hh: '%d Stunden',
              d: processRelativeTime,
              dd: processRelativeTime,
              w: processRelativeTime,
              ww: '%d Wochen',
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return deAt
        })

        /***/
      },

    /***/ './node_modules/moment/locale/de-ch.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-ch.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : German (Switzerland) [de-ch]
        //! author : sschueller : https://github.com/sschueller

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              m: ['eine Minute', 'einer Minute'],
              h: ['eine Stunde', 'einer Stunde'],
              d: ['ein Tag', 'einem Tag'],
              dd: [number + ' Tage', number + ' Tagen'],
              w: ['eine Woche', 'einer Woche'],
              M: ['ein Monat', 'einem Monat'],
              MM: [number + ' Monate', number + ' Monaten'],
              y: ['ein Jahr', 'einem Jahr'],
              yy: [number + ' Jahre', number + ' Jahren'],
            }
            return withoutSuffix ? format[key][0] : format[key][1]
          }

          var deCh = moment.defineLocale('de-ch', {
            months:
              'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
                '_'
              ),
            monthsShort:
              'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
                '_'
              ),
            weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY HH:mm',
              LLLL: 'dddd, D. MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[heute um] LT [Uhr]',
              sameElse: 'L',
              nextDay: '[morgen um] LT [Uhr]',
              nextWeek: 'dddd [um] LT [Uhr]',
              lastDay: '[gestern um] LT [Uhr]',
              lastWeek: '[letzten] dddd [um] LT [Uhr]',
            },
            relativeTime: {
              future: 'in %s',
              past: 'vor %s',
              s: 'ein paar Sekunden',
              ss: '%d Sekunden',
              m: processRelativeTime,
              mm: '%d Minuten',
              h: processRelativeTime,
              hh: '%d Stunden',
              d: processRelativeTime,
              dd: processRelativeTime,
              w: processRelativeTime,
              ww: '%d Wochen',
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return deCh
        })

        /***/
      },

    /***/ './node_modules/moment/locale/de.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/de.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : German [de]
        //! author : lluchs : https://github.com/lluchs
        //! author: Menelion Elensúle: https://github.com/Oire
        //! author : Mikolaj Dadela : https://github.com/mik01aj

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              m: ['eine Minute', 'einer Minute'],
              h: ['eine Stunde', 'einer Stunde'],
              d: ['ein Tag', 'einem Tag'],
              dd: [number + ' Tage', number + ' Tagen'],
              w: ['eine Woche', 'einer Woche'],
              M: ['ein Monat', 'einem Monat'],
              MM: [number + ' Monate', number + ' Monaten'],
              y: ['ein Jahr', 'einem Jahr'],
              yy: [number + ' Jahre', number + ' Jahren'],
            }
            return withoutSuffix ? format[key][0] : format[key][1]
          }

          var de = moment.defineLocale('de', {
            months:
              'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
                '_'
              ),
            monthsShort:
              'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
                '_'
              ),
            weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
            weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY HH:mm',
              LLLL: 'dddd, D. MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[heute um] LT [Uhr]',
              sameElse: 'L',
              nextDay: '[morgen um] LT [Uhr]',
              nextWeek: 'dddd [um] LT [Uhr]',
              lastDay: '[gestern um] LT [Uhr]',
              lastWeek: '[letzten] dddd [um] LT [Uhr]',
            },
            relativeTime: {
              future: 'in %s',
              past: 'vor %s',
              s: 'ein paar Sekunden',
              ss: '%d Sekunden',
              m: processRelativeTime,
              mm: '%d Minuten',
              h: processRelativeTime,
              hh: '%d Stunden',
              d: processRelativeTime,
              dd: processRelativeTime,
              w: processRelativeTime,
              ww: '%d Wochen',
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return de
        })

        /***/
      },

    /***/ './node_modules/moment/locale/dv.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/dv.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Maldivian [dv]
        //! author : Jawish Hameed : https://github.com/jawish

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months = [
              'ޖެނުއަރީ',
              'ފެބްރުއަރީ',
              'މާރިޗު',
              'އޭޕްރީލު',
              'މޭ',
              'ޖޫން',
              'ޖުލައި',
              'އޯގަސްޓު',
              'ސެޕްޓެމްބަރު',
              'އޮކްޓޯބަރު',
              'ނޮވެމްބަރު',
              'ޑިސެމްބަރު',
            ],
            weekdays = [
              'އާދިއްތަ',
              'ހޯމަ',
              'އަންގާރަ',
              'ބުދަ',
              'ބުރާސްފަތި',
              'ހުކުރު',
              'ހޮނިހިރު',
            ]

          var dv = moment.defineLocale('dv', {
            months: months,
            monthsShort: months,
            weekdays: weekdays,
            weekdaysShort: weekdays,
            weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'D/M/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /މކ|މފ/,
            isPM: function (input) {
              return 'މފ' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'މކ'
              } else {
                return 'މފ'
              }
            },
            calendar: {
              sameDay: '[މިއަދު] LT',
              nextDay: '[މާދަމާ] LT',
              nextWeek: 'dddd LT',
              lastDay: '[އިއްޔެ] LT',
              lastWeek: '[ފާއިތުވި] dddd LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'ތެރޭގައި %s',
              past: 'ކުރިން %s',
              s: 'ސިކުންތުކޮޅެއް',
              ss: 'd% ސިކުންތު',
              m: 'މިނިޓެއް',
              mm: 'މިނިޓު %d',
              h: 'ގަޑިއިރެއް',
              hh: 'ގަޑިއިރު %d',
              d: 'ދުވަހެއް',
              dd: 'ދުވަސް %d',
              M: 'މަހެއް',
              MM: 'މަސް %d',
              y: 'އަހަރެއް',
              yy: 'އަހަރު %d',
            },
            preparse: function (string) {
              return string.replace(/،/g, ',')
            },
            postformat: function (string) {
              return string.replace(/,/g, '،')
            },
            week: {
              dow: 7, // Sunday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return dv
        })

        /***/
      },

    /***/ './node_modules/moment/locale/el.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/el.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Greek [el]
        //! author : Aggelos Karalias : https://github.com/mehiel

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function isFunction(input) {
            return (
              (typeof Function !== 'undefined' && input instanceof Function) ||
              Object.prototype.toString.call(input) === '[object Function]'
            )
          }

          var el = moment.defineLocale('el', {
            monthsNominativeEl:
              'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
                '_'
              ),
            monthsGenitiveEl:
              'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
                '_'
              ),
            months: function (momentToFormat, format) {
              if (!momentToFormat) {
                return this._monthsNominativeEl
              } else if (
                typeof format === 'string' &&
                /D/.test(format.substring(0, format.indexOf('MMMM')))
              ) {
                // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()]
              } else {
                return this._monthsNominativeEl[momentToFormat.month()]
              }
            },
            monthsShort:
              'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
            weekdays:
              'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
                '_'
              ),
            weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
            weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
            meridiem: function (hours, minutes, isLower) {
              if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ'
              } else {
                return isLower ? 'πμ' : 'ΠΜ'
              }
            },
            isPM: function (input) {
              return (input + '').toLowerCase()[0] === 'μ'
            },
            meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendarEl: {
              sameDay: '[Σήμερα {}] LT',
              nextDay: '[Αύριο {}] LT',
              nextWeek: 'dddd [{}] LT',
              lastDay: '[Χθες {}] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 6:
                    return '[το προηγούμενο] dddd [{}] LT'
                  default:
                    return '[την προηγούμενη] dddd [{}] LT'
                }
              },
              sameElse: 'L',
            },
            calendar: function (key, mom) {
              var output = this._calendarEl[key],
                hours = mom && mom.hours()
              if (isFunction(output)) {
                output = output.apply(mom)
              }
              return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις')
            },
            relativeTime: {
              future: 'σε %s',
              past: '%s πριν',
              s: 'λίγα δευτερόλεπτα',
              ss: '%d δευτερόλεπτα',
              m: 'ένα λεπτό',
              mm: '%d λεπτά',
              h: 'μία ώρα',
              hh: '%d ώρες',
              d: 'μία μέρα',
              dd: '%d μέρες',
              M: 'ένας μήνας',
              MM: '%d μήνες',
              y: 'ένας χρόνος',
              yy: '%d χρόνια',
            },
            dayOfMonthOrdinalParse: /\d{1,2}η/,
            ordinal: '%dη',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4st is the first week of the year.
            },
          })

          return el
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-au.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-au.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (Australia) [en-au]
        //! author : Jared Morse : https://github.com/jarcoal

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enAu = moment.defineLocale('en-au', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return enAu
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-ca.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ca.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (Canada) [en-ca]
        //! author : Jonathan Abourbih : https://github.com/jonbca

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enCa = moment.defineLocale('en-ca', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'YYYY-MM-DD',
              LL: 'MMMM D, YYYY',
              LLL: 'MMMM D, YYYY h:mm A',
              LLLL: 'dddd, MMMM D, YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
          })

          return enCa
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-gb.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-gb.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (United Kingdom) [en-gb]
        //! author : Chris Gedrim : https://github.com/chrisgedrim

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enGb = moment.defineLocale('en-gb', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return enGb
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-ie.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ie.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (Ireland) [en-ie]
        //! author : Chris Cartlidge : https://github.com/chriscartlidge

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enIe = moment.defineLocale('en-ie', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return enIe
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-il.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-il.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (Israel) [en-il]
        //! author : Chris Gedrim : https://github.com/chrisgedrim

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enIl = moment.defineLocale('en-il', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
          })

          return enIl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-in.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-in.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (India) [en-in]
        //! author : Jatin Agrawal : https://github.com/jatinag22

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enIn = moment.defineLocale('en-in', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 1st is the first week of the year.
            },
          })

          return enIn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-nz.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-nz.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (New Zealand) [en-nz]
        //! author : Luke McGregor : https://github.com/lukemcgregor

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enNz = moment.defineLocale('en-nz', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return enNz
        })

        /***/
      },

    /***/ './node_modules/moment/locale/en-sg.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-sg.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : English (Singapore) [en-sg]
        //! author : Matthew Castrillon-Madrigal : https://github.com/techdimension

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var enSg = moment.defineLocale('en-sg', {
            months:
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            weekdays:
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
            weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Today at] LT',
              nextDay: '[Tomorrow at] LT',
              nextWeek: 'dddd [at] LT',
              lastDay: '[Yesterday at] LT',
              lastWeek: '[Last] dddd [at] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'in %s',
              past: '%s ago',
              s: 'a few seconds',
              ss: '%d seconds',
              m: 'a minute',
              mm: '%d minutes',
              h: 'an hour',
              hh: '%d hours',
              d: 'a day',
              dd: '%d days',
              M: 'a month',
              MM: '%d months',
              y: 'a year',
              yy: '%d years',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return enSg
        })

        /***/
      },

    /***/ './node_modules/moment/locale/eo.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/eo.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Esperanto [eo]
        //! author : Colin Dean : https://github.com/colindean
        //! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
        //! comment : miestasmia corrected the translation by colindean
        //! comment : Vivakvo corrected the translation by colindean and miestasmia

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var eo = moment.defineLocale('eo', {
            months:
              'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
            weekdays:
              'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
            weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
            weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: '[la] D[-an de] MMMM, YYYY',
              LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
              LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
              llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',
            },
            meridiemParse: /[ap]\.t\.m/i,
            isPM: function (input) {
              return input.charAt(0).toLowerCase() === 'p'
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.'
              } else {
                return isLower ? 'a.t.m.' : 'A.T.M.'
              }
            },
            calendar: {
              sameDay: '[Hodiaŭ je] LT',
              nextDay: '[Morgaŭ je] LT',
              nextWeek: 'dddd[n je] LT',
              lastDay: '[Hieraŭ je] LT',
              lastWeek: '[pasintan] dddd[n je] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'post %s',
              past: 'antaŭ %s',
              s: 'kelkaj sekundoj',
              ss: '%d sekundoj',
              m: 'unu minuto',
              mm: '%d minutoj',
              h: 'unu horo',
              hh: '%d horoj',
              d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo
              dd: '%d tagoj',
              M: 'unu monato',
              MM: '%d monatoj',
              y: 'unu jaro',
              yy: '%d jaroj',
            },
            dayOfMonthOrdinalParse: /\d{1,2}a/,
            ordinal: '%da',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return eo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/es-do.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-do.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Spanish (Dominican Republic) [es-do]

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortDot =
              'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
                '_'
              ),
            monthsShort =
              'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [
              /^ene/i,
              /^feb/i,
              /^mar/i,
              /^abr/i,
              /^may/i,
              /^jun/i,
              /^jul/i,
              /^ago/i,
              /^sep/i,
              /^oct/i,
              /^nov/i,
              /^dic/i,
            ],
            monthsRegex =
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i

          var esDo = moment.defineLocale('es-do', {
            months:
              'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortDot
              } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()]
              } else {
                return monthsShortDot[m.month()]
              }
            },
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex:
              /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY h:mm A',
              LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
            },
            calendar: {
              sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[el] dddd [pasado a la' +
                  (this.hours() !== 1 ? 's' : '') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'en %s',
              past: 'hace %s',
              s: 'unos segundos',
              ss: '%d segundos',
              m: 'un minuto',
              mm: '%d minutos',
              h: 'una hora',
              hh: '%d horas',
              d: 'un día',
              dd: '%d días',
              w: 'una semana',
              ww: '%d semanas',
              M: 'un mes',
              MM: '%d meses',
              y: 'un año',
              yy: '%d años',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return esDo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/es-mx.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-mx.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Spanish (Mexico) [es-mx]
        //! author : JC Franco : https://github.com/jcfranco

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortDot =
              'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
                '_'
              ),
            monthsShort =
              'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [
              /^ene/i,
              /^feb/i,
              /^mar/i,
              /^abr/i,
              /^may/i,
              /^jun/i,
              /^jul/i,
              /^ago/i,
              /^sep/i,
              /^oct/i,
              /^nov/i,
              /^dic/i,
            ],
            monthsRegex =
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i

          var esMx = moment.defineLocale('es-mx', {
            months:
              'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortDot
              } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()]
              } else {
                return monthsShortDot[m.month()]
              }
            },
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex:
              /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY H:mm',
              LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
            },
            calendar: {
              sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[el] dddd [pasado a la' +
                  (this.hours() !== 1 ? 's' : '') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'en %s',
              past: 'hace %s',
              s: 'unos segundos',
              ss: '%d segundos',
              m: 'un minuto',
              mm: '%d minutos',
              h: 'una hora',
              hh: '%d horas',
              d: 'un día',
              dd: '%d días',
              w: 'una semana',
              ww: '%d semanas',
              M: 'un mes',
              MM: '%d meses',
              y: 'un año',
              yy: '%d años',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
            invalidDate: 'Fecha inválida',
          })

          return esMx
        })

        /***/
      },

    /***/ './node_modules/moment/locale/es-us.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-us.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Spanish (United States) [es-us]
        //! author : bustta : https://github.com/bustta
        //! author : chrisrodz : https://github.com/chrisrodz

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortDot =
              'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
                '_'
              ),
            monthsShort =
              'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [
              /^ene/i,
              /^feb/i,
              /^mar/i,
              /^abr/i,
              /^may/i,
              /^jun/i,
              /^jul/i,
              /^ago/i,
              /^sep/i,
              /^oct/i,
              /^nov/i,
              /^dic/i,
            ],
            monthsRegex =
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i

          var esUs = moment.defineLocale('es-us', {
            months:
              'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortDot
              } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()]
              } else {
                return monthsShortDot[m.month()]
              }
            },
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex:
              /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'MM/DD/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY h:mm A',
              LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
            },
            calendar: {
              sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[el] dddd [pasado a la' +
                  (this.hours() !== 1 ? 's' : '') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'en %s',
              past: 'hace %s',
              s: 'unos segundos',
              ss: '%d segundos',
              m: 'un minuto',
              mm: '%d minutos',
              h: 'una hora',
              hh: '%d horas',
              d: 'un día',
              dd: '%d días',
              w: 'una semana',
              ww: '%d semanas',
              M: 'un mes',
              MM: '%d meses',
              y: 'un año',
              yy: '%d años',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return esUs
        })

        /***/
      },

    /***/ './node_modules/moment/locale/es.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/es.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Spanish [es]
        //! author : Julio Napurí : https://github.com/julionc

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortDot =
              'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
                '_'
              ),
            monthsShort =
              'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [
              /^ene/i,
              /^feb/i,
              /^mar/i,
              /^abr/i,
              /^may/i,
              /^jun/i,
              /^jul/i,
              /^ago/i,
              /^sep/i,
              /^oct/i,
              /^nov/i,
              /^dic/i,
            ],
            monthsRegex =
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i

          var es = moment.defineLocale('es', {
            months:
              'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortDot
              } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()]
              } else {
                return monthsShortDot[m.month()]
              }
            },
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex:
              /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
            weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
            weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY H:mm',
              LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
            },
            calendar: {
              sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[el] dddd [pasado a la' +
                  (this.hours() !== 1 ? 's' : '') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'en %s',
              past: 'hace %s',
              s: 'unos segundos',
              ss: '%d segundos',
              m: 'un minuto',
              mm: '%d minutos',
              h: 'una hora',
              hh: '%d horas',
              d: 'un día',
              dd: '%d días',
              w: 'una semana',
              ww: '%d semanas',
              M: 'un mes',
              MM: '%d meses',
              y: 'un año',
              yy: '%d años',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
            invalidDate: 'Fecha inválida',
          })

          return es
        })

        /***/
      },

    /***/ './node_modules/moment/locale/et.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/et.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Estonian [et]
        //! author : Henry Kehlmann : https://github.com/madhenry
        //! improvements : Illimar Tambek : https://github.com/ragulka

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
              ss: [number + 'sekundi', number + 'sekundit'],
              m: ['ühe minuti', 'üks minut'],
              mm: [number + ' minuti', number + ' minutit'],
              h: ['ühe tunni', 'tund aega', 'üks tund'],
              hh: [number + ' tunni', number + ' tundi'],
              d: ['ühe päeva', 'üks päev'],
              M: ['kuu aja', 'kuu aega', 'üks kuu'],
              MM: [number + ' kuu', number + ' kuud'],
              y: ['ühe aasta', 'aasta', 'üks aasta'],
              yy: [number + ' aasta', number + ' aastat'],
            }
            if (withoutSuffix) {
              return format[key][2] ? format[key][2] : format[key][1]
            }
            return isFuture ? format[key][0] : format[key][1]
          }

          var et = moment.defineLocale('et', {
            months:
              'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
                '_'
              ),
            monthsShort:
              'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
                '_'
              ),
            weekdays:
              'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
                '_'
              ),
            weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
            weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd, D. MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[Täna,] LT',
              nextDay: '[Homme,] LT',
              nextWeek: '[Järgmine] dddd LT',
              lastDay: '[Eile,] LT',
              lastWeek: '[Eelmine] dddd LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s pärast',
              past: '%s tagasi',
              s: processRelativeTime,
              ss: processRelativeTime,
              m: processRelativeTime,
              mm: processRelativeTime,
              h: processRelativeTime,
              hh: processRelativeTime,
              d: processRelativeTime,
              dd: '%d päeva',
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return et
        })

        /***/
      },

    /***/ './node_modules/moment/locale/eu.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/eu.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Basque [eu]
        //! author : Eneko Illarramendi : https://github.com/eillarra

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var eu = moment.defineLocale('eu', {
            months:
              'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
                '_'
              ),
            monthsShort:
              'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
                '_'
              ),
            weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
            weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'YYYY[ko] MMMM[ren] D[a]',
              LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
              LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
              l: 'YYYY-M-D',
              ll: 'YYYY[ko] MMM D[a]',
              lll: 'YYYY[ko] MMM D[a] HH:mm',
              llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
            },
            calendar: {
              sameDay: '[gaur] LT[etan]',
              nextDay: '[bihar] LT[etan]',
              nextWeek: 'dddd LT[etan]',
              lastDay: '[atzo] LT[etan]',
              lastWeek: '[aurreko] dddd LT[etan]',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s barru',
              past: 'duela %s',
              s: 'segundo batzuk',
              ss: '%d segundo',
              m: 'minutu bat',
              mm: '%d minutu',
              h: 'ordu bat',
              hh: '%d ordu',
              d: 'egun bat',
              dd: '%d egun',
              M: 'hilabete bat',
              MM: '%d hilabete',
              y: 'urte bat',
              yy: '%d urte',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return eu
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fa.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/fa.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Persian [fa]
        //! author : Ebrahim Byagowi : https://github.com/ebraminio

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '۱',
              2: '۲',
              3: '۳',
              4: '۴',
              5: '۵',
              6: '۶',
              7: '۷',
              8: '۸',
              9: '۹',
              0: '۰',
            },
            numberMap = {
              '۱': '1',
              '۲': '2',
              '۳': '3',
              '۴': '4',
              '۵': '5',
              '۶': '6',
              '۷': '7',
              '۸': '8',
              '۹': '9',
              '۰': '0',
            }

          var fa = moment.defineLocale('fa', {
            months:
              'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
                '_'
              ),
            monthsShort:
              'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
                '_'
              ),
            weekdays:
              'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
                '_'
              ),
            weekdaysShort:
              'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
                '_'
              ),
            weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            meridiemParse: /قبل از ظهر|بعد از ظهر/,
            isPM: function (input) {
              return /بعد از ظهر/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'قبل از ظهر'
              } else {
                return 'بعد از ظهر'
              }
            },
            calendar: {
              sameDay: '[امروز ساعت] LT',
              nextDay: '[فردا ساعت] LT',
              nextWeek: 'dddd [ساعت] LT',
              lastDay: '[دیروز ساعت] LT',
              lastWeek: 'dddd [پیش] [ساعت] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'در %s',
              past: '%s پیش',
              s: 'چند ثانیه',
              ss: '%d ثانیه',
              m: 'یک دقیقه',
              mm: '%d دقیقه',
              h: 'یک ساعت',
              hh: '%d ساعت',
              d: 'یک روز',
              dd: '%d روز',
              M: 'یک ماه',
              MM: '%d ماه',
              y: 'یک سال',
              yy: '%d سال',
            },
            preparse: function (string) {
              return string
                .replace(/[۰-۹]/g, function (match) {
                  return numberMap[match]
                })
                .replace(/،/g, ',')
            },
            postformat: function (string) {
              return string
                .replace(/\d/g, function (match) {
                  return symbolMap[match]
                })
                .replace(/,/g, '،')
            },
            dayOfMonthOrdinalParse: /\d{1,2}م/,
            ordinal: '%dم',
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return fa
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fi.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/fi.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Finnish [fi]
        //! author : Tarmo Aidantausta : https://github.com/bleadof

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var numbersPast =
              'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
                ' '
              ),
            numbersFuture = [
              'nolla',
              'yhden',
              'kahden',
              'kolmen',
              'neljän',
              'viiden',
              'kuuden',
              numbersPast[7],
              numbersPast[8],
              numbersPast[9],
            ]
          function translate(number, withoutSuffix, key, isFuture) {
            var result = ''
            switch (key) {
              case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti'
              case 'ss':
                result = isFuture ? 'sekunnin' : 'sekuntia'
                break
              case 'm':
                return isFuture ? 'minuutin' : 'minuutti'
              case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia'
                break
              case 'h':
                return isFuture ? 'tunnin' : 'tunti'
              case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia'
                break
              case 'd':
                return isFuture ? 'päivän' : 'päivä'
              case 'dd':
                result = isFuture ? 'päivän' : 'päivää'
                break
              case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi'
              case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta'
                break
              case 'y':
                return isFuture ? 'vuoden' : 'vuosi'
              case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta'
                break
            }
            result = verbalNumber(number, isFuture) + ' ' + result
            return result
          }
          function verbalNumber(number, isFuture) {
            return number < 10
              ? isFuture
                ? numbersFuture[number]
                : numbersPast[number]
              : number
          }

          var fi = moment.defineLocale('fi', {
            months:
              'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
                '_'
              ),
            monthsShort:
              'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
                '_'
              ),
            weekdays:
              'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
                '_'
              ),
            weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
            weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD.MM.YYYY',
              LL: 'Do MMMM[ta] YYYY',
              LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
              LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
              l: 'D.M.YYYY',
              ll: 'Do MMM YYYY',
              lll: 'Do MMM YYYY, [klo] HH.mm',
              llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
            },
            calendar: {
              sameDay: '[tänään] [klo] LT',
              nextDay: '[huomenna] [klo] LT',
              nextWeek: 'dddd [klo] LT',
              lastDay: '[eilen] [klo] LT',
              lastWeek: '[viime] dddd[na] [klo] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s päästä',
              past: '%s sitten',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return fi
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fil.js':
      /*!*******************************************!*\
  !*** ./node_modules/moment/locale/fil.js ***!
  \*******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Filipino [fil]
        //! author : Dan Hagman : https://github.com/hagmandan
        //! author : Matthew Co : https://github.com/matthewdeeco

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var fil = moment.defineLocale('fil', {
            months:
              'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
                '_'
              ),
            monthsShort:
              'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
            weekdays:
              'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
                '_'
              ),
            weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
            weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'MM/D/YYYY',
              LL: 'MMMM D, YYYY',
              LLL: 'MMMM D, YYYY HH:mm',
              LLLL: 'dddd, MMMM DD, YYYY HH:mm',
            },
            calendar: {
              sameDay: 'LT [ngayong araw]',
              nextDay: '[Bukas ng] LT',
              nextWeek: 'LT [sa susunod na] dddd',
              lastDay: 'LT [kahapon]',
              lastWeek: 'LT [noong nakaraang] dddd',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'sa loob ng %s',
              past: '%s ang nakalipas',
              s: 'ilang segundo',
              ss: '%d segundo',
              m: 'isang minuto',
              mm: '%d minuto',
              h: 'isang oras',
              hh: '%d oras',
              d: 'isang araw',
              dd: '%d araw',
              M: 'isang buwan',
              MM: '%d buwan',
              y: 'isang taon',
              yy: '%d taon',
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: function (number) {
              return number
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return fil
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fo.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/fo.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Faroese [fo]
        //! author : Ragnar Johannesen : https://github.com/ragnar123
        //! author : Kristian Sakarisson : https://github.com/sakarisson

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var fo = moment.defineLocale('fo', {
            months:
              'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
            weekdays:
              'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
                '_'
              ),
            weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
            weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D. MMMM, YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Í dag kl.] LT',
              nextDay: '[Í morgin kl.] LT',
              nextWeek: 'dddd [kl.] LT',
              lastDay: '[Í gjár kl.] LT',
              lastWeek: '[síðstu] dddd [kl] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'um %s',
              past: '%s síðani',
              s: 'fá sekund',
              ss: '%d sekundir',
              m: 'ein minuttur',
              mm: '%d minuttir',
              h: 'ein tími',
              hh: '%d tímar',
              d: 'ein dagur',
              dd: '%d dagar',
              M: 'ein mánaður',
              MM: '%d mánaðir',
              y: 'eitt ár',
              yy: '%d ár',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return fo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fr-ca.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ca.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : French (Canada) [fr-ca]
        //! author : Jonathan Abourbih : https://github.com/jonbca

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var frCa = moment.defineLocale('fr-ca', {
            months:
              'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
                '_'
              ),
            monthsShort:
              'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Aujourd’hui à] LT',
              nextDay: '[Demain à] LT',
              nextWeek: 'dddd [à] LT',
              lastDay: '[Hier à] LT',
              lastWeek: 'dddd [dernier à] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dans %s',
              past: 'il y a %s',
              s: 'quelques secondes',
              ss: '%d secondes',
              m: 'une minute',
              mm: '%d minutes',
              h: 'une heure',
              hh: '%d heures',
              d: 'un jour',
              dd: '%d jours',
              M: 'un mois',
              MM: '%d mois',
              y: 'un an',
              yy: '%d ans',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal: function (number, period) {
              switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                  return number + (number === 1 ? 'er' : 'e')

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                  return number + (number === 1 ? 're' : 'e')
              }
            },
          })

          return frCa
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fr-ch.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ch.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : French (Switzerland) [fr-ch]
        //! author : Gaspard Bucher : https://github.com/gaspard

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var frCh = moment.defineLocale('fr-ch', {
            months:
              'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
                '_'
              ),
            monthsShort:
              'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Aujourd’hui à] LT',
              nextDay: '[Demain à] LT',
              nextWeek: 'dddd [à] LT',
              lastDay: '[Hier à] LT',
              lastWeek: 'dddd [dernier à] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dans %s',
              past: 'il y a %s',
              s: 'quelques secondes',
              ss: '%d secondes',
              m: 'une minute',
              mm: '%d minutes',
              h: 'une heure',
              hh: '%d heures',
              d: 'un jour',
              dd: '%d jours',
              M: 'un mois',
              MM: '%d mois',
              y: 'un an',
              yy: '%d ans',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal: function (number, period) {
              switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                  return number + (number === 1 ? 'er' : 'e')

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                  return number + (number === 1 ? 're' : 'e')
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return frCh
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fr.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/fr.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : French [fr]
        //! author : John Fischer : https://github.com/jfroffice

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsStrictRegex =
              /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
            monthsShortStrictRegex =
              /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
            monthsRegex =
              /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
            monthsParse = [
              /^janv/i,
              /^févr/i,
              /^mars/i,
              /^avr/i,
              /^mai/i,
              /^juin/i,
              /^juil/i,
              /^août/i,
              /^sept/i,
              /^oct/i,
              /^nov/i,
              /^déc/i,
            ]

          var fr = moment.defineLocale('fr', {
            months:
              'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
                '_'
              ),
            monthsShort:
              'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
                '_'
              ),
            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex: monthsStrictRegex,
            monthsShortStrictRegex: monthsShortStrictRegex,
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
            weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
            weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Aujourd’hui à] LT',
              nextDay: '[Demain à] LT',
              nextWeek: 'dddd [à] LT',
              lastDay: '[Hier à] LT',
              lastWeek: 'dddd [dernier à] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dans %s',
              past: 'il y a %s',
              s: 'quelques secondes',
              ss: '%d secondes',
              m: 'une minute',
              mm: '%d minutes',
              h: 'une heure',
              hh: '%d heures',
              d: 'un jour',
              dd: '%d jours',
              w: 'une semaine',
              ww: '%d semaines',
              M: 'un mois',
              MM: '%d mois',
              y: 'un an',
              yy: '%d ans',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
            ordinal: function (number, period) {
              switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                  return number + (number === 1 ? 'er' : '')

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                  return number + (number === 1 ? 'er' : 'e')

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                  return number + (number === 1 ? 're' : 'e')
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return fr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/fy.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/fy.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Frisian [fy]
        //! author : Robin van der Vliet : https://github.com/robin0van0der0v

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortWithDots =
              'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
                '_'
              ),
            monthsShortWithoutDots =
              'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_')

          var fy = moment.defineLocale('fy', {
            months:
              'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortWithDots
              } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()]
              } else {
                return monthsShortWithDots[m.month()]
              }
            },
            monthsParseExact: true,
            weekdays:
              'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
                '_'
              ),
            weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
            weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD-MM-YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[hjoed om] LT',
              nextDay: '[moarn om] LT',
              nextWeek: 'dddd [om] LT',
              lastDay: '[juster om] LT',
              lastWeek: '[ôfrûne] dddd [om] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'oer %s',
              past: '%s lyn',
              s: 'in pear sekonden',
              ss: '%d sekonden',
              m: 'ien minút',
              mm: '%d minuten',
              h: 'ien oere',
              hh: '%d oeren',
              d: 'ien dei',
              dd: '%d dagen',
              M: 'ien moanne',
              MM: '%d moannen',
              y: 'ien jier',
              yy: '%d jierren',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function (number) {
              return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
              )
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return fy
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ga.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ga.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Irish or Irish Gaelic [ga]
        //! author : André Silva : https://github.com/askpt

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months = [
              'Eanáir',
              'Feabhra',
              'Márta',
              'Aibreán',
              'Bealtaine',
              'Meitheamh',
              'Iúil',
              'Lúnasa',
              'Meán Fómhair',
              'Deireadh Fómhair',
              'Samhain',
              'Nollaig',
            ],
            monthsShort = [
              'Ean',
              'Feabh',
              'Márt',
              'Aib',
              'Beal',
              'Meith',
              'Iúil',
              'Lún',
              'M.F.',
              'D.F.',
              'Samh',
              'Noll',
            ],
            weekdays = [
              'Dé Domhnaigh',
              'Dé Luain',
              'Dé Máirt',
              'Dé Céadaoin',
              'Déardaoin',
              'Dé hAoine',
              'Dé Sathairn',
            ],
            weekdaysShort = [
              'Domh',
              'Luan',
              'Máirt',
              'Céad',
              'Déar',
              'Aoine',
              'Sath',
            ],
            weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa']

          var ga = moment.defineLocale('ga', {
            months: months,
            monthsShort: monthsShort,
            monthsParseExact: true,
            weekdays: weekdays,
            weekdaysShort: weekdaysShort,
            weekdaysMin: weekdaysMin,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Inniu ag] LT',
              nextDay: '[Amárach ag] LT',
              nextWeek: 'dddd [ag] LT',
              lastDay: '[Inné ag] LT',
              lastWeek: 'dddd [seo caite] [ag] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'i %s',
              past: '%s ó shin',
              s: 'cúpla soicind',
              ss: '%d soicind',
              m: 'nóiméad',
              mm: '%d nóiméad',
              h: 'uair an chloig',
              hh: '%d uair an chloig',
              d: 'lá',
              dd: '%d lá',
              M: 'mí',
              MM: '%d míonna',
              y: 'bliain',
              yy: '%d bliain',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
            ordinal: function (number) {
              var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return ga
        })

        /***/
      },

    /***/ './node_modules/moment/locale/gd.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/gd.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Scottish Gaelic [gd]
        //! author : Jon Ashdown : https://github.com/jonashdown

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months = [
              'Am Faoilleach',
              'An Gearran',
              'Am Màrt',
              'An Giblean',
              'An Cèitean',
              'An t-Ògmhios',
              'An t-Iuchar',
              'An Lùnastal',
              'An t-Sultain',
              'An Dàmhair',
              'An t-Samhain',
              'An Dùbhlachd',
            ],
            monthsShort = [
              'Faoi',
              'Gear',
              'Màrt',
              'Gibl',
              'Cèit',
              'Ògmh',
              'Iuch',
              'Lùn',
              'Sult',
              'Dàmh',
              'Samh',
              'Dùbh',
            ],
            weekdays = [
              'Didòmhnaich',
              'Diluain',
              'Dimàirt',
              'Diciadain',
              'Diardaoin',
              'Dihaoine',
              'Disathairne',
            ],
            weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
            weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa']

          var gd = moment.defineLocale('gd', {
            months: months,
            monthsShort: monthsShort,
            monthsParseExact: true,
            weekdays: weekdays,
            weekdaysShort: weekdaysShort,
            weekdaysMin: weekdaysMin,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[An-diugh aig] LT',
              nextDay: '[A-màireach aig] LT',
              nextWeek: 'dddd [aig] LT',
              lastDay: '[An-dè aig] LT',
              lastWeek: 'dddd [seo chaidh] [aig] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'ann an %s',
              past: 'bho chionn %s',
              s: 'beagan diogan',
              ss: '%d diogan',
              m: 'mionaid',
              mm: '%d mionaidean',
              h: 'uair',
              hh: '%d uairean',
              d: 'latha',
              dd: '%d latha',
              M: 'mìos',
              MM: '%d mìosan',
              y: 'bliadhna',
              yy: '%d bliadhna',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
            ordinal: function (number) {
              var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return gd
        })

        /***/
      },

    /***/ './node_modules/moment/locale/gl.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/gl.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Galician [gl]
        //! author : Juan G. Hurtado : https://github.com/juanghurtado

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var gl = moment.defineLocale('gl', {
            months:
              'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
                '_'
              ),
            monthsShort:
              'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split(
              '_'
            ),
            weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
            weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY H:mm',
              LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
            },
            calendar: {
              sameDay: function () {
                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT'
              },
              nextDay: function () {
                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT'
              },
              nextWeek: function () {
                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'
              },
              lastDay: function () {
                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT'
              },
              lastWeek: function () {
                return (
                  '[o] dddd [pasado ' +
                  (this.hours() !== 1 ? 'ás' : 'a') +
                  '] LT'
                )
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: function (str) {
                if (str.indexOf('un') === 0) {
                  return 'n' + str
                }
                return 'en ' + str
              },
              past: 'hai %s',
              s: 'uns segundos',
              ss: '%d segundos',
              m: 'un minuto',
              mm: '%d minutos',
              h: 'unha hora',
              hh: '%d horas',
              d: 'un día',
              dd: '%d días',
              M: 'un mes',
              MM: '%d meses',
              y: 'un ano',
              yy: '%d anos',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return gl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/gom-deva.js':
      /*!************************************************!*\
  !*** ./node_modules/moment/locale/gom-deva.js ***!
  \************************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Konkani Devanagari script [gom-deva]
        //! author : The Discoverer : https://github.com/WikiDiscoverer

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
              ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
              m: ['एका मिणटान', 'एक मिनूट'],
              mm: [number + ' मिणटांनी', number + ' मिणटां'],
              h: ['एका वरान', 'एक वर'],
              hh: [number + ' वरांनी', number + ' वरां'],
              d: ['एका दिसान', 'एक दीस'],
              dd: [number + ' दिसांनी', number + ' दीस'],
              M: ['एका म्हयन्यान', 'एक म्हयनो'],
              MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
              y: ['एका वर्सान', 'एक वर्स'],
              yy: [number + ' वर्सांनी', number + ' वर्सां'],
            }
            return isFuture ? format[key][0] : format[key][1]
          }

          var gomDeva = moment.defineLocale('gom-deva', {
            months: {
              standalone:
                'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
                  '_'
                ),
              format:
                'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
                  '_'
                ),
              isFormat: /MMMM(\s)+D[oD]?/,
            },
            monthsShort:
              'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
            weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split(
              '_'
            ),
            weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'A h:mm [वाजतां]',
              LTS: 'A h:mm:ss [वाजतां]',
              L: 'DD-MM-YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY A h:mm [वाजतां]',
              LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
              llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',
            },
            calendar: {
              sameDay: '[आयज] LT',
              nextDay: '[फाल्यां] LT',
              nextWeek: '[फुडलो] dddd[,] LT',
              lastDay: '[काल] LT',
              lastWeek: '[फाटलो] dddd[,] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s',
              past: '%s आदीं',
              s: processRelativeTime,
              ss: processRelativeTime,
              m: processRelativeTime,
              mm: processRelativeTime,
              h: processRelativeTime,
              hh: processRelativeTime,
              d: processRelativeTime,
              dd: processRelativeTime,
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
            ordinal: function (number, period) {
              switch (period) {
                // the ordinal 'वेर' only applies to day of the month
                case 'D':
                  return number + 'वेर'
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                  return number
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week
              doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
            },
            meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'राती') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'सकाळीं') {
                return hour
              } else if (meridiem === 'दनपारां') {
                return hour > 12 ? hour : hour + 12
              } else if (meridiem === 'सांजे') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'राती'
              } else if (hour < 12) {
                return 'सकाळीं'
              } else if (hour < 16) {
                return 'दनपारां'
              } else if (hour < 20) {
                return 'सांजे'
              } else {
                return 'राती'
              }
            },
          })

          return gomDeva
        })

        /***/
      },

    /***/ './node_modules/moment/locale/gom-latn.js':
      /*!************************************************!*\
  !*** ./node_modules/moment/locale/gom-latn.js ***!
  \************************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Konkani Latin script [gom-latn]
        //! author : The Discoverer : https://github.com/WikiDiscoverer

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              s: ['thoddea sekondamni', 'thodde sekond'],
              ss: [number + ' sekondamni', number + ' sekond'],
              m: ['eka mintan', 'ek minut'],
              mm: [number + ' mintamni', number + ' mintam'],
              h: ['eka voran', 'ek vor'],
              hh: [number + ' voramni', number + ' voram'],
              d: ['eka disan', 'ek dis'],
              dd: [number + ' disamni', number + ' dis'],
              M: ['eka mhoinean', 'ek mhoino'],
              MM: [number + ' mhoineamni', number + ' mhoine'],
              y: ['eka vorsan', 'ek voros'],
              yy: [number + ' vorsamni', number + ' vorsam'],
            }
            return isFuture ? format[key][0] : format[key][1]
          }

          var gomLatn = moment.defineLocale('gom-latn', {
            months: {
              standalone:
                'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
                  '_'
                ),
              format:
                'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
                  '_'
                ),
              isFormat: /MMMM(\s)+D[oD]?/,
            },
            monthsShort:
              'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
            weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
            weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'A h:mm [vazta]',
              LTS: 'A h:mm:ss [vazta]',
              L: 'DD-MM-YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY A h:mm [vazta]',
              LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
              llll: 'ddd, D MMM YYYY, A h:mm [vazta]',
            },
            calendar: {
              sameDay: '[Aiz] LT',
              nextDay: '[Faleam] LT',
              nextWeek: '[Fuddlo] dddd[,] LT',
              lastDay: '[Kal] LT',
              lastWeek: '[Fattlo] dddd[,] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s',
              past: '%s adim',
              s: processRelativeTime,
              ss: processRelativeTime,
              m: processRelativeTime,
              mm: processRelativeTime,
              h: processRelativeTime,
              hh: processRelativeTime,
              d: processRelativeTime,
              dd: processRelativeTime,
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er)/,
            ordinal: function (number, period) {
              switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                  return number + 'er'
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                  return number
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week
              doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
            },
            meridiemParse: /rati|sokallim|donparam|sanje/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'sokallim') {
                return hour
              } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12
              } else if (meridiem === 'sanje') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'rati'
              } else if (hour < 12) {
                return 'sokallim'
              } else if (hour < 16) {
                return 'donparam'
              } else if (hour < 20) {
                return 'sanje'
              } else {
                return 'rati'
              }
            },
          })

          return gomLatn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/gu.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/gu.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Gujarati [gu]
        //! author : Kaushik Thanki : https://github.com/Kaushik1987

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '૧',
              2: '૨',
              3: '૩',
              4: '૪',
              5: '૫',
              6: '૬',
              7: '૭',
              8: '૮',
              9: '૯',
              0: '૦',
            },
            numberMap = {
              '૧': '1',
              '૨': '2',
              '૩': '3',
              '૪': '4',
              '૫': '5',
              '૬': '6',
              '૭': '7',
              '૮': '8',
              '૯': '9',
              '૦': '0',
            }

          var gu = moment.defineLocale('gu', {
            months:
              'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
                '_'
              ),
            monthsShort:
              'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
                '_'
              ),
            weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
            weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
            longDateFormat: {
              LT: 'A h:mm વાગ્યે',
              LTS: 'A h:mm:ss વાગ્યે',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
              LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',
            },
            calendar: {
              sameDay: '[આજ] LT',
              nextDay: '[કાલે] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[ગઇકાલે] LT',
              lastWeek: '[પાછલા] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s મા',
              past: '%s પહેલા',
              s: 'અમુક પળો',
              ss: '%d સેકંડ',
              m: 'એક મિનિટ',
              mm: '%d મિનિટ',
              h: 'એક કલાક',
              hh: '%d કલાક',
              d: 'એક દિવસ',
              dd: '%d દિવસ',
              M: 'એક મહિનો',
              MM: '%d મહિનો',
              y: 'એક વર્ષ',
              yy: '%d વર્ષ',
            },
            preparse: function (string) {
              return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
            // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
            meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'સવાર') {
                return hour
              } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'સાંજ') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'રાત'
              } else if (hour < 10) {
                return 'સવાર'
              } else if (hour < 17) {
                return 'બપોર'
              } else if (hour < 20) {
                return 'સાંજ'
              } else {
                return 'રાત'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return gu
        })

        /***/
      },

    /***/ './node_modules/moment/locale/he.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/he.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Hebrew [he]
        //! author : Tomer Cohen : https://github.com/tomer
        //! author : Moshe Simantov : https://github.com/DevelopmentIL
        //! author : Tal Ater : https://github.com/TalAter

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var he = moment.defineLocale('he', {
            months:
              'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
                '_'
              ),
            monthsShort:
              'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
                '_'
              ),
            weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
            weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
            weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [ב]MMMM YYYY',
              LLL: 'D [ב]MMMM YYYY HH:mm',
              LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
              l: 'D/M/YYYY',
              ll: 'D MMM YYYY',
              lll: 'D MMM YYYY HH:mm',
              llll: 'ddd, D MMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[היום ב־]LT',
              nextDay: '[מחר ב־]LT',
              nextWeek: 'dddd [בשעה] LT',
              lastDay: '[אתמול ב־]LT',
              lastWeek: '[ביום] dddd [האחרון בשעה] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'בעוד %s',
              past: 'לפני %s',
              s: 'מספר שניות',
              ss: '%d שניות',
              m: 'דקה',
              mm: '%d דקות',
              h: 'שעה',
              hh: function (number) {
                if (number === 2) {
                  return 'שעתיים'
                }
                return number + ' שעות'
              },
              d: 'יום',
              dd: function (number) {
                if (number === 2) {
                  return 'יומיים'
                }
                return number + ' ימים'
              },
              M: 'חודש',
              MM: function (number) {
                if (number === 2) {
                  return 'חודשיים'
                }
                return number + ' חודשים'
              },
              y: 'שנה',
              yy: function (number) {
                if (number === 2) {
                  return 'שנתיים'
                } else if (number % 10 === 0 && number !== 10) {
                  return number + ' שנה'
                }
                return number + ' שנים'
              },
            },
            meridiemParse:
              /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
            isPM: function (input) {
              return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 5) {
                return 'לפנות בוקר'
              } else if (hour < 10) {
                return 'בבוקר'
              } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים'
              } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים'
              } else {
                return 'בערב'
              }
            },
          })

          return he
        })

        /***/
      },

    /***/ './node_modules/moment/locale/hi.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/hi.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Hindi [hi]
        //! author : Mayank Singhal : https://github.com/mayanksinghal

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '१',
              2: '२',
              3: '३',
              4: '४',
              5: '५',
              6: '६',
              7: '७',
              8: '८',
              9: '९',
              0: '०',
            },
            numberMap = {
              '१': '1',
              '२': '2',
              '३': '3',
              '४': '4',
              '५': '5',
              '६': '6',
              '७': '7',
              '८': '8',
              '९': '9',
              '०': '0',
            },
            monthsParse = [
              /^जन/i,
              /^फ़र|फर/i,
              /^मार्च/i,
              /^अप्रै/i,
              /^मई/i,
              /^जून/i,
              /^जुल/i,
              /^अग/i,
              /^सितं|सित/i,
              /^अक्टू/i,
              /^नव|नवं/i,
              /^दिसं|दिस/i,
            ],
            shortMonthsParse = [
              /^जन/i,
              /^फ़र/i,
              /^मार्च/i,
              /^अप्रै/i,
              /^मई/i,
              /^जून/i,
              /^जुल/i,
              /^अग/i,
              /^सित/i,
              /^अक्टू/i,
              /^नव/i,
              /^दिस/i,
            ]

          var hi = moment.defineLocale('hi', {
            months: {
              format:
                'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
                  '_'
                ),
              standalone:
                'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(
                  '_'
                ),
            },
            monthsShort:
              'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
                '_'
              ),
            weekdays:
              'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
            weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
            weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
            longDateFormat: {
              LT: 'A h:mm बजे',
              LTS: 'A h:mm:ss बजे',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm बजे',
              LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
            },

            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: shortMonthsParse,

            monthsRegex:
              /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

            monthsShortRegex:
              /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

            monthsStrictRegex:
              /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,

            monthsShortStrictRegex:
              /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,

            calendar: {
              sameDay: '[आज] LT',
              nextDay: '[कल] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[कल] LT',
              lastWeek: '[पिछले] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s में',
              past: '%s पहले',
              s: 'कुछ ही क्षण',
              ss: '%d सेकंड',
              m: 'एक मिनट',
              mm: '%d मिनट',
              h: 'एक घंटा',
              hh: '%d घंटे',
              d: 'एक दिन',
              dd: '%d दिन',
              M: 'एक महीने',
              MM: '%d महीने',
              y: 'एक वर्ष',
              yy: '%d वर्ष',
            },
            preparse: function (string) {
              return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            // Hindi notation for meridiems are quite fuzzy in practice. While there exists
            // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
            meridiemParse: /रात|सुबह|दोपहर|शाम/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'सुबह') {
                return hour
              } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'शाम') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'रात'
              } else if (hour < 10) {
                return 'सुबह'
              } else if (hour < 17) {
                return 'दोपहर'
              } else if (hour < 20) {
                return 'शाम'
              } else {
                return 'रात'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return hi
        })

        /***/
      },

    /***/ './node_modules/moment/locale/hr.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/hr.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Croatian [hr]
        //! author : Bojan Marković : https://github.com/bmarkovic

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function translate(number, withoutSuffix, key) {
            var result = number + ' '
            switch (key) {
              case 'ss':
                if (number === 1) {
                  result += 'sekunda'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sekunde'
                } else {
                  result += 'sekundi'
                }
                return result
              case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute'
              case 'mm':
                if (number === 1) {
                  result += 'minuta'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'minute'
                } else {
                  result += 'minuta'
                }
                return result
              case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata'
              case 'hh':
                if (number === 1) {
                  result += 'sat'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sata'
                } else {
                  result += 'sati'
                }
                return result
              case 'dd':
                if (number === 1) {
                  result += 'dan'
                } else {
                  result += 'dana'
                }
                return result
              case 'MM':
                if (number === 1) {
                  result += 'mjesec'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'mjeseca'
                } else {
                  result += 'mjeseci'
                }
                return result
              case 'yy':
                if (number === 1) {
                  result += 'godina'
                } else if (number === 2 || number === 3 || number === 4) {
                  result += 'godine'
                } else {
                  result += 'godina'
                }
                return result
            }
          }

          var hr = moment.defineLocale('hr', {
            months: {
              format:
                'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
                  '_'
                ),
              standalone:
                'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
                  '_'
                ),
            },
            monthsShort:
              'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
                '_'
              ),
            weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'Do MMMM YYYY',
              LLL: 'Do MMMM YYYY H:mm',
              LLLL: 'dddd, Do MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[danas u] LT',
              nextDay: '[sutra u] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[u] [nedjelju] [u] LT'
                  case 3:
                    return '[u] [srijedu] [u] LT'
                  case 6:
                    return '[u] [subotu] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[u] dddd [u] LT'
                }
              },
              lastDay: '[jučer u] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[prošlu] [nedjelju] [u] LT'
                  case 3:
                    return '[prošlu] [srijedu] [u] LT'
                  case 6:
                    return '[prošle] [subote] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[prošli] dddd [u] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'prije %s',
              s: 'par sekundi',
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: 'dan',
              dd: translate,
              M: 'mjesec',
              MM: translate,
              y: 'godinu',
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return hr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/hu.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/hu.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Hungarian [hu]
        //! author : Adam Brunner : https://github.com/adambrunner
        //! author : Peter Viszt  : https://github.com/passatgt

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var weekEndings =
            'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
              ' '
            )
          function translate(number, withoutSuffix, key, isFuture) {
            var num = number
            switch (key) {
              case 's':
                return isFuture || withoutSuffix
                  ? 'néhány másodperc'
                  : 'néhány másodperce'
              case 'ss':
                return num + (isFuture || withoutSuffix)
                  ? ' másodperc'
                  : ' másodperce'
              case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce')
              case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce')
              case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája')
              case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája')
              case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja')
              case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja')
              case 'M':
                return (
                  'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja')
                )
              case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja')
              case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve')
              case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve')
            }
            return ''
          }
          function week(isFuture) {
            return (
              (isFuture ? '' : '[múlt] ') +
              '[' +
              weekEndings[this.day()] +
              '] LT[-kor]'
            )
          }

          var hu = moment.defineLocale('hu', {
            months:
              'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
            weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
            weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'YYYY.MM.DD.',
              LL: 'YYYY. MMMM D.',
              LLL: 'YYYY. MMMM D. H:mm',
              LLLL: 'YYYY. MMMM D., dddd H:mm',
            },
            meridiemParse: /de|du/i,
            isPM: function (input) {
              return input.charAt(1).toLowerCase() === 'u'
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 12) {
                return isLower === true ? 'de' : 'DE'
              } else {
                return isLower === true ? 'du' : 'DU'
              }
            },
            calendar: {
              sameDay: '[ma] LT[-kor]',
              nextDay: '[holnap] LT[-kor]',
              nextWeek: function () {
                return week.call(this, true)
              },
              lastDay: '[tegnap] LT[-kor]',
              lastWeek: function () {
                return week.call(this, false)
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s múlva',
              past: '%s',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return hu
        })

        /***/
      },

    /***/ './node_modules/moment/locale/hy-am.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/hy-am.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Armenian [hy-am]
        //! author : Armendarabyan : https://github.com/armendarabyan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var hyAm = moment.defineLocale('hy-am', {
            months: {
              format:
                'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
                  '_'
                ),
              standalone:
                'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
                  '_'
                ),
            },
            monthsShort:
              'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
            weekdays:
              'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
                '_'
              ),
            weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
            weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY թ.',
              LLL: 'D MMMM YYYY թ., HH:mm',
              LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
            },
            calendar: {
              sameDay: '[այսօր] LT',
              nextDay: '[վաղը] LT',
              lastDay: '[երեկ] LT',
              nextWeek: function () {
                return 'dddd [օրը ժամը] LT'
              },
              lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT'
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s հետո',
              past: '%s առաջ',
              s: 'մի քանի վայրկյան',
              ss: '%d վայրկյան',
              m: 'րոպե',
              mm: '%d րոպե',
              h: 'ժամ',
              hh: '%d ժամ',
              d: 'օր',
              dd: '%d օր',
              M: 'ամիս',
              MM: '%d ամիս',
              y: 'տարի',
              yy: '%d տարի',
            },
            meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
            isPM: function (input) {
              return /^(ցերեկվա|երեկոյան)$/.test(input)
            },
            meridiem: function (hour) {
              if (hour < 4) {
                return 'գիշերվա'
              } else if (hour < 12) {
                return 'առավոտվա'
              } else if (hour < 17) {
                return 'ցերեկվա'
              } else {
                return 'երեկոյան'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                  if (number === 1) {
                    return number + '-ին'
                  }
                  return number + '-րդ'
                default:
                  return number
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return hyAm
        })

        /***/
      },

    /***/ './node_modules/moment/locale/id.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/id.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Indonesian [id]
        //! author : Mohammad Satrio Utomo : https://github.com/tyok
        //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var id = moment.defineLocale('id', {
            months:
              'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
            weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
            weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
            weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [pukul] HH.mm',
              LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
            },
            meridiemParse: /pagi|siang|sore|malam/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'pagi') {
                return hour
              } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12
              }
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 11) {
                return 'pagi'
              } else if (hours < 15) {
                return 'siang'
              } else if (hours < 19) {
                return 'sore'
              } else {
                return 'malam'
              }
            },
            calendar: {
              sameDay: '[Hari ini pukul] LT',
              nextDay: '[Besok pukul] LT',
              nextWeek: 'dddd [pukul] LT',
              lastDay: '[Kemarin pukul] LT',
              lastWeek: 'dddd [lalu pukul] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dalam %s',
              past: '%s yang lalu',
              s: 'beberapa detik',
              ss: '%d detik',
              m: 'semenit',
              mm: '%d menit',
              h: 'sejam',
              hh: '%d jam',
              d: 'sehari',
              dd: '%d hari',
              M: 'sebulan',
              MM: '%d bulan',
              y: 'setahun',
              yy: '%d tahun',
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return id
        })

        /***/
      },

    /***/ './node_modules/moment/locale/is.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/is.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Icelandic [is]
        //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function plural(n) {
            if (n % 100 === 11) {
              return true
            } else if (n % 10 === 1) {
              return false
            }
            return true
          }
          function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' '
            switch (key) {
              case 's':
                return withoutSuffix || isFuture
                  ? 'nokkrar sekúndur'
                  : 'nokkrum sekúndum'
              case 'ss':
                if (plural(number)) {
                  return (
                    result +
                    (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')
                  )
                }
                return result + 'sekúnda'
              case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu'
              case 'mm':
                if (plural(number)) {
                  return (
                    result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')
                  )
                } else if (withoutSuffix) {
                  return result + 'mínúta'
                }
                return result + 'mínútu'
              case 'hh':
                if (plural(number)) {
                  return (
                    result +
                    (withoutSuffix || isFuture
                      ? 'klukkustundir'
                      : 'klukkustundum')
                  )
                }
                return result + 'klukkustund'
              case 'd':
                if (withoutSuffix) {
                  return 'dagur'
                }
                return isFuture ? 'dag' : 'degi'
              case 'dd':
                if (plural(number)) {
                  if (withoutSuffix) {
                    return result + 'dagar'
                  }
                  return result + (isFuture ? 'daga' : 'dögum')
                } else if (withoutSuffix) {
                  return result + 'dagur'
                }
                return result + (isFuture ? 'dag' : 'degi')
              case 'M':
                if (withoutSuffix) {
                  return 'mánuður'
                }
                return isFuture ? 'mánuð' : 'mánuði'
              case 'MM':
                if (plural(number)) {
                  if (withoutSuffix) {
                    return result + 'mánuðir'
                  }
                  return result + (isFuture ? 'mánuði' : 'mánuðum')
                } else if (withoutSuffix) {
                  return result + 'mánuður'
                }
                return result + (isFuture ? 'mánuð' : 'mánuði')
              case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári'
              case 'yy':
                if (plural(number)) {
                  return result + (withoutSuffix || isFuture ? 'ár' : 'árum')
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári')
            }
          }

          var is = moment.defineLocale('is', {
            months:
              'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
            weekdays:
              'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
                '_'
              ),
            weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
            weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY [kl.] H:mm',
              LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
            },
            calendar: {
              sameDay: '[í dag kl.] LT',
              nextDay: '[á morgun kl.] LT',
              nextWeek: 'dddd [kl.] LT',
              lastDay: '[í gær kl.] LT',
              lastWeek: '[síðasta] dddd [kl.] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'eftir %s',
              past: 'fyrir %s síðan',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: 'klukkustund',
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return is
        })

        /***/
      },

    /***/ './node_modules/moment/locale/it-ch.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/it-ch.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Italian (Switzerland) [it-ch]
        //! author : xfh : https://github.com/xfh

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var itCh = moment.defineLocale('it-ch', {
            months:
              'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
                '_'
              ),
            monthsShort:
              'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
            weekdays:
              'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
                '_'
              ),
            weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
            weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Oggi alle] LT',
              nextDay: '[Domani alle] LT',
              nextWeek: 'dddd [alle] LT',
              lastDay: '[Ieri alle] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[la scorsa] dddd [alle] LT'
                  default:
                    return '[lo scorso] dddd [alle] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: function (s) {
                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s
              },
              past: '%s fa',
              s: 'alcuni secondi',
              ss: '%d secondi',
              m: 'un minuto',
              mm: '%d minuti',
              h: "un'ora",
              hh: '%d ore',
              d: 'un giorno',
              dd: '%d giorni',
              M: 'un mese',
              MM: '%d mesi',
              y: 'un anno',
              yy: '%d anni',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return itCh
        })

        /***/
      },

    /***/ './node_modules/moment/locale/it.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/it.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Italian [it]
        //! author : Lorenzo : https://github.com/aliem
        //! author: Mattia Larentis: https://github.com/nostalgiaz
        //! author: Marco : https://github.com/Manfre98

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var it = moment.defineLocale('it', {
            months:
              'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
                '_'
              ),
            monthsShort:
              'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
            weekdays:
              'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
                '_'
              ),
            weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
            weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: function () {
                return (
                  '[Oggi a' +
                  (this.hours() > 1
                    ? 'lle '
                    : this.hours() === 0
                    ? ' '
                    : "ll'") +
                  ']LT'
                )
              },
              nextDay: function () {
                return (
                  '[Domani a' +
                  (this.hours() > 1
                    ? 'lle '
                    : this.hours() === 0
                    ? ' '
                    : "ll'") +
                  ']LT'
                )
              },
              nextWeek: function () {
                return (
                  'dddd [a' +
                  (this.hours() > 1
                    ? 'lle '
                    : this.hours() === 0
                    ? ' '
                    : "ll'") +
                  ']LT'
                )
              },
              lastDay: function () {
                return (
                  '[Ieri a' +
                  (this.hours() > 1
                    ? 'lle '
                    : this.hours() === 0
                    ? ' '
                    : "ll'") +
                  ']LT'
                )
              },
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return (
                      '[La scorsa] dddd [a' +
                      (this.hours() > 1
                        ? 'lle '
                        : this.hours() === 0
                        ? ' '
                        : "ll'") +
                      ']LT'
                    )
                  default:
                    return (
                      '[Lo scorso] dddd [a' +
                      (this.hours() > 1
                        ? 'lle '
                        : this.hours() === 0
                        ? ' '
                        : "ll'") +
                      ']LT'
                    )
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'tra %s',
              past: '%s fa',
              s: 'alcuni secondi',
              ss: '%d secondi',
              m: 'un minuto',
              mm: '%d minuti',
              h: "un'ora",
              hh: '%d ore',
              d: 'un giorno',
              dd: '%d giorni',
              w: 'una settimana',
              ww: '%d settimane',
              M: 'un mese',
              MM: '%d mesi',
              y: 'un anno',
              yy: '%d anni',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return it
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ja.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ja.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Japanese [ja]
        //! author : LI Long : https://github.com/baryon

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ja = moment.defineLocale('ja', {
            eras: [
              {
                since: '2019-05-01',
                offset: 1,
                name: '令和',
                narrow: '㋿',
                abbr: 'R',
              },
              {
                since: '1989-01-08',
                until: '2019-04-30',
                offset: 1,
                name: '平成',
                narrow: '㍻',
                abbr: 'H',
              },
              {
                since: '1926-12-25',
                until: '1989-01-07',
                offset: 1,
                name: '昭和',
                narrow: '㍼',
                abbr: 'S',
              },
              {
                since: '1912-07-30',
                until: '1926-12-24',
                offset: 1,
                name: '大正',
                narrow: '㍽',
                abbr: 'T',
              },
              {
                since: '1873-01-01',
                until: '1912-07-29',
                offset: 6,
                name: '明治',
                narrow: '㍾',
                abbr: 'M',
              },
              {
                since: '0001-01-01',
                until: '1873-12-31',
                offset: 1,
                name: '西暦',
                narrow: 'AD',
                abbr: 'AD',
              },
              {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: '紀元前',
                narrow: 'BC',
                abbr: 'BC',
              },
            ],
            eraYearOrdinalRegex: /(元|\d+)年/,
            eraYearOrdinalParse: function (input, match) {
              return match[1] === '元' ? 1 : parseInt(match[1] || input, 10)
            },
            months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
              '_'
            ),
            monthsShort:
              '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split(
              '_'
            ),
            weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
            weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY/MM/DD',
              LL: 'YYYY年M月D日',
              LLL: 'YYYY年M月D日 HH:mm',
              LLLL: 'YYYY年M月D日 dddd HH:mm',
              l: 'YYYY/MM/DD',
              ll: 'YYYY年M月D日',
              lll: 'YYYY年M月D日 HH:mm',
              llll: 'YYYY年M月D日(ddd) HH:mm',
            },
            meridiemParse: /午前|午後/i,
            isPM: function (input) {
              return input === '午後'
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return '午前'
              } else {
                return '午後'
              }
            },
            calendar: {
              sameDay: '[今日] LT',
              nextDay: '[明日] LT',
              nextWeek: function (now) {
                if (now.week() !== this.week()) {
                  return '[来週]dddd LT'
                } else {
                  return 'dddd LT'
                }
              },
              lastDay: '[昨日] LT',
              lastWeek: function (now) {
                if (this.week() !== now.week()) {
                  return '[先週]dddd LT'
                } else {
                  return 'dddd LT'
                }
              },
              sameElse: 'L',
            },
            dayOfMonthOrdinalParse: /\d{1,2}日/,
            ordinal: function (number, period) {
              switch (period) {
                case 'y':
                  return number === 1 ? '元年' : number + '年'
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '日'
                default:
                  return number
              }
            },
            relativeTime: {
              future: '%s後',
              past: '%s前',
              s: '数秒',
              ss: '%d秒',
              m: '1分',
              mm: '%d分',
              h: '1時間',
              hh: '%d時間',
              d: '1日',
              dd: '%d日',
              M: '1ヶ月',
              MM: '%dヶ月',
              y: '1年',
              yy: '%d年',
            },
          })

          return ja
        })

        /***/
      },

    /***/ './node_modules/moment/locale/jv.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/jv.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Javanese [jv]
        //! author : Rony Lantip : https://github.com/lantip
        //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var jv = moment.defineLocale('jv', {
            months:
              'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
            weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
            weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
            weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [pukul] HH.mm',
              LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
            },
            meridiemParse: /enjing|siyang|sonten|ndalu/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'enjing') {
                return hour
              } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12
              }
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 11) {
                return 'enjing'
              } else if (hours < 15) {
                return 'siyang'
              } else if (hours < 19) {
                return 'sonten'
              } else {
                return 'ndalu'
              }
            },
            calendar: {
              sameDay: '[Dinten puniko pukul] LT',
              nextDay: '[Mbenjang pukul] LT',
              nextWeek: 'dddd [pukul] LT',
              lastDay: '[Kala wingi pukul] LT',
              lastWeek: 'dddd [kepengker pukul] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'wonten ing %s',
              past: '%s ingkang kepengker',
              s: 'sawetawis detik',
              ss: '%d detik',
              m: 'setunggal menit',
              mm: '%d menit',
              h: 'setunggal jam',
              hh: '%d jam',
              d: 'sedinten',
              dd: '%d dinten',
              M: 'sewulan',
              MM: '%d wulan',
              y: 'setaun',
              yy: '%d taun',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return jv
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ka.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ka.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Georgian [ka]
        //! author : Irakli Janiashvili : https://github.com/IrakliJani

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ka = moment.defineLocale('ka', {
            months:
              'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
                '_'
              ),
            monthsShort:
              'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
            weekdays: {
              standalone:
                'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
                  '_'
                ),
              format:
                'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
                  '_'
                ),
              isFormat: /(წინა|შემდეგ)/,
            },
            weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
            weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[დღეს] LT[-ზე]',
              nextDay: '[ხვალ] LT[-ზე]',
              lastDay: '[გუშინ] LT[-ზე]',
              nextWeek: '[შემდეგ] dddd LT[-ზე]',
              lastWeek: '[წინა] dddd LT-ზე',
              sameElse: 'L',
            },
            relativeTime: {
              future: function (s) {
                return s.replace(
                  /(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,
                  function ($0, $1, $2) {
                    return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში'
                  }
                )
              },
              past: function (s) {
                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                  return s.replace(/(ი|ე)$/, 'ის წინ')
                }
                if (/წელი/.test(s)) {
                  return s.replace(/წელი$/, 'წლის წინ')
                }
                return s
              },
              s: 'რამდენიმე წამი',
              ss: '%d წამი',
              m: 'წუთი',
              mm: '%d წუთი',
              h: 'საათი',
              hh: '%d საათი',
              d: 'დღე',
              dd: '%d დღე',
              M: 'თვე',
              MM: '%d თვე',
              y: 'წელი',
              yy: '%d წელი',
            },
            dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
            ordinal: function (number) {
              if (number === 0) {
                return number
              }
              if (number === 1) {
                return number + '-ლი'
              }
              if (
                number < 20 ||
                (number <= 100 && number % 20 === 0) ||
                number % 100 === 0
              ) {
                return 'მე-' + number
              }
              return number + '-ე'
            },
            week: {
              dow: 1,
              doy: 7,
            },
          })

          return ka
        })

        /***/
      },

    /***/ './node_modules/moment/locale/kk.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/kk.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Kazakh [kk]
        //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            0: '-ші',
            1: '-ші',
            2: '-ші',
            3: '-ші',
            4: '-ші',
            5: '-ші',
            6: '-шы',
            7: '-ші',
            8: '-ші',
            9: '-шы',
            10: '-шы',
            20: '-шы',
            30: '-шы',
            40: '-шы',
            50: '-ші',
            60: '-шы',
            70: '-ші',
            80: '-ші',
            90: '-шы',
            100: '-ші',
          }

          var kk = moment.defineLocale('kk', {
            months:
              'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
                '_'
              ),
            monthsShort:
              'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
            weekdays:
              'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
                '_'
              ),
            weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
            weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Бүгін сағат] LT',
              nextDay: '[Ертең сағат] LT',
              nextWeek: 'dddd [сағат] LT',
              lastDay: '[Кеше сағат] LT',
              lastWeek: '[Өткен аптаның] dddd [сағат] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s ішінде',
              past: '%s бұрын',
              s: 'бірнеше секунд',
              ss: '%d секунд',
              m: 'бір минут',
              mm: '%d минут',
              h: 'бір сағат',
              hh: '%d сағат',
              d: 'бір күн',
              dd: '%d күн',
              M: 'бір ай',
              MM: '%d ай',
              y: 'бір жыл',
              yy: '%d жыл',
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
            ordinal: function (number) {
              var a = number % 10,
                b = number >= 100 ? 100 : null
              return number + (suffixes[number] || suffixes[a] || suffixes[b])
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return kk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/km.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/km.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Cambodian [km]
        //! author : Kruy Vanna : https://github.com/kruyvanna

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '១',
              2: '២',
              3: '៣',
              4: '៤',
              5: '៥',
              6: '៦',
              7: '៧',
              8: '៨',
              9: '៩',
              0: '០',
            },
            numberMap = {
              '១': '1',
              '២': '2',
              '៣': '3',
              '៤': '4',
              '៥': '5',
              '៦': '6',
              '៧': '7',
              '៨': '8',
              '៩': '9',
              '០': '0',
            }

          var km = moment.defineLocale('km', {
            months:
              'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
                '_'
              ),
            monthsShort:
              'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
                '_'
              ),
            weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split(
              '_'
            ),
            weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
            weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            meridiemParse: /ព្រឹក|ល្ងាច/,
            isPM: function (input) {
              return input === 'ល្ងាច'
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ព្រឹក'
              } else {
                return 'ល្ងាច'
              }
            },
            calendar: {
              sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
              nextDay: '[ស្អែក ម៉ោង] LT',
              nextWeek: 'dddd [ម៉ោង] LT',
              lastDay: '[ម្សិលមិញ ម៉ោង] LT',
              lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%sទៀត',
              past: '%sមុន',
              s: 'ប៉ុន្មានវិនាទី',
              ss: '%d វិនាទី',
              m: 'មួយនាទី',
              mm: '%d នាទី',
              h: 'មួយម៉ោង',
              hh: '%d ម៉ោង',
              d: 'មួយថ្ងៃ',
              dd: '%d ថ្ងៃ',
              M: 'មួយខែ',
              MM: '%d ខែ',
              y: 'មួយឆ្នាំ',
              yy: '%d ឆ្នាំ',
            },
            dayOfMonthOrdinalParse: /ទី\d{1,2}/,
            ordinal: 'ទី%d',
            preparse: function (string) {
              return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return km
        })

        /***/
      },

    /***/ './node_modules/moment/locale/kn.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/kn.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Kannada [kn]
        //! author : Rajeev Naik : https://github.com/rajeevnaikte

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '೧',
              2: '೨',
              3: '೩',
              4: '೪',
              5: '೫',
              6: '೬',
              7: '೭',
              8: '೮',
              9: '೯',
              0: '೦',
            },
            numberMap = {
              '೧': '1',
              '೨': '2',
              '೩': '3',
              '೪': '4',
              '೫': '5',
              '೬': '6',
              '೭': '7',
              '೮': '8',
              '೯': '9',
              '೦': '0',
            }

          var kn = moment.defineLocale('kn', {
            months:
              'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
                '_'
              ),
            monthsShort:
              'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
                '_'
              ),
            weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
            weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
            longDateFormat: {
              LT: 'A h:mm',
              LTS: 'A h:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm',
              LLLL: 'dddd, D MMMM YYYY, A h:mm',
            },
            calendar: {
              sameDay: '[ಇಂದು] LT',
              nextDay: '[ನಾಳೆ] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[ನಿನ್ನೆ] LT',
              lastWeek: '[ಕೊನೆಯ] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s ನಂತರ',
              past: '%s ಹಿಂದೆ',
              s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
              ss: '%d ಸೆಕೆಂಡುಗಳು',
              m: 'ಒಂದು ನಿಮಿಷ',
              mm: '%d ನಿಮಿಷ',
              h: 'ಒಂದು ಗಂಟೆ',
              hh: '%d ಗಂಟೆ',
              d: 'ಒಂದು ದಿನ',
              dd: '%d ದಿನ',
              M: 'ಒಂದು ತಿಂಗಳು',
              MM: '%d ತಿಂಗಳು',
              y: 'ಒಂದು ವರ್ಷ',
              yy: '%d ವರ್ಷ',
            },
            preparse: function (string) {
              return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour
              } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'ರಾತ್ರಿ'
              } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ'
              } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ'
              } else if (hour < 20) {
                return 'ಸಂಜೆ'
              } else {
                return 'ರಾತ್ರಿ'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
            ordinal: function (number) {
              return number + 'ನೇ'
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return kn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ko.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ko.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Korean [ko]
        //! author : Kyungwook, Park : https://github.com/kyungw00k
        //! author : Jeeeyul Lee <jeeeyul@gmail.com>

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ko = moment.defineLocale('ko', {
            months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
              '_'
            ),
            monthsShort:
              '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
            weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split(
              '_'
            ),
            weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
            weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
            longDateFormat: {
              LT: 'A h:mm',
              LTS: 'A h:mm:ss',
              L: 'YYYY.MM.DD.',
              LL: 'YYYY년 MMMM D일',
              LLL: 'YYYY년 MMMM D일 A h:mm',
              LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
              l: 'YYYY.MM.DD.',
              ll: 'YYYY년 MMMM D일',
              lll: 'YYYY년 MMMM D일 A h:mm',
              llll: 'YYYY년 MMMM D일 dddd A h:mm',
            },
            calendar: {
              sameDay: '오늘 LT',
              nextDay: '내일 LT',
              nextWeek: 'dddd LT',
              lastDay: '어제 LT',
              lastWeek: '지난주 dddd LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s 후',
              past: '%s 전',
              s: '몇 초',
              ss: '%d초',
              m: '1분',
              mm: '%d분',
              h: '한 시간',
              hh: '%d시간',
              d: '하루',
              dd: '%d일',
              M: '한 달',
              MM: '%d달',
              y: '일 년',
              yy: '%d년',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '일'
                case 'M':
                  return number + '월'
                case 'w':
                case 'W':
                  return number + '주'
                default:
                  return number
              }
            },
            meridiemParse: /오전|오후/,
            isPM: function (token) {
              return token === '오후'
            },
            meridiem: function (hour, minute, isUpper) {
              return hour < 12 ? '오전' : '오후'
            },
          })

          return ko
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ku.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ku.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Kurdish [ku]
        //! author : Shahram Mebashar : https://github.com/ShahramMebashar

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '١',
              2: '٢',
              3: '٣',
              4: '٤',
              5: '٥',
              6: '٦',
              7: '٧',
              8: '٨',
              9: '٩',
              0: '٠',
            },
            numberMap = {
              '١': '1',
              '٢': '2',
              '٣': '3',
              '٤': '4',
              '٥': '5',
              '٦': '6',
              '٧': '7',
              '٨': '8',
              '٩': '9',
              '٠': '0',
            },
            months = [
              'کانونی دووەم',
              'شوبات',
              'ئازار',
              'نیسان',
              'ئایار',
              'حوزەیران',
              'تەمموز',
              'ئاب',
              'ئەیلوول',
              'تشرینی یەكەم',
              'تشرینی دووەم',
              'كانونی یەکەم',
            ]

          var ku = moment.defineLocale('ku', {
            months: months,
            monthsShort: months,
            weekdays:
              'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
                '_'
              ),
            weekdaysShort:
              'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
                '_'
              ),
            weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            meridiemParse: /ئێواره‌|به‌یانی/,
            isPM: function (input) {
              return /ئێواره‌/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'به‌یانی'
              } else {
                return 'ئێواره‌'
              }
            },
            calendar: {
              sameDay: '[ئه‌مرۆ كاتژمێر] LT',
              nextDay: '[به‌یانی كاتژمێر] LT',
              nextWeek: 'dddd [كاتژمێر] LT',
              lastDay: '[دوێنێ كاتژمێر] LT',
              lastWeek: 'dddd [كاتژمێر] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'له‌ %s',
              past: '%s',
              s: 'چه‌ند چركه‌یه‌ك',
              ss: 'چركه‌ %d',
              m: 'یه‌ك خوله‌ك',
              mm: '%d خوله‌ك',
              h: 'یه‌ك كاتژمێر',
              hh: '%d كاتژمێر',
              d: 'یه‌ك ڕۆژ',
              dd: '%d ڕۆژ',
              M: 'یه‌ك مانگ',
              MM: '%d مانگ',
              y: 'یه‌ك ساڵ',
              yy: '%d ساڵ',
            },
            preparse: function (string) {
              return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                  return numberMap[match]
                })
                .replace(/،/g, ',')
            },
            postformat: function (string) {
              return string
                .replace(/\d/g, function (match) {
                  return symbolMap[match]
                })
                .replace(/,/g, '،')
            },
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return ku
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ky.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ky.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Kyrgyz [ky]
        //! author : Chyngyz Arystan uulu : https://github.com/chyngyz

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            0: '-чү',
            1: '-чи',
            2: '-чи',
            3: '-чү',
            4: '-чү',
            5: '-чи',
            6: '-чы',
            7: '-чи',
            8: '-чи',
            9: '-чу',
            10: '-чу',
            20: '-чы',
            30: '-чу',
            40: '-чы',
            50: '-чү',
            60: '-чы',
            70: '-чи',
            80: '-чи',
            90: '-чу',
            100: '-чү',
          }

          var ky = moment.defineLocale('ky', {
            months:
              'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
                '_'
              ),
            monthsShort:
              'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
            weekdays:
              'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
                '_'
              ),
            weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
            weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Бүгүн саат] LT',
              nextDay: '[Эртең саат] LT',
              nextWeek: 'dddd [саат] LT',
              lastDay: '[Кечээ саат] LT',
              lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s ичинде',
              past: '%s мурун',
              s: 'бирнече секунд',
              ss: '%d секунд',
              m: 'бир мүнөт',
              mm: '%d мүнөт',
              h: 'бир саат',
              hh: '%d саат',
              d: 'бир күн',
              dd: '%d күн',
              M: 'бир ай',
              MM: '%d ай',
              y: 'бир жыл',
              yy: '%d жыл',
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
            ordinal: function (number) {
              var a = number % 10,
                b = number >= 100 ? 100 : null
              return number + (suffixes[number] || suffixes[a] || suffixes[b])
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return ky
        })

        /***/
      },

    /***/ './node_modules/moment/locale/lb.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/lb.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Luxembourgish [lb]
        //! author : mweimerskirch : https://github.com/mweimerskirch
        //! author : David Raison : https://github.com/kwisatz

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              m: ['eng Minutt', 'enger Minutt'],
              h: ['eng Stonn', 'enger Stonn'],
              d: ['een Dag', 'engem Dag'],
              M: ['ee Mount', 'engem Mount'],
              y: ['ee Joer', 'engem Joer'],
            }
            return withoutSuffix ? format[key][0] : format[key][1]
          }
          function processFutureTime(string) {
            var number = string.substr(0, string.indexOf(' '))
            if (eifelerRegelAppliesToNumber(number)) {
              return 'a ' + string
            }
            return 'an ' + string
          }
          function processPastTime(string) {
            var number = string.substr(0, string.indexOf(' '))
            if (eifelerRegelAppliesToNumber(number)) {
              return 'viru ' + string
            }
            return 'virun ' + string
          }
          /**
           * Returns true if the word before the given number loses the '-n' ending.
           * e.g. 'an 10 Deeg' but 'a 5 Deeg'
           *
           * @param number {integer}
           * @returns {boolean}
           */
          function eifelerRegelAppliesToNumber(number) {
            number = parseInt(number, 10)
            if (isNaN(number)) {
              return false
            }
            if (number < 0) {
              // Negative Number --> always true
              return true
            } else if (number < 10) {
              // Only 1 digit
              if (4 <= number && number <= 7) {
                return true
              }
              return false
            } else if (number < 100) {
              // 2 digits
              var lastDigit = number % 10,
                firstDigit = number / 10
              if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit)
              }
              return eifelerRegelAppliesToNumber(lastDigit)
            } else if (number < 10000) {
              // 3 or 4 digits --> recursively check first digit
              while (number >= 10) {
                number = number / 10
              }
              return eifelerRegelAppliesToNumber(number)
            } else {
              // Anything larger than 4 digits: recursively check first n-3 digits
              number = number / 1000
              return eifelerRegelAppliesToNumber(number)
            }
          }

          var lb = moment.defineLocale('lb', {
            months:
              'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
                '_'
              ),
            monthsShort:
              'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
                '_'
              ),
            weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
            weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm [Auer]',
              LTS: 'H:mm:ss [Auer]',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm [Auer]',
              LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
            },
            calendar: {
              sameDay: '[Haut um] LT',
              sameElse: 'L',
              nextDay: '[Muer um] LT',
              nextWeek: 'dddd [um] LT',
              lastDay: '[Gëschter um] LT',
              lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                  case 2:
                  case 4:
                    return '[Leschten] dddd [um] LT'
                  default:
                    return '[Leschte] dddd [um] LT'
                }
              },
            },
            relativeTime: {
              future: processFutureTime,
              past: processPastTime,
              s: 'e puer Sekonnen',
              ss: '%d Sekonnen',
              m: processRelativeTime,
              mm: '%d Minutten',
              h: processRelativeTime,
              hh: '%d Stonnen',
              d: processRelativeTime,
              dd: '%d Deeg',
              M: processRelativeTime,
              MM: '%d Méint',
              y: processRelativeTime,
              yy: '%d Joer',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return lb
        })

        /***/
      },

    /***/ './node_modules/moment/locale/lo.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/lo.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Lao [lo]
        //! author : Ryan Hart : https://github.com/ryanhart2

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var lo = moment.defineLocale('lo', {
            months:
              'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
                '_'
              ),
            monthsShort:
              'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
                '_'
              ),
            weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
            weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
            weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
            },
            meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
            isPM: function (input) {
              return input === 'ຕອນແລງ'
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ຕອນເຊົ້າ'
              } else {
                return 'ຕອນແລງ'
              }
            },
            calendar: {
              sameDay: '[ມື້ນີ້ເວລາ] LT',
              nextDay: '[ມື້ອື່ນເວລາ] LT',
              nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
              lastDay: '[ມື້ວານນີ້ເວລາ] LT',
              lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'ອີກ %s',
              past: '%sຜ່ານມາ',
              s: 'ບໍ່ເທົ່າໃດວິນາທີ',
              ss: '%d ວິນາທີ',
              m: '1 ນາທີ',
              mm: '%d ນາທີ',
              h: '1 ຊົ່ວໂມງ',
              hh: '%d ຊົ່ວໂມງ',
              d: '1 ມື້',
              dd: '%d ມື້',
              M: '1 ເດືອນ',
              MM: '%d ເດືອນ',
              y: '1 ປີ',
              yy: '%d ປີ',
            },
            dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
            ordinal: function (number) {
              return 'ທີ່' + number
            },
          })

          return lo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/lt.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/lt.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Lithuanian [lt]
        //! author : Mindaugas Mozūras : https://github.com/mmozuras

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var units = {
            ss: 'sekundė_sekundžių_sekundes',
            m: 'minutė_minutės_minutę',
            mm: 'minutės_minučių_minutes',
            h: 'valanda_valandos_valandą',
            hh: 'valandos_valandų_valandas',
            d: 'diena_dienos_dieną',
            dd: 'dienos_dienų_dienas',
            M: 'mėnuo_mėnesio_mėnesį',
            MM: 'mėnesiai_mėnesių_mėnesius',
            y: 'metai_metų_metus',
            yy: 'metai_metų_metus',
          }
          function translateSeconds(number, withoutSuffix, key, isFuture) {
            if (withoutSuffix) {
              return 'kelios sekundės'
            } else {
              return isFuture ? 'kelių sekundžių' : 'kelias sekundes'
            }
          }
          function translateSingular(number, withoutSuffix, key, isFuture) {
            return withoutSuffix
              ? forms(key)[0]
              : isFuture
              ? forms(key)[1]
              : forms(key)[2]
          }
          function special(number) {
            return number % 10 === 0 || (number > 10 && number < 20)
          }
          function forms(key) {
            return units[key].split('_')
          }
          function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' '
            if (number === 1) {
              return (
                result +
                translateSingular(number, withoutSuffix, key[0], isFuture)
              )
            } else if (withoutSuffix) {
              return result + (special(number) ? forms(key)[1] : forms(key)[0])
            } else {
              if (isFuture) {
                return result + forms(key)[1]
              } else {
                return (
                  result + (special(number) ? forms(key)[1] : forms(key)[2])
                )
              }
            }
          }
          var lt = moment.defineLocale('lt', {
            months: {
              format:
                'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
                  '_'
                ),
              standalone:
                'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
                  '_'
                ),
              isFormat:
                /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
            },
            monthsShort:
              'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
            weekdays: {
              format:
                'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
                  '_'
                ),
              standalone:
                'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
                  '_'
                ),
              isFormat: /dddd HH:mm/,
            },
            weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
            weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'YYYY [m.] MMMM D [d.]',
              LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
              LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
              l: 'YYYY-MM-DD',
              ll: 'YYYY [m.] MMMM D [d.]',
              lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
              llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
            },
            calendar: {
              sameDay: '[Šiandien] LT',
              nextDay: '[Rytoj] LT',
              nextWeek: 'dddd LT',
              lastDay: '[Vakar] LT',
              lastWeek: '[Praėjusį] dddd LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'po %s',
              past: 'prieš %s',
              s: translateSeconds,
              ss: translate,
              m: translateSingular,
              mm: translate,
              h: translateSingular,
              hh: translate,
              d: translateSingular,
              dd: translate,
              M: translateSingular,
              MM: translate,
              y: translateSingular,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}-oji/,
            ordinal: function (number) {
              return number + '-oji'
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return lt
        })

        /***/
      },

    /***/ './node_modules/moment/locale/lv.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/lv.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Latvian [lv]
        //! author : Kristaps Karlsons : https://github.com/skakri
        //! author : Jānis Elmeris : https://github.com/JanisE

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var units = {
            ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
            m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
            mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
            h: 'stundas_stundām_stunda_stundas'.split('_'),
            hh: 'stundas_stundām_stunda_stundas'.split('_'),
            d: 'dienas_dienām_diena_dienas'.split('_'),
            dd: 'dienas_dienām_diena_dienas'.split('_'),
            M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
            MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
            y: 'gada_gadiem_gads_gadi'.split('_'),
            yy: 'gada_gadiem_gads_gadi'.split('_'),
          }
          /**
           * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
           */
          function format(forms, number, withoutSuffix) {
            if (withoutSuffix) {
              // E.g. "21 minūte", "3 minūtes".
              return number % 10 === 1 && number % 100 !== 11
                ? forms[2]
                : forms[3]
            } else {
              // E.g. "21 minūtes" as in "pēc 21 minūtes".
              // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
              return number % 10 === 1 && number % 100 !== 11
                ? forms[0]
                : forms[1]
            }
          }
          function relativeTimeWithPlural(number, withoutSuffix, key) {
            return number + ' ' + format(units[key], number, withoutSuffix)
          }
          function relativeTimeWithSingular(number, withoutSuffix, key) {
            return format(units[key], number, withoutSuffix)
          }
          function relativeSeconds(number, withoutSuffix) {
            return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm'
          }

          var lv = moment.defineLocale('lv', {
            months:
              'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
            weekdays:
              'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
                '_'
              ),
            weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
            weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY.',
              LL: 'YYYY. [gada] D. MMMM',
              LLL: 'YYYY. [gada] D. MMMM, HH:mm',
              LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
            },
            calendar: {
              sameDay: '[Šodien pulksten] LT',
              nextDay: '[Rīt pulksten] LT',
              nextWeek: 'dddd [pulksten] LT',
              lastDay: '[Vakar pulksten] LT',
              lastWeek: '[Pagājušā] dddd [pulksten] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'pēc %s',
              past: 'pirms %s',
              s: relativeSeconds,
              ss: relativeTimeWithPlural,
              m: relativeTimeWithSingular,
              mm: relativeTimeWithPlural,
              h: relativeTimeWithSingular,
              hh: relativeTimeWithPlural,
              d: relativeTimeWithSingular,
              dd: relativeTimeWithPlural,
              M: relativeTimeWithSingular,
              MM: relativeTimeWithPlural,
              y: relativeTimeWithSingular,
              yy: relativeTimeWithPlural,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return lv
        })

        /***/
      },

    /***/ './node_modules/moment/locale/me.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/me.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Montenegrin [me]
        //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var translator = {
            words: {
              //Different grammatical cases
              ss: ['sekund', 'sekunda', 'sekundi'],
              m: ['jedan minut', 'jednog minuta'],
              mm: ['minut', 'minuta', 'minuta'],
              h: ['jedan sat', 'jednog sata'],
              hh: ['sat', 'sata', 'sati'],
              dd: ['dan', 'dana', 'dana'],
              MM: ['mjesec', 'mjeseca', 'mjeseci'],
              yy: ['godina', 'godine', 'godina'],
            },
            correctGrammaticalCase: function (number, wordKey) {
              return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2]
            },
            translate: function (number, withoutSuffix, key) {
              var wordKey = translator.words[key]
              if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1]
              } else {
                return (
                  number +
                  ' ' +
                  translator.correctGrammaticalCase(number, wordKey)
                )
              }
            },
          }

          var me = moment.defineLocale('me', {
            months:
              'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
                '_'
              ),
            weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd, D. MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[danas u] LT',
              nextDay: '[sjutra u] LT',

              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[u] [nedjelju] [u] LT'
                  case 3:
                    return '[u] [srijedu] [u] LT'
                  case 6:
                    return '[u] [subotu] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[u] dddd [u] LT'
                }
              },
              lastDay: '[juče u] LT',
              lastWeek: function () {
                var lastWeekDays = [
                  '[prošle] [nedjelje] [u] LT',
                  '[prošlog] [ponedjeljka] [u] LT',
                  '[prošlog] [utorka] [u] LT',
                  '[prošle] [srijede] [u] LT',
                  '[prošlog] [četvrtka] [u] LT',
                  '[prošlog] [petka] [u] LT',
                  '[prošle] [subote] [u] LT',
                ]
                return lastWeekDays[this.day()]
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'prije %s',
              s: 'nekoliko sekundi',
              ss: translator.translate,
              m: translator.translate,
              mm: translator.translate,
              h: translator.translate,
              hh: translator.translate,
              d: 'dan',
              dd: translator.translate,
              M: 'mjesec',
              MM: translator.translate,
              y: 'godinu',
              yy: translator.translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return me
        })

        /***/
      },

    /***/ './node_modules/moment/locale/mi.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/mi.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Maori [mi]
        //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var mi = moment.defineLocale('mi', {
            months:
              'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
                '_'
              ),
            monthsShort:
              'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
                '_'
              ),
            monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
            weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split(
              '_'
            ),
            weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
            weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [i] HH:mm',
              LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
            },
            calendar: {
              sameDay: '[i teie mahana, i] LT',
              nextDay: '[apopo i] LT',
              nextWeek: 'dddd [i] LT',
              lastDay: '[inanahi i] LT',
              lastWeek: 'dddd [whakamutunga i] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'i roto i %s',
              past: '%s i mua',
              s: 'te hēkona ruarua',
              ss: '%d hēkona',
              m: 'he meneti',
              mm: '%d meneti',
              h: 'te haora',
              hh: '%d haora',
              d: 'he ra',
              dd: '%d ra',
              M: 'he marama',
              MM: '%d marama',
              y: 'he tau',
              yy: '%d tau',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return mi
        })

        /***/
      },

    /***/ './node_modules/moment/locale/mk.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/mk.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Macedonian [mk]
        //! author : Borislav Mickov : https://github.com/B0k0
        //! author : Sashko Todorov : https://github.com/bkyceh

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var mk = moment.defineLocale('mk', {
            months:
              'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
                '_'
              ),
            monthsShort:
              'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
            weekdays:
              'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
                '_'
              ),
            weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
            weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'D.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY H:mm',
              LLLL: 'dddd, D MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[Денес во] LT',
              nextDay: '[Утре во] LT',
              nextWeek: '[Во] dddd [во] LT',
              lastDay: '[Вчера во] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                  case 3:
                  case 6:
                    return '[Изминатата] dddd [во] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[Изминатиот] dddd [во] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'за %s',
              past: 'пред %s',
              s: 'неколку секунди',
              ss: '%d секунди',
              m: 'една минута',
              mm: '%d минути',
              h: 'еден час',
              hh: '%d часа',
              d: 'еден ден',
              dd: '%d дена',
              M: 'еден месец',
              MM: '%d месеци',
              y: 'една година',
              yy: '%d години',
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function (number) {
              var lastDigit = number % 10,
                last2Digits = number % 100
              if (number === 0) {
                return number + '-ев'
              } else if (last2Digits === 0) {
                return number + '-ен'
              } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти'
              } else if (lastDigit === 1) {
                return number + '-ви'
              } else if (lastDigit === 2) {
                return number + '-ри'
              } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми'
              } else {
                return number + '-ти'
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return mk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ml.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ml.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Malayalam [ml]
        //! author : Floyd Pink : https://github.com/floydpink

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ml = moment.defineLocale('ml', {
            months:
              'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
                '_'
              ),
            monthsShort:
              'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
                '_'
              ),
            weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split(
              '_'
            ),
            weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
            longDateFormat: {
              LT: 'A h:mm -നു',
              LTS: 'A h:mm:ss -നു',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm -നു',
              LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
            },
            calendar: {
              sameDay: '[ഇന്ന്] LT',
              nextDay: '[നാളെ] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[ഇന്നലെ] LT',
              lastWeek: '[കഴിഞ്ഞ] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s കഴിഞ്ഞ്',
              past: '%s മുൻപ്',
              s: 'അൽപ നിമിഷങ്ങൾ',
              ss: '%d സെക്കൻഡ്',
              m: 'ഒരു മിനിറ്റ്',
              mm: '%d മിനിറ്റ്',
              h: 'ഒരു മണിക്കൂർ',
              hh: '%d മണിക്കൂർ',
              d: 'ഒരു ദിവസം',
              dd: '%d ദിവസം',
              M: 'ഒരു മാസം',
              MM: '%d മാസം',
              y: 'ഒരു വർഷം',
              yy: '%d വർഷം',
            },
            meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                (meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം'
              ) {
                return hour + 12
              } else {
                return hour
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'രാത്രി'
              } else if (hour < 12) {
                return 'രാവിലെ'
              } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്'
              } else if (hour < 20) {
                return 'വൈകുന്നേരം'
              } else {
                return 'രാത്രി'
              }
            },
          })

          return ml
        })

        /***/
      },

    /***/ './node_modules/moment/locale/mn.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/mn.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Mongolian [mn]
        //! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function translate(number, withoutSuffix, key, isFuture) {
            switch (key) {
              case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын'
              case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын')
              case 'm':
              case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын')
              case 'h':
              case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн')
              case 'd':
              case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн')
              case 'M':
              case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын')
              case 'y':
              case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн')
              default:
                return number
            }
          }

          var mn = moment.defineLocale('mn', {
            months:
              'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
                '_'
              ),
            monthsShort:
              '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
            weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
            weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'YYYY оны MMMMын D',
              LLL: 'YYYY оны MMMMын D HH:mm',
              LLLL: 'dddd, YYYY оны MMMMын D HH:mm',
            },
            meridiemParse: /ҮӨ|ҮХ/i,
            isPM: function (input) {
              return input === 'ҮХ'
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ҮӨ'
              } else {
                return 'ҮХ'
              }
            },
            calendar: {
              sameDay: '[Өнөөдөр] LT',
              nextDay: '[Маргааш] LT',
              nextWeek: '[Ирэх] dddd LT',
              lastDay: '[Өчигдөр] LT',
              lastWeek: '[Өнгөрсөн] dddd LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s дараа',
              past: '%s өмнө',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + ' өдөр'
                default:
                  return number
              }
            },
          })

          return mn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/mr.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/mr.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Marathi [mr]
        //! author : Harshad Kale : https://github.com/kalehv
        //! author : Vivek Athalye : https://github.com/vnathalye

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '१',
              2: '२',
              3: '३',
              4: '४',
              5: '५',
              6: '६',
              7: '७',
              8: '८',
              9: '९',
              0: '०',
            },
            numberMap = {
              '१': '1',
              '२': '2',
              '३': '3',
              '४': '4',
              '५': '5',
              '६': '6',
              '७': '7',
              '८': '8',
              '९': '9',
              '०': '0',
            }

          function relativeTimeMr(number, withoutSuffix, string, isFuture) {
            var output = ''
            if (withoutSuffix) {
              switch (string) {
                case 's':
                  output = 'काही सेकंद'
                  break
                case 'ss':
                  output = '%d सेकंद'
                  break
                case 'm':
                  output = 'एक मिनिट'
                  break
                case 'mm':
                  output = '%d मिनिटे'
                  break
                case 'h':
                  output = 'एक तास'
                  break
                case 'hh':
                  output = '%d तास'
                  break
                case 'd':
                  output = 'एक दिवस'
                  break
                case 'dd':
                  output = '%d दिवस'
                  break
                case 'M':
                  output = 'एक महिना'
                  break
                case 'MM':
                  output = '%d महिने'
                  break
                case 'y':
                  output = 'एक वर्ष'
                  break
                case 'yy':
                  output = '%d वर्षे'
                  break
              }
            } else {
              switch (string) {
                case 's':
                  output = 'काही सेकंदां'
                  break
                case 'ss':
                  output = '%d सेकंदां'
                  break
                case 'm':
                  output = 'एका मिनिटा'
                  break
                case 'mm':
                  output = '%d मिनिटां'
                  break
                case 'h':
                  output = 'एका तासा'
                  break
                case 'hh':
                  output = '%d तासां'
                  break
                case 'd':
                  output = 'एका दिवसा'
                  break
                case 'dd':
                  output = '%d दिवसां'
                  break
                case 'M':
                  output = 'एका महिन्या'
                  break
                case 'MM':
                  output = '%d महिन्यां'
                  break
                case 'y':
                  output = 'एका वर्षा'
                  break
                case 'yy':
                  output = '%d वर्षां'
                  break
              }
            }
            return output.replace(/%d/i, number)
          }

          var mr = moment.defineLocale('mr', {
            months:
              'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
                '_'
              ),
            monthsShort:
              'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
            weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
            weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
            longDateFormat: {
              LT: 'A h:mm वाजता',
              LTS: 'A h:mm:ss वाजता',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm वाजता',
              LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
            },
            calendar: {
              sameDay: '[आज] LT',
              nextDay: '[उद्या] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[काल] LT',
              lastWeek: '[मागील] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%sमध्ये',
              past: '%sपूर्वी',
              s: relativeTimeMr,
              ss: relativeTimeMr,
              m: relativeTimeMr,
              mm: relativeTimeMr,
              h: relativeTimeMr,
              hh: relativeTimeMr,
              d: relativeTimeMr,
              dd: relativeTimeMr,
              M: relativeTimeMr,
              MM: relativeTimeMr,
              y: relativeTimeMr,
              yy: relativeTimeMr,
            },
            preparse: function (string) {
              return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
                return hour
              } else if (
                meridiem === 'दुपारी' ||
                meridiem === 'सायंकाळी' ||
                meridiem === 'रात्री'
              ) {
                return hour >= 12 ? hour : hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour >= 0 && hour < 6) {
                return 'पहाटे'
              } else if (hour < 12) {
                return 'सकाळी'
              } else if (hour < 17) {
                return 'दुपारी'
              } else if (hour < 20) {
                return 'सायंकाळी'
              } else {
                return 'रात्री'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return mr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ms-my.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ms-my.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Malay [ms-my]
        //! note : DEPRECATED, the correct one is [ms]
        //! author : Weldan Jamili : https://github.com/weldan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var msMy = moment.defineLocale('ms-my', {
            months:
              'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
            weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
            weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
            weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [pukul] HH.mm',
              LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'pagi') {
                return hour
              } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12
              }
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 11) {
                return 'pagi'
              } else if (hours < 15) {
                return 'tengahari'
              } else if (hours < 19) {
                return 'petang'
              } else {
                return 'malam'
              }
            },
            calendar: {
              sameDay: '[Hari ini pukul] LT',
              nextDay: '[Esok pukul] LT',
              nextWeek: 'dddd [pukul] LT',
              lastDay: '[Kelmarin pukul] LT',
              lastWeek: 'dddd [lepas pukul] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dalam %s',
              past: '%s yang lepas',
              s: 'beberapa saat',
              ss: '%d saat',
              m: 'seminit',
              mm: '%d minit',
              h: 'sejam',
              hh: '%d jam',
              d: 'sehari',
              dd: '%d hari',
              M: 'sebulan',
              MM: '%d bulan',
              y: 'setahun',
              yy: '%d tahun',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return msMy
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ms.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ms.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Malay [ms]
        //! author : Weldan Jamili : https://github.com/weldan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ms = moment.defineLocale('ms', {
            months:
              'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
            weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
            weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
            weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [pukul] HH.mm',
              LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'pagi') {
                return hour
              } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12
              }
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 11) {
                return 'pagi'
              } else if (hours < 15) {
                return 'tengahari'
              } else if (hours < 19) {
                return 'petang'
              } else {
                return 'malam'
              }
            },
            calendar: {
              sameDay: '[Hari ini pukul] LT',
              nextDay: '[Esok pukul] LT',
              nextWeek: 'dddd [pukul] LT',
              lastDay: '[Kelmarin pukul] LT',
              lastWeek: 'dddd [lepas pukul] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dalam %s',
              past: '%s yang lepas',
              s: 'beberapa saat',
              ss: '%d saat',
              m: 'seminit',
              mm: '%d minit',
              h: 'sejam',
              hh: '%d jam',
              d: 'sehari',
              dd: '%d hari',
              M: 'sebulan',
              MM: '%d bulan',
              y: 'setahun',
              yy: '%d tahun',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return ms
        })

        /***/
      },

    /***/ './node_modules/moment/locale/mt.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/mt.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Maltese (Malta) [mt]
        //! author : Alessandro Maruccia : https://github.com/alesma

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var mt = moment.defineLocale('mt', {
            months:
              'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
                '_'
              ),
            monthsShort:
              'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
            weekdays:
              'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
                '_'
              ),
            weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
            weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Illum fil-]LT',
              nextDay: '[Għada fil-]LT',
              nextWeek: 'dddd [fil-]LT',
              lastDay: '[Il-bieraħ fil-]LT',
              lastWeek: 'dddd [li għadda] [fil-]LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'f’ %s',
              past: '%s ilu',
              s: 'ftit sekondi',
              ss: '%d sekondi',
              m: 'minuta',
              mm: '%d minuti',
              h: 'siegħa',
              hh: '%d siegħat',
              d: 'ġurnata',
              dd: '%d ġranet',
              M: 'xahar',
              MM: '%d xhur',
              y: 'sena',
              yy: '%d sni',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return mt
        })

        /***/
      },

    /***/ './node_modules/moment/locale/my.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/my.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Burmese [my]
        //! author : Squar team, mysquar.com
        //! author : David Rossellat : https://github.com/gholadr
        //! author : Tin Aung Lin : https://github.com/thanyawzinmin

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '၁',
              2: '၂',
              3: '၃',
              4: '၄',
              5: '၅',
              6: '၆',
              7: '၇',
              8: '၈',
              9: '၉',
              0: '၀',
            },
            numberMap = {
              '၁': '1',
              '၂': '2',
              '၃': '3',
              '၄': '4',
              '၅': '5',
              '၆': '6',
              '၇': '7',
              '၈': '8',
              '၉': '9',
              '၀': '0',
            }

          var my = moment.defineLocale('my', {
            months:
              'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
                '_'
              ),
            monthsShort:
              'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
            weekdays:
              'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
                '_'
              ),
            weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
            weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[ယနေ.] LT [မှာ]',
              nextDay: '[မနက်ဖြန်] LT [မှာ]',
              nextWeek: 'dddd LT [မှာ]',
              lastDay: '[မနေ.က] LT [မှာ]',
              lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'လာမည့် %s မှာ',
              past: 'လွန်ခဲ့သော %s က',
              s: 'စက္ကန်.အနည်းငယ်',
              ss: '%d စက္ကန့်',
              m: 'တစ်မိနစ်',
              mm: '%d မိနစ်',
              h: 'တစ်နာရီ',
              hh: '%d နာရီ',
              d: 'တစ်ရက်',
              dd: '%d ရက်',
              M: 'တစ်လ',
              MM: '%d လ',
              y: 'တစ်နှစ်',
              yy: '%d နှစ်',
            },
            preparse: function (string) {
              return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return my
        })

        /***/
      },

    /***/ './node_modules/moment/locale/nb.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/nb.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Norwegian Bokmål [nb]
        //! authors : Espen Hovlandsdal : https://github.com/rexxars
        //!           Sigurd Gartmann : https://github.com/sigurdga
        //!           Stephen Ramthun : https://github.com/stephenramthun

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var nb = moment.defineLocale('nb', {
            months:
              'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
            weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
            weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY [kl.] HH:mm',
              LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
            },
            calendar: {
              sameDay: '[i dag kl.] LT',
              nextDay: '[i morgen kl.] LT',
              nextWeek: 'dddd [kl.] LT',
              lastDay: '[i går kl.] LT',
              lastWeek: '[forrige] dddd [kl.] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'om %s',
              past: '%s siden',
              s: 'noen sekunder',
              ss: '%d sekunder',
              m: 'ett minutt',
              mm: '%d minutter',
              h: 'en time',
              hh: '%d timer',
              d: 'en dag',
              dd: '%d dager',
              w: 'en uke',
              ww: '%d uker',
              M: 'en måned',
              MM: '%d måneder',
              y: 'ett år',
              yy: '%d år',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return nb
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ne.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ne.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Nepalese [ne]
        //! author : suvash : https://github.com/suvash

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '१',
              2: '२',
              3: '३',
              4: '४',
              5: '५',
              6: '६',
              7: '७',
              8: '८',
              9: '९',
              0: '०',
            },
            numberMap = {
              '१': '1',
              '२': '2',
              '३': '3',
              '४': '4',
              '५': '5',
              '६': '6',
              '७': '7',
              '८': '8',
              '९': '9',
              '०': '0',
            }

          var ne = moment.defineLocale('ne', {
            months:
              'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
                '_'
              ),
            monthsShort:
              'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
                '_'
              ),
            weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
            weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'Aको h:mm बजे',
              LTS: 'Aको h:mm:ss बजे',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, Aको h:mm बजे',
              LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
            },
            preparse: function (string) {
              return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'बिहान') {
                return hour
              } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'साँझ') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 3) {
                return 'राति'
              } else if (hour < 12) {
                return 'बिहान'
              } else if (hour < 16) {
                return 'दिउँसो'
              } else if (hour < 20) {
                return 'साँझ'
              } else {
                return 'राति'
              }
            },
            calendar: {
              sameDay: '[आज] LT',
              nextDay: '[भोलि] LT',
              nextWeek: '[आउँदो] dddd[,] LT',
              lastDay: '[हिजो] LT',
              lastWeek: '[गएको] dddd[,] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%sमा',
              past: '%s अगाडि',
              s: 'केही क्षण',
              ss: '%d सेकेण्ड',
              m: 'एक मिनेट',
              mm: '%d मिनेट',
              h: 'एक घण्टा',
              hh: '%d घण्टा',
              d: 'एक दिन',
              dd: '%d दिन',
              M: 'एक महिना',
              MM: '%d महिना',
              y: 'एक बर्ष',
              yy: '%d बर्ष',
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return ne
        })

        /***/
      },

    /***/ './node_modules/moment/locale/nl-be.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/nl-be.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Dutch (Belgium) [nl-be]
        //! author : Joris Röling : https://github.com/jorisroling
        //! author : Jacob Middag : https://github.com/middagj

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortWithDots =
              'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsShortWithoutDots =
              'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            monthsParse = [
              /^jan/i,
              /^feb/i,
              /^maart|mrt.?$/i,
              /^apr/i,
              /^mei$/i,
              /^jun[i.]?$/i,
              /^jul[i.]?$/i,
              /^aug/i,
              /^sep/i,
              /^okt/i,
              /^nov/i,
              /^dec/i,
            ],
            monthsRegex =
              /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i

          var nlBe = moment.defineLocale('nl-be', {
            months:
              'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortWithDots
              } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()]
              } else {
                return monthsShortWithDots[m.month()]
              }
            },

            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex:
              /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,

            weekdays:
              'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
                '_'
              ),
            weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
            weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[vandaag om] LT',
              nextDay: '[morgen om] LT',
              nextWeek: 'dddd [om] LT',
              lastDay: '[gisteren om] LT',
              lastWeek: '[afgelopen] dddd [om] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'over %s',
              past: '%s geleden',
              s: 'een paar seconden',
              ss: '%d seconden',
              m: 'één minuut',
              mm: '%d minuten',
              h: 'één uur',
              hh: '%d uur',
              d: 'één dag',
              dd: '%d dagen',
              M: 'één maand',
              MM: '%d maanden',
              y: 'één jaar',
              yy: '%d jaar',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function (number) {
              return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
              )
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return nlBe
        })

        /***/
      },

    /***/ './node_modules/moment/locale/nl.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/nl.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Dutch [nl]
        //! author : Joris Röling : https://github.com/jorisroling
        //! author : Jacob Middag : https://github.com/middagj

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsShortWithDots =
              'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsShortWithoutDots =
              'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            monthsParse = [
              /^jan/i,
              /^feb/i,
              /^maart|mrt.?$/i,
              /^apr/i,
              /^mei$/i,
              /^jun[i.]?$/i,
              /^jul[i.]?$/i,
              /^aug/i,
              /^sep/i,
              /^okt/i,
              /^nov/i,
              /^dec/i,
            ],
            monthsRegex =
              /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i

          var nl = moment.defineLocale('nl', {
            months:
              'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
                '_'
              ),
            monthsShort: function (m, format) {
              if (!m) {
                return monthsShortWithDots
              } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()]
              } else {
                return monthsShortWithDots[m.month()]
              }
            },

            monthsRegex: monthsRegex,
            monthsShortRegex: monthsRegex,
            monthsStrictRegex:
              /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex:
              /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,

            weekdays:
              'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
                '_'
              ),
            weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
            weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD-MM-YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[vandaag om] LT',
              nextDay: '[morgen om] LT',
              nextWeek: 'dddd [om] LT',
              lastDay: '[gisteren om] LT',
              lastWeek: '[afgelopen] dddd [om] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'over %s',
              past: '%s geleden',
              s: 'een paar seconden',
              ss: '%d seconden',
              m: 'één minuut',
              mm: '%d minuten',
              h: 'één uur',
              hh: '%d uur',
              d: 'één dag',
              dd: '%d dagen',
              w: 'één week',
              ww: '%d weken',
              M: 'één maand',
              MM: '%d maanden',
              y: 'één jaar',
              yy: '%d jaar',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function (number) {
              return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
              )
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return nl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/nn.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/nn.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Nynorsk [nn]
        //! authors : https://github.com/mechuwind
        //!           Stephen Ramthun : https://github.com/stephenramthun

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var nn = moment.defineLocale('nn', {
            months:
              'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
            weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
            weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY [kl.] H:mm',
              LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
            },
            calendar: {
              sameDay: '[I dag klokka] LT',
              nextDay: '[I morgon klokka] LT',
              nextWeek: 'dddd [klokka] LT',
              lastDay: '[I går klokka] LT',
              lastWeek: '[Føregåande] dddd [klokka] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'om %s',
              past: '%s sidan',
              s: 'nokre sekund',
              ss: '%d sekund',
              m: 'eit minutt',
              mm: '%d minutt',
              h: 'ein time',
              hh: '%d timar',
              d: 'ein dag',
              dd: '%d dagar',
              w: 'ei veke',
              ww: '%d veker',
              M: 'ein månad',
              MM: '%d månader',
              y: 'eit år',
              yy: '%d år',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return nn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/oc-lnc.js':
      /*!**********************************************!*\
  !*** ./node_modules/moment/locale/oc-lnc.js ***!
  \**********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Occitan, lengadocian dialecte [oc-lnc]
        //! author : Quentin PAGÈS : https://github.com/Quenty31

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ocLnc = moment.defineLocale('oc-lnc', {
            months: {
              standalone:
                'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
                  '_'
                ),
              format:
                "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
                  '_'
                ),
              isFormat: /D[oD]?(\s)+MMMM/,
            },
            monthsShort:
              'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
                '_'
              ),
            weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
            weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM [de] YYYY',
              ll: 'D MMM YYYY',
              LLL: 'D MMMM [de] YYYY [a] H:mm',
              lll: 'D MMM YYYY, H:mm',
              LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
              llll: 'ddd D MMM YYYY, H:mm',
            },
            calendar: {
              sameDay: '[uèi a] LT',
              nextDay: '[deman a] LT',
              nextWeek: 'dddd [a] LT',
              lastDay: '[ièr a] LT',
              lastWeek: 'dddd [passat a] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: "d'aquí %s",
              past: 'fa %s',
              s: 'unas segondas',
              ss: '%d segondas',
              m: 'una minuta',
              mm: '%d minutas',
              h: 'una ora',
              hh: '%d oras',
              d: 'un jorn',
              dd: '%d jorns',
              M: 'un mes',
              MM: '%d meses',
              y: 'un an',
              yy: '%d ans',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
            ordinal: function (number, period) {
              var output =
                number === 1
                  ? 'r'
                  : number === 2
                  ? 'n'
                  : number === 3
                  ? 'r'
                  : number === 4
                  ? 't'
                  : 'è'
              if (period === 'w' || period === 'W') {
                output = 'a'
              }
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4,
            },
          })

          return ocLnc
        })

        /***/
      },

    /***/ './node_modules/moment/locale/pa-in.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/pa-in.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Punjabi (India) [pa-in]
        //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '੧',
              2: '੨',
              3: '੩',
              4: '੪',
              5: '੫',
              6: '੬',
              7: '੭',
              8: '੮',
              9: '੯',
              0: '੦',
            },
            numberMap = {
              '੧': '1',
              '੨': '2',
              '੩': '3',
              '੪': '4',
              '੫': '5',
              '੬': '6',
              '੭': '7',
              '੮': '8',
              '੯': '9',
              '੦': '0',
            }

          var paIn = moment.defineLocale('pa-in', {
            // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
            months:
              'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
                '_'
              ),
            monthsShort:
              'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
                '_'
              ),
            weekdays:
              'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
                '_'
              ),
            weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
            weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
            longDateFormat: {
              LT: 'A h:mm ਵਜੇ',
              LTS: 'A h:mm:ss ਵਜੇ',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
              LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
            },
            calendar: {
              sameDay: '[ਅਜ] LT',
              nextDay: '[ਕਲ] LT',
              nextWeek: '[ਅਗਲਾ] dddd, LT',
              lastDay: '[ਕਲ] LT',
              lastWeek: '[ਪਿਛਲੇ] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s ਵਿੱਚ',
              past: '%s ਪਿਛਲੇ',
              s: 'ਕੁਝ ਸਕਿੰਟ',
              ss: '%d ਸਕਿੰਟ',
              m: 'ਇਕ ਮਿੰਟ',
              mm: '%d ਮਿੰਟ',
              h: 'ਇੱਕ ਘੰਟਾ',
              hh: '%d ਘੰਟੇ',
              d: 'ਇੱਕ ਦਿਨ',
              dd: '%d ਦਿਨ',
              M: 'ਇੱਕ ਮਹੀਨਾ',
              MM: '%d ਮਹੀਨੇ',
              y: 'ਇੱਕ ਸਾਲ',
              yy: '%d ਸਾਲ',
            },
            preparse: function (string) {
              return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
            // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
            meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'ਸਵੇਰ') {
                return hour
              } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'ਰਾਤ'
              } else if (hour < 10) {
                return 'ਸਵੇਰ'
              } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ'
              } else if (hour < 20) {
                return 'ਸ਼ਾਮ'
              } else {
                return 'ਰਾਤ'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return paIn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/pl.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/pl.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Polish [pl]
        //! author : Rafal Hirsz : https://github.com/evoL

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var monthsNominative =
              'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
                '_'
              ),
            monthsSubjective =
              'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
                '_'
              ),
            monthsParse = [
              /^sty/i,
              /^lut/i,
              /^mar/i,
              /^kwi/i,
              /^maj/i,
              /^cze/i,
              /^lip/i,
              /^sie/i,
              /^wrz/i,
              /^paź/i,
              /^lis/i,
              /^gru/i,
            ]
          function plural(n) {
            return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1
          }
          function translate(number, withoutSuffix, key) {
            var result = number + ' '
            switch (key) {
              case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund')
              case 'm':
                return withoutSuffix ? 'minuta' : 'minutę'
              case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut')
              case 'h':
                return withoutSuffix ? 'godzina' : 'godzinę'
              case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin')
              case 'ww':
                return result + (plural(number) ? 'tygodnie' : 'tygodni')
              case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy')
              case 'yy':
                return result + (plural(number) ? 'lata' : 'lat')
            }
          }

          var pl = moment.defineLocale('pl', {
            months: function (momentToFormat, format) {
              if (!momentToFormat) {
                return monthsNominative
              } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()]
              } else {
                return monthsNominative[momentToFormat.month()]
              }
            },
            monthsShort:
              'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,
            weekdays:
              'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
                '_'
              ),
            weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
            weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Dziś o] LT',
              nextDay: '[Jutro o] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[W niedzielę o] LT'

                  case 2:
                    return '[We wtorek o] LT'

                  case 3:
                    return '[W środę o] LT'

                  case 6:
                    return '[W sobotę o] LT'

                  default:
                    return '[W] dddd [o] LT'
                }
              },
              lastDay: '[Wczoraj o] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[W zeszłą niedzielę o] LT'
                  case 3:
                    return '[W zeszłą środę o] LT'
                  case 6:
                    return '[W zeszłą sobotę o] LT'
                  default:
                    return '[W zeszły] dddd [o] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: '%s temu',
              s: 'kilka sekund',
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: '1 dzień',
              dd: '%d dni',
              w: 'tydzień',
              ww: translate,
              M: 'miesiąc',
              MM: translate,
              y: 'rok',
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return pl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/pt-br.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/pt-br.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Portuguese (Brazil) [pt-br]
        //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ptBr = moment.defineLocale('pt-br', {
            months:
              'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
                '_'
              ),
            monthsShort:
              'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
            weekdays:
              'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
                '_'
              ),
            weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
            weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
              LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
            },
            calendar: {
              sameDay: '[Hoje às] LT',
              nextDay: '[Amanhã às] LT',
              nextWeek: 'dddd [às] LT',
              lastDay: '[Ontem às] LT',
              lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                  ? '[Último] dddd [às] LT' // Saturday + Sunday
                  : '[Última] dddd [às] LT' // Monday - Friday
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'em %s',
              past: 'há %s',
              s: 'poucos segundos',
              ss: '%d segundos',
              m: 'um minuto',
              mm: '%d minutos',
              h: 'uma hora',
              hh: '%d horas',
              d: 'um dia',
              dd: '%d dias',
              M: 'um mês',
              MM: '%d meses',
              y: 'um ano',
              yy: '%d anos',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            invalidDate: 'Data inválida',
          })

          return ptBr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/pt.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/pt.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Portuguese [pt]
        //! author : Jefferson : https://github.com/jalex79

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var pt = moment.defineLocale('pt', {
            months:
              'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
                '_'
              ),
            monthsShort:
              'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
            weekdays:
              'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
                '_'
              ),
            weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
            weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D [de] MMMM [de] YYYY',
              LLL: 'D [de] MMMM [de] YYYY HH:mm',
              LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Hoje às] LT',
              nextDay: '[Amanhã às] LT',
              nextWeek: 'dddd [às] LT',
              lastDay: '[Ontem às] LT',
              lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                  ? '[Último] dddd [às] LT' // Saturday + Sunday
                  : '[Última] dddd [às] LT' // Monday - Friday
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'em %s',
              past: 'há %s',
              s: 'segundos',
              ss: '%d segundos',
              m: 'um minuto',
              mm: '%d minutos',
              h: 'uma hora',
              hh: '%d horas',
              d: 'um dia',
              dd: '%d dias',
              w: 'uma semana',
              ww: '%d semanas',
              M: 'um mês',
              MM: '%d meses',
              y: 'um ano',
              yy: '%d anos',
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: '%dº',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return pt
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ro.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ro.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Romanian [ro]
        //! author : Vlad Gurdiga : https://github.com/gurdiga
        //! author : Valentin Agachi : https://github.com/avaly
        //! author : Emanuel Cepoi : https://github.com/cepem

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
                ss: 'secunde',
                mm: 'minute',
                hh: 'ore',
                dd: 'zile',
                ww: 'săptămâni',
                MM: 'luni',
                yy: 'ani',
              },
              separator = ' '
            if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
              separator = ' de '
            }
            return number + separator + format[key]
          }

          var ro = moment.defineLocale('ro', {
            months:
              'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
                '_'
              ),
            monthsShort:
              'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split(
              '_'
            ),
            weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
            weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY H:mm',
              LLLL: 'dddd, D MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[azi la] LT',
              nextDay: '[mâine la] LT',
              nextWeek: 'dddd [la] LT',
              lastDay: '[ieri la] LT',
              lastWeek: '[fosta] dddd [la] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'peste %s',
              past: '%s în urmă',
              s: 'câteva secunde',
              ss: relativeTimeWithPlural,
              m: 'un minut',
              mm: relativeTimeWithPlural,
              h: 'o oră',
              hh: relativeTimeWithPlural,
              d: 'o zi',
              dd: relativeTimeWithPlural,
              w: 'o săptămână',
              ww: relativeTimeWithPlural,
              M: 'o lună',
              MM: relativeTimeWithPlural,
              y: 'un an',
              yy: relativeTimeWithPlural,
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return ro
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ru.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ru.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Russian [ru]
        //! author : Viktorminator : https://github.com/Viktorminator
        //! author : Menelion Elensúle : https://github.com/Oire
        //! author : Коренберг Марк : https://github.com/socketpair

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function plural(word, num) {
            var forms = word.split('_')
            return num % 10 === 1 && num % 100 !== 11
              ? forms[0]
              : num % 10 >= 2 &&
                num % 10 <= 4 &&
                (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2]
          }
          function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
              ss: withoutSuffix
                ? 'секунда_секунды_секунд'
                : 'секунду_секунды_секунд',
              mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
              hh: 'час_часа_часов',
              dd: 'день_дня_дней',
              ww: 'неделя_недели_недель',
              MM: 'месяц_месяца_месяцев',
              yy: 'год_года_лет',
            }
            if (key === 'm') {
              return withoutSuffix ? 'минута' : 'минуту'
            } else {
              return number + ' ' + plural(format[key], +number)
            }
          }
          var monthsParse = [
            /^янв/i,
            /^фев/i,
            /^мар/i,
            /^апр/i,
            /^ма[йя]/i,
            /^июн/i,
            /^июл/i,
            /^авг/i,
            /^сен/i,
            /^окт/i,
            /^ноя/i,
            /^дек/i,
          ]

          // http://new.gramota.ru/spravka/rules/139-prop : § 103
          // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
          // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
          var ru = moment.defineLocale('ru', {
            months: {
              format:
                'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
                  '_'
                ),
              standalone:
                'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
                  '_'
                ),
            },
            monthsShort: {
              // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
              format:
                'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
                  '_'
                ),
              standalone:
                'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
                  '_'
                ),
            },
            weekdays: {
              standalone:
                'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
                  '_'
                ),
              format:
                'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
                  '_'
                ),
              isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,
            },
            weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
            weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
            monthsParse: monthsParse,
            longMonthsParse: monthsParse,
            shortMonthsParse: monthsParse,

            // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
            monthsRegex:
              /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

            // копия предыдущего
            monthsShortRegex:
              /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

            // полные названия с падежами
            monthsStrictRegex:
              /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

            // Выражение, которое соответствует только сокращённым формам
            monthsShortStrictRegex:
              /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY г.',
              LLL: 'D MMMM YYYY г., H:mm',
              LLLL: 'dddd, D MMMM YYYY г., H:mm',
            },
            calendar: {
              sameDay: '[Сегодня, в] LT',
              nextDay: '[Завтра, в] LT',
              lastDay: '[Вчера, в] LT',
              nextWeek: function (now) {
                if (now.week() !== this.week()) {
                  switch (this.day()) {
                    case 0:
                      return '[В следующее] dddd, [в] LT'
                    case 1:
                    case 2:
                    case 4:
                      return '[В следующий] dddd, [в] LT'
                    case 3:
                    case 5:
                    case 6:
                      return '[В следующую] dddd, [в] LT'
                  }
                } else {
                  if (this.day() === 2) {
                    return '[Во] dddd, [в] LT'
                  } else {
                    return '[В] dddd, [в] LT'
                  }
                }
              },
              lastWeek: function (now) {
                if (now.week() !== this.week()) {
                  switch (this.day()) {
                    case 0:
                      return '[В прошлое] dddd, [в] LT'
                    case 1:
                    case 2:
                    case 4:
                      return '[В прошлый] dddd, [в] LT'
                    case 3:
                    case 5:
                    case 6:
                      return '[В прошлую] dddd, [в] LT'
                  }
                } else {
                  if (this.day() === 2) {
                    return '[Во] dddd, [в] LT'
                  } else {
                    return '[В] dddd, [в] LT'
                  }
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'через %s',
              past: '%s назад',
              s: 'несколько секунд',
              ss: relativeTimeWithPlural,
              m: relativeTimeWithPlural,
              mm: relativeTimeWithPlural,
              h: 'час',
              hh: relativeTimeWithPlural,
              d: 'день',
              dd: relativeTimeWithPlural,
              w: 'неделя',
              ww: relativeTimeWithPlural,
              M: 'месяц',
              MM: relativeTimeWithPlural,
              y: 'год',
              yy: relativeTimeWithPlural,
            },
            meridiemParse: /ночи|утра|дня|вечера/i,
            isPM: function (input) {
              return /^(дня|вечера)$/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'ночи'
              } else if (hour < 12) {
                return 'утра'
              } else if (hour < 17) {
                return 'дня'
              } else {
                return 'вечера'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                  return number + '-й'
                case 'D':
                  return number + '-го'
                case 'w':
                case 'W':
                  return number + '-я'
                default:
                  return number
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return ru
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sd.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sd.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Sindhi [sd]
        //! author : Narain Sagar : https://github.com/narainsagar

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months = [
              'جنوري',
              'فيبروري',
              'مارچ',
              'اپريل',
              'مئي',
              'جون',
              'جولاءِ',
              'آگسٽ',
              'سيپٽمبر',
              'آڪٽوبر',
              'نومبر',
              'ڊسمبر',
            ],
            days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر']

          var sd = moment.defineLocale('sd', {
            months: months,
            monthsShort: months,
            weekdays: days,
            weekdaysShort: days,
            weekdaysMin: days,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd، D MMMM YYYY HH:mm',
            },
            meridiemParse: /صبح|شام/,
            isPM: function (input) {
              return 'شام' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'صبح'
              }
              return 'شام'
            },
            calendar: {
              sameDay: '[اڄ] LT',
              nextDay: '[سڀاڻي] LT',
              nextWeek: 'dddd [اڳين هفتي تي] LT',
              lastDay: '[ڪالهه] LT',
              lastWeek: '[گزريل هفتي] dddd [تي] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s پوء',
              past: '%s اڳ',
              s: 'چند سيڪنڊ',
              ss: '%d سيڪنڊ',
              m: 'هڪ منٽ',
              mm: '%d منٽ',
              h: 'هڪ ڪلاڪ',
              hh: '%d ڪلاڪ',
              d: 'هڪ ڏينهن',
              dd: '%d ڏينهن',
              M: 'هڪ مهينو',
              MM: '%d مهينا',
              y: 'هڪ سال',
              yy: '%d سال',
            },
            preparse: function (string) {
              return string.replace(/،/g, ',')
            },
            postformat: function (string) {
              return string.replace(/,/g, '،')
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return sd
        })

        /***/
      },

    /***/ './node_modules/moment/locale/se.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/se.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Northern Sami [se]
        //! authors : Bård Rolstad Henriksen : https://github.com/karamell

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var se = moment.defineLocale('se', {
            months:
              'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
                '_'
              ),
            monthsShort:
              'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
                '_'
              ),
            weekdays:
              'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
                '_'
              ),
            weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
            weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'MMMM D. [b.] YYYY',
              LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
              LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
            },
            calendar: {
              sameDay: '[otne ti] LT',
              nextDay: '[ihttin ti] LT',
              nextWeek: 'dddd [ti] LT',
              lastDay: '[ikte ti] LT',
              lastWeek: '[ovddit] dddd [ti] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s geažes',
              past: 'maŋit %s',
              s: 'moadde sekunddat',
              ss: '%d sekunddat',
              m: 'okta minuhta',
              mm: '%d minuhtat',
              h: 'okta diimmu',
              hh: '%d diimmut',
              d: 'okta beaivi',
              dd: '%d beaivvit',
              M: 'okta mánnu',
              MM: '%d mánut',
              y: 'okta jahki',
              yy: '%d jagit',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return se
        })

        /***/
      },

    /***/ './node_modules/moment/locale/si.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/si.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Sinhalese [si]
        //! author : Sampath Sitinamaluwa : https://github.com/sampathsris

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          /*jshint -W100*/
          var si = moment.defineLocale('si', {
            months:
              'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
                '_'
              ),
            monthsShort:
              'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
                '_'
              ),
            weekdays:
              'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
                '_'
              ),
            weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
            weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'a h:mm',
              LTS: 'a h:mm:ss',
              L: 'YYYY/MM/DD',
              LL: 'YYYY MMMM D',
              LLL: 'YYYY MMMM D, a h:mm',
              LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
            },
            calendar: {
              sameDay: '[අද] LT[ට]',
              nextDay: '[හෙට] LT[ට]',
              nextWeek: 'dddd LT[ට]',
              lastDay: '[ඊයේ] LT[ට]',
              lastWeek: '[පසුගිය] dddd LT[ට]',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%sකින්',
              past: '%sකට පෙර',
              s: 'තත්පර කිහිපය',
              ss: 'තත්පර %d',
              m: 'මිනිත්තුව',
              mm: 'මිනිත්තු %d',
              h: 'පැය',
              hh: 'පැය %d',
              d: 'දිනය',
              dd: 'දින %d',
              M: 'මාසය',
              MM: 'මාස %d',
              y: 'වසර',
              yy: 'වසර %d',
            },
            dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
            ordinal: function (number) {
              return number + ' වැනි'
            },
            meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
            isPM: function (input) {
              return input === 'ප.ව.' || input === 'පස් වරු'
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු'
              } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු'
              }
            },
          })

          return si
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sk.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sk.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Slovak [sk]
        //! author : Martin Minka : https://github.com/k2s
        //! based on work of petrbela : https://github.com/petrbela

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months =
              'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
                '_'
              ),
            monthsShort =
              'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_')
          function plural(n) {
            return n > 1 && n < 5
          }
          function translate(number, withoutSuffix, key, isFuture) {
            var result = number + ' '
            switch (key) {
              case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture
                  ? 'pár sekúnd'
                  : 'pár sekundami'
              case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'sekundy' : 'sekúnd')
                } else {
                  return result + 'sekundami'
                }
              case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix
                  ? 'minúta'
                  : isFuture
                  ? 'minútu'
                  : 'minútou'
              case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'minúty' : 'minút')
                } else {
                  return result + 'minútami'
                }
              case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix
                  ? 'hodina'
                  : isFuture
                  ? 'hodinu'
                  : 'hodinou'
              case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'hodiny' : 'hodín')
                } else {
                  return result + 'hodinami'
                }
              case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'deň' : 'dňom'
              case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'dni' : 'dní')
                } else {
                  return result + 'dňami'
                }
              case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom'
              case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'mesiace' : 'mesiacov')
                } else {
                  return result + 'mesiacmi'
                }
              case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokom'
              case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'roky' : 'rokov')
                } else {
                  return result + 'rokmi'
                }
            }
          }

          var sk = moment.defineLocale('sk', {
            months: months,
            monthsShort: monthsShort,
            weekdays:
              'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
            weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
            weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd D. MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[dnes o] LT',
              nextDay: '[zajtra o] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[v nedeľu o] LT'
                  case 1:
                  case 2:
                    return '[v] dddd [o] LT'
                  case 3:
                    return '[v stredu o] LT'
                  case 4:
                    return '[vo štvrtok o] LT'
                  case 5:
                    return '[v piatok o] LT'
                  case 6:
                    return '[v sobotu o] LT'
                }
              },
              lastDay: '[včera o] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[minulú nedeľu o] LT'
                  case 1:
                  case 2:
                    return '[minulý] dddd [o] LT'
                  case 3:
                    return '[minulú stredu o] LT'
                  case 4:
                  case 5:
                    return '[minulý] dddd [o] LT'
                  case 6:
                    return '[minulú sobotu o] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'pred %s',
              s: translate,
              ss: translate,
              m: translate,
              mm: translate,
              h: translate,
              hh: translate,
              d: translate,
              dd: translate,
              M: translate,
              MM: translate,
              y: translate,
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return sk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sl.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sl.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Slovenian [sl]
        //! author : Robert Sedovšek : https://github.com/sedovsek

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var result = number + ' '
            switch (key) {
              case 's':
                return withoutSuffix || isFuture
                  ? 'nekaj sekund'
                  : 'nekaj sekundami'
              case 'ss':
                if (number === 1) {
                  result += withoutSuffix ? 'sekundo' : 'sekundi'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah'
                } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah'
                } else {
                  result += 'sekund'
                }
                return result
              case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto'
              case 'mm':
                if (number === 1) {
                  result += withoutSuffix ? 'minuta' : 'minuto'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'minuti' : 'minutama'
                } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'minute' : 'minutami'
                } else {
                  result += withoutSuffix || isFuture ? 'minut' : 'minutami'
                }
                return result
              case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro'
              case 'hh':
                if (number === 1) {
                  result += withoutSuffix ? 'ura' : 'uro'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'uri' : 'urama'
                } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'ure' : 'urami'
                } else {
                  result += withoutSuffix || isFuture ? 'ur' : 'urami'
                }
                return result
              case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem'
              case 'dd':
                if (number === 1) {
                  result += withoutSuffix || isFuture ? 'dan' : 'dnem'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'dni' : 'dnevoma'
                } else {
                  result += withoutSuffix || isFuture ? 'dni' : 'dnevi'
                }
                return result
              case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem'
              case 'MM':
                if (number === 1) {
                  result += withoutSuffix || isFuture ? 'mesec' : 'mesecem'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'meseca' : 'mesecema'
                } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'mesece' : 'meseci'
                } else {
                  result += withoutSuffix || isFuture ? 'mesecev' : 'meseci'
                }
                return result
              case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom'
              case 'yy':
                if (number === 1) {
                  result += withoutSuffix || isFuture ? 'leto' : 'letom'
                } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'leti' : 'letoma'
                } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'leta' : 'leti'
                } else {
                  result += withoutSuffix || isFuture ? 'let' : 'leti'
                }
                return result
            }
          }

          var sl = moment.defineLocale('sl', {
            months:
              'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
            weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
            weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD. MM. YYYY',
              LL: 'D. MMMM YYYY',
              LLL: 'D. MMMM YYYY H:mm',
              LLLL: 'dddd, D. MMMM YYYY H:mm',
            },
            calendar: {
              sameDay: '[danes ob] LT',
              nextDay: '[jutri ob] LT',

              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[v] [nedeljo] [ob] LT'
                  case 3:
                    return '[v] [sredo] [ob] LT'
                  case 6:
                    return '[v] [soboto] [ob] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[v] dddd [ob] LT'
                }
              },
              lastDay: '[včeraj ob] LT',
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[prejšnjo] [nedeljo] [ob] LT'
                  case 3:
                    return '[prejšnjo] [sredo] [ob] LT'
                  case 6:
                    return '[prejšnjo] [soboto] [ob] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[prejšnji] dddd [ob] LT'
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'čez %s',
              past: 'pred %s',
              s: processRelativeTime,
              ss: processRelativeTime,
              m: processRelativeTime,
              mm: processRelativeTime,
              h: processRelativeTime,
              hh: processRelativeTime,
              d: processRelativeTime,
              dd: processRelativeTime,
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return sl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sq.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sq.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Albanian [sq]
        //! author : Flakërim Ismani : https://github.com/flakerimi
        //! author : Menelion Elensúle : https://github.com/Oire
        //! author : Oerd Cukalla : https://github.com/oerd

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var sq = moment.defineLocale('sq', {
            months:
              'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
                '_'
              ),
            monthsShort:
              'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
            weekdays:
              'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
                '_'
              ),
            weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
            weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
            weekdaysParseExact: true,
            meridiemParse: /PD|MD/,
            isPM: function (input) {
              return input.charAt(0) === 'M'
            },
            meridiem: function (hours, minutes, isLower) {
              return hours < 12 ? 'PD' : 'MD'
            },
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Sot në] LT',
              nextDay: '[Nesër në] LT',
              nextWeek: 'dddd [në] LT',
              lastDay: '[Dje në] LT',
              lastWeek: 'dddd [e kaluar në] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'në %s',
              past: '%s më parë',
              s: 'disa sekonda',
              ss: '%d sekonda',
              m: 'një minutë',
              mm: '%d minuta',
              h: 'një orë',
              hh: '%d orë',
              d: 'një ditë',
              dd: '%d ditë',
              M: 'një muaj',
              MM: '%d muaj',
              y: 'një vit',
              yy: '%d vite',
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return sq
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sr-cyrl.js':
      /*!***********************************************!*\
  !*** ./node_modules/moment/locale/sr-cyrl.js ***!
  \***********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Serbian Cyrillic [sr-cyrl]
        //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
        //! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var translator = {
            words: {
              //Different grammatical cases
              ss: ['секунда', 'секунде', 'секунди'],
              m: ['један минут', 'једне минуте'],
              mm: ['минут', 'минуте', 'минута'],
              h: ['један сат', 'једног сата'],
              hh: ['сат', 'сата', 'сати'],
              dd: ['дан', 'дана', 'дана'],
              MM: ['месец', 'месеца', 'месеци'],
              yy: ['година', 'године', 'година'],
            },
            correctGrammaticalCase: function (number, wordKey) {
              return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2]
            },
            translate: function (number, withoutSuffix, key) {
              var wordKey = translator.words[key]
              if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1]
              } else {
                return (
                  number +
                  ' ' +
                  translator.correctGrammaticalCase(number, wordKey)
                )
              }
            },
          }

          var srCyrl = moment.defineLocale('sr-cyrl', {
            months:
              'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
                '_'
              ),
            monthsShort:
              'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
            weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
            weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'D. M. YYYY.',
              LL: 'D. MMMM YYYY.',
              LLL: 'D. MMMM YYYY. H:mm',
              LLLL: 'dddd, D. MMMM YYYY. H:mm',
            },
            calendar: {
              sameDay: '[данас у] LT',
              nextDay: '[сутра у] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[у] [недељу] [у] LT'
                  case 3:
                    return '[у] [среду] [у] LT'
                  case 6:
                    return '[у] [суботу] [у] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[у] dddd [у] LT'
                }
              },
              lastDay: '[јуче у] LT',
              lastWeek: function () {
                var lastWeekDays = [
                  '[прошле] [недеље] [у] LT',
                  '[прошлог] [понедељка] [у] LT',
                  '[прошлог] [уторка] [у] LT',
                  '[прошле] [среде] [у] LT',
                  '[прошлог] [четвртка] [у] LT',
                  '[прошлог] [петка] [у] LT',
                  '[прошле] [суботе] [у] LT',
                ]
                return lastWeekDays[this.day()]
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'за %s',
              past: 'пре %s',
              s: 'неколико секунди',
              ss: translator.translate,
              m: translator.translate,
              mm: translator.translate,
              h: translator.translate,
              hh: translator.translate,
              d: 'дан',
              dd: translator.translate,
              M: 'месец',
              MM: translator.translate,
              y: 'годину',
              yy: translator.translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 1st is the first week of the year.
            },
          })

          return srCyrl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sr.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sr.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Serbian [sr]
        //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
        //! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var translator = {
            words: {
              //Different grammatical cases
              ss: ['sekunda', 'sekunde', 'sekundi'],
              m: ['jedan minut', 'jedne minute'],
              mm: ['minut', 'minute', 'minuta'],
              h: ['jedan sat', 'jednog sata'],
              hh: ['sat', 'sata', 'sati'],
              dd: ['dan', 'dana', 'dana'],
              MM: ['mesec', 'meseca', 'meseci'],
              yy: ['godina', 'godine', 'godina'],
            },
            correctGrammaticalCase: function (number, wordKey) {
              return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2]
            },
            translate: function (number, withoutSuffix, key) {
              var wordKey = translator.words[key]
              if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1]
              } else {
                return (
                  number +
                  ' ' +
                  translator.correctGrammaticalCase(number, wordKey)
                )
              }
            },
          }

          var sr = moment.defineLocale('sr', {
            months:
              'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
                '_'
              ),
            monthsShort:
              'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
                '_'
              ),
            weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
            weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'D. M. YYYY.',
              LL: 'D. MMMM YYYY.',
              LLL: 'D. MMMM YYYY. H:mm',
              LLLL: 'dddd, D. MMMM YYYY. H:mm',
            },
            calendar: {
              sameDay: '[danas u] LT',
              nextDay: '[sutra u] LT',
              nextWeek: function () {
                switch (this.day()) {
                  case 0:
                    return '[u] [nedelju] [u] LT'
                  case 3:
                    return '[u] [sredu] [u] LT'
                  case 6:
                    return '[u] [subotu] [u] LT'
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                    return '[u] dddd [u] LT'
                }
              },
              lastDay: '[juče u] LT',
              lastWeek: function () {
                var lastWeekDays = [
                  '[prošle] [nedelje] [u] LT',
                  '[prošlog] [ponedeljka] [u] LT',
                  '[prošlog] [utorka] [u] LT',
                  '[prošle] [srede] [u] LT',
                  '[prošlog] [četvrtka] [u] LT',
                  '[prošlog] [petka] [u] LT',
                  '[prošle] [subote] [u] LT',
                ]
                return lastWeekDays[this.day()]
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'za %s',
              past: 'pre %s',
              s: 'nekoliko sekundi',
              ss: translator.translate,
              m: translator.translate,
              mm: translator.translate,
              h: translator.translate,
              hh: translator.translate,
              d: 'dan',
              dd: translator.translate,
              M: 'mesec',
              MM: translator.translate,
              y: 'godinu',
              yy: translator.translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return sr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ss.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ss.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : siSwati [ss]
        //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ss = moment.defineLocale('ss', {
            months:
              "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
                '_'
              ),
            monthsShort:
              'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
            weekdays:
              'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
                '_'
              ),
            weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
            weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Namuhla nga] LT',
              nextDay: '[Kusasa nga] LT',
              nextWeek: 'dddd [nga] LT',
              lastDay: '[Itolo nga] LT',
              lastWeek: 'dddd [leliphelile] [nga] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'nga %s',
              past: 'wenteka nga %s',
              s: 'emizuzwana lomcane',
              ss: '%d mzuzwana',
              m: 'umzuzu',
              mm: '%d emizuzu',
              h: 'lihora',
              hh: '%d emahora',
              d: 'lilanga',
              dd: '%d emalanga',
              M: 'inyanga',
              MM: '%d tinyanga',
              y: 'umnyaka',
              yy: '%d iminyaka',
            },
            meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
            meridiem: function (hours, minutes, isLower) {
              if (hours < 11) {
                return 'ekuseni'
              } else if (hours < 15) {
                return 'emini'
              } else if (hours < 19) {
                return 'entsambama'
              } else {
                return 'ebusuku'
              }
            },
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'ekuseni') {
                return hour
              } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                  return 0
                }
                return hour + 12
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: '%d',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return ss
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sv.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sv.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Swedish [sv]
        //! author : Jens Alm : https://github.com/ulmus

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var sv = moment.defineLocale('sv', {
            months:
              'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
                '_'
              ),
            monthsShort:
              'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split(
              '_'
            ),
            weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
            weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY [kl.] HH:mm',
              LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
              lll: 'D MMM YYYY HH:mm',
              llll: 'ddd D MMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Idag] LT',
              nextDay: '[Imorgon] LT',
              lastDay: '[Igår] LT',
              nextWeek: '[På] dddd LT',
              lastWeek: '[I] dddd[s] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'om %s',
              past: 'för %s sedan',
              s: 'några sekunder',
              ss: '%d sekunder',
              m: 'en minut',
              mm: '%d minuter',
              h: 'en timme',
              hh: '%d timmar',
              d: 'en dag',
              dd: '%d dagar',
              M: 'en månad',
              MM: '%d månader',
              y: 'ett år',
              yy: '%d år',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? ':e'
                    : b === 1
                    ? ':a'
                    : b === 2
                    ? ':a'
                    : b === 3
                    ? ':e'
                    : ':e'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return sv
        })

        /***/
      },

    /***/ './node_modules/moment/locale/sw.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/sw.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Swahili [sw]
        //! author : Fahad Kassim : https://github.com/fadsel

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var sw = moment.defineLocale('sw', {
            months:
              'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
                '_'
              ),
            monthsShort:
              'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
            weekdays:
              'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
                '_'
              ),
            weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
            weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'hh:mm A',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[leo saa] LT',
              nextDay: '[kesho saa] LT',
              nextWeek: '[wiki ijayo] dddd [saat] LT',
              lastDay: '[jana] LT',
              lastWeek: '[wiki iliyopita] dddd [saat] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s baadaye',
              past: 'tokea %s',
              s: 'hivi punde',
              ss: 'sekunde %d',
              m: 'dakika moja',
              mm: 'dakika %d',
              h: 'saa limoja',
              hh: 'masaa %d',
              d: 'siku moja',
              dd: 'siku %d',
              M: 'mwezi mmoja',
              MM: 'miezi %d',
              y: 'mwaka mmoja',
              yy: 'miaka %d',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return sw
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ta.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ta.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Tamil [ta]
        //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var symbolMap = {
              1: '௧',
              2: '௨',
              3: '௩',
              4: '௪',
              5: '௫',
              6: '௬',
              7: '௭',
              8: '௮',
              9: '௯',
              0: '௦',
            },
            numberMap = {
              '௧': '1',
              '௨': '2',
              '௩': '3',
              '௪': '4',
              '௫': '5',
              '௬': '6',
              '௭': '7',
              '௮': '8',
              '௯': '9',
              '௦': '0',
            }

          var ta = moment.defineLocale('ta', {
            months:
              'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
                '_'
              ),
            monthsShort:
              'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
                '_'
              ),
            weekdays:
              'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
                '_'
              ),
            weekdaysShort:
              'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
            weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, HH:mm',
              LLLL: 'dddd, D MMMM YYYY, HH:mm',
            },
            calendar: {
              sameDay: '[இன்று] LT',
              nextDay: '[நாளை] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[நேற்று] LT',
              lastWeek: '[கடந்த வாரம்] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s இல்',
              past: '%s முன்',
              s: 'ஒரு சில விநாடிகள்',
              ss: '%d விநாடிகள்',
              m: 'ஒரு நிமிடம்',
              mm: '%d நிமிடங்கள்',
              h: 'ஒரு மணி நேரம்',
              hh: '%d மணி நேரம்',
              d: 'ஒரு நாள்',
              dd: '%d நாட்கள்',
              M: 'ஒரு மாதம்',
              MM: '%d மாதங்கள்',
              y: 'ஒரு வருடம்',
              yy: '%d ஆண்டுகள்',
            },
            dayOfMonthOrdinalParse: /\d{1,2}வது/,
            ordinal: function (number) {
              return number + 'வது'
            },
            preparse: function (string) {
              return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match]
              })
            },
            postformat: function (string) {
              return string.replace(/\d/g, function (match) {
                return symbolMap[match]
              })
            },
            // refer http://ta.wikipedia.org/s/1er1
            meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
            meridiem: function (hour, minute, isLower) {
              if (hour < 2) {
                return ' யாமம்'
              } else if (hour < 6) {
                return ' வைகறை' // வைகறை
              } else if (hour < 10) {
                return ' காலை' // காலை
              } else if (hour < 14) {
                return ' நண்பகல்' // நண்பகல்
              } else if (hour < 18) {
                return ' எற்பாடு' // எற்பாடு
              } else if (hour < 22) {
                return ' மாலை' // மாலை
              } else {
                return ' யாமம்'
              }
            },
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12
              } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour
              } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12
              } else {
                return hour + 12
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return ta
        })

        /***/
      },

    /***/ './node_modules/moment/locale/te.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/te.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Telugu [te]
        //! author : Krishna Chaitanya Thota : https://github.com/kcthota

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var te = moment.defineLocale('te', {
            months:
              'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
                '_'
              ),
            monthsShort:
              'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
                '_'
              ),
            weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
            weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
            longDateFormat: {
              LT: 'A h:mm',
              LTS: 'A h:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY, A h:mm',
              LLLL: 'dddd, D MMMM YYYY, A h:mm',
            },
            calendar: {
              sameDay: '[నేడు] LT',
              nextDay: '[రేపు] LT',
              nextWeek: 'dddd, LT',
              lastDay: '[నిన్న] LT',
              lastWeek: '[గత] dddd, LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s లో',
              past: '%s క్రితం',
              s: 'కొన్ని క్షణాలు',
              ss: '%d సెకన్లు',
              m: 'ఒక నిమిషం',
              mm: '%d నిమిషాలు',
              h: 'ఒక గంట',
              hh: '%d గంటలు',
              d: 'ఒక రోజు',
              dd: '%d రోజులు',
              M: 'ఒక నెల',
              MM: '%d నెలలు',
              y: 'ఒక సంవత్సరం',
              yy: '%d సంవత్సరాలు',
            },
            dayOfMonthOrdinalParse: /\d{1,2}వ/,
            ordinal: '%dవ',
            meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'ఉదయం') {
                return hour
              } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12
              } else if (meridiem === 'సాయంత్రం') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'రాత్రి'
              } else if (hour < 10) {
                return 'ఉదయం'
              } else if (hour < 17) {
                return 'మధ్యాహ్నం'
              } else if (hour < 20) {
                return 'సాయంత్రం'
              } else {
                return 'రాత్రి'
              }
            },
            week: {
              dow: 0, // Sunday is the first day of the week.
              doy: 6, // The week that contains Jan 6th is the first week of the year.
            },
          })

          return te
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tet.js':
      /*!*******************************************!*\
  !*** ./node_modules/moment/locale/tet.js ***!
  \*******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Tetun Dili (East Timor) [tet]
        //! author : Joshua Brooks : https://github.com/joshbrooks
        //! author : Onorio De J. Afonso : https://github.com/marobo
        //! author : Sonia Simoes : https://github.com/soniasimoes

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var tet = moment.defineLocale('tet', {
            months:
              'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
                '_'
              ),
            monthsShort:
              'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
            weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split(
              '_'
            ),
            weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
            weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Ohin iha] LT',
              nextDay: '[Aban iha] LT',
              nextWeek: 'dddd [iha] LT',
              lastDay: '[Horiseik iha] LT',
              lastWeek: 'dddd [semana kotuk] [iha] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'iha %s',
              past: '%s liuba',
              s: 'segundu balun',
              ss: 'segundu %d',
              m: 'minutu ida',
              mm: 'minutu %d',
              h: 'oras ida',
              hh: 'oras %d',
              d: 'loron ida',
              dd: 'loron %d',
              M: 'fulan ida',
              MM: 'fulan %d',
              y: 'tinan ida',
              yy: 'tinan %d',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return tet
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tg.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/tg.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Tajik [tg]
        //! author : Orif N. Jr. : https://github.com/orif-jr

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            0: '-ум',
            1: '-ум',
            2: '-юм',
            3: '-юм',
            4: '-ум',
            5: '-ум',
            6: '-ум',
            7: '-ум',
            8: '-ум',
            9: '-ум',
            10: '-ум',
            12: '-ум',
            13: '-ум',
            20: '-ум',
            30: '-юм',
            40: '-ум',
            50: '-ум',
            60: '-ум',
            70: '-ум',
            80: '-ум',
            90: '-ум',
            100: '-ум',
          }

          var tg = moment.defineLocale('tg', {
            months: {
              format:
                'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
                  '_'
                ),
              standalone:
                'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
                  '_'
                ),
            },
            monthsShort:
              'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
            weekdays:
              'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
                '_'
              ),
            weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
            weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Имрӯз соати] LT',
              nextDay: '[Фардо соати] LT',
              lastDay: '[Дирӯз соати] LT',
              nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
              lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'баъди %s',
              past: '%s пеш',
              s: 'якчанд сония',
              m: 'як дақиқа',
              mm: '%d дақиқа',
              h: 'як соат',
              hh: '%d соат',
              d: 'як рӯз',
              dd: '%d рӯз',
              M: 'як моҳ',
              MM: '%d моҳ',
              y: 'як сол',
              yy: '%d сол',
            },
            meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12
              } else if (meridiem === 'субҳ') {
                return hour
              } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === 'бегоҳ') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'шаб'
              } else if (hour < 11) {
                return 'субҳ'
              } else if (hour < 16) {
                return 'рӯз'
              } else if (hour < 19) {
                return 'бегоҳ'
              } else {
                return 'шаб'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
            ordinal: function (number) {
              var a = number % 10,
                b = number >= 100 ? 100 : null
              return number + (suffixes[number] || suffixes[a] || suffixes[b])
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 1th is the first week of the year.
            },
          })

          return tg
        })

        /***/
      },

    /***/ './node_modules/moment/locale/th.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/th.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Thai [th]
        //! author : Kridsada Thanabulpong : https://github.com/sirn

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var th = moment.defineLocale('th', {
            months:
              'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
                '_'
              ),
            monthsShort:
              'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split(
              '_'
            ),
            weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split(
              '_'
            ), // yes, three characters difference
            weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'H:mm',
              LTS: 'H:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY เวลา H:mm',
              LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
            },
            meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
            isPM: function (input) {
              return input === 'หลังเที่ยง'
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'ก่อนเที่ยง'
              } else {
                return 'หลังเที่ยง'
              }
            },
            calendar: {
              sameDay: '[วันนี้ เวลา] LT',
              nextDay: '[พรุ่งนี้ เวลา] LT',
              nextWeek: 'dddd[หน้า เวลา] LT',
              lastDay: '[เมื่อวานนี้ เวลา] LT',
              lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'อีก %s',
              past: '%sที่แล้ว',
              s: 'ไม่กี่วินาที',
              ss: '%d วินาที',
              m: '1 นาที',
              mm: '%d นาที',
              h: '1 ชั่วโมง',
              hh: '%d ชั่วโมง',
              d: '1 วัน',
              dd: '%d วัน',
              w: '1 สัปดาห์',
              ww: '%d สัปดาห์',
              M: '1 เดือน',
              MM: '%d เดือน',
              y: '1 ปี',
              yy: '%d ปี',
            },
          })

          return th
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tk.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/tk.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Turkmen [tk]
        //! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            1: "'inji",
            5: "'inji",
            8: "'inji",
            70: "'inji",
            80: "'inji",
            2: "'nji",
            7: "'nji",
            20: "'nji",
            50: "'nji",
            3: "'ünji",
            4: "'ünji",
            100: "'ünji",
            6: "'njy",
            9: "'unjy",
            10: "'unjy",
            30: "'unjy",
            60: "'ynjy",
            90: "'ynjy",
          }

          var tk = moment.defineLocale('tk', {
            months:
              'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
                '_'
              ),
            monthsShort:
              'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
            weekdays:
              'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
                '_'
              ),
            weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
            weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[bugün sagat] LT',
              nextDay: '[ertir sagat] LT',
              nextWeek: '[indiki] dddd [sagat] LT',
              lastDay: '[düýn] LT',
              lastWeek: '[geçen] dddd [sagat] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s soň',
              past: '%s öň',
              s: 'birnäçe sekunt',
              m: 'bir minut',
              mm: '%d minut',
              h: 'bir sagat',
              hh: '%d sagat',
              d: 'bir gün',
              dd: '%d gün',
              M: 'bir aý',
              MM: '%d aý',
              y: 'bir ýyl',
              yy: '%d ýyl',
            },
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                  return number
                default:
                  if (number === 0) {
                    // special case for zero
                    return number + "'unjy"
                  }
                  var a = number % 10,
                    b = (number % 100) - a,
                    c = number >= 100 ? 100 : null
                  return number + (suffixes[a] || suffixes[b] || suffixes[c])
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return tk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tl-ph.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/tl-ph.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Tagalog (Philippines) [tl-ph]
        //! author : Dan Hagman : https://github.com/hagmandan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var tlPh = moment.defineLocale('tl-ph', {
            months:
              'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
                '_'
              ),
            monthsShort:
              'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
            weekdays:
              'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
                '_'
              ),
            weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
            weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'MM/D/YYYY',
              LL: 'MMMM D, YYYY',
              LLL: 'MMMM D, YYYY HH:mm',
              LLLL: 'dddd, MMMM DD, YYYY HH:mm',
            },
            calendar: {
              sameDay: 'LT [ngayong araw]',
              nextDay: '[Bukas ng] LT',
              nextWeek: 'LT [sa susunod na] dddd',
              lastDay: 'LT [kahapon]',
              lastWeek: 'LT [noong nakaraang] dddd',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'sa loob ng %s',
              past: '%s ang nakalipas',
              s: 'ilang segundo',
              ss: '%d segundo',
              m: 'isang minuto',
              mm: '%d minuto',
              h: 'isang oras',
              hh: '%d oras',
              d: 'isang araw',
              dd: '%d araw',
              M: 'isang buwan',
              MM: '%d buwan',
              y: 'isang taon',
              yy: '%d taon',
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: function (number) {
              return number
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return tlPh
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tlh.js':
      /*!*******************************************!*\
  !*** ./node_modules/moment/locale/tlh.js ***!
  \*******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Klingon [tlh]
        //! author : Dominika Kruk : https://github.com/amaranthrose

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var numbersNouns =
            'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_')

          function translateFuture(output) {
            var time = output
            time =
              output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'leS'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'waQ'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'nem'
                : time + ' pIq'
            return time
          }

          function translatePast(output) {
            var time = output
            time =
              output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'Hu’'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'wen'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'ben'
                : time + ' ret'
            return time
          }

          function translate(number, withoutSuffix, string, isFuture) {
            var numberNoun = numberAsNoun(number)
            switch (string) {
              case 'ss':
                return numberNoun + ' lup'
              case 'mm':
                return numberNoun + ' tup'
              case 'hh':
                return numberNoun + ' rep'
              case 'dd':
                return numberNoun + ' jaj'
              case 'MM':
                return numberNoun + ' jar'
              case 'yy':
                return numberNoun + ' DIS'
            }
          }

          function numberAsNoun(number) {
            var hundred = Math.floor((number % 1000) / 100),
              ten = Math.floor((number % 100) / 10),
              one = number % 10,
              word = ''
            if (hundred > 0) {
              word += numbersNouns[hundred] + 'vatlh'
            }
            if (ten > 0) {
              word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH'
            }
            if (one > 0) {
              word += (word !== '' ? ' ' : '') + numbersNouns[one]
            }
            return word === '' ? 'pagh' : word
          }

          var tlh = moment.defineLocale('tlh', {
            months:
              'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
                '_'
              ),
            monthsShort:
              'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
                '_'
              ),
            weekdaysShort:
              'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
                '_'
              ),
            weekdaysMin:
              'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
                '_'
              ),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[DaHjaj] LT',
              nextDay: '[wa’leS] LT',
              nextWeek: 'LLL',
              lastDay: '[wa’Hu’] LT',
              lastWeek: 'LLL',
              sameElse: 'L',
            },
            relativeTime: {
              future: translateFuture,
              past: translatePast,
              s: 'puS lup',
              ss: translate,
              m: 'wa’ tup',
              mm: translate,
              h: 'wa’ rep',
              hh: translate,
              d: 'wa’ jaj',
              dd: translate,
              M: 'wa’ jar',
              MM: translate,
              y: 'wa’ DIS',
              yy: translate,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return tlh
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tr.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/tr.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Turkish [tr]
        //! authors : Erhan Gundogan : https://github.com/erhangundogan,
        //!           Burak Yiğit Kaya: https://github.com/BYK

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var suffixes = {
            1: "'inci",
            5: "'inci",
            8: "'inci",
            70: "'inci",
            80: "'inci",
            2: "'nci",
            7: "'nci",
            20: "'nci",
            50: "'nci",
            3: "'üncü",
            4: "'üncü",
            100: "'üncü",
            6: "'ncı",
            9: "'uncu",
            10: "'uncu",
            30: "'uncu",
            60: "'ıncı",
            90: "'ıncı",
          }

          var tr = moment.defineLocale('tr', {
            months:
              'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
                '_'
              ),
            monthsShort:
              'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
            weekdays:
              'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
                '_'
              ),
            weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
            weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
            meridiem: function (hours, minutes, isLower) {
              if (hours < 12) {
                return isLower ? 'öö' : 'ÖÖ'
              } else {
                return isLower ? 'ös' : 'ÖS'
              }
            },
            meridiemParse: /öö|ÖÖ|ös|ÖS/,
            isPM: function (input) {
              return input === 'ös' || input === 'ÖS'
            },
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[bugün saat] LT',
              nextDay: '[yarın saat] LT',
              nextWeek: '[gelecek] dddd [saat] LT',
              lastDay: '[dün] LT',
              lastWeek: '[geçen] dddd [saat] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s sonra',
              past: '%s önce',
              s: 'birkaç saniye',
              ss: '%d saniye',
              m: 'bir dakika',
              mm: '%d dakika',
              h: 'bir saat',
              hh: '%d saat',
              d: 'bir gün',
              dd: '%d gün',
              w: 'bir hafta',
              ww: '%d hafta',
              M: 'bir ay',
              MM: '%d ay',
              y: 'bir yıl',
              yy: '%d yıl',
            },
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                  return number
                default:
                  if (number === 0) {
                    // special case for zero
                    return number + "'ıncı"
                  }
                  var a = number % 10,
                    b = (number % 100) - a,
                    c = number >= 100 ? 100 : null
                  return number + (suffixes[a] || suffixes[b] || suffixes[c])
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return tr
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tzl.js':
      /*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzl.js ***!
  \*******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Talossan [tzl]
        //! author : Robin van der Vliet : https://github.com/robin0van0der0v
        //! author : Iustì Canun

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
          // This is currently too difficult (maybe even impossible) to add.
          var tzl = moment.defineLocale('tzl', {
            months:
              'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
                '_'
              ),
            monthsShort:
              'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
            weekdays:
              'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
            weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
            weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
            longDateFormat: {
              LT: 'HH.mm',
              LTS: 'HH.mm.ss',
              L: 'DD.MM.YYYY',
              LL: 'D. MMMM [dallas] YYYY',
              LLL: 'D. MMMM [dallas] YYYY HH.mm',
              LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
            },
            meridiemParse: /d\'o|d\'a/i,
            isPM: function (input) {
              return "d'o" === input.toLowerCase()
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours > 11) {
                return isLower ? "d'o" : "D'O"
              } else {
                return isLower ? "d'a" : "D'A"
              }
            },
            calendar: {
              sameDay: '[oxhi à] LT',
              nextDay: '[demà à] LT',
              nextWeek: 'dddd [à] LT',
              lastDay: '[ieiri à] LT',
              lastWeek: '[sür el] dddd [lasteu à] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'osprei %s',
              past: 'ja%s',
              s: processRelativeTime,
              ss: processRelativeTime,
              m: processRelativeTime,
              mm: processRelativeTime,
              h: processRelativeTime,
              hh: processRelativeTime,
              d: processRelativeTime,
              dd: processRelativeTime,
              M: processRelativeTime,
              MM: processRelativeTime,
              y: processRelativeTime,
              yy: processRelativeTime,
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: '%d.',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          function processRelativeTime(number, withoutSuffix, key, isFuture) {
            var format = {
              s: ['viensas secunds', "'iensas secunds"],
              ss: [number + ' secunds', '' + number + ' secunds'],
              m: ["'n míut", "'iens míut"],
              mm: [number + ' míuts', '' + number + ' míuts'],
              h: ["'n þora", "'iensa þora"],
              hh: [number + ' þoras', '' + number + ' þoras'],
              d: ["'n ziua", "'iensa ziua"],
              dd: [number + ' ziuas', '' + number + ' ziuas'],
              M: ["'n mes", "'iens mes"],
              MM: [number + ' mesen', '' + number + ' mesen'],
              y: ["'n ar", "'iens ar"],
              yy: [number + ' ars', '' + number + ' ars'],
            }
            return isFuture
              ? format[key][0]
              : withoutSuffix
              ? format[key][0]
              : format[key][1]
          }

          return tzl
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tzm-latn.js':
      /*!************************************************!*\
  !*** ./node_modules/moment/locale/tzm-latn.js ***!
  \************************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Central Atlas Tamazight Latin [tzm-latn]
        //! author : Abdel Said : https://github.com/abdelsaid

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var tzmLatn = moment.defineLocale('tzm-latn', {
            months:
              'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
                '_'
              ),
            monthsShort:
              'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
                '_'
              ),
            weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split(
              '_'
            ),
            weekdaysShort:
              'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
            weekdaysMin:
              'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[asdkh g] LT',
              nextDay: '[aska g] LT',
              nextWeek: 'dddd [g] LT',
              lastDay: '[assant g] LT',
              lastWeek: 'dddd [g] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'dadkh s yan %s',
              past: 'yan %s',
              s: 'imik',
              ss: '%d imik',
              m: 'minuḍ',
              mm: '%d minuḍ',
              h: 'saɛa',
              hh: '%d tassaɛin',
              d: 'ass',
              dd: '%d ossan',
              M: 'ayowr',
              MM: '%d iyyirn',
              y: 'asgas',
              yy: '%d isgasn',
            },
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return tzmLatn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/tzm.js':
      /*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzm.js ***!
  \*******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Central Atlas Tamazight [tzm]
        //! author : Abdel Said : https://github.com/abdelsaid

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var tzm = moment.defineLocale('tzm', {
            months:
              'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
                '_'
              ),
            monthsShort:
              'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
                '_'
              ),
            weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split(
              '_'
            ),
            weekdaysShort:
              'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
            weekdaysMin:
              'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
              nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
              nextWeek: 'dddd [ⴴ] LT',
              lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
              lastWeek: 'dddd [ⴴ] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
              past: 'ⵢⴰⵏ %s',
              s: 'ⵉⵎⵉⴽ',
              ss: '%d ⵉⵎⵉⴽ',
              m: 'ⵎⵉⵏⵓⴺ',
              mm: '%d ⵎⵉⵏⵓⴺ',
              h: 'ⵙⴰⵄⴰ',
              hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
              d: 'ⴰⵙⵙ',
              dd: '%d oⵙⵙⴰⵏ',
              M: 'ⴰⵢoⵓⵔ',
              MM: '%d ⵉⵢⵢⵉⵔⵏ',
              y: 'ⴰⵙⴳⴰⵙ',
              yy: '%d ⵉⵙⴳⴰⵙⵏ',
            },
            week: {
              dow: 6, // Saturday is the first day of the week.
              doy: 12, // The week that contains Jan 12th is the first week of the year.
            },
          })

          return tzm
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ug-cn.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/ug-cn.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Uyghur (China) [ug-cn]
        //! author: boyaq : https://github.com/boyaq

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var ugCn = moment.defineLocale('ug-cn', {
            months:
              'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
                '_'
              ),
            monthsShort:
              'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
                '_'
              ),
            weekdays:
              'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
                '_'
              ),
            weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
            weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY-MM-DD',
              LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
              LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
              LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            },
            meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
              ) {
                return hour
              } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12
              } else {
                return hour >= 11 ? hour : hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              var hm = hour * 100 + minute
              if (hm < 600) {
                return 'يېرىم كېچە'
              } else if (hm < 900) {
                return 'سەھەر'
              } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن'
              } else if (hm < 1230) {
                return 'چۈش'
              } else if (hm < 1800) {
                return 'چۈشتىن كېيىن'
              } else {
                return 'كەچ'
              }
            },
            calendar: {
              sameDay: '[بۈگۈن سائەت] LT',
              nextDay: '[ئەتە سائەت] LT',
              nextWeek: '[كېلەركى] dddd [سائەت] LT',
              lastDay: '[تۆنۈگۈن] LT',
              lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s كېيىن',
              past: '%s بۇرۇن',
              s: 'نەچچە سېكونت',
              ss: '%d سېكونت',
              m: 'بىر مىنۇت',
              mm: '%d مىنۇت',
              h: 'بىر سائەت',
              hh: '%d سائەت',
              d: 'بىر كۈن',
              dd: '%d كۈن',
              M: 'بىر ئاي',
              MM: '%d ئاي',
              y: 'بىر يىل',
              yy: '%d يىل',
            },

            dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '-كۈنى'
                case 'w':
                case 'W':
                  return number + '-ھەپتە'
                default:
                  return number
              }
            },
            preparse: function (string) {
              return string.replace(/،/g, ',')
            },
            postformat: function (string) {
              return string.replace(/,/g, '،')
            },
            week: {
              // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 1st is the first week of the year.
            },
          })

          return ugCn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/uk.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/uk.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Ukrainian [uk]
        //! author : zemlanin : https://github.com/zemlanin
        //! Author : Menelion Elensúle : https://github.com/Oire

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          function plural(word, num) {
            var forms = word.split('_')
            return num % 10 === 1 && num % 100 !== 11
              ? forms[0]
              : num % 10 >= 2 &&
                num % 10 <= 4 &&
                (num % 100 < 10 || num % 100 >= 20)
              ? forms[1]
              : forms[2]
          }
          function relativeTimeWithPlural(number, withoutSuffix, key) {
            var format = {
              ss: withoutSuffix
                ? 'секунда_секунди_секунд'
                : 'секунду_секунди_секунд',
              mm: withoutSuffix
                ? 'хвилина_хвилини_хвилин'
                : 'хвилину_хвилини_хвилин',
              hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
              dd: 'день_дні_днів',
              MM: 'місяць_місяці_місяців',
              yy: 'рік_роки_років',
            }
            if (key === 'm') {
              return withoutSuffix ? 'хвилина' : 'хвилину'
            } else if (key === 'h') {
              return withoutSuffix ? 'година' : 'годину'
            } else {
              return number + ' ' + plural(format[key], +number)
            }
          }
          function weekdaysCaseReplace(m, format) {
            var weekdays = {
                nominative:
                  'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
                    '_'
                  ),
                accusative:
                  'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
                    '_'
                  ),
                genitive:
                  'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
                    '_'
                  ),
              },
              nounCase

            if (m === true) {
              return weekdays['nominative']
                .slice(1, 7)
                .concat(weekdays['nominative'].slice(0, 1))
            }
            if (!m) {
              return weekdays['nominative']
            }

            nounCase = /(\[[ВвУу]\]) ?dddd/.test(format)
              ? 'accusative'
              : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)
              ? 'genitive'
              : 'nominative'
            return weekdays[nounCase][m.day()]
          }
          function processHoursFunction(str) {
            return function () {
              return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT'
            }
          }

          var uk = moment.defineLocale('uk', {
            months: {
              format:
                'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
                  '_'
                ),
              standalone:
                'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
                  '_'
                ),
            },
            monthsShort:
              'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
                '_'
              ),
            weekdays: weekdaysCaseReplace,
            weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD.MM.YYYY',
              LL: 'D MMMM YYYY р.',
              LLL: 'D MMMM YYYY р., HH:mm',
              LLLL: 'dddd, D MMMM YYYY р., HH:mm',
            },
            calendar: {
              sameDay: processHoursFunction('[Сьогодні '),
              nextDay: processHoursFunction('[Завтра '),
              lastDay: processHoursFunction('[Вчора '),
              nextWeek: processHoursFunction('[У] dddd ['),
              lastWeek: function () {
                switch (this.day()) {
                  case 0:
                  case 3:
                  case 5:
                  case 6:
                    return processHoursFunction('[Минулої] dddd [').call(this)
                  case 1:
                  case 2:
                  case 4:
                    return processHoursFunction('[Минулого] dddd [').call(this)
                }
              },
              sameElse: 'L',
            },
            relativeTime: {
              future: 'за %s',
              past: '%s тому',
              s: 'декілька секунд',
              ss: relativeTimeWithPlural,
              m: relativeTimeWithPlural,
              mm: relativeTimeWithPlural,
              h: 'годину',
              hh: relativeTimeWithPlural,
              d: 'день',
              dd: relativeTimeWithPlural,
              M: 'місяць',
              MM: relativeTimeWithPlural,
              y: 'рік',
              yy: relativeTimeWithPlural,
            },
            // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
            meridiemParse: /ночі|ранку|дня|вечора/,
            isPM: function (input) {
              return /^(дня|вечора)$/.test(input)
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 4) {
                return 'ночі'
              } else if (hour < 12) {
                return 'ранку'
              } else if (hour < 17) {
                return 'дня'
              } else {
                return 'вечора'
              }
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                  return number + '-й'
                case 'D':
                  return number + '-го'
                default:
                  return number
              }
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return uk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/ur.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/ur.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Urdu [ur]
        //! author : Sawood Alam : https://github.com/ibnesayeed
        //! author : Zack : https://github.com/ZackVision

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var months = [
              'جنوری',
              'فروری',
              'مارچ',
              'اپریل',
              'مئی',
              'جون',
              'جولائی',
              'اگست',
              'ستمبر',
              'اکتوبر',
              'نومبر',
              'دسمبر',
            ],
            days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ']

          var ur = moment.defineLocale('ur', {
            months: months,
            monthsShort: months,
            weekdays: days,
            weekdaysShort: days,
            weekdaysMin: days,
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd، D MMMM YYYY HH:mm',
            },
            meridiemParse: /صبح|شام/,
            isPM: function (input) {
              return 'شام' === input
            },
            meridiem: function (hour, minute, isLower) {
              if (hour < 12) {
                return 'صبح'
              }
              return 'شام'
            },
            calendar: {
              sameDay: '[آج بوقت] LT',
              nextDay: '[کل بوقت] LT',
              nextWeek: 'dddd [بوقت] LT',
              lastDay: '[گذشتہ روز بوقت] LT',
              lastWeek: '[گذشتہ] dddd [بوقت] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s بعد',
              past: '%s قبل',
              s: 'چند سیکنڈ',
              ss: '%d سیکنڈ',
              m: 'ایک منٹ',
              mm: '%d منٹ',
              h: 'ایک گھنٹہ',
              hh: '%d گھنٹے',
              d: 'ایک دن',
              dd: '%d دن',
              M: 'ایک ماہ',
              MM: '%d ماہ',
              y: 'ایک سال',
              yy: '%d سال',
            },
            preparse: function (string) {
              return string.replace(/،/g, ',')
            },
            postformat: function (string) {
              return string.replace(/,/g, '،')
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return ur
        })

        /***/
      },

    /***/ './node_modules/moment/locale/uz-latn.js':
      /*!***********************************************!*\
  !*** ./node_modules/moment/locale/uz-latn.js ***!
  \***********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Uzbek Latin [uz-latn]
        //! author : Rasulbek Mirzayev : github.com/Rasulbeeek

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var uzLatn = moment.defineLocale('uz-latn', {
            months:
              'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
                '_'
              ),
            monthsShort:
              'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
            weekdays:
              'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
                '_'
              ),
            weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
            weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'D MMMM YYYY, dddd HH:mm',
            },
            calendar: {
              sameDay: '[Bugun soat] LT [da]',
              nextDay: '[Ertaga] LT [da]',
              nextWeek: 'dddd [kuni soat] LT [da]',
              lastDay: '[Kecha soat] LT [da]',
              lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
              sameElse: 'L',
            },
            relativeTime: {
              future: 'Yaqin %s ichida',
              past: 'Bir necha %s oldin',
              s: 'soniya',
              ss: '%d soniya',
              m: 'bir daqiqa',
              mm: '%d daqiqa',
              h: 'bir soat',
              hh: '%d soat',
              d: 'bir kun',
              dd: '%d kun',
              M: 'bir oy',
              MM: '%d oy',
              y: 'bir yil',
              yy: '%d yil',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 7th is the first week of the year.
            },
          })

          return uzLatn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/uz.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/uz.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Uzbek [uz]
        //! author : Sardor Muminov : https://github.com/muminoff

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var uz = moment.defineLocale('uz', {
            months:
              'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
                '_'
              ),
            monthsShort:
              'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
            weekdays:
              'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
            weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
            weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'D MMMM YYYY, dddd HH:mm',
            },
            calendar: {
              sameDay: '[Бугун соат] LT [да]',
              nextDay: '[Эртага] LT [да]',
              nextWeek: 'dddd [куни соат] LT [да]',
              lastDay: '[Кеча соат] LT [да]',
              lastWeek: '[Утган] dddd [куни соат] LT [да]',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'Якин %s ичида',
              past: 'Бир неча %s олдин',
              s: 'фурсат',
              ss: '%d фурсат',
              m: 'бир дакика',
              mm: '%d дакика',
              h: 'бир соат',
              hh: '%d соат',
              d: 'бир кун',
              dd: '%d кун',
              M: 'бир ой',
              MM: '%d ой',
              y: 'бир йил',
              yy: '%d йил',
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 7, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return uz
        })

        /***/
      },

    /***/ './node_modules/moment/locale/vi.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/vi.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Vietnamese [vi]
        //! author : Bang Nguyen : https://github.com/bangnk
        //! author : Chien Kira : https://github.com/chienkira

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var vi = moment.defineLocale('vi', {
            months:
              'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
                '_'
              ),
            monthsShort:
              'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
                '_'
              ),
            weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
            weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
            weekdaysParseExact: true,
            meridiemParse: /sa|ch/i,
            isPM: function (input) {
              return /^ch$/i.test(input)
            },
            meridiem: function (hours, minutes, isLower) {
              if (hours < 12) {
                return isLower ? 'sa' : 'SA'
              } else {
                return isLower ? 'ch' : 'CH'
              }
            },
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM [năm] YYYY',
              LLL: 'D MMMM [năm] YYYY HH:mm',
              LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
              l: 'DD/M/YYYY',
              ll: 'D MMM YYYY',
              lll: 'D MMM YYYY HH:mm',
              llll: 'ddd, D MMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[Hôm nay lúc] LT',
              nextDay: '[Ngày mai lúc] LT',
              nextWeek: 'dddd [tuần tới lúc] LT',
              lastDay: '[Hôm qua lúc] LT',
              lastWeek: 'dddd [tuần trước lúc] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: '%s tới',
              past: '%s trước',
              s: 'vài giây',
              ss: '%d giây',
              m: 'một phút',
              mm: '%d phút',
              h: 'một giờ',
              hh: '%d giờ',
              d: 'một ngày',
              dd: '%d ngày',
              w: 'một tuần',
              ww: '%d tuần',
              M: 'một tháng',
              MM: '%d tháng',
              y: 'một năm',
              yy: '%d năm',
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: function (number) {
              return number
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return vi
        })

        /***/
      },

    /***/ './node_modules/moment/locale/x-pseudo.js':
      /*!************************************************!*\
  !*** ./node_modules/moment/locale/x-pseudo.js ***!
  \************************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Pseudo [x-pseudo]
        //! author : Andrew Hood : https://github.com/andrewhood125

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var xPseudo = moment.defineLocale('x-pseudo', {
            months:
              'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
                '_'
              ),
            monthsShort:
              'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
                '_'
              ),
            monthsParseExact: true,
            weekdays:
              'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
                '_'
              ),
            weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
            weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
            weekdaysParseExact: true,
            longDateFormat: {
              LT: 'HH:mm',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY HH:mm',
              LLLL: 'dddd, D MMMM YYYY HH:mm',
            },
            calendar: {
              sameDay: '[T~ódá~ý át] LT',
              nextDay: '[T~ómó~rró~w át] LT',
              nextWeek: 'dddd [át] LT',
              lastDay: '[Ý~ést~érdá~ý át] LT',
              lastWeek: '[L~ást] dddd [át] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'í~ñ %s',
              past: '%s á~gó',
              s: 'á ~féw ~sécó~ñds',
              ss: '%d s~écóñ~ds',
              m: 'á ~míñ~úté',
              mm: '%d m~íñú~tés',
              h: 'á~ñ hó~úr',
              hh: '%d h~óúrs',
              d: 'á ~dáý',
              dd: '%d d~áýs',
              M: 'á ~móñ~th',
              MM: '%d m~óñt~hs',
              y: 'á ~ýéár',
              yy: '%d ý~éárs',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  ~~((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return xPseudo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/yo.js':
      /*!******************************************!*\
  !*** ./node_modules/moment/locale/yo.js ***!
  \******************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Yoruba Nigeria [yo]
        //! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var yo = moment.defineLocale('yo', {
            months:
              'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
                '_'
              ),
            monthsShort:
              'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
            weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
            weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
            weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
            longDateFormat: {
              LT: 'h:mm A',
              LTS: 'h:mm:ss A',
              L: 'DD/MM/YYYY',
              LL: 'D MMMM YYYY',
              LLL: 'D MMMM YYYY h:mm A',
              LLLL: 'dddd, D MMMM YYYY h:mm A',
            },
            calendar: {
              sameDay: '[Ònì ni] LT',
              nextDay: '[Ọ̀la ni] LT',
              nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
              lastDay: '[Àna ni] LT',
              lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
              sameElse: 'L',
            },
            relativeTime: {
              future: 'ní %s',
              past: '%s kọjá',
              s: 'ìsẹjú aayá die',
              ss: 'aayá %d',
              m: 'ìsẹjú kan',
              mm: 'ìsẹjú %d',
              h: 'wákati kan',
              hh: 'wákati %d',
              d: 'ọjọ́ kan',
              dd: 'ọjọ́ %d',
              M: 'osù kan',
              MM: 'osù %d',
              y: 'ọdún kan',
              yy: 'ọdún %d',
            },
            dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
            ordinal: 'ọjọ́ %d',
            week: {
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return yo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/zh-cn.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-cn.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Chinese (China) [zh-cn]
        //! author : suupic : https://github.com/suupic
        //! author : Zeno Zeng : https://github.com/zenozeng
        //! author : uu109 : https://github.com/uu109

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var zhCn = moment.defineLocale('zh-cn', {
            months:
              '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
                '_'
              ),
            monthsShort:
              '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
              '_'
            ),
            weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY/MM/DD',
              LL: 'YYYY年M月D日',
              LLL: 'YYYY年M月D日Ah点mm分',
              LLLL: 'YYYY年M月D日ddddAh点mm分',
              l: 'YYYY/M/D',
              ll: 'YYYY年M月D日',
              lll: 'YYYY年M月D日 HH:mm',
              llll: 'YYYY年M月D日dddd HH:mm',
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                meridiem === '凌晨' ||
                meridiem === '早上' ||
                meridiem === '上午'
              ) {
                return hour
              } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12
              } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              var hm = hour * 100 + minute
              if (hm < 600) {
                return '凌晨'
              } else if (hm < 900) {
                return '早上'
              } else if (hm < 1130) {
                return '上午'
              } else if (hm < 1230) {
                return '中午'
              } else if (hm < 1800) {
                return '下午'
              } else {
                return '晚上'
              }
            },
            calendar: {
              sameDay: '[今天]LT',
              nextDay: '[明天]LT',
              nextWeek: function (now) {
                if (now.week() !== this.week()) {
                  return '[下]dddLT'
                } else {
                  return '[本]dddLT'
                }
              },
              lastDay: '[昨天]LT',
              lastWeek: function (now) {
                if (this.week() !== now.week()) {
                  return '[上]dddLT'
                } else {
                  return '[本]dddLT'
                }
              },
              sameElse: 'L',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '日'
                case 'M':
                  return number + '月'
                case 'w':
                case 'W':
                  return number + '周'
                default:
                  return number
              }
            },
            relativeTime: {
              future: '%s后',
              past: '%s前',
              s: '几秒',
              ss: '%d 秒',
              m: '1 分钟',
              mm: '%d 分钟',
              h: '1 小时',
              hh: '%d 小时',
              d: '1 天',
              dd: '%d 天',
              w: '1 周',
              ww: '%d 周',
              M: '1 个月',
              MM: '%d 个月',
              y: '1 年',
              yy: '%d 年',
            },
            week: {
              // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
              dow: 1, // Monday is the first day of the week.
              doy: 4, // The week that contains Jan 4th is the first week of the year.
            },
          })

          return zhCn
        })

        /***/
      },

    /***/ './node_modules/moment/locale/zh-hk.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-hk.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Chinese (Hong Kong) [zh-hk]
        //! author : Ben : https://github.com/ben-lin
        //! author : Chris Lam : https://github.com/hehachris
        //! author : Konstantin : https://github.com/skfd
        //! author : Anthony : https://github.com/anthonylau

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var zhHk = moment.defineLocale('zh-hk', {
            months:
              '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
                '_'
              ),
            monthsShort:
              '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
              '_'
            ),
            weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY/MM/DD',
              LL: 'YYYY年M月D日',
              LLL: 'YYYY年M月D日 HH:mm',
              LLLL: 'YYYY年M月D日dddd HH:mm',
              l: 'YYYY/M/D',
              ll: 'YYYY年M月D日',
              lll: 'YYYY年M月D日 HH:mm',
              llll: 'YYYY年M月D日dddd HH:mm',
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                meridiem === '凌晨' ||
                meridiem === '早上' ||
                meridiem === '上午'
              ) {
                return hour
              } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              var hm = hour * 100 + minute
              if (hm < 600) {
                return '凌晨'
              } else if (hm < 900) {
                return '早上'
              } else if (hm < 1200) {
                return '上午'
              } else if (hm === 1200) {
                return '中午'
              } else if (hm < 1800) {
                return '下午'
              } else {
                return '晚上'
              }
            },
            calendar: {
              sameDay: '[今天]LT',
              nextDay: '[明天]LT',
              nextWeek: '[下]ddddLT',
              lastDay: '[昨天]LT',
              lastWeek: '[上]ddddLT',
              sameElse: 'L',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '日'
                case 'M':
                  return number + '月'
                case 'w':
                case 'W':
                  return number + '週'
                default:
                  return number
              }
            },
            relativeTime: {
              future: '%s後',
              past: '%s前',
              s: '幾秒',
              ss: '%d 秒',
              m: '1 分鐘',
              mm: '%d 分鐘',
              h: '1 小時',
              hh: '%d 小時',
              d: '1 天',
              dd: '%d 天',
              M: '1 個月',
              MM: '%d 個月',
              y: '1 年',
              yy: '%d 年',
            },
          })

          return zhHk
        })

        /***/
      },

    /***/ './node_modules/moment/locale/zh-mo.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-mo.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Chinese (Macau) [zh-mo]
        //! author : Ben : https://github.com/ben-lin
        //! author : Chris Lam : https://github.com/hehachris
        //! author : Tan Yuanhong : https://github.com/le0tan

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var zhMo = moment.defineLocale('zh-mo', {
            months:
              '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
                '_'
              ),
            monthsShort:
              '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
              '_'
            ),
            weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'DD/MM/YYYY',
              LL: 'YYYY年M月D日',
              LLL: 'YYYY年M月D日 HH:mm',
              LLLL: 'YYYY年M月D日dddd HH:mm',
              l: 'D/M/YYYY',
              ll: 'YYYY年M月D日',
              lll: 'YYYY年M月D日 HH:mm',
              llll: 'YYYY年M月D日dddd HH:mm',
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                meridiem === '凌晨' ||
                meridiem === '早上' ||
                meridiem === '上午'
              ) {
                return hour
              } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              var hm = hour * 100 + minute
              if (hm < 600) {
                return '凌晨'
              } else if (hm < 900) {
                return '早上'
              } else if (hm < 1130) {
                return '上午'
              } else if (hm < 1230) {
                return '中午'
              } else if (hm < 1800) {
                return '下午'
              } else {
                return '晚上'
              }
            },
            calendar: {
              sameDay: '[今天] LT',
              nextDay: '[明天] LT',
              nextWeek: '[下]dddd LT',
              lastDay: '[昨天] LT',
              lastWeek: '[上]dddd LT',
              sameElse: 'L',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '日'
                case 'M':
                  return number + '月'
                case 'w':
                case 'W':
                  return number + '週'
                default:
                  return number
              }
            },
            relativeTime: {
              future: '%s內',
              past: '%s前',
              s: '幾秒',
              ss: '%d 秒',
              m: '1 分鐘',
              mm: '%d 分鐘',
              h: '1 小時',
              hh: '%d 小時',
              d: '1 天',
              dd: '%d 天',
              M: '1 個月',
              MM: '%d 個月',
              y: '1 年',
              yy: '%d 年',
            },
          })

          return zhMo
        })

        /***/
      },

    /***/ './node_modules/moment/locale/zh-tw.js':
      /*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-tw.js ***!
  \*********************************************/
      /***/ function (
        __unused_webpack_module,
        __unused_webpack_exports,
        __webpack_require__
      ) {
        //! moment.js locale configuration
        //! locale : Chinese (Taiwan) [zh-tw]
        //! author : Ben : https://github.com/ben-lin
        //! author : Chris Lam : https://github.com/hehachris

        ;(function (global, factory) {
          true
            ? factory(
                __webpack_require__(
                  /*! ../moment */ './node_modules/moment/moment.js'
                )
              )
            : 0
        })(this, function (moment) {
          'use strict'

          //! moment.js locale configuration

          var zhTw = moment.defineLocale('zh-tw', {
            months:
              '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
                '_'
              ),
            monthsShort:
              '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split(
              '_'
            ),
            weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
            longDateFormat: {
              LT: 'HH:mm',
              LTS: 'HH:mm:ss',
              L: 'YYYY/MM/DD',
              LL: 'YYYY年M月D日',
              LLL: 'YYYY年M月D日 HH:mm',
              LLLL: 'YYYY年M月D日dddd HH:mm',
              l: 'YYYY/M/D',
              ll: 'YYYY年M月D日',
              lll: 'YYYY年M月D日 HH:mm',
              llll: 'YYYY年M月D日dddd HH:mm',
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function (hour, meridiem) {
              if (hour === 12) {
                hour = 0
              }
              if (
                meridiem === '凌晨' ||
                meridiem === '早上' ||
                meridiem === '上午'
              ) {
                return hour
              } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12
              } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12
              }
            },
            meridiem: function (hour, minute, isLower) {
              var hm = hour * 100 + minute
              if (hm < 600) {
                return '凌晨'
              } else if (hm < 900) {
                return '早上'
              } else if (hm < 1130) {
                return '上午'
              } else if (hm < 1230) {
                return '中午'
              } else if (hm < 1800) {
                return '下午'
              } else {
                return '晚上'
              }
            },
            calendar: {
              sameDay: '[今天] LT',
              nextDay: '[明天] LT',
              nextWeek: '[下]dddd LT',
              lastDay: '[昨天] LT',
              lastWeek: '[上]dddd LT',
              sameElse: 'L',
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function (number, period) {
              switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                  return number + '日'
                case 'M':
                  return number + '月'
                case 'w':
                case 'W':
                  return number + '週'
                default:
                  return number
              }
            },
            relativeTime: {
              future: '%s後',
              past: '%s前',
              s: '幾秒',
              ss: '%d 秒',
              m: '1 分鐘',
              mm: '%d 分鐘',
              h: '1 小時',
              hh: '%d 小時',
              d: '1 天',
              dd: '%d 天',
              M: '1 個月',
              MM: '%d 個月',
              y: '1 年',
              yy: '%d 年',
            },
          })

          return zhTw
        })

        /***/
      },

    /***/ './node_modules/moment/locale sync recursive ^\\.\\/.*$':
      /*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        var map = {
          './af': './node_modules/moment/locale/af.js',
          './af.js': './node_modules/moment/locale/af.js',
          './ar': './node_modules/moment/locale/ar.js',
          './ar-dz': './node_modules/moment/locale/ar-dz.js',
          './ar-dz.js': './node_modules/moment/locale/ar-dz.js',
          './ar-kw': './node_modules/moment/locale/ar-kw.js',
          './ar-kw.js': './node_modules/moment/locale/ar-kw.js',
          './ar-ly': './node_modules/moment/locale/ar-ly.js',
          './ar-ly.js': './node_modules/moment/locale/ar-ly.js',
          './ar-ma': './node_modules/moment/locale/ar-ma.js',
          './ar-ma.js': './node_modules/moment/locale/ar-ma.js',
          './ar-sa': './node_modules/moment/locale/ar-sa.js',
          './ar-sa.js': './node_modules/moment/locale/ar-sa.js',
          './ar-tn': './node_modules/moment/locale/ar-tn.js',
          './ar-tn.js': './node_modules/moment/locale/ar-tn.js',
          './ar.js': './node_modules/moment/locale/ar.js',
          './az': './node_modules/moment/locale/az.js',
          './az.js': './node_modules/moment/locale/az.js',
          './be': './node_modules/moment/locale/be.js',
          './be.js': './node_modules/moment/locale/be.js',
          './bg': './node_modules/moment/locale/bg.js',
          './bg.js': './node_modules/moment/locale/bg.js',
          './bm': './node_modules/moment/locale/bm.js',
          './bm.js': './node_modules/moment/locale/bm.js',
          './bn': './node_modules/moment/locale/bn.js',
          './bn-bd': './node_modules/moment/locale/bn-bd.js',
          './bn-bd.js': './node_modules/moment/locale/bn-bd.js',
          './bn.js': './node_modules/moment/locale/bn.js',
          './bo': './node_modules/moment/locale/bo.js',
          './bo.js': './node_modules/moment/locale/bo.js',
          './br': './node_modules/moment/locale/br.js',
          './br.js': './node_modules/moment/locale/br.js',
          './bs': './node_modules/moment/locale/bs.js',
          './bs.js': './node_modules/moment/locale/bs.js',
          './ca': './node_modules/moment/locale/ca.js',
          './ca.js': './node_modules/moment/locale/ca.js',
          './cs': './node_modules/moment/locale/cs.js',
          './cs.js': './node_modules/moment/locale/cs.js',
          './cv': './node_modules/moment/locale/cv.js',
          './cv.js': './node_modules/moment/locale/cv.js',
          './cy': './node_modules/moment/locale/cy.js',
          './cy.js': './node_modules/moment/locale/cy.js',
          './da': './node_modules/moment/locale/da.js',
          './da.js': './node_modules/moment/locale/da.js',
          './de': './node_modules/moment/locale/de.js',
          './de-at': './node_modules/moment/locale/de-at.js',
          './de-at.js': './node_modules/moment/locale/de-at.js',
          './de-ch': './node_modules/moment/locale/de-ch.js',
          './de-ch.js': './node_modules/moment/locale/de-ch.js',
          './de.js': './node_modules/moment/locale/de.js',
          './dv': './node_modules/moment/locale/dv.js',
          './dv.js': './node_modules/moment/locale/dv.js',
          './el': './node_modules/moment/locale/el.js',
          './el.js': './node_modules/moment/locale/el.js',
          './en-au': './node_modules/moment/locale/en-au.js',
          './en-au.js': './node_modules/moment/locale/en-au.js',
          './en-ca': './node_modules/moment/locale/en-ca.js',
          './en-ca.js': './node_modules/moment/locale/en-ca.js',
          './en-gb': './node_modules/moment/locale/en-gb.js',
          './en-gb.js': './node_modules/moment/locale/en-gb.js',
          './en-ie': './node_modules/moment/locale/en-ie.js',
          './en-ie.js': './node_modules/moment/locale/en-ie.js',
          './en-il': './node_modules/moment/locale/en-il.js',
          './en-il.js': './node_modules/moment/locale/en-il.js',
          './en-in': './node_modules/moment/locale/en-in.js',
          './en-in.js': './node_modules/moment/locale/en-in.js',
          './en-nz': './node_modules/moment/locale/en-nz.js',
          './en-nz.js': './node_modules/moment/locale/en-nz.js',
          './en-sg': './node_modules/moment/locale/en-sg.js',
          './en-sg.js': './node_modules/moment/locale/en-sg.js',
          './eo': './node_modules/moment/locale/eo.js',
          './eo.js': './node_modules/moment/locale/eo.js',
          './es': './node_modules/moment/locale/es.js',
          './es-do': './node_modules/moment/locale/es-do.js',
          './es-do.js': './node_modules/moment/locale/es-do.js',
          './es-mx': './node_modules/moment/locale/es-mx.js',
          './es-mx.js': './node_modules/moment/locale/es-mx.js',
          './es-us': './node_modules/moment/locale/es-us.js',
          './es-us.js': './node_modules/moment/locale/es-us.js',
          './es.js': './node_modules/moment/locale/es.js',
          './et': './node_modules/moment/locale/et.js',
          './et.js': './node_modules/moment/locale/et.js',
          './eu': './node_modules/moment/locale/eu.js',
          './eu.js': './node_modules/moment/locale/eu.js',
          './fa': './node_modules/moment/locale/fa.js',
          './fa.js': './node_modules/moment/locale/fa.js',
          './fi': './node_modules/moment/locale/fi.js',
          './fi.js': './node_modules/moment/locale/fi.js',
          './fil': './node_modules/moment/locale/fil.js',
          './fil.js': './node_modules/moment/locale/fil.js',
          './fo': './node_modules/moment/locale/fo.js',
          './fo.js': './node_modules/moment/locale/fo.js',
          './fr': './node_modules/moment/locale/fr.js',
          './fr-ca': './node_modules/moment/locale/fr-ca.js',
          './fr-ca.js': './node_modules/moment/locale/fr-ca.js',
          './fr-ch': './node_modules/moment/locale/fr-ch.js',
          './fr-ch.js': './node_modules/moment/locale/fr-ch.js',
          './fr.js': './node_modules/moment/locale/fr.js',
          './fy': './node_modules/moment/locale/fy.js',
          './fy.js': './node_modules/moment/locale/fy.js',
          './ga': './node_modules/moment/locale/ga.js',
          './ga.js': './node_modules/moment/locale/ga.js',
          './gd': './node_modules/moment/locale/gd.js',
          './gd.js': './node_modules/moment/locale/gd.js',
          './gl': './node_modules/moment/locale/gl.js',
          './gl.js': './node_modules/moment/locale/gl.js',
          './gom-deva': './node_modules/moment/locale/gom-deva.js',
          './gom-deva.js': './node_modules/moment/locale/gom-deva.js',
          './gom-latn': './node_modules/moment/locale/gom-latn.js',
          './gom-latn.js': './node_modules/moment/locale/gom-latn.js',
          './gu': './node_modules/moment/locale/gu.js',
          './gu.js': './node_modules/moment/locale/gu.js',
          './he': './node_modules/moment/locale/he.js',
          './he.js': './node_modules/moment/locale/he.js',
          './hi': './node_modules/moment/locale/hi.js',
          './hi.js': './node_modules/moment/locale/hi.js',
          './hr': './node_modules/moment/locale/hr.js',
          './hr.js': './node_modules/moment/locale/hr.js',
          './hu': './node_modules/moment/locale/hu.js',
          './hu.js': './node_modules/moment/locale/hu.js',
          './hy-am': './node_modules/moment/locale/hy-am.js',
          './hy-am.js': './node_modules/moment/locale/hy-am.js',
          './id': './node_modules/moment/locale/id.js',
          './id.js': './node_modules/moment/locale/id.js',
          './is': './node_modules/moment/locale/is.js',
          './is.js': './node_modules/moment/locale/is.js',
          './it': './node_modules/moment/locale/it.js',
          './it-ch': './node_modules/moment/locale/it-ch.js',
          './it-ch.js': './node_modules/moment/locale/it-ch.js',
          './it.js': './node_modules/moment/locale/it.js',
          './ja': './node_modules/moment/locale/ja.js',
          './ja.js': './node_modules/moment/locale/ja.js',
          './jv': './node_modules/moment/locale/jv.js',
          './jv.js': './node_modules/moment/locale/jv.js',
          './ka': './node_modules/moment/locale/ka.js',
          './ka.js': './node_modules/moment/locale/ka.js',
          './kk': './node_modules/moment/locale/kk.js',
          './kk.js': './node_modules/moment/locale/kk.js',
          './km': './node_modules/moment/locale/km.js',
          './km.js': './node_modules/moment/locale/km.js',
          './kn': './node_modules/moment/locale/kn.js',
          './kn.js': './node_modules/moment/locale/kn.js',
          './ko': './node_modules/moment/locale/ko.js',
          './ko.js': './node_modules/moment/locale/ko.js',
          './ku': './node_modules/moment/locale/ku.js',
          './ku.js': './node_modules/moment/locale/ku.js',
          './ky': './node_modules/moment/locale/ky.js',
          './ky.js': './node_modules/moment/locale/ky.js',
          './lb': './node_modules/moment/locale/lb.js',
          './lb.js': './node_modules/moment/locale/lb.js',
          './lo': './node_modules/moment/locale/lo.js',
          './lo.js': './node_modules/moment/locale/lo.js',
          './lt': './node_modules/moment/locale/lt.js',
          './lt.js': './node_modules/moment/locale/lt.js',
          './lv': './node_modules/moment/locale/lv.js',
          './lv.js': './node_modules/moment/locale/lv.js',
          './me': './node_modules/moment/locale/me.js',
          './me.js': './node_modules/moment/locale/me.js',
          './mi': './node_modules/moment/locale/mi.js',
          './mi.js': './node_modules/moment/locale/mi.js',
          './mk': './node_modules/moment/locale/mk.js',
          './mk.js': './node_modules/moment/locale/mk.js',
          './ml': './node_modules/moment/locale/ml.js',
          './ml.js': './node_modules/moment/locale/ml.js',
          './mn': './node_modules/moment/locale/mn.js',
          './mn.js': './node_modules/moment/locale/mn.js',
          './mr': './node_modules/moment/locale/mr.js',
          './mr.js': './node_modules/moment/locale/mr.js',
          './ms': './node_modules/moment/locale/ms.js',
          './ms-my': './node_modules/moment/locale/ms-my.js',
          './ms-my.js': './node_modules/moment/locale/ms-my.js',
          './ms.js': './node_modules/moment/locale/ms.js',
          './mt': './node_modules/moment/locale/mt.js',
          './mt.js': './node_modules/moment/locale/mt.js',
          './my': './node_modules/moment/locale/my.js',
          './my.js': './node_modules/moment/locale/my.js',
          './nb': './node_modules/moment/locale/nb.js',
          './nb.js': './node_modules/moment/locale/nb.js',
          './ne': './node_modules/moment/locale/ne.js',
          './ne.js': './node_modules/moment/locale/ne.js',
          './nl': './node_modules/moment/locale/nl.js',
          './nl-be': './node_modules/moment/locale/nl-be.js',
          './nl-be.js': './node_modules/moment/locale/nl-be.js',
          './nl.js': './node_modules/moment/locale/nl.js',
          './nn': './node_modules/moment/locale/nn.js',
          './nn.js': './node_modules/moment/locale/nn.js',
          './oc-lnc': './node_modules/moment/locale/oc-lnc.js',
          './oc-lnc.js': './node_modules/moment/locale/oc-lnc.js',
          './pa-in': './node_modules/moment/locale/pa-in.js',
          './pa-in.js': './node_modules/moment/locale/pa-in.js',
          './pl': './node_modules/moment/locale/pl.js',
          './pl.js': './node_modules/moment/locale/pl.js',
          './pt': './node_modules/moment/locale/pt.js',
          './pt-br': './node_modules/moment/locale/pt-br.js',
          './pt-br.js': './node_modules/moment/locale/pt-br.js',
          './pt.js': './node_modules/moment/locale/pt.js',
          './ro': './node_modules/moment/locale/ro.js',
          './ro.js': './node_modules/moment/locale/ro.js',
          './ru': './node_modules/moment/locale/ru.js',
          './ru.js': './node_modules/moment/locale/ru.js',
          './sd': './node_modules/moment/locale/sd.js',
          './sd.js': './node_modules/moment/locale/sd.js',
          './se': './node_modules/moment/locale/se.js',
          './se.js': './node_modules/moment/locale/se.js',
          './si': './node_modules/moment/locale/si.js',
          './si.js': './node_modules/moment/locale/si.js',
          './sk': './node_modules/moment/locale/sk.js',
          './sk.js': './node_modules/moment/locale/sk.js',
          './sl': './node_modules/moment/locale/sl.js',
          './sl.js': './node_modules/moment/locale/sl.js',
          './sq': './node_modules/moment/locale/sq.js',
          './sq.js': './node_modules/moment/locale/sq.js',
          './sr': './node_modules/moment/locale/sr.js',
          './sr-cyrl': './node_modules/moment/locale/sr-cyrl.js',
          './sr-cyrl.js': './node_modules/moment/locale/sr-cyrl.js',
          './sr.js': './node_modules/moment/locale/sr.js',
          './ss': './node_modules/moment/locale/ss.js',
          './ss.js': './node_modules/moment/locale/ss.js',
          './sv': './node_modules/moment/locale/sv.js',
          './sv.js': './node_modules/moment/locale/sv.js',
          './sw': './node_modules/moment/locale/sw.js',
          './sw.js': './node_modules/moment/locale/sw.js',
          './ta': './node_modules/moment/locale/ta.js',
          './ta.js': './node_modules/moment/locale/ta.js',
          './te': './node_modules/moment/locale/te.js',
          './te.js': './node_modules/moment/locale/te.js',
          './tet': './node_modules/moment/locale/tet.js',
          './tet.js': './node_modules/moment/locale/tet.js',
          './tg': './node_modules/moment/locale/tg.js',
          './tg.js': './node_modules/moment/locale/tg.js',
          './th': './node_modules/moment/locale/th.js',
          './th.js': './node_modules/moment/locale/th.js',
          './tk': './node_modules/moment/locale/tk.js',
          './tk.js': './node_modules/moment/locale/tk.js',
          './tl-ph': './node_modules/moment/locale/tl-ph.js',
          './tl-ph.js': './node_modules/moment/locale/tl-ph.js',
          './tlh': './node_modules/moment/locale/tlh.js',
          './tlh.js': './node_modules/moment/locale/tlh.js',
          './tr': './node_modules/moment/locale/tr.js',
          './tr.js': './node_modules/moment/locale/tr.js',
          './tzl': './node_modules/moment/locale/tzl.js',
          './tzl.js': './node_modules/moment/locale/tzl.js',
          './tzm': './node_modules/moment/locale/tzm.js',
          './tzm-latn': './node_modules/moment/locale/tzm-latn.js',
          './tzm-latn.js': './node_modules/moment/locale/tzm-latn.js',
          './tzm.js': './node_modules/moment/locale/tzm.js',
          './ug-cn': './node_modules/moment/locale/ug-cn.js',
          './ug-cn.js': './node_modules/moment/locale/ug-cn.js',
          './uk': './node_modules/moment/locale/uk.js',
          './uk.js': './node_modules/moment/locale/uk.js',
          './ur': './node_modules/moment/locale/ur.js',
          './ur.js': './node_modules/moment/locale/ur.js',
          './uz': './node_modules/moment/locale/uz.js',
          './uz-latn': './node_modules/moment/locale/uz-latn.js',
          './uz-latn.js': './node_modules/moment/locale/uz-latn.js',
          './uz.js': './node_modules/moment/locale/uz.js',
          './vi': './node_modules/moment/locale/vi.js',
          './vi.js': './node_modules/moment/locale/vi.js',
          './x-pseudo': './node_modules/moment/locale/x-pseudo.js',
          './x-pseudo.js': './node_modules/moment/locale/x-pseudo.js',
          './yo': './node_modules/moment/locale/yo.js',
          './yo.js': './node_modules/moment/locale/yo.js',
          './zh-cn': './node_modules/moment/locale/zh-cn.js',
          './zh-cn.js': './node_modules/moment/locale/zh-cn.js',
          './zh-hk': './node_modules/moment/locale/zh-hk.js',
          './zh-hk.js': './node_modules/moment/locale/zh-hk.js',
          './zh-mo': './node_modules/moment/locale/zh-mo.js',
          './zh-mo.js': './node_modules/moment/locale/zh-mo.js',
          './zh-tw': './node_modules/moment/locale/zh-tw.js',
          './zh-tw.js': './node_modules/moment/locale/zh-tw.js',
        }

        function webpackContext(req) {
          var id = webpackContextResolve(req)
          return __webpack_require__(id)
        }
        function webpackContextResolve(req) {
          if (!__webpack_require__.o(map, req)) {
            var e = new Error("Cannot find module '" + req + "'")
            e.code = 'MODULE_NOT_FOUND'
            throw e
          }
          return map[req]
        }
        webpackContext.keys = function webpackContextKeys() {
          return Object.keys(map)
        }
        webpackContext.resolve = webpackContextResolve
        module.exports = webpackContext
        webpackContext.id =
          './node_modules/moment/locale sync recursive ^\\.\\/.*$'

        /***/
      },

    /***/ './node_modules/moment/moment.js':
      /*!***************************************!*\
  !*** ./node_modules/moment/moment.js ***!
  \***************************************/
      /***/ function (module, __unused_webpack_exports, __webpack_require__) {
        /* module decorator */ module = __webpack_require__.nmd(module)
        //! moment.js
        //! version : 2.29.1
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com
        ;(function (global, factory) {
          true ? (module.exports = factory()) : 0
        })(this, function () {
          'use strict'

          var hookCallback

          function hooks() {
            return hookCallback.apply(null, arguments)
          }

          // This is done to register the method called with moment()
          // without creating circular dependencies.
          function setHookCallback(callback) {
            hookCallback = callback
          }

          function isArray(input) {
            return (
              input instanceof Array ||
              Object.prototype.toString.call(input) === '[object Array]'
            )
          }

          function isObject(input) {
            // IE8 will treat undefined and null as object if it wasn't for
            // input != null
            return (
              input != null &&
              Object.prototype.toString.call(input) === '[object Object]'
            )
          }

          function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b)
          }

          function isObjectEmpty(obj) {
            if (Object.getOwnPropertyNames) {
              return Object.getOwnPropertyNames(obj).length === 0
            } else {
              var k
              for (k in obj) {
                if (hasOwnProp(obj, k)) {
                  return false
                }
              }
              return true
            }
          }

          function isUndefined(input) {
            return input === void 0
          }

          function isNumber(input) {
            return (
              typeof input === 'number' ||
              Object.prototype.toString.call(input) === '[object Number]'
            )
          }

          function isDate(input) {
            return (
              input instanceof Date ||
              Object.prototype.toString.call(input) === '[object Date]'
            )
          }

          function map(arr, fn) {
            var res = [],
              i
            for (i = 0; i < arr.length; ++i) {
              res.push(fn(arr[i], i))
            }
            return res
          }

          function extend(a, b) {
            for (var i in b) {
              if (hasOwnProp(b, i)) {
                a[i] = b[i]
              }
            }

            if (hasOwnProp(b, 'toString')) {
              a.toString = b.toString
            }

            if (hasOwnProp(b, 'valueOf')) {
              a.valueOf = b.valueOf
            }

            return a
          }

          function createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc()
          }

          function defaultParsingFlags() {
            // We need to deep clone this object.
            return {
              empty: false,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: false,
              invalidEra: null,
              invalidMonth: null,
              invalidFormat: false,
              userInvalidated: false,
              iso: false,
              parsedDateParts: [],
              era: null,
              meridiem: null,
              rfc2822: false,
              weekdayMismatch: false,
            }
          }

          function getParsingFlags(m) {
            if (m._pf == null) {
              m._pf = defaultParsingFlags()
            }
            return m._pf
          }

          var some
          if (Array.prototype.some) {
            some = Array.prototype.some
          } else {
            some = function (fun) {
              var t = Object(this),
                len = t.length >>> 0,
                i

              for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                  return true
                }
              }

              return false
            }
          }

          function isValid(m) {
            if (m._isValid == null) {
              var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                  return i != null
                }),
                isNowValid =
                  !isNaN(m._d.getTime()) &&
                  flags.overflow < 0 &&
                  !flags.empty &&
                  !flags.invalidEra &&
                  !flags.invalidMonth &&
                  !flags.invalidWeekday &&
                  !flags.weekdayMismatch &&
                  !flags.nullInput &&
                  !flags.invalidFormat &&
                  !flags.userInvalidated &&
                  (!flags.meridiem || (flags.meridiem && parsedParts))

              if (m._strict) {
                isNowValid =
                  isNowValid &&
                  flags.charsLeftOver === 0 &&
                  flags.unusedTokens.length === 0 &&
                  flags.bigHour === undefined
              }

              if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid
              } else {
                return isNowValid
              }
            }
            return m._isValid
          }

          function createInvalid(flags) {
            var m = createUTC(NaN)
            if (flags != null) {
              extend(getParsingFlags(m), flags)
            } else {
              getParsingFlags(m).userInvalidated = true
            }

            return m
          }

          // Plugins that add properties should also add the key here (null value),
          // so we can properly clone ourselves.
          var momentProperties = (hooks.momentProperties = []),
            updateInProgress = false

          function copyConfig(to, from) {
            var i, prop, val

            if (!isUndefined(from._isAMomentObject)) {
              to._isAMomentObject = from._isAMomentObject
            }
            if (!isUndefined(from._i)) {
              to._i = from._i
            }
            if (!isUndefined(from._f)) {
              to._f = from._f
            }
            if (!isUndefined(from._l)) {
              to._l = from._l
            }
            if (!isUndefined(from._strict)) {
              to._strict = from._strict
            }
            if (!isUndefined(from._tzm)) {
              to._tzm = from._tzm
            }
            if (!isUndefined(from._isUTC)) {
              to._isUTC = from._isUTC
            }
            if (!isUndefined(from._offset)) {
              to._offset = from._offset
            }
            if (!isUndefined(from._pf)) {
              to._pf = getParsingFlags(from)
            }
            if (!isUndefined(from._locale)) {
              to._locale = from._locale
            }

            if (momentProperties.length > 0) {
              for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i]
                val = from[prop]
                if (!isUndefined(val)) {
                  to[prop] = val
                }
              }
            }

            return to
          }

          // Moment prototype object
          function Moment(config) {
            copyConfig(this, config)
            this._d = new Date(config._d != null ? config._d.getTime() : NaN)
            if (!this.isValid()) {
              this._d = new Date(NaN)
            }
            // Prevent infinite loop in case updateOffset creates new moment
            // objects.
            if (updateInProgress === false) {
              updateInProgress = true
              hooks.updateOffset(this)
              updateInProgress = false
            }
          }

          function isMoment(obj) {
            return (
              obj instanceof Moment ||
              (obj != null && obj._isAMomentObject != null)
            )
          }

          function warn(msg) {
            if (
              hooks.suppressDeprecationWarnings === false &&
              typeof console !== 'undefined' &&
              console.warn
            ) {
              console.warn('Deprecation warning: ' + msg)
            }
          }

          function deprecate(msg, fn) {
            var firstTime = true

            return extend(function () {
              if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg)
              }
              if (firstTime) {
                var args = [],
                  arg,
                  i,
                  key
                for (i = 0; i < arguments.length; i++) {
                  arg = ''
                  if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] '
                    for (key in arguments[0]) {
                      if (hasOwnProp(arguments[0], key)) {
                        arg += key + ': ' + arguments[0][key] + ', '
                      }
                    }
                    arg = arg.slice(0, -2) // Remove trailing comma and space
                  } else {
                    arg = arguments[i]
                  }
                  args.push(arg)
                }
                warn(
                  msg +
                    '\nArguments: ' +
                    Array.prototype.slice.call(args).join('') +
                    '\n' +
                    new Error().stack
                )
                firstTime = false
              }
              return fn.apply(this, arguments)
            }, fn)
          }

          var deprecations = {}

          function deprecateSimple(name, msg) {
            if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(name, msg)
            }
            if (!deprecations[name]) {
              warn(msg)
              deprecations[name] = true
            }
          }

          hooks.suppressDeprecationWarnings = false
          hooks.deprecationHandler = null

          function isFunction(input) {
            return (
              (typeof Function !== 'undefined' && input instanceof Function) ||
              Object.prototype.toString.call(input) === '[object Function]'
            )
          }

          function set(config) {
            var prop, i
            for (i in config) {
              if (hasOwnProp(config, i)) {
                prop = config[i]
                if (isFunction(prop)) {
                  this[i] = prop
                } else {
                  this['_' + i] = prop
                }
              }
            }
            this._config = config
            // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
            // TODO: Remove "ordinalParse" fallback in next major release.
            this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source ||
                this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
            )
          }

          function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig),
              prop
            for (prop in childConfig) {
              if (hasOwnProp(childConfig, prop)) {
                if (
                  isObject(parentConfig[prop]) &&
                  isObject(childConfig[prop])
                ) {
                  res[prop] = {}
                  extend(res[prop], parentConfig[prop])
                  extend(res[prop], childConfig[prop])
                } else if (childConfig[prop] != null) {
                  res[prop] = childConfig[prop]
                } else {
                  delete res[prop]
                }
              }
            }
            for (prop in parentConfig) {
              if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
              ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop])
              }
            }
            return res
          }

          function Locale(config) {
            if (config != null) {
              this.set(config)
            }
          }

          var keys

          if (Object.keys) {
            keys = Object.keys
          } else {
            keys = function (obj) {
              var i,
                res = []
              for (i in obj) {
                if (hasOwnProp(obj, i)) {
                  res.push(i)
                }
              }
              return res
            }
          }

          var defaultCalendar = {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
          }

          function calendar(key, mom, now) {
            var output = this._calendar[key] || this._calendar['sameElse']
            return isFunction(output) ? output.call(mom, now) : output
          }

          function zeroFill(number, targetLength, forceSign) {
            var absNumber = '' + Math.abs(number),
              zerosToFill = targetLength - absNumber.length,
              sign = number >= 0
            return (
              (sign ? (forceSign ? '+' : '') : '-') +
              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
              absNumber
            )
          }

          var formattingTokens =
              /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
            localFormattingTokens =
              /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
            formatFunctions = {},
            formatTokenFunctions = {}

          // token:    'M'
          // padded:   ['MM', 2]
          // ordinal:  'Mo'
          // callback: function () { this.month() + 1 }
          function addFormatToken(token, padded, ordinal, callback) {
            var func = callback
            if (typeof callback === 'string') {
              func = function () {
                return this[callback]()
              }
            }
            if (token) {
              formatTokenFunctions[token] = func
            }
            if (padded) {
              formatTokenFunctions[padded[0]] = function () {
                return zeroFill(
                  func.apply(this, arguments),
                  padded[1],
                  padded[2]
                )
              }
            }
            if (ordinal) {
              formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                  func.apply(this, arguments),
                  token
                )
              }
            }
          }

          function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
              return input.replace(/^\[|\]$/g, '')
            }
            return input.replace(/\\/g, '')
          }

          function makeFormatFunction(format) {
            var array = format.match(formattingTokens),
              i,
              length

            for (i = 0, length = array.length; i < length; i++) {
              if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]]
              } else {
                array[i] = removeFormattingTokens(array[i])
              }
            }

            return function (mom) {
              var output = '',
                i
              for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                  ? array[i].call(mom, format)
                  : array[i]
              }
              return output
            }
          }

          // format date using native date object
          function formatMoment(m, format) {
            if (!m.isValid()) {
              return m.localeData().invalidDate()
            }

            format = expandFormat(format, m.localeData())
            formatFunctions[format] =
              formatFunctions[format] || makeFormatFunction(format)

            return formatFunctions[format](m)
          }

          function expandFormat(format, locale) {
            var i = 5

            function replaceLongDateFormatTokens(input) {
              return locale.longDateFormat(input) || input
            }

            localFormattingTokens.lastIndex = 0
            while (i >= 0 && localFormattingTokens.test(format)) {
              format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
              )
              localFormattingTokens.lastIndex = 0
              i -= 1
            }

            return format
          }

          var defaultLongDateFormat = {
            LTS: 'h:mm:ss A',
            LT: 'h:mm A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
          }

          function longDateFormat(key) {
            var format = this._longDateFormat[key],
              formatUpper = this._longDateFormat[key.toUpperCase()]

            if (format || !formatUpper) {
              return format
            }

            this._longDateFormat[key] = formatUpper
              .match(formattingTokens)
              .map(function (tok) {
                if (
                  tok === 'MMMM' ||
                  tok === 'MM' ||
                  tok === 'DD' ||
                  tok === 'dddd'
                ) {
                  return tok.slice(1)
                }
                return tok
              })
              .join('')

            return this._longDateFormat[key]
          }

          var defaultInvalidDate = 'Invalid date'

          function invalidDate() {
            return this._invalidDate
          }

          var defaultOrdinal = '%d',
            defaultDayOfMonthOrdinalParse = /\d{1,2}/

          function ordinal(number) {
            return this._ordinal.replace('%d', number)
          }

          var defaultRelativeTime = {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            w: 'a week',
            ww: '%d weeks',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
          }

          function relativeTime(number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string]
            return isFunction(output)
              ? output(number, withoutSuffix, string, isFuture)
              : output.replace(/%d/i, number)
          }

          function pastFuture(diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past']
            return isFunction(format)
              ? format(output)
              : format.replace(/%s/i, output)
          }

          var aliases = {}

          function addUnitAlias(unit, shorthand) {
            var lowerCase = unit.toLowerCase()
            aliases[lowerCase] =
              aliases[lowerCase + 's'] =
              aliases[shorthand] =
                unit
          }

          function normalizeUnits(units) {
            return typeof units === 'string'
              ? aliases[units] || aliases[units.toLowerCase()]
              : undefined
          }

          function normalizeObjectUnits(inputObject) {
            var normalizedInput = {},
              normalizedProp,
              prop

            for (prop in inputObject) {
              if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop)
                if (normalizedProp) {
                  normalizedInput[normalizedProp] = inputObject[prop]
                }
              }
            }

            return normalizedInput
          }

          var priorities = {}

          function addUnitPriority(unit, priority) {
            priorities[unit] = priority
          }

          function getPrioritizedUnits(unitsObj) {
            var units = [],
              u
            for (u in unitsObj) {
              if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] })
              }
            }
            units.sort(function (a, b) {
              return a.priority - b.priority
            })
            return units
          }

          function isLeapYear(year) {
            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0
          }

          function absFloor(number) {
            if (number < 0) {
              // -0 -> 0
              return Math.ceil(number) || 0
            } else {
              return Math.floor(number)
            }
          }

          function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
              value = 0

            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
              value = absFloor(coercedNumber)
            }

            return value
          }

          function makeGetSet(unit, keepTime) {
            return function (value) {
              if (value != null) {
                set$1(this, unit, value)
                hooks.updateOffset(this, keepTime)
                return this
              } else {
                return get(this, unit)
              }
            }
          }

          function get(mom, unit) {
            return mom.isValid()
              ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
              : NaN
          }

          function set$1(mom, unit, value) {
            if (mom.isValid() && !isNaN(value)) {
              if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
              ) {
                value = toInt(value)
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                  value,
                  mom.month(),
                  daysInMonth(value, mom.month())
                )
              } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value)
              }
            }
          }

          // MOMENTS

          function stringGet(units) {
            units = normalizeUnits(units)
            if (isFunction(this[units])) {
              return this[units]()
            }
            return this
          }

          function stringSet(units, value) {
            if (typeof units === 'object') {
              units = normalizeObjectUnits(units)
              var prioritized = getPrioritizedUnits(units),
                i
              for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit])
              }
            } else {
              units = normalizeUnits(units)
              if (isFunction(this[units])) {
                return this[units](value)
              }
            }
            return this
          }

          var match1 = /\d/, //       0 - 9
            match2 = /\d\d/, //      00 - 99
            match3 = /\d{3}/, //     000 - 999
            match4 = /\d{4}/, //    0000 - 9999
            match6 = /[+-]?\d{6}/, // -999999 - 999999
            match1to2 = /\d\d?/, //       0 - 99
            match3to4 = /\d\d\d\d?/, //     999 - 9999
            match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
            match1to3 = /\d{1,3}/, //       0 - 999
            match1to4 = /\d{1,4}/, //       0 - 9999
            match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
            matchUnsigned = /\d+/, //       0 - inf
            matchSigned = /[+-]?\d+/, //    -inf - inf
            matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
            matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
            matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
            // any word (or two) characters or numbers including two/three word month in arabic.
            // includes scottish gaelic two word and hyphenated months
            matchWord =
              /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
            regexes

          regexes = {}

          function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex)
              ? regex
              : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex
                }
          }

          function getParseRegexForToken(token, config) {
            if (!hasOwnProp(regexes, token)) {
              return new RegExp(unescapeFormat(token))
            }

            return regexes[token](config._strict, config._locale)
          }

          // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
          function unescapeFormat(s) {
            return regexEscape(
              s
                .replace('\\', '')
                .replace(
                  /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                  function (matched, p1, p2, p3, p4) {
                    return p1 || p2 || p3 || p4
                  }
                )
            )
          }

          function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
          }

          var tokens = {}

          function addParseToken(token, callback) {
            var i,
              func = callback
            if (typeof token === 'string') {
              token = [token]
            }
            if (isNumber(callback)) {
              func = function (input, array) {
                array[callback] = toInt(input)
              }
            }
            for (i = 0; i < token.length; i++) {
              tokens[token[i]] = func
            }
          }

          function addWeekParseToken(token, callback) {
            addParseToken(token, function (input, array, config, token) {
              config._w = config._w || {}
              callback(input, config._w, config, token)
            })
          }

          function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
              tokens[token](input, config._a, config, token)
            }
          }

          var YEAR = 0,
            MONTH = 1,
            DATE = 2,
            HOUR = 3,
            MINUTE = 4,
            SECOND = 5,
            MILLISECOND = 6,
            WEEK = 7,
            WEEKDAY = 8

          function mod(n, x) {
            return ((n % x) + x) % x
          }

          var indexOf

          if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf
          } else {
            indexOf = function (o) {
              // I know
              var i
              for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                  return i
                }
              }
              return -1
            }
          }

          function daysInMonth(year, month) {
            if (isNaN(year) || isNaN(month)) {
              return NaN
            }
            var modMonth = mod(month, 12)
            year += (month - modMonth) / 12
            return modMonth === 1
              ? isLeapYear(year)
                ? 29
                : 28
              : 31 - ((modMonth % 7) % 2)
          }

          // FORMATTING

          addFormatToken('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1
          })

          addFormatToken('MMM', 0, 0, function (format) {
            return this.localeData().monthsShort(this, format)
          })

          addFormatToken('MMMM', 0, 0, function (format) {
            return this.localeData().months(this, format)
          })

          // ALIASES

          addUnitAlias('month', 'M')

          // PRIORITY

          addUnitPriority('month', 8)

          // PARSING

          addRegexToken('M', match1to2)
          addRegexToken('MM', match1to2, match2)
          addRegexToken('MMM', function (isStrict, locale) {
            return locale.monthsShortRegex(isStrict)
          })
          addRegexToken('MMMM', function (isStrict, locale) {
            return locale.monthsRegex(isStrict)
          })

          addParseToken(['M', 'MM'], function (input, array) {
            array[MONTH] = toInt(input) - 1
          })

          addParseToken(
            ['MMM', 'MMMM'],
            function (input, array, config, token) {
              var month = config._locale.monthsParse(
                input,
                token,
                config._strict
              )
              // if we didn't find a month name, mark the date as invalid.
              if (month != null) {
                array[MONTH] = month
              } else {
                getParsingFlags(config).invalidMonth = input
              }
            }
          )

          // LOCALES

          var defaultLocaleMonths =
              'January_February_March_April_May_June_July_August_September_October_November_December'.split(
                '_'
              ),
            defaultLocaleMonthsShort =
              'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
            MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
            defaultMonthsShortRegex = matchWord,
            defaultMonthsRegex = matchWord

          function localeMonths(m, format) {
            if (!m) {
              return isArray(this._months)
                ? this._months
                : this._months['standalone']
            }
            return isArray(this._months)
              ? this._months[m.month()]
              : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                    ? 'format'
                    : 'standalone'
                ][m.month()]
          }

          function localeMonthsShort(m, format) {
            if (!m) {
              return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone']
            }
            return isArray(this._monthsShort)
              ? this._monthsShort[m.month()]
              : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
                ][m.month()]
          }

          function handleStrictParse(monthName, format, strict) {
            var i,
              ii,
              mom,
              llc = monthName.toLocaleLowerCase()
            if (!this._monthsParse) {
              // this is not used
              this._monthsParse = []
              this._longMonthsParse = []
              this._shortMonthsParse = []
              for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i])
                this._shortMonthsParse[i] = this.monthsShort(
                  mom,
                  ''
                ).toLocaleLowerCase()
                this._longMonthsParse[i] = this.months(
                  mom,
                  ''
                ).toLocaleLowerCase()
              }
            }

            if (strict) {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc)
                return ii !== -1 ? ii : null
              } else {
                ii = indexOf.call(this._longMonthsParse, llc)
                return ii !== -1 ? ii : null
              }
            } else {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._longMonthsParse, llc)
                return ii !== -1 ? ii : null
              } else {
                ii = indexOf.call(this._longMonthsParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._shortMonthsParse, llc)
                return ii !== -1 ? ii : null
              }
            }
          }

          function localeMonthsParse(monthName, format, strict) {
            var i, mom, regex

            if (this._monthsParseExact) {
              return handleStrictParse.call(this, monthName, format, strict)
            }

            if (!this._monthsParse) {
              this._monthsParse = []
              this._longMonthsParse = []
              this._shortMonthsParse = []
            }

            // TODO: add sorting
            // Sorting makes sure if one month (or abbr) is a prefix of another
            // see sorting in computeMonthsParse
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i])
              if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                  '^' + this.months(mom, '').replace('.', '') + '$',
                  'i'
                )
                this._shortMonthsParse[i] = new RegExp(
                  '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                  'i'
                )
              }
              if (!strict && !this._monthsParse[i]) {
                regex =
                  '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '')
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i')
              }
              // test the regex
              if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
              ) {
                return i
              } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
              ) {
                return i
              } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i
              }
            }
          }

          // MOMENTS

          function setMonth(mom, value) {
            var dayOfMonth

            if (!mom.isValid()) {
              // No op
              return mom
            }

            if (typeof value === 'string') {
              if (/^\d+$/.test(value)) {
                value = toInt(value)
              } else {
                value = mom.localeData().monthsParse(value)
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                  return mom
                }
              }
            }

            dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value))
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](
              value,
              dayOfMonth
            )
            return mom
          }

          function getSetMonth(value) {
            if (value != null) {
              setMonth(this, value)
              hooks.updateOffset(this, true)
              return this
            } else {
              return get(this, 'Month')
            }
          }

          function getDaysInMonth() {
            return daysInMonth(this.year(), this.month())
          }

          function monthsShortRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this)
              }
              if (isStrict) {
                return this._monthsShortStrictRegex
              } else {
                return this._monthsShortRegex
              }
            } else {
              if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex
              }
              return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex
            }
          }

          function monthsRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this)
              }
              if (isStrict) {
                return this._monthsStrictRegex
              } else {
                return this._monthsRegex
              }
            } else {
              if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex
              }
              return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex
            }
          }

          function computeMonthsParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length
            }

            var shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom
            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i])
              shortPieces.push(this.monthsShort(mom, ''))
              longPieces.push(this.months(mom, ''))
              mixedPieces.push(this.months(mom, ''))
              mixedPieces.push(this.monthsShort(mom, ''))
            }
            // Sorting makes sure if one month (or abbr) is a prefix of another it
            // will match the longer piece.
            shortPieces.sort(cmpLenRev)
            longPieces.sort(cmpLenRev)
            mixedPieces.sort(cmpLenRev)
            for (i = 0; i < 12; i++) {
              shortPieces[i] = regexEscape(shortPieces[i])
              longPieces[i] = regexEscape(longPieces[i])
            }
            for (i = 0; i < 24; i++) {
              mixedPieces[i] = regexEscape(mixedPieces[i])
            }

            this._monthsRegex = new RegExp(
              '^(' + mixedPieces.join('|') + ')',
              'i'
            )
            this._monthsShortRegex = this._monthsRegex
            this._monthsStrictRegex = new RegExp(
              '^(' + longPieces.join('|') + ')',
              'i'
            )
            this._monthsShortStrictRegex = new RegExp(
              '^(' + shortPieces.join('|') + ')',
              'i'
            )
          }

          // FORMATTING

          addFormatToken('Y', 0, 0, function () {
            var y = this.year()
            return y <= 9999 ? zeroFill(y, 4) : '+' + y
          })

          addFormatToken(0, ['YY', 2], 0, function () {
            return this.year() % 100
          })

          addFormatToken(0, ['YYYY', 4], 0, 'year')
          addFormatToken(0, ['YYYYY', 5], 0, 'year')
          addFormatToken(0, ['YYYYYY', 6, true], 0, 'year')

          // ALIASES

          addUnitAlias('year', 'y')

          // PRIORITIES

          addUnitPriority('year', 1)

          // PARSING

          addRegexToken('Y', matchSigned)
          addRegexToken('YY', match1to2, match2)
          addRegexToken('YYYY', match1to4, match4)
          addRegexToken('YYYYY', match1to6, match6)
          addRegexToken('YYYYYY', match1to6, match6)

          addParseToken(['YYYYY', 'YYYYYY'], YEAR)
          addParseToken('YYYY', function (input, array) {
            array[YEAR] =
              input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input)
          })
          addParseToken('YY', function (input, array) {
            array[YEAR] = hooks.parseTwoDigitYear(input)
          })
          addParseToken('Y', function (input, array) {
            array[YEAR] = parseInt(input, 10)
          })

          // HELPERS

          function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365
          }

          // HOOKS

          hooks.parseTwoDigitYear = function (input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000)
          }

          // MOMENTS

          var getSetYear = makeGetSet('FullYear', true)

          function getIsLeapYear() {
            return isLeapYear(this.year())
          }

          function createDate(y, m, d, h, M, s, ms) {
            // can't just apply() to create a date:
            // https://stackoverflow.com/q/181348
            var date
            // the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              date = new Date(y + 400, m, d, h, M, s, ms)
              if (isFinite(date.getFullYear())) {
                date.setFullYear(y)
              }
            } else {
              date = new Date(y, m, d, h, M, s, ms)
            }

            return date
          }

          function createUTCDate(y) {
            var date, args
            // the Date.UTC function remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              args = Array.prototype.slice.call(arguments)
              // preserve leap years using a full 400 year cycle, then reset
              args[0] = y + 400
              date = new Date(Date.UTC.apply(null, args))
              if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y)
              }
            } else {
              date = new Date(Date.UTC.apply(null, arguments))
            }

            return date
          }

          // start-of-first-week - start-of-year
          function firstWeekOffset(year, dow, doy) {
            var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
              fwd = 7 + dow - doy,
              // first-week day local weekday -- which local weekday is fwd
              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7

            return -fwdlw + fwd - 1
          }

          // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
          function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7,
              weekOffset = firstWeekOffset(year, dow, doy),
              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
              resYear,
              resDayOfYear

            if (dayOfYear <= 0) {
              resYear = year - 1
              resDayOfYear = daysInYear(resYear) + dayOfYear
            } else if (dayOfYear > daysInYear(year)) {
              resYear = year + 1
              resDayOfYear = dayOfYear - daysInYear(year)
            } else {
              resYear = year
              resDayOfYear = dayOfYear
            }

            return {
              year: resYear,
              dayOfYear: resDayOfYear,
            }
          }

          function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy),
              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
              resWeek,
              resYear

            if (week < 1) {
              resYear = mom.year() - 1
              resWeek = week + weeksInYear(resYear, dow, doy)
            } else if (week > weeksInYear(mom.year(), dow, doy)) {
              resWeek = week - weeksInYear(mom.year(), dow, doy)
              resYear = mom.year() + 1
            } else {
              resYear = mom.year()
              resWeek = week
            }

            return {
              week: resWeek,
              year: resYear,
            }
          }

          function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
              weekOffsetNext = firstWeekOffset(year + 1, dow, doy)
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7
          }

          // FORMATTING

          addFormatToken('w', ['ww', 2], 'wo', 'week')
          addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek')

          // ALIASES

          addUnitAlias('week', 'w')
          addUnitAlias('isoWeek', 'W')

          // PRIORITIES

          addUnitPriority('week', 5)
          addUnitPriority('isoWeek', 5)

          // PARSING

          addRegexToken('w', match1to2)
          addRegexToken('ww', match1to2, match2)
          addRegexToken('W', match1to2)
          addRegexToken('WW', match1to2, match2)

          addWeekParseToken(
            ['w', 'ww', 'W', 'WW'],
            function (input, week, config, token) {
              week[token.substr(0, 1)] = toInt(input)
            }
          )

          // HELPERS

          // LOCALES

          function localeWeek(mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week
          }

          var defaultLocaleWeek = {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
          }

          function localeFirstDayOfWeek() {
            return this._week.dow
          }

          function localeFirstDayOfYear() {
            return this._week.doy
          }

          // MOMENTS

          function getSetWeek(input) {
            var week = this.localeData().week(this)
            return input == null ? week : this.add((input - week) * 7, 'd')
          }

          function getSetISOWeek(input) {
            var week = weekOfYear(this, 1, 4).week
            return input == null ? week : this.add((input - week) * 7, 'd')
          }

          // FORMATTING

          addFormatToken('d', 0, 'do', 'day')

          addFormatToken('dd', 0, 0, function (format) {
            return this.localeData().weekdaysMin(this, format)
          })

          addFormatToken('ddd', 0, 0, function (format) {
            return this.localeData().weekdaysShort(this, format)
          })

          addFormatToken('dddd', 0, 0, function (format) {
            return this.localeData().weekdays(this, format)
          })

          addFormatToken('e', 0, 0, 'weekday')
          addFormatToken('E', 0, 0, 'isoWeekday')

          // ALIASES

          addUnitAlias('day', 'd')
          addUnitAlias('weekday', 'e')
          addUnitAlias('isoWeekday', 'E')

          // PRIORITY
          addUnitPriority('day', 11)
          addUnitPriority('weekday', 11)
          addUnitPriority('isoWeekday', 11)

          // PARSING

          addRegexToken('d', match1to2)
          addRegexToken('e', match1to2)
          addRegexToken('E', match1to2)
          addRegexToken('dd', function (isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict)
          })
          addRegexToken('ddd', function (isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict)
          })
          addRegexToken('dddd', function (isStrict, locale) {
            return locale.weekdaysRegex(isStrict)
          })

          addWeekParseToken(
            ['dd', 'ddd', 'dddd'],
            function (input, week, config, token) {
              var weekday = config._locale.weekdaysParse(
                input,
                token,
                config._strict
              )
              // if we didn't get a weekday name, mark the date as invalid
              if (weekday != null) {
                week.d = weekday
              } else {
                getParsingFlags(config).invalidWeekday = input
              }
            }
          )

          addWeekParseToken(
            ['d', 'e', 'E'],
            function (input, week, config, token) {
              week[token] = toInt(input)
            }
          )

          // HELPERS

          function parseWeekday(input, locale) {
            if (typeof input !== 'string') {
              return input
            }

            if (!isNaN(input)) {
              return parseInt(input, 10)
            }

            input = locale.weekdaysParse(input)
            if (typeof input === 'number') {
              return input
            }

            return null
          }

          function parseIsoWeekday(input, locale) {
            if (typeof input === 'string') {
              return locale.weekdaysParse(input) % 7 || 7
            }
            return isNaN(input) ? null : input
          }

          // LOCALES
          function shiftWeekdays(ws, n) {
            return ws.slice(n, 7).concat(ws.slice(0, n))
          }

          var defaultLocaleWeekdays =
              'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
                '_'
              ),
            defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(
              '_'
            ),
            defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
            defaultWeekdaysRegex = matchWord,
            defaultWeekdaysShortRegex = matchWord,
            defaultWeekdaysMinRegex = matchWord

          function localeWeekdays(m, format) {
            var weekdays = isArray(this._weekdays)
              ? this._weekdays
              : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                    ? 'format'
                    : 'standalone'
                ]
            return m === true
              ? shiftWeekdays(weekdays, this._week.dow)
              : m
              ? weekdays[m.day()]
              : weekdays
          }

          function localeWeekdaysShort(m) {
            return m === true
              ? shiftWeekdays(this._weekdaysShort, this._week.dow)
              : m
              ? this._weekdaysShort[m.day()]
              : this._weekdaysShort
          }

          function localeWeekdaysMin(m) {
            return m === true
              ? shiftWeekdays(this._weekdaysMin, this._week.dow)
              : m
              ? this._weekdaysMin[m.day()]
              : this._weekdaysMin
          }

          function handleStrictParse$1(weekdayName, format, strict) {
            var i,
              ii,
              mom,
              llc = weekdayName.toLocaleLowerCase()
            if (!this._weekdaysParse) {
              this._weekdaysParse = []
              this._shortWeekdaysParse = []
              this._minWeekdaysParse = []

              for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i)
                this._minWeekdaysParse[i] = this.weekdaysMin(
                  mom,
                  ''
                ).toLocaleLowerCase()
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                  mom,
                  ''
                ).toLocaleLowerCase()
                this._weekdaysParse[i] = this.weekdays(
                  mom,
                  ''
                ).toLocaleLowerCase()
              }
            }

            if (strict) {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc)
                return ii !== -1 ? ii : null
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc)
                return ii !== -1 ? ii : null
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc)
                return ii !== -1 ? ii : null
              }
            } else {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._minWeekdaysParse, llc)
                return ii !== -1 ? ii : null
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._weekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._minWeekdaysParse, llc)
                return ii !== -1 ? ii : null
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._weekdaysParse, llc)
                if (ii !== -1) {
                  return ii
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc)
                return ii !== -1 ? ii : null
              }
            }
          }

          function localeWeekdaysParse(weekdayName, format, strict) {
            var i, mom, regex

            if (this._weekdaysParseExact) {
              return handleStrictParse$1.call(this, weekdayName, format, strict)
            }

            if (!this._weekdaysParse) {
              this._weekdaysParse = []
              this._minWeekdaysParse = []
              this._shortWeekdaysParse = []
              this._fullWeekdaysParse = []
            }

            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already

              mom = createUTC([2000, 1]).day(i)
              if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                  'i'
                )
                this._shortWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                  'i'
                )
                this._minWeekdaysParse[i] = new RegExp(
                  '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                  'i'
                )
              }
              if (!this._weekdaysParse[i]) {
                regex =
                  '^' +
                  this.weekdays(mom, '') +
                  '|^' +
                  this.weekdaysShort(mom, '') +
                  '|^' +
                  this.weekdaysMin(mom, '')
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i')
              }
              // test the regex
              if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
              ) {
                return i
              } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
              ) {
                return i
              } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
              ) {
                return i
              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i
              }
            }
          }

          // MOMENTS

          function getSetDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN
            }
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay()
            if (input != null) {
              input = parseWeekday(input, this.localeData())
              return this.add(input - day, 'd')
            } else {
              return day
            }
          }

          function getSetLocaleDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN
            }
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7
            return input == null ? weekday : this.add(input - weekday, 'd')
          }

          function getSetISODayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN
            }

            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.

            if (input != null) {
              var weekday = parseIsoWeekday(input, this.localeData())
              return this.day(this.day() % 7 ? weekday : weekday - 7)
            } else {
              return this.day() || 7
            }
          }

          function weekdaysRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this)
              }
              if (isStrict) {
                return this._weekdaysStrictRegex
              } else {
                return this._weekdaysRegex
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex
              }
              return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex
            }
          }

          function weekdaysShortRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this)
              }
              if (isStrict) {
                return this._weekdaysShortStrictRegex
              } else {
                return this._weekdaysShortRegex
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex
              }
              return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex
            }
          }

          function weekdaysMinRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this)
              }
              if (isStrict) {
                return this._weekdaysMinStrictRegex
              } else {
                return this._weekdaysMinRegex
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex
              }
              return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex
            }
          }

          function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length
            }

            var minPieces = [],
              shortPieces = [],
              longPieces = [],
              mixedPieces = [],
              i,
              mom,
              minp,
              shortp,
              longp
            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, 1]).day(i)
              minp = regexEscape(this.weekdaysMin(mom, ''))
              shortp = regexEscape(this.weekdaysShort(mom, ''))
              longp = regexEscape(this.weekdays(mom, ''))
              minPieces.push(minp)
              shortPieces.push(shortp)
              longPieces.push(longp)
              mixedPieces.push(minp)
              mixedPieces.push(shortp)
              mixedPieces.push(longp)
            }
            // Sorting makes sure if one weekday (or abbr) is a prefix of another it
            // will match the longer piece.
            minPieces.sort(cmpLenRev)
            shortPieces.sort(cmpLenRev)
            longPieces.sort(cmpLenRev)
            mixedPieces.sort(cmpLenRev)

            this._weekdaysRegex = new RegExp(
              '^(' + mixedPieces.join('|') + ')',
              'i'
            )
            this._weekdaysShortRegex = this._weekdaysRegex
            this._weekdaysMinRegex = this._weekdaysRegex

            this._weekdaysStrictRegex = new RegExp(
              '^(' + longPieces.join('|') + ')',
              'i'
            )
            this._weekdaysShortStrictRegex = new RegExp(
              '^(' + shortPieces.join('|') + ')',
              'i'
            )
            this._weekdaysMinStrictRegex = new RegExp(
              '^(' + minPieces.join('|') + ')',
              'i'
            )
          }

          // FORMATTING

          function hFormat() {
            return this.hours() % 12 || 12
          }

          function kFormat() {
            return this.hours() || 24
          }

          addFormatToken('H', ['HH', 2], 0, 'hour')
          addFormatToken('h', ['hh', 2], 0, hFormat)
          addFormatToken('k', ['kk', 2], 0, kFormat)

          addFormatToken('hmm', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2)
          })

          addFormatToken('hmmss', 0, 0, function () {
            return (
              '' +
              hFormat.apply(this) +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            )
          })

          addFormatToken('Hmm', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2)
          })

          addFormatToken('Hmmss', 0, 0, function () {
            return (
              '' +
              this.hours() +
              zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2)
            )
          })

          function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function () {
              return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
              )
            })
          }

          meridiem('a', true)
          meridiem('A', false)

          // ALIASES

          addUnitAlias('hour', 'h')

          // PRIORITY
          addUnitPriority('hour', 13)

          // PARSING

          function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse
          }

          addRegexToken('a', matchMeridiem)
          addRegexToken('A', matchMeridiem)
          addRegexToken('H', match1to2)
          addRegexToken('h', match1to2)
          addRegexToken('k', match1to2)
          addRegexToken('HH', match1to2, match2)
          addRegexToken('hh', match1to2, match2)
          addRegexToken('kk', match1to2, match2)

          addRegexToken('hmm', match3to4)
          addRegexToken('hmmss', match5to6)
          addRegexToken('Hmm', match3to4)
          addRegexToken('Hmmss', match5to6)

          addParseToken(['H', 'HH'], HOUR)
          addParseToken(['k', 'kk'], function (input, array, config) {
            var kInput = toInt(input)
            array[HOUR] = kInput === 24 ? 0 : kInput
          })
          addParseToken(['a', 'A'], function (input, array, config) {
            config._isPm = config._locale.isPM(input)
            config._meridiem = input
          })
          addParseToken(['h', 'hh'], function (input, array, config) {
            array[HOUR] = toInt(input)
            getParsingFlags(config).bigHour = true
          })
          addParseToken('hmm', function (input, array, config) {
            var pos = input.length - 2
            array[HOUR] = toInt(input.substr(0, pos))
            array[MINUTE] = toInt(input.substr(pos))
            getParsingFlags(config).bigHour = true
          })
          addParseToken('hmmss', function (input, array, config) {
            var pos1 = input.length - 4,
              pos2 = input.length - 2
            array[HOUR] = toInt(input.substr(0, pos1))
            array[MINUTE] = toInt(input.substr(pos1, 2))
            array[SECOND] = toInt(input.substr(pos2))
            getParsingFlags(config).bigHour = true
          })
          addParseToken('Hmm', function (input, array, config) {
            var pos = input.length - 2
            array[HOUR] = toInt(input.substr(0, pos))
            array[MINUTE] = toInt(input.substr(pos))
          })
          addParseToken('Hmmss', function (input, array, config) {
            var pos1 = input.length - 4,
              pos2 = input.length - 2
            array[HOUR] = toInt(input.substr(0, pos1))
            array[MINUTE] = toInt(input.substr(pos1, 2))
            array[SECOND] = toInt(input.substr(pos2))
          })

          // LOCALES

          function localeIsPM(input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return (input + '').toLowerCase().charAt(0) === 'p'
          }

          var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
            // Setting the hour should keep the time, because the user explicitly
            // specified which hour they want. So trying to maintain the same hour (in
            // a new timezone) makes sense. Adding/subtracting hours does not follow
            // this rule.
            getSetHour = makeGetSet('Hours', true)

          function localeMeridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'pm' : 'PM'
            } else {
              return isLower ? 'am' : 'AM'
            }
          }

          var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
            relativeTime: defaultRelativeTime,

            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,

            week: defaultLocaleWeek,

            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,

            meridiemParse: defaultLocaleMeridiemParse,
          }

          // internal storage for locale config files
          var locales = {},
            localeFamilies = {},
            globalLocale

          function commonPrefix(arr1, arr2) {
            var i,
              minl = Math.min(arr1.length, arr2.length)
            for (i = 0; i < minl; i += 1) {
              if (arr1[i] !== arr2[i]) {
                return i
              }
            }
            return minl
          }

          function normalizeLocale(key) {
            return key ? key.toLowerCase().replace('_', '-') : key
          }

          // pick the locale from the array
          // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
          // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
          function chooseLocale(names) {
            var i = 0,
              j,
              next,
              locale,
              split

            while (i < names.length) {
              split = normalizeLocale(names[i]).split('-')
              j = split.length
              next = normalizeLocale(names[i + 1])
              next = next ? next.split('-') : null
              while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'))
                if (locale) {
                  return locale
                }
                if (
                  next &&
                  next.length >= j &&
                  commonPrefix(split, next) >= j - 1
                ) {
                  //the next array item is better than a shallower substring of this one
                  break
                }
                j--
              }
              i++
            }
            return globalLocale
          }

          function loadLocale(name) {
            var oldLocale = null,
              aliasedRequire
            // TODO: Find a better way to register and load all the locales in Node
            if (
              locales[name] === undefined &&
              'object' !== 'undefined' &&
              module &&
              module.exports
            ) {
              try {
                oldLocale = globalLocale._abbr
                aliasedRequire = undefined
                __webpack_require__(
                  './node_modules/moment/locale sync recursive ^\\.\\/.*$'
                )('./' + name)
                getSetGlobalLocale(oldLocale)
              } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null // null means not found
              }
            }
            return locales[name]
          }

          // This function will load locale and then set the global locale.  If
          // no arguments are passed in, it will simply return the current global
          // locale key.
          function getSetGlobalLocale(key, values) {
            var data
            if (key) {
              if (isUndefined(values)) {
                data = getLocale(key)
              } else {
                data = defineLocale(key, values)
              }

              if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data
              } else {
                if (typeof console !== 'undefined' && console.warn) {
                  //warn user if arguments are passed but the locale could not be set
                  console.warn(
                    'Locale ' + key + ' not found. Did you forget to load it?'
                  )
                }
              }
            }

            return globalLocale._abbr
          }

          function defineLocale(name, config) {
            if (config !== null) {
              var locale,
                parentConfig = baseConfig
              config.abbr = name
              if (locales[name] != null) {
                deprecateSimple(
                  'defineLocaleOverride',
                  'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                )
                parentConfig = locales[name]._config
              } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                  parentConfig = locales[config.parentLocale]._config
                } else {
                  locale = loadLocale(config.parentLocale)
                  if (locale != null) {
                    parentConfig = locale._config
                  } else {
                    if (!localeFamilies[config.parentLocale]) {
                      localeFamilies[config.parentLocale] = []
                    }
                    localeFamilies[config.parentLocale].push({
                      name: name,
                      config: config,
                    })
                    return null
                  }
                }
              }
              locales[name] = new Locale(mergeConfigs(parentConfig, config))

              if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                  defineLocale(x.name, x.config)
                })
              }

              // backwards compat for now: also set the locale
              // make sure we set the locale AFTER all child locales have been
              // created, so we won't end up with the child locale set.
              getSetGlobalLocale(name)

              return locales[name]
            } else {
              // useful for testing
              delete locales[name]
              return null
            }
          }

          function updateLocale(name, config) {
            if (config != null) {
              var locale,
                tmpLocale,
                parentConfig = baseConfig

              if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config))
              } else {
                // MERGE
                tmpLocale = loadLocale(name)
                if (tmpLocale != null) {
                  parentConfig = tmpLocale._config
                }
                config = mergeConfigs(parentConfig, config)
                if (tmpLocale == null) {
                  // updateLocale is called for creating a new locale
                  // Set abbr so it will have a name (getters return
                  // undefined otherwise).
                  config.abbr = name
                }
                locale = new Locale(config)
                locale.parentLocale = locales[name]
                locales[name] = locale
              }

              // backwards compat for now: also set the locale
              getSetGlobalLocale(name)
            } else {
              // pass null for config to unupdate, useful for tests
              if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                  locales[name] = locales[name].parentLocale
                  if (name === getSetGlobalLocale()) {
                    getSetGlobalLocale(name)
                  }
                } else if (locales[name] != null) {
                  delete locales[name]
                }
              }
            }
            return locales[name]
          }

          // returns locale data
          function getLocale(key) {
            var locale

            if (key && key._locale && key._locale._abbr) {
              key = key._locale._abbr
            }

            if (!key) {
              return globalLocale
            }

            if (!isArray(key)) {
              //short-circuit everything else
              locale = loadLocale(key)
              if (locale) {
                return locale
              }
              key = [key]
            }

            return chooseLocale(key)
          }

          function listLocales() {
            return keys(locales)
          }

          function checkOverflow(m) {
            var overflow,
              a = m._a

            if (a && getParsingFlags(m).overflow === -2) {
              overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                  ? MONTH
                  : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                  ? DATE
                  : a[HOUR] < 0 ||
                    a[HOUR] > 24 ||
                    (a[HOUR] === 24 &&
                      (a[MINUTE] !== 0 ||
                        a[SECOND] !== 0 ||
                        a[MILLISECOND] !== 0))
                  ? HOUR
                  : a[MINUTE] < 0 || a[MINUTE] > 59
                  ? MINUTE
                  : a[SECOND] < 0 || a[SECOND] > 59
                  ? SECOND
                  : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                  ? MILLISECOND
                  : -1

              if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
              ) {
                overflow = DATE
              }
              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK
              }
              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY
              }

              getParsingFlags(m).overflow = overflow
            }

            return m
          }

          // iso 8601 regex
          // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
          var extendedIsoRegex =
              /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            basicIsoRegex =
              /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
            isoDates = [
              ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
              ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
              ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
              ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
              ['YYYY-DDD', /\d{4}-\d{3}/],
              ['YYYY-MM', /\d{4}-\d\d/, false],
              ['YYYYYYMMDD', /[+-]\d{10}/],
              ['YYYYMMDD', /\d{8}/],
              ['GGGG[W]WWE', /\d{4}W\d{3}/],
              ['GGGG[W]WW', /\d{4}W\d{2}/, false],
              ['YYYYDDD', /\d{7}/],
              ['YYYYMM', /\d{6}/, false],
              ['YYYY', /\d{4}/, false],
            ],
            // iso time formats and regexes
            isoTimes = [
              ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
              ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
              ['HH:mm:ss', /\d\d:\d\d:\d\d/],
              ['HH:mm', /\d\d:\d\d/],
              ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
              ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
              ['HHmmss', /\d\d\d\d\d\d/],
              ['HHmm', /\d\d\d\d/],
              ['HH', /\d\d/],
            ],
            aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
            // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
            rfc2822 =
              /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
            obsOffsets = {
              UT: 0,
              GMT: 0,
              EDT: -4 * 60,
              EST: -5 * 60,
              CDT: -5 * 60,
              CST: -6 * 60,
              MDT: -6 * 60,
              MST: -7 * 60,
              PDT: -7 * 60,
              PST: -8 * 60,
            }

          // date from iso format
          function configFromISO(config) {
            var i,
              l,
              string = config._i,
              match =
                extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
              allowTime,
              dateFormat,
              timeFormat,
              tzFormat

            if (match) {
              getParsingFlags(config).iso = true

              for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                  dateFormat = isoDates[i][0]
                  allowTime = isoDates[i][2] !== false
                  break
                }
              }
              if (dateFormat == null) {
                config._isValid = false
                return
              }
              if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                  if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0]
                    break
                  }
                }
                if (timeFormat == null) {
                  config._isValid = false
                  return
                }
              }
              if (!allowTime && timeFormat != null) {
                config._isValid = false
                return
              }
              if (match[4]) {
                if (tzRegex.exec(match[4])) {
                  tzFormat = 'Z'
                } else {
                  config._isValid = false
                  return
                }
              }
              config._f = dateFormat + (timeFormat || '') + (tzFormat || '')
              configFromStringAndFormat(config)
            } else {
              config._isValid = false
            }
          }

          function extractFromRFC2822Strings(
            yearStr,
            monthStr,
            dayStr,
            hourStr,
            minuteStr,
            secondStr
          ) {
            var result = [
              untruncateYear(yearStr),
              defaultLocaleMonthsShort.indexOf(monthStr),
              parseInt(dayStr, 10),
              parseInt(hourStr, 10),
              parseInt(minuteStr, 10),
            ]

            if (secondStr) {
              result.push(parseInt(secondStr, 10))
            }

            return result
          }

          function untruncateYear(yearStr) {
            var year = parseInt(yearStr, 10)
            if (year <= 49) {
              return 2000 + year
            } else if (year <= 999) {
              return 1900 + year
            }
            return year
          }

          function preprocessRFC2822(s) {
            // Remove comments and folding whitespace and replace multiple-spaces with a single space
            return s
              .replace(/\([^)]*\)|[\n\t]/g, ' ')
              .replace(/(\s\s+)/g, ' ')
              .replace(/^\s\s*/, '')
              .replace(/\s\s*$/, '')
          }

          function checkWeekday(weekdayStr, parsedInput, config) {
            if (weekdayStr) {
              // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
              var weekdayProvided =
                  defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                  parsedInput[0],
                  parsedInput[1],
                  parsedInput[2]
                ).getDay()
              if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true
                config._isValid = false
                return false
              }
            }
            return true
          }

          function calculateOffset(obsOffset, militaryOffset, numOffset) {
            if (obsOffset) {
              return obsOffsets[obsOffset]
            } else if (militaryOffset) {
              // the only allowed military tz is Z
              return 0
            } else {
              var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100
              return h * 60 + m
            }
          }

          // date and time from ref 2822 format
          function configFromRFC2822(config) {
            var match = rfc2822.exec(preprocessRFC2822(config._i)),
              parsedArray
            if (match) {
              parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
              )
              if (!checkWeekday(match[1], parsedArray, config)) {
                return
              }

              config._a = parsedArray
              config._tzm = calculateOffset(match[8], match[9], match[10])

              config._d = createUTCDate.apply(null, config._a)
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm)

              getParsingFlags(config).rfc2822 = true
            } else {
              config._isValid = false
            }
          }

          // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
          function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i)
            if (matched !== null) {
              config._d = new Date(+matched[1])
              return
            }

            configFromISO(config)
            if (config._isValid === false) {
              delete config._isValid
            } else {
              return
            }

            configFromRFC2822(config)
            if (config._isValid === false) {
              delete config._isValid
            } else {
              return
            }

            if (config._strict) {
              config._isValid = false
            } else {
              // Final attempt, use Input Fallback
              hooks.createFromInputFallback(config)
            }
          }

          hooks.createFromInputFallback = deprecate(
            'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
              'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
              'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
            function (config) {
              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''))
            }
          )

          // Pick the first defined of two or three arguments.
          function defaults(a, b, c) {
            if (a != null) {
              return a
            }
            if (b != null) {
              return b
            }
            return c
          }

          function currentDateArray(config) {
            // hooks is actually the exported moment object
            var nowValue = new Date(hooks.now())
            if (config._useUTC) {
              return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
              ]
            }
            return [
              nowValue.getFullYear(),
              nowValue.getMonth(),
              nowValue.getDate(),
            ]
          }

          // convert an array to a date.
          // the array should mirror the parameters below
          // note: all values past the year are optional and will default to the lowest possible value.
          // [year, month, day , hour, minute, second, millisecond]
          function configFromArray(config) {
            var i,
              date,
              input = [],
              currentDate,
              expectedWeekday,
              yearToUse

            if (config._d) {
              return
            }

            currentDate = currentDateArray(config)

            //compute day of the year from weeks and weekdays
            if (
              config._w &&
              config._a[DATE] == null &&
              config._a[MONTH] == null
            ) {
              dayOfYearFromWeekInfo(config)
            }

            //if the day of the year is set, figure out what it is
            if (config._dayOfYear != null) {
              yearToUse = defaults(config._a[YEAR], currentDate[YEAR])

              if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
              ) {
                getParsingFlags(config)._overflowDayOfYear = true
              }

              date = createUTCDate(yearToUse, 0, config._dayOfYear)
              config._a[MONTH] = date.getUTCMonth()
              config._a[DATE] = date.getUTCDate()
            }

            // Default to current date.
            // * if no year, month, day of month are given, default to today
            // * if day of month is given, default month and year
            // * if month is given, default only year
            // * if year is given, don't default anything
            for (i = 0; i < 3 && config._a[i] == null; ++i) {
              config._a[i] = input[i] = currentDate[i]
            }

            // Zero out whatever was not defaulted, including time
            for (; i < 7; i++) {
              config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i]
            }

            // Check for 24:00:00.000
            if (
              config._a[HOUR] === 24 &&
              config._a[MINUTE] === 0 &&
              config._a[SECOND] === 0 &&
              config._a[MILLISECOND] === 0
            ) {
              config._nextDay = true
              config._a[HOUR] = 0
            }

            config._d = (config._useUTC ? createUTCDate : createDate).apply(
              null,
              input
            )
            expectedWeekday = config._useUTC
              ? config._d.getUTCDay()
              : config._d.getDay()

            // Apply timezone offset from input. The actual utcOffset can be changed
            // with parseZone.
            if (config._tzm != null) {
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm)
            }

            if (config._nextDay) {
              config._a[HOUR] = 24
            }

            // check for mismatching day of week
            if (
              config._w &&
              typeof config._w.d !== 'undefined' &&
              config._w.d !== expectedWeekday
            ) {
              getParsingFlags(config).weekdayMismatch = true
            }
          }

          function dayOfYearFromWeekInfo(config) {
            var w,
              weekYear,
              week,
              weekday,
              dow,
              doy,
              temp,
              weekdayOverflow,
              curWeek

            w = config._w
            if (w.GG != null || w.W != null || w.E != null) {
              dow = 1
              doy = 4

              // TODO: We need to take the current isoWeekYear, but that depends on
              // how we interpret now (local, utc, fixed offset). So create
              // a now version of current config (take local/utc/offset flags, and
              // create now).
              weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
              )
              week = defaults(w.W, 1)
              weekday = defaults(w.E, 1)
              if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true
              }
            } else {
              dow = config._locale._week.dow
              doy = config._locale._week.doy

              curWeek = weekOfYear(createLocal(), dow, doy)

              weekYear = defaults(w.gg, config._a[YEAR], curWeek.year)

              // Default to current week.
              week = defaults(w.w, curWeek.week)

              if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d
                if (weekday < 0 || weekday > 6) {
                  weekdayOverflow = true
                }
              } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow
                if (w.e < 0 || w.e > 6) {
                  weekdayOverflow = true
                }
              } else {
                // default to beginning of week
                weekday = dow
              }
            }
            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
              getParsingFlags(config)._overflowWeeks = true
            } else if (weekdayOverflow != null) {
              getParsingFlags(config)._overflowWeekday = true
            } else {
              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy)
              config._a[YEAR] = temp.year
              config._dayOfYear = temp.dayOfYear
            }
          }

          // constant that refers to the ISO standard
          hooks.ISO_8601 = function () {}

          // constant that refers to the RFC 2822 form
          hooks.RFC_2822 = function () {}

          // date from string and format string
          function configFromStringAndFormat(config) {
            // TODO: Move this to another part of the creation flow to prevent circular deps
            if (config._f === hooks.ISO_8601) {
              configFromISO(config)
              return
            }
            if (config._f === hooks.RFC_2822) {
              configFromRFC2822(config)
              return
            }
            config._a = []
            getParsingFlags(config).empty = true

            // This array is used to make a Date, either with `new Date` or `Date.UTC`
            var string = '' + config._i,
              i,
              parsedInput,
              tokens,
              token,
              skipped,
              stringLength = string.length,
              totalParsedInputLength = 0,
              era

            tokens =
              expandFormat(config._f, config._locale).match(formattingTokens) ||
              []

            for (i = 0; i < tokens.length; i++) {
              token = tokens[i]
              parsedInput = (string.match(
                getParseRegexForToken(token, config)
              ) || [])[0]
              if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput))
                if (skipped.length > 0) {
                  getParsingFlags(config).unusedInput.push(skipped)
                }
                string = string.slice(
                  string.indexOf(parsedInput) + parsedInput.length
                )
                totalParsedInputLength += parsedInput.length
              }
              // don't parse if it's not a known token
              if (formatTokenFunctions[token]) {
                if (parsedInput) {
                  getParsingFlags(config).empty = false
                } else {
                  getParsingFlags(config).unusedTokens.push(token)
                }
                addTimeToArrayFromToken(token, parsedInput, config)
              } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token)
              }
            }

            // add remaining unparsed input length to the string
            getParsingFlags(config).charsLeftOver =
              stringLength - totalParsedInputLength
            if (string.length > 0) {
              getParsingFlags(config).unusedInput.push(string)
            }

            // clear _12h flag if hour is <= 12
            if (
              config._a[HOUR] <= 12 &&
              getParsingFlags(config).bigHour === true &&
              config._a[HOUR] > 0
            ) {
              getParsingFlags(config).bigHour = undefined
            }

            getParsingFlags(config).parsedDateParts = config._a.slice(0)
            getParsingFlags(config).meridiem = config._meridiem
            // handle meridiem
            config._a[HOUR] = meridiemFixWrap(
              config._locale,
              config._a[HOUR],
              config._meridiem
            )

            // handle era
            era = getParsingFlags(config).era
            if (era !== null) {
              config._a[YEAR] = config._locale.erasConvertYear(
                era,
                config._a[YEAR]
              )
            }

            configFromArray(config)
            checkOverflow(config)
          }

          function meridiemFixWrap(locale, hour, meridiem) {
            var isPm

            if (meridiem == null) {
              // nothing to do
              return hour
            }
            if (locale.meridiemHour != null) {
              return locale.meridiemHour(hour, meridiem)
            } else if (locale.isPM != null) {
              // Fallback
              isPm = locale.isPM(meridiem)
              if (isPm && hour < 12) {
                hour += 12
              }
              if (!isPm && hour === 12) {
                hour = 0
              }
              return hour
            } else {
              // this is not supposed to happen
              return hour
            }
          }

          // date from string and array of format strings
          function configFromStringAndArray(config) {
            var tempConfig,
              bestMoment,
              scoreToBeat,
              i,
              currentScore,
              validFormatFound,
              bestFormatIsValid = false

            if (config._f.length === 0) {
              getParsingFlags(config).invalidFormat = true
              config._d = new Date(NaN)
              return
            }

            for (i = 0; i < config._f.length; i++) {
              currentScore = 0
              validFormatFound = false
              tempConfig = copyConfig({}, config)
              if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC
              }
              tempConfig._f = config._f[i]
              configFromStringAndFormat(tempConfig)

              if (isValid(tempConfig)) {
                validFormatFound = true
              }

              // if there is any input that was not parsed add a penalty for that format
              currentScore += getParsingFlags(tempConfig).charsLeftOver

              //or tokens
              currentScore +=
                getParsingFlags(tempConfig).unusedTokens.length * 10

              getParsingFlags(tempConfig).score = currentScore

              if (!bestFormatIsValid) {
                if (
                  scoreToBeat == null ||
                  currentScore < scoreToBeat ||
                  validFormatFound
                ) {
                  scoreToBeat = currentScore
                  bestMoment = tempConfig
                  if (validFormatFound) {
                    bestFormatIsValid = true
                  }
                }
              } else {
                if (currentScore < scoreToBeat) {
                  scoreToBeat = currentScore
                  bestMoment = tempConfig
                }
              }
            }

            extend(config, bestMoment || tempConfig)
          }

          function configFromObject(config) {
            if (config._d) {
              return
            }

            var i = normalizeObjectUnits(config._i),
              dayOrDate = i.day === undefined ? i.date : i.day
            config._a = map(
              [
                i.year,
                i.month,
                dayOrDate,
                i.hour,
                i.minute,
                i.second,
                i.millisecond,
              ],
              function (obj) {
                return obj && parseInt(obj, 10)
              }
            )

            configFromArray(config)
          }

          function createFromConfig(config) {
            var res = new Moment(checkOverflow(prepareConfig(config)))
            if (res._nextDay) {
              // Adding is smart enough around DST
              res.add(1, 'd')
              res._nextDay = undefined
            }

            return res
          }

          function prepareConfig(config) {
            var input = config._i,
              format = config._f

            config._locale = config._locale || getLocale(config._l)

            if (input === null || (format === undefined && input === '')) {
              return createInvalid({ nullInput: true })
            }

            if (typeof input === 'string') {
              config._i = input = config._locale.preparse(input)
            }

            if (isMoment(input)) {
              return new Moment(checkOverflow(input))
            } else if (isDate(input)) {
              config._d = input
            } else if (isArray(format)) {
              configFromStringAndArray(config)
            } else if (format) {
              configFromStringAndFormat(config)
            } else {
              configFromInput(config)
            }

            if (!isValid(config)) {
              config._d = null
            }

            return config
          }

          function configFromInput(config) {
            var input = config._i
            if (isUndefined(input)) {
              config._d = new Date(hooks.now())
            } else if (isDate(input)) {
              config._d = new Date(input.valueOf())
            } else if (typeof input === 'string') {
              configFromString(config)
            } else if (isArray(input)) {
              config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10)
              })
              configFromArray(config)
            } else if (isObject(input)) {
              configFromObject(config)
            } else if (isNumber(input)) {
              // from milliseconds
              config._d = new Date(input)
            } else {
              hooks.createFromInputFallback(config)
            }
          }

          function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var c = {}

            if (format === true || format === false) {
              strict = format
              format = undefined
            }

            if (locale === true || locale === false) {
              strict = locale
              locale = undefined
            }

            if (
              (isObject(input) && isObjectEmpty(input)) ||
              (isArray(input) && input.length === 0)
            ) {
              input = undefined
            }
            // object construction must be done this way.
            // https://github.com/moment/moment/issues/1423
            c._isAMomentObject = true
            c._useUTC = c._isUTC = isUTC
            c._l = locale
            c._i = input
            c._f = format
            c._strict = strict

            return createFromConfig(c)
          }

          function createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false)
          }

          var prototypeMin = deprecate(
              'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
              function () {
                var other = createLocal.apply(null, arguments)
                if (this.isValid() && other.isValid()) {
                  return other < this ? this : other
                } else {
                  return createInvalid()
                }
              }
            ),
            prototypeMax = deprecate(
              'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
              function () {
                var other = createLocal.apply(null, arguments)
                if (this.isValid() && other.isValid()) {
                  return other > this ? this : other
                } else {
                  return createInvalid()
                }
              }
            )

          // Pick a moment m from moments so that m[fn](other) is true for all
          // other. This relies on the function fn to be transitive.
          //
          // moments should either be an array of moment objects or an array, whose
          // first element is an array of moment objects.
          function pickBy(fn, moments) {
            var res, i
            if (moments.length === 1 && isArray(moments[0])) {
              moments = moments[0]
            }
            if (!moments.length) {
              return createLocal()
            }
            res = moments[0]
            for (i = 1; i < moments.length; ++i) {
              if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i]
              }
            }
            return res
          }

          // TODO: Use [].sort instead?
          function min() {
            var args = [].slice.call(arguments, 0)

            return pickBy('isBefore', args)
          }

          function max() {
            var args = [].slice.call(arguments, 0)

            return pickBy('isAfter', args)
          }

          var now = function () {
            return Date.now ? Date.now() : +new Date()
          }

          var ordering = [
            'year',
            'quarter',
            'month',
            'week',
            'day',
            'hour',
            'minute',
            'second',
            'millisecond',
          ]

          function isDurationValid(m) {
            var key,
              unitHasDecimal = false,
              i
            for (key in m) {
              if (
                hasOwnProp(m, key) &&
                !(
                  indexOf.call(ordering, key) !== -1 &&
                  (m[key] == null || !isNaN(m[key]))
                )
              ) {
                return false
              }
            }

            for (i = 0; i < ordering.length; ++i) {
              if (m[ordering[i]]) {
                if (unitHasDecimal) {
                  return false // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                  unitHasDecimal = true
                }
              }
            }

            return true
          }

          function isValid$1() {
            return this._isValid
          }

          function createInvalid$1() {
            return createDuration(NaN)
          }

          function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration),
              years = normalizedInput.year || 0,
              quarters = normalizedInput.quarter || 0,
              months = normalizedInput.month || 0,
              weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
              days = normalizedInput.day || 0,
              hours = normalizedInput.hour || 0,
              minutes = normalizedInput.minute || 0,
              seconds = normalizedInput.second || 0,
              milliseconds = normalizedInput.millisecond || 0

            this._isValid = isDurationValid(normalizedInput)

            // representation for dateAddRemove
            this._milliseconds =
              +milliseconds +
              seconds * 1e3 + // 1000
              minutes * 6e4 + // 1000 * 60
              hours * 1000 * 60 * 60 //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
            // Because of dateAddRemove treats 24 hours as different from a
            // day when working around DST, we need to store them separately
            this._days = +days + weeks * 7
            // It is impossible to translate months into days without knowing
            // which months you are are talking about, so we have to store
            // it separately.
            this._months = +months + quarters * 3 + years * 12

            this._data = {}

            this._locale = getLocale()

            this._bubble()
          }

          function isDuration(obj) {
            return obj instanceof Duration
          }

          function absRound(number) {
            if (number < 0) {
              return Math.round(-1 * number) * -1
            } else {
              return Math.round(number)
            }
          }

          // compare two arrays, return the number of differences
          function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length),
              lengthDiff = Math.abs(array1.length - array2.length),
              diffs = 0,
              i
            for (i = 0; i < len; i++) {
              if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
              ) {
                diffs++
              }
            }
            return diffs + lengthDiff
          }

          // FORMATTING

          function offset(token, separator) {
            addFormatToken(token, 0, 0, function () {
              var offset = this.utcOffset(),
                sign = '+'
              if (offset < 0) {
                offset = -offset
                sign = '-'
              }
              return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
              )
            })
          }

          offset('Z', ':')
          offset('ZZ', '')

          // PARSING

          addRegexToken('Z', matchShortOffset)
          addRegexToken('ZZ', matchShortOffset)
          addParseToken(['Z', 'ZZ'], function (input, array, config) {
            config._useUTC = true
            config._tzm = offsetFromString(matchShortOffset, input)
          })

          // HELPERS

          // timezone chunker
          // '+10:00' > ['10',  '00']
          // '-1530'  > ['-15', '30']
          var chunkOffset = /([\+\-]|\d\d)/gi

          function offsetFromString(matcher, string) {
            var matches = (string || '').match(matcher),
              chunk,
              parts,
              minutes

            if (matches === null) {
              return null
            }

            chunk = matches[matches.length - 1] || []
            parts = (chunk + '').match(chunkOffset) || ['-', 0, 0]
            minutes = +(parts[1] * 60) + toInt(parts[2])

            return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes
          }

          // Return a moment from input, that is local/utc/zone equivalent to model.
          function cloneWithOffset(input, model) {
            var res, diff
            if (model._isUTC) {
              res = model.clone()
              diff =
                (isMoment(input) || isDate(input)
                  ? input.valueOf()
                  : createLocal(input).valueOf()) - res.valueOf()
              // Use low-level api, because this fn is low-level api.
              res._d.setTime(res._d.valueOf() + diff)
              hooks.updateOffset(res, false)
              return res
            } else {
              return createLocal(input).local()
            }
          }

          function getDateOffset(m) {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(m._d.getTimezoneOffset())
          }

          // HOOKS

          // This function will be called whenever a moment is mutated.
          // It is intended to keep the offset in sync with the timezone.
          hooks.updateOffset = function () {}

          // MOMENTS

          // keepLocalTime = true means only change the timezone, without
          // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
          // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
          // +0200, so we adjust the time as needed, to be valid.
          //
          // Keeping the time actually adds/subtracts (one hour)
          // from the actual represented time. That is why we call updateOffset
          // a second time. In case it wants us to change the offset again
          // _changeInProgress == true case, then we have to adjust, because
          // there is no such time in the given timezone.
          function getSetOffset(input, keepLocalTime, keepMinutes) {
            var offset = this._offset || 0,
              localAdjust
            if (!this.isValid()) {
              return input != null ? this : NaN
            }
            if (input != null) {
              if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input)
                if (input === null) {
                  return this
                }
              } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60
              }
              if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this)
              }
              this._offset = input
              this._isUTC = true
              if (localAdjust != null) {
                this.add(localAdjust, 'm')
              }
              if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                  addSubtract(
                    this,
                    createDuration(input - offset, 'm'),
                    1,
                    false
                  )
                } else if (!this._changeInProgress) {
                  this._changeInProgress = true
                  hooks.updateOffset(this, true)
                  this._changeInProgress = null
                }
              }
              return this
            } else {
              return this._isUTC ? offset : getDateOffset(this)
            }
          }

          function getSetZone(input, keepLocalTime) {
            if (input != null) {
              if (typeof input !== 'string') {
                input = -input
              }

              this.utcOffset(input, keepLocalTime)

              return this
            } else {
              return -this.utcOffset()
            }
          }

          function setOffsetToUTC(keepLocalTime) {
            return this.utcOffset(0, keepLocalTime)
          }

          function setOffsetToLocal(keepLocalTime) {
            if (this._isUTC) {
              this.utcOffset(0, keepLocalTime)
              this._isUTC = false

              if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm')
              }
            }
            return this
          }

          function setOffsetToParsedOffset() {
            if (this._tzm != null) {
              this.utcOffset(this._tzm, false, true)
            } else if (typeof this._i === 'string') {
              var tZone = offsetFromString(matchOffset, this._i)
              if (tZone != null) {
                this.utcOffset(tZone)
              } else {
                this.utcOffset(0, true)
              }
            }
            return this
          }

          function hasAlignedHourOffset(input) {
            if (!this.isValid()) {
              return false
            }
            input = input ? createLocal(input).utcOffset() : 0

            return (this.utcOffset() - input) % 60 === 0
          }

          function isDaylightSavingTime() {
            return (
              this.utcOffset() > this.clone().month(0).utcOffset() ||
              this.utcOffset() > this.clone().month(5).utcOffset()
            )
          }

          function isDaylightSavingTimeShifted() {
            if (!isUndefined(this._isDSTShifted)) {
              return this._isDSTShifted
            }

            var c = {},
              other

            copyConfig(c, this)
            c = prepareConfig(c)

            if (c._a) {
              other = c._isUTC ? createUTC(c._a) : createLocal(c._a)
              this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0
            } else {
              this._isDSTShifted = false
            }

            return this._isDSTShifted
          }

          function isLocal() {
            return this.isValid() ? !this._isUTC : false
          }

          function isUtcOffset() {
            return this.isValid() ? this._isUTC : false
          }

          function isUtc() {
            return this.isValid() ? this._isUTC && this._offset === 0 : false
          }

          // ASP.NET json date format regex
          var aspNetRegex =
              /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
            // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
            // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
            // and further modified to allow for strings containing both week and day
            isoRegex =
              /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/

          function createDuration(input, key) {
            var duration = input,
              // matching against regexp is expensive, do it on demand
              match = null,
              sign,
              ret,
              diffRes

            if (isDuration(input)) {
              duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
              }
            } else if (isNumber(input) || !isNaN(+input)) {
              duration = {}
              if (key) {
                duration[key] = +input
              } else {
                duration.milliseconds = +input
              }
            } else if ((match = aspNetRegex.exec(input))) {
              sign = match[1] === '-' ? -1 : 1
              duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
              }
            } else if ((match = isoRegex.exec(input))) {
              sign = match[1] === '-' ? -1 : 1
              duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
              }
            } else if (duration == null) {
              // checks for null or undefined
              duration = {}
            } else if (
              typeof duration === 'object' &&
              ('from' in duration || 'to' in duration)
            ) {
              diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
              )

              duration = {}
              duration.ms = diffRes.milliseconds
              duration.M = diffRes.months
            }

            ret = new Duration(duration)

            if (isDuration(input) && hasOwnProp(input, '_locale')) {
              ret._locale = input._locale
            }

            if (isDuration(input) && hasOwnProp(input, '_isValid')) {
              ret._isValid = input._isValid
            }

            return ret
          }

          createDuration.fn = Duration.prototype
          createDuration.invalid = createInvalid$1

          function parseIso(inp, sign) {
            // We'd normally use ~~inp for this, but unfortunately it also
            // converts floats to ints.
            // inp may be undefined, so careful calling replace on it.
            var res = inp && parseFloat(inp.replace(',', '.'))
            // apply sign while we're at it
            return (isNaN(res) ? 0 : res) * sign
          }

          function positiveMomentsDifference(base, other) {
            var res = {}

            res.months =
              other.month() - base.month() + (other.year() - base.year()) * 12
            if (base.clone().add(res.months, 'M').isAfter(other)) {
              --res.months
            }

            res.milliseconds = +other - +base.clone().add(res.months, 'M')

            return res
          }

          function momentsDifference(base, other) {
            var res
            if (!(base.isValid() && other.isValid())) {
              return { milliseconds: 0, months: 0 }
            }

            other = cloneWithOffset(other, base)
            if (base.isBefore(other)) {
              res = positiveMomentsDifference(base, other)
            } else {
              res = positiveMomentsDifference(other, base)
              res.milliseconds = -res.milliseconds
              res.months = -res.months
            }

            return res
          }

          // TODO: remove 'name' arg after deprecation is removed
          function createAdder(direction, name) {
            return function (val, period) {
              var dur, tmp
              //invert the arguments, but complain about it
              if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                  name,
                  'moment().' +
                    name +
                    '(period, number) is deprecated. Please use moment().' +
                    name +
                    '(number, period). ' +
                    'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                )
                tmp = val
                val = period
                period = tmp
              }

              dur = createDuration(val, period)
              addSubtract(this, dur, direction)
              return this
            }
          }

          function addSubtract(mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds,
              days = absRound(duration._days),
              months = absRound(duration._months)

            if (!mom.isValid()) {
              // No op
              return
            }

            updateOffset = updateOffset == null ? true : updateOffset

            if (months) {
              setMonth(mom, get(mom, 'Month') + months * isAdding)
            }
            if (days) {
              set$1(mom, 'Date', get(mom, 'Date') + days * isAdding)
            }
            if (milliseconds) {
              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding)
            }
            if (updateOffset) {
              hooks.updateOffset(mom, days || months)
            }
          }

          var add = createAdder(1, 'add'),
            subtract = createAdder(-1, 'subtract')

          function isString(input) {
            return typeof input === 'string' || input instanceof String
          }

          // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
          function isMomentInput(input) {
            return (
              isMoment(input) ||
              isDate(input) ||
              isString(input) ||
              isNumber(input) ||
              isNumberOrStringArray(input) ||
              isMomentInputObject(input) ||
              input === null ||
              input === undefined
            )
          }

          function isMomentInputObject(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input),
              propertyTest = false,
              properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
              ],
              i,
              property

            for (i = 0; i < properties.length; i += 1) {
              property = properties[i]
              propertyTest = propertyTest || hasOwnProp(input, property)
            }

            return objectTest && propertyTest
          }

          function isNumberOrStringArray(input) {
            var arrayTest = isArray(input),
              dataTypeTest = false
            if (arrayTest) {
              dataTypeTest =
                input.filter(function (item) {
                  return !isNumber(item) && isString(input)
                }).length === 0
            }
            return arrayTest && dataTypeTest
          }

          function isCalendarSpec(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input),
              propertyTest = false,
              properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
              ],
              i,
              property

            for (i = 0; i < properties.length; i += 1) {
              property = properties[i]
              propertyTest = propertyTest || hasOwnProp(input, property)
            }

            return objectTest && propertyTest
          }

          function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, 'days', true)
            return diff < -6
              ? 'sameElse'
              : diff < -1
              ? 'lastWeek'
              : diff < 0
              ? 'lastDay'
              : diff < 1
              ? 'sameDay'
              : diff < 2
              ? 'nextDay'
              : diff < 7
              ? 'nextWeek'
              : 'sameElse'
          }

          function calendar$1(time, formats) {
            // Support for single parameter, formats only overload to the calendar function
            if (arguments.length === 1) {
              if (!arguments[0]) {
                time = undefined
                formats = undefined
              } else if (isMomentInput(arguments[0])) {
                time = arguments[0]
                formats = undefined
              } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0]
                time = undefined
              }
            }
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're local/utc/offset or not.
            var now = time || createLocal(),
              sod = cloneWithOffset(now, this).startOf('day'),
              format = hooks.calendarFormat(this, sod) || 'sameElse',
              output =
                formats &&
                (isFunction(formats[format])
                  ? formats[format].call(this, now)
                  : formats[format])

            return this.format(
              output ||
                this.localeData().calendar(format, this, createLocal(now))
            )
          }

          function clone() {
            return new Moment(this)
          }

          function isAfter(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input)
            if (!(this.isValid() && localInput.isValid())) {
              return false
            }
            units = normalizeUnits(units) || 'millisecond'
            if (units === 'millisecond') {
              return this.valueOf() > localInput.valueOf()
            } else {
              return (
                localInput.valueOf() < this.clone().startOf(units).valueOf()
              )
            }
          }

          function isBefore(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input)
            if (!(this.isValid() && localInput.isValid())) {
              return false
            }
            units = normalizeUnits(units) || 'millisecond'
            if (units === 'millisecond') {
              return this.valueOf() < localInput.valueOf()
            } else {
              return this.clone().endOf(units).valueOf() < localInput.valueOf()
            }
          }

          function isBetween(from, to, units, inclusivity) {
            var localFrom = isMoment(from) ? from : createLocal(from),
              localTo = isMoment(to) ? to : createLocal(to)
            if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
              return false
            }
            inclusivity = inclusivity || '()'
            return (
              (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
              (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
            )
          }

          function isSame(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input),
              inputMs
            if (!(this.isValid() && localInput.isValid())) {
              return false
            }
            units = normalizeUnits(units) || 'millisecond'
            if (units === 'millisecond') {
              return this.valueOf() === localInput.valueOf()
            } else {
              inputMs = localInput.valueOf()
              return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
              )
            }
          }

          function isSameOrAfter(input, units) {
            return this.isSame(input, units) || this.isAfter(input, units)
          }

          function isSameOrBefore(input, units) {
            return this.isSame(input, units) || this.isBefore(input, units)
          }

          function diff(input, units, asFloat) {
            var that, zoneDelta, output

            if (!this.isValid()) {
              return NaN
            }

            that = cloneWithOffset(input, this)

            if (!that.isValid()) {
              return NaN
            }

            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4

            units = normalizeUnits(units)

            switch (units) {
              case 'year':
                output = monthDiff(this, that) / 12
                break
              case 'month':
                output = monthDiff(this, that)
                break
              case 'quarter':
                output = monthDiff(this, that) / 3
                break
              case 'second':
                output = (this - that) / 1e3
                break // 1000
              case 'minute':
                output = (this - that) / 6e4
                break // 1000 * 60
              case 'hour':
                output = (this - that) / 36e5
                break // 1000 * 60 * 60
              case 'day':
                output = (this - that - zoneDelta) / 864e5
                break // 1000 * 60 * 60 * 24, negate dst
              case 'week':
                output = (this - that - zoneDelta) / 6048e5
                break // 1000 * 60 * 60 * 24 * 7, negate dst
              default:
                output = this - that
            }

            return asFloat ? output : absFloor(output)
          }

          function monthDiff(a, b) {
            if (a.date() < b.date()) {
              // end-of-month calculations work correct when the start month has more
              // days than the end month.
              return -monthDiff(b, a)
            }
            // difference in months
            var wholeMonthDiff =
                (b.year() - a.year()) * 12 + (b.month() - a.month()),
              // b is in (anchor - 1 month, anchor + 1 month)
              anchor = a.clone().add(wholeMonthDiff, 'months'),
              anchor2,
              adjust

            if (b - anchor < 0) {
              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months')
              // linear across the month
              adjust = (b - anchor) / (anchor - anchor2)
            } else {
              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months')
              // linear across the month
              adjust = (b - anchor) / (anchor2 - anchor)
            }

            //check for negative zero, return zero if negative zero
            return -(wholeMonthDiff + adjust) || 0
          }

          hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ'
          hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]'

          function toString() {
            return this.clone()
              .locale('en')
              .format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')
          }

          function toISOString(keepOffset) {
            if (!this.isValid()) {
              return null
            }
            var utc = keepOffset !== true,
              m = utc ? this.clone().utc() : this
            if (m.year() < 0 || m.year() > 9999) {
              return formatMoment(
                m,
                utc
                  ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                  : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
              )
            }
            if (isFunction(Date.prototype.toISOString)) {
              // native implementation is ~50x faster, use it when we can
              if (utc) {
                return this.toDate().toISOString()
              } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                  .toISOString()
                  .replace('Z', formatMoment(m, 'Z'))
              }
            }
            return formatMoment(
              m,
              utc
                ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
            )
          }

          /**
           * Return a human readable representation of a moment that can
           * also be evaluated to get a new moment which is the same
           *
           * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
           */
          function inspect() {
            if (!this.isValid()) {
              return 'moment.invalid(/* ' + this._i + ' */)'
            }
            var func = 'moment',
              zone = '',
              prefix,
              year,
              datetime,
              suffix
            if (!this.isLocal()) {
              func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone'
              zone = 'Z'
            }
            prefix = '[' + func + '("]'
            year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY'
            datetime = '-MM-DD[T]HH:mm:ss.SSS'
            suffix = zone + '[")]'

            return this.format(prefix + year + datetime + suffix)
          }

          function format(inputString) {
            if (!inputString) {
              inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat
            }
            var output = formatMoment(this, inputString)
            return this.localeData().postformat(output)
          }

          function from(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                createLocal(time).isValid())
            ) {
              return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix)
            } else {
              return this.localeData().invalidDate()
            }
          }

          function fromNow(withoutSuffix) {
            return this.from(createLocal(), withoutSuffix)
          }

          function to(time, withoutSuffix) {
            if (
              this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
                createLocal(time).isValid())
            ) {
              return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix)
            } else {
              return this.localeData().invalidDate()
            }
          }

          function toNow(withoutSuffix) {
            return this.to(createLocal(), withoutSuffix)
          }

          // If passed a locale key, it will set the locale for this
          // instance.  Otherwise, it will return the locale configuration
          // variables for this instance.
          function locale(key) {
            var newLocaleData

            if (key === undefined) {
              return this._locale._abbr
            } else {
              newLocaleData = getLocale(key)
              if (newLocaleData != null) {
                this._locale = newLocaleData
              }
              return this
            }
          }

          var lang = deprecate(
            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
            function (key) {
              if (key === undefined) {
                return this.localeData()
              } else {
                return this.locale(key)
              }
            }
          )

          function localeData() {
            return this._locale
          }

          var MS_PER_SECOND = 1000,
            MS_PER_MINUTE = 60 * MS_PER_SECOND,
            MS_PER_HOUR = 60 * MS_PER_MINUTE,
            MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR

          // actual modulo - handles negative numbers (for dates before 1970):
          function mod$1(dividend, divisor) {
            return ((dividend % divisor) + divisor) % divisor
          }

          function localStartOfDate(y, m, d) {
            // the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              return new Date(y + 400, m, d) - MS_PER_400_YEARS
            } else {
              return new Date(y, m, d).valueOf()
            }
          }

          function utcStartOfDate(y, m, d) {
            // Date.UTC remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS
            } else {
              return Date.UTC(y, m, d)
            }
          }

          function startOf(units) {
            var time, startOfDate
            units = normalizeUnits(units)
            if (
              units === undefined ||
              units === 'millisecond' ||
              !this.isValid()
            ) {
              return this
            }

            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate

            switch (units) {
              case 'year':
                time = startOfDate(this.year(), 0, 1)
                break
              case 'quarter':
                time = startOfDate(
                  this.year(),
                  this.month() - (this.month() % 3),
                  1
                )
                break
              case 'month':
                time = startOfDate(this.year(), this.month(), 1)
                break
              case 'week':
                time = startOfDate(
                  this.year(),
                  this.month(),
                  this.date() - this.weekday()
                )
                break
              case 'isoWeek':
                time = startOfDate(
                  this.year(),
                  this.month(),
                  this.date() - (this.isoWeekday() - 1)
                )
                break
              case 'day':
              case 'date':
                time = startOfDate(this.year(), this.month(), this.date())
                break
              case 'hour':
                time = this._d.valueOf()
                time -= mod$1(
                  time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                  MS_PER_HOUR
                )
                break
              case 'minute':
                time = this._d.valueOf()
                time -= mod$1(time, MS_PER_MINUTE)
                break
              case 'second':
                time = this._d.valueOf()
                time -= mod$1(time, MS_PER_SECOND)
                break
            }

            this._d.setTime(time)
            hooks.updateOffset(this, true)
            return this
          }

          function endOf(units) {
            var time, startOfDate
            units = normalizeUnits(units)
            if (
              units === undefined ||
              units === 'millisecond' ||
              !this.isValid()
            ) {
              return this
            }

            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate

            switch (units) {
              case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1
                break
              case 'quarter':
                time =
                  startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3) + 3,
                    1
                  ) - 1
                break
              case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1
                break
              case 'week':
                time =
                  startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday() + 7
                  ) - 1
                break
              case 'isoWeek':
                time =
                  startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1) + 7
                  ) - 1
                break
              case 'day':
              case 'date':
                time =
                  startOfDate(this.year(), this.month(), this.date() + 1) - 1
                break
              case 'hour':
                time = this._d.valueOf()
                time +=
                  MS_PER_HOUR -
                  mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                  ) -
                  1
                break
              case 'minute':
                time = this._d.valueOf()
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1
                break
              case 'second':
                time = this._d.valueOf()
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1
                break
            }

            this._d.setTime(time)
            hooks.updateOffset(this, true)
            return this
          }

          function valueOf() {
            return this._d.valueOf() - (this._offset || 0) * 60000
          }

          function unix() {
            return Math.floor(this.valueOf() / 1000)
          }

          function toDate() {
            return new Date(this.valueOf())
          }

          function toArray() {
            var m = this
            return [
              m.year(),
              m.month(),
              m.date(),
              m.hour(),
              m.minute(),
              m.second(),
              m.millisecond(),
            ]
          }

          function toObject() {
            var m = this
            return {
              years: m.year(),
              months: m.month(),
              date: m.date(),
              hours: m.hours(),
              minutes: m.minutes(),
              seconds: m.seconds(),
              milliseconds: m.milliseconds(),
            }
          }

          function toJSON() {
            // new Date(NaN).toJSON() === null
            return this.isValid() ? this.toISOString() : null
          }

          function isValid$2() {
            return isValid(this)
          }

          function parsingFlags() {
            return extend({}, getParsingFlags(this))
          }

          function invalidAt() {
            return getParsingFlags(this).overflow
          }

          function creationData() {
            return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict,
            }
          }

          addFormatToken('N', 0, 0, 'eraAbbr')
          addFormatToken('NN', 0, 0, 'eraAbbr')
          addFormatToken('NNN', 0, 0, 'eraAbbr')
          addFormatToken('NNNN', 0, 0, 'eraName')
          addFormatToken('NNNNN', 0, 0, 'eraNarrow')

          addFormatToken('y', ['y', 1], 'yo', 'eraYear')
          addFormatToken('y', ['yy', 2], 0, 'eraYear')
          addFormatToken('y', ['yyy', 3], 0, 'eraYear')
          addFormatToken('y', ['yyyy', 4], 0, 'eraYear')

          addRegexToken('N', matchEraAbbr)
          addRegexToken('NN', matchEraAbbr)
          addRegexToken('NNN', matchEraAbbr)
          addRegexToken('NNNN', matchEraName)
          addRegexToken('NNNNN', matchEraNarrow)

          addParseToken(
            ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],
            function (input, array, config, token) {
              var era = config._locale.erasParse(input, token, config._strict)
              if (era) {
                getParsingFlags(config).era = era
              } else {
                getParsingFlags(config).invalidEra = input
              }
            }
          )

          addRegexToken('y', matchUnsigned)
          addRegexToken('yy', matchUnsigned)
          addRegexToken('yyy', matchUnsigned)
          addRegexToken('yyyy', matchUnsigned)
          addRegexToken('yo', matchEraYearOrdinal)

          addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR)
          addParseToken(['yo'], function (input, array, config, token) {
            var match
            if (config._locale._eraYearOrdinalRegex) {
              match = input.match(config._locale._eraYearOrdinalRegex)
            }

            if (config._locale.eraYearOrdinalParse) {
              array[YEAR] = config._locale.eraYearOrdinalParse(input, match)
            } else {
              array[YEAR] = parseInt(input, 10)
            }
          })

          function localeEras(m, format) {
            var i,
              l,
              date,
              eras = this._eras || getLocale('en')._eras
            for (i = 0, l = eras.length; i < l; ++i) {
              switch (typeof eras[i].since) {
                case 'string':
                  // truncate time
                  date = hooks(eras[i].since).startOf('day')
                  eras[i].since = date.valueOf()
                  break
              }

              switch (typeof eras[i].until) {
                case 'undefined':
                  eras[i].until = +Infinity
                  break
                case 'string':
                  // truncate time
                  date = hooks(eras[i].until).startOf('day').valueOf()
                  eras[i].until = date.valueOf()
                  break
              }
            }
            return eras
          }

          function localeErasParse(eraName, format, strict) {
            var i,
              l,
              eras = this.eras(),
              name,
              abbr,
              narrow
            eraName = eraName.toUpperCase()

            for (i = 0, l = eras.length; i < l; ++i) {
              name = eras[i].name.toUpperCase()
              abbr = eras[i].abbr.toUpperCase()
              narrow = eras[i].narrow.toUpperCase()

              if (strict) {
                switch (format) {
                  case 'N':
                  case 'NN':
                  case 'NNN':
                    if (abbr === eraName) {
                      return eras[i]
                    }
                    break

                  case 'NNNN':
                    if (name === eraName) {
                      return eras[i]
                    }
                    break

                  case 'NNNNN':
                    if (narrow === eraName) {
                      return eras[i]
                    }
                    break
                }
              } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i]
              }
            }
          }

          function localeErasConvertYear(era, year) {
            var dir = era.since <= era.until ? +1 : -1
            if (year === undefined) {
              return hooks(era.since).year()
            } else {
              return hooks(era.since).year() + (year - era.offset) * dir
            }
          }

          function getEraName() {
            var i,
              l,
              val,
              eras = this.localeData().eras()
            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf()

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name
              }
              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name
              }
            }

            return ''
          }

          function getEraNarrow() {
            var i,
              l,
              val,
              eras = this.localeData().eras()
            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf()

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow
              }
              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow
              }
            }

            return ''
          }

          function getEraAbbr() {
            var i,
              l,
              val,
              eras = this.localeData().eras()
            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf()

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr
              }
              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr
              }
            }

            return ''
          }

          function getEraYear() {
            var i,
              l,
              dir,
              val,
              eras = this.localeData().eras()
            for (i = 0, l = eras.length; i < l; ++i) {
              dir = eras[i].since <= eras[i].until ? +1 : -1

              // truncate time
              val = this.clone().startOf('day').valueOf()

              if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
              ) {
                return (
                  (this.year() - hooks(eras[i].since).year()) * dir +
                  eras[i].offset
                )
              }
            }

            return this.year()
          }

          function erasNameRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNameRegex')) {
              computeErasParse.call(this)
            }
            return isStrict ? this._erasNameRegex : this._erasRegex
          }

          function erasAbbrRegex(isStrict) {
            if (!hasOwnProp(this, '_erasAbbrRegex')) {
              computeErasParse.call(this)
            }
            return isStrict ? this._erasAbbrRegex : this._erasRegex
          }

          function erasNarrowRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNarrowRegex')) {
              computeErasParse.call(this)
            }
            return isStrict ? this._erasNarrowRegex : this._erasRegex
          }

          function matchEraAbbr(isStrict, locale) {
            return locale.erasAbbrRegex(isStrict)
          }

          function matchEraName(isStrict, locale) {
            return locale.erasNameRegex(isStrict)
          }

          function matchEraNarrow(isStrict, locale) {
            return locale.erasNarrowRegex(isStrict)
          }

          function matchEraYearOrdinal(isStrict, locale) {
            return locale._eraYearOrdinalRegex || matchUnsigned
          }

          function computeErasParse() {
            var abbrPieces = [],
              namePieces = [],
              narrowPieces = [],
              mixedPieces = [],
              i,
              l,
              eras = this.eras()

            for (i = 0, l = eras.length; i < l; ++i) {
              namePieces.push(regexEscape(eras[i].name))
              abbrPieces.push(regexEscape(eras[i].abbr))
              narrowPieces.push(regexEscape(eras[i].narrow))

              mixedPieces.push(regexEscape(eras[i].name))
              mixedPieces.push(regexEscape(eras[i].abbr))
              mixedPieces.push(regexEscape(eras[i].narrow))
            }

            this._erasRegex = new RegExp(
              '^(' + mixedPieces.join('|') + ')',
              'i'
            )
            this._erasNameRegex = new RegExp(
              '^(' + namePieces.join('|') + ')',
              'i'
            )
            this._erasAbbrRegex = new RegExp(
              '^(' + abbrPieces.join('|') + ')',
              'i'
            )
            this._erasNarrowRegex = new RegExp(
              '^(' + narrowPieces.join('|') + ')',
              'i'
            )
          }

          // FORMATTING

          addFormatToken(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100
          })

          addFormatToken(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100
          })

          function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter)
          }

          addWeekYearFormatToken('gggg', 'weekYear')
          addWeekYearFormatToken('ggggg', 'weekYear')
          addWeekYearFormatToken('GGGG', 'isoWeekYear')
          addWeekYearFormatToken('GGGGG', 'isoWeekYear')

          // ALIASES

          addUnitAlias('weekYear', 'gg')
          addUnitAlias('isoWeekYear', 'GG')

          // PRIORITY

          addUnitPriority('weekYear', 1)
          addUnitPriority('isoWeekYear', 1)

          // PARSING

          addRegexToken('G', matchSigned)
          addRegexToken('g', matchSigned)
          addRegexToken('GG', match1to2, match2)
          addRegexToken('gg', match1to2, match2)
          addRegexToken('GGGG', match1to4, match4)
          addRegexToken('gggg', match1to4, match4)
          addRegexToken('GGGGG', match1to6, match6)
          addRegexToken('ggggg', match1to6, match6)

          addWeekParseToken(
            ['gggg', 'ggggg', 'GGGG', 'GGGGG'],
            function (input, week, config, token) {
              week[token.substr(0, 2)] = toInt(input)
            }
          )

          addWeekParseToken(
            ['gg', 'GG'],
            function (input, week, config, token) {
              week[token] = hooks.parseTwoDigitYear(input)
            }
          )

          // MOMENTS

          function getSetWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.week(),
              this.weekday(),
              this.localeData()._week.dow,
              this.localeData()._week.doy
            )
          }

          function getSetISOWeekYear(input) {
            return getSetWeekYearHelper.call(
              this,
              input,
              this.isoWeek(),
              this.isoWeekday(),
              1,
              4
            )
          }

          function getISOWeeksInYear() {
            return weeksInYear(this.year(), 1, 4)
          }

          function getISOWeeksInISOWeekYear() {
            return weeksInYear(this.isoWeekYear(), 1, 4)
          }

          function getWeeksInYear() {
            var weekInfo = this.localeData()._week
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy)
          }

          function getWeeksInWeekYear() {
            var weekInfo = this.localeData()._week
            return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy)
          }

          function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget
            if (input == null) {
              return weekOfYear(this, dow, doy).year
            } else {
              weeksTarget = weeksInYear(input, dow, doy)
              if (week > weeksTarget) {
                week = weeksTarget
              }
              return setWeekAll.call(this, input, week, weekday, dow, doy)
            }
          }

          function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(
                weekYear,
                week,
                weekday,
                dow,
                doy
              ),
              date = createUTCDate(
                dayOfYearData.year,
                0,
                dayOfYearData.dayOfYear
              )

            this.year(date.getUTCFullYear())
            this.month(date.getUTCMonth())
            this.date(date.getUTCDate())
            return this
          }

          // FORMATTING

          addFormatToken('Q', 0, 'Qo', 'quarter')

          // ALIASES

          addUnitAlias('quarter', 'Q')

          // PRIORITY

          addUnitPriority('quarter', 7)

          // PARSING

          addRegexToken('Q', match1)
          addParseToken('Q', function (input, array) {
            array[MONTH] = (toInt(input) - 1) * 3
          })

          // MOMENTS

          function getSetQuarter(input) {
            return input == null
              ? Math.ceil((this.month() + 1) / 3)
              : this.month((input - 1) * 3 + (this.month() % 3))
          }

          // FORMATTING

          addFormatToken('D', ['DD', 2], 'Do', 'date')

          // ALIASES

          addUnitAlias('date', 'D')

          // PRIORITY
          addUnitPriority('date', 9)

          // PARSING

          addRegexToken('D', match1to2)
          addRegexToken('DD', match1to2, match2)
          addRegexToken('Do', function (isStrict, locale) {
            // TODO: Remove "ordinalParse" fallback in next major release.
            return isStrict
              ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
              : locale._dayOfMonthOrdinalParseLenient
          })

          addParseToken(['D', 'DD'], DATE)
          addParseToken('Do', function (input, array) {
            array[DATE] = toInt(input.match(match1to2)[0])
          })

          // MOMENTS

          var getSetDayOfMonth = makeGetSet('Date', true)

          // FORMATTING

          addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear')

          // ALIASES

          addUnitAlias('dayOfYear', 'DDD')

          // PRIORITY
          addUnitPriority('dayOfYear', 4)

          // PARSING

          addRegexToken('DDD', match1to3)
          addRegexToken('DDDD', match3)
          addParseToken(['DDD', 'DDDD'], function (input, array, config) {
            config._dayOfYear = toInt(input)
          })

          // HELPERS

          // MOMENTS

          function getSetDayOfYear(input) {
            var dayOfYear =
              Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) /
                  864e5
              ) + 1
            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd')
          }

          // FORMATTING

          addFormatToken('m', ['mm', 2], 0, 'minute')

          // ALIASES

          addUnitAlias('minute', 'm')

          // PRIORITY

          addUnitPriority('minute', 14)

          // PARSING

          addRegexToken('m', match1to2)
          addRegexToken('mm', match1to2, match2)
          addParseToken(['m', 'mm'], MINUTE)

          // MOMENTS

          var getSetMinute = makeGetSet('Minutes', false)

          // FORMATTING

          addFormatToken('s', ['ss', 2], 0, 'second')

          // ALIASES

          addUnitAlias('second', 's')

          // PRIORITY

          addUnitPriority('second', 15)

          // PARSING

          addRegexToken('s', match1to2)
          addRegexToken('ss', match1to2, match2)
          addParseToken(['s', 'ss'], SECOND)

          // MOMENTS

          var getSetSecond = makeGetSet('Seconds', false)

          // FORMATTING

          addFormatToken('S', 0, 0, function () {
            return ~~(this.millisecond() / 100)
          })

          addFormatToken(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10)
          })

          addFormatToken(0, ['SSS', 3], 0, 'millisecond')
          addFormatToken(0, ['SSSS', 4], 0, function () {
            return this.millisecond() * 10
          })
          addFormatToken(0, ['SSSSS', 5], 0, function () {
            return this.millisecond() * 100
          })
          addFormatToken(0, ['SSSSSS', 6], 0, function () {
            return this.millisecond() * 1000
          })
          addFormatToken(0, ['SSSSSSS', 7], 0, function () {
            return this.millisecond() * 10000
          })
          addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
            return this.millisecond() * 100000
          })
          addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
            return this.millisecond() * 1000000
          })

          // ALIASES

          addUnitAlias('millisecond', 'ms')

          // PRIORITY

          addUnitPriority('millisecond', 16)

          // PARSING

          addRegexToken('S', match1to3, match1)
          addRegexToken('SS', match1to3, match2)
          addRegexToken('SSS', match1to3, match3)

          var token, getSetMillisecond
          for (token = 'SSSS'; token.length <= 9; token += 'S') {
            addRegexToken(token, matchUnsigned)
          }

          function parseMs(input, array) {
            array[MILLISECOND] = toInt(('0.' + input) * 1000)
          }

          for (token = 'S'; token.length <= 9; token += 'S') {
            addParseToken(token, parseMs)
          }

          getSetMillisecond = makeGetSet('Milliseconds', false)

          // FORMATTING

          addFormatToken('z', 0, 0, 'zoneAbbr')
          addFormatToken('zz', 0, 0, 'zoneName')

          // MOMENTS

          function getZoneAbbr() {
            return this._isUTC ? 'UTC' : ''
          }

          function getZoneName() {
            return this._isUTC ? 'Coordinated Universal Time' : ''
          }

          var proto = Moment.prototype

          proto.add = add
          proto.calendar = calendar$1
          proto.clone = clone
          proto.diff = diff
          proto.endOf = endOf
          proto.format = format
          proto.from = from
          proto.fromNow = fromNow
          proto.to = to
          proto.toNow = toNow
          proto.get = stringGet
          proto.invalidAt = invalidAt
          proto.isAfter = isAfter
          proto.isBefore = isBefore
          proto.isBetween = isBetween
          proto.isSame = isSame
          proto.isSameOrAfter = isSameOrAfter
          proto.isSameOrBefore = isSameOrBefore
          proto.isValid = isValid$2
          proto.lang = lang
          proto.locale = locale
          proto.localeData = localeData
          proto.max = prototypeMax
          proto.min = prototypeMin
          proto.parsingFlags = parsingFlags
          proto.set = stringSet
          proto.startOf = startOf
          proto.subtract = subtract
          proto.toArray = toArray
          proto.toObject = toObject
          proto.toDate = toDate
          proto.toISOString = toISOString
          proto.inspect = inspect
          if (typeof Symbol !== 'undefined' && Symbol.for != null) {
            proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
              return 'Moment<' + this.format() + '>'
            }
          }
          proto.toJSON = toJSON
          proto.toString = toString
          proto.unix = unix
          proto.valueOf = valueOf
          proto.creationData = creationData
          proto.eraName = getEraName
          proto.eraNarrow = getEraNarrow
          proto.eraAbbr = getEraAbbr
          proto.eraYear = getEraYear
          proto.year = getSetYear
          proto.isLeapYear = getIsLeapYear
          proto.weekYear = getSetWeekYear
          proto.isoWeekYear = getSetISOWeekYear
          proto.quarter = proto.quarters = getSetQuarter
          proto.month = getSetMonth
          proto.daysInMonth = getDaysInMonth
          proto.week = proto.weeks = getSetWeek
          proto.isoWeek = proto.isoWeeks = getSetISOWeek
          proto.weeksInYear = getWeeksInYear
          proto.weeksInWeekYear = getWeeksInWeekYear
          proto.isoWeeksInYear = getISOWeeksInYear
          proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear
          proto.date = getSetDayOfMonth
          proto.day = proto.days = getSetDayOfWeek
          proto.weekday = getSetLocaleDayOfWeek
          proto.isoWeekday = getSetISODayOfWeek
          proto.dayOfYear = getSetDayOfYear
          proto.hour = proto.hours = getSetHour
          proto.minute = proto.minutes = getSetMinute
          proto.second = proto.seconds = getSetSecond
          proto.millisecond = proto.milliseconds = getSetMillisecond
          proto.utcOffset = getSetOffset
          proto.utc = setOffsetToUTC
          proto.local = setOffsetToLocal
          proto.parseZone = setOffsetToParsedOffset
          proto.hasAlignedHourOffset = hasAlignedHourOffset
          proto.isDST = isDaylightSavingTime
          proto.isLocal = isLocal
          proto.isUtcOffset = isUtcOffset
          proto.isUtc = isUtc
          proto.isUTC = isUtc
          proto.zoneAbbr = getZoneAbbr
          proto.zoneName = getZoneName
          proto.dates = deprecate(
            'dates accessor is deprecated. Use date instead.',
            getSetDayOfMonth
          )
          proto.months = deprecate(
            'months accessor is deprecated. Use month instead',
            getSetMonth
          )
          proto.years = deprecate(
            'years accessor is deprecated. Use year instead',
            getSetYear
          )
          proto.zone = deprecate(
            'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
            getSetZone
          )
          proto.isDSTShifted = deprecate(
            'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
            isDaylightSavingTimeShifted
          )

          function createUnix(input) {
            return createLocal(input * 1000)
          }

          function createInZone() {
            return createLocal.apply(null, arguments).parseZone()
          }

          function preParsePostFormat(string) {
            return string
          }

          var proto$1 = Locale.prototype

          proto$1.calendar = calendar
          proto$1.longDateFormat = longDateFormat
          proto$1.invalidDate = invalidDate
          proto$1.ordinal = ordinal
          proto$1.preparse = preParsePostFormat
          proto$1.postformat = preParsePostFormat
          proto$1.relativeTime = relativeTime
          proto$1.pastFuture = pastFuture
          proto$1.set = set
          proto$1.eras = localeEras
          proto$1.erasParse = localeErasParse
          proto$1.erasConvertYear = localeErasConvertYear
          proto$1.erasAbbrRegex = erasAbbrRegex
          proto$1.erasNameRegex = erasNameRegex
          proto$1.erasNarrowRegex = erasNarrowRegex

          proto$1.months = localeMonths
          proto$1.monthsShort = localeMonthsShort
          proto$1.monthsParse = localeMonthsParse
          proto$1.monthsRegex = monthsRegex
          proto$1.monthsShortRegex = monthsShortRegex
          proto$1.week = localeWeek
          proto$1.firstDayOfYear = localeFirstDayOfYear
          proto$1.firstDayOfWeek = localeFirstDayOfWeek

          proto$1.weekdays = localeWeekdays
          proto$1.weekdaysMin = localeWeekdaysMin
          proto$1.weekdaysShort = localeWeekdaysShort
          proto$1.weekdaysParse = localeWeekdaysParse

          proto$1.weekdaysRegex = weekdaysRegex
          proto$1.weekdaysShortRegex = weekdaysShortRegex
          proto$1.weekdaysMinRegex = weekdaysMinRegex

          proto$1.isPM = localeIsPM
          proto$1.meridiem = localeMeridiem

          function get$1(format, index, field, setter) {
            var locale = getLocale(),
              utc = createUTC().set(setter, index)
            return locale[field](utc, format)
          }

          function listMonthsImpl(format, index, field) {
            if (isNumber(format)) {
              index = format
              format = undefined
            }

            format = format || ''

            if (index != null) {
              return get$1(format, index, field, 'month')
            }

            var i,
              out = []
            for (i = 0; i < 12; i++) {
              out[i] = get$1(format, i, field, 'month')
            }
            return out
          }

          // ()
          // (5)
          // (fmt, 5)
          // (fmt)
          // (true)
          // (true, 5)
          // (true, fmt, 5)
          // (true, fmt)
          function listWeekdaysImpl(localeSorted, format, index, field) {
            if (typeof localeSorted === 'boolean') {
              if (isNumber(format)) {
                index = format
                format = undefined
              }

              format = format || ''
            } else {
              format = localeSorted
              index = format
              localeSorted = false

              if (isNumber(format)) {
                index = format
                format = undefined
              }

              format = format || ''
            }

            var locale = getLocale(),
              shift = localeSorted ? locale._week.dow : 0,
              i,
              out = []

            if (index != null) {
              return get$1(format, (index + shift) % 7, field, 'day')
            }

            for (i = 0; i < 7; i++) {
              out[i] = get$1(format, (i + shift) % 7, field, 'day')
            }
            return out
          }

          function listMonths(format, index) {
            return listMonthsImpl(format, index, 'months')
          }

          function listMonthsShort(format, index) {
            return listMonthsImpl(format, index, 'monthsShort')
          }

          function listWeekdays(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdays')
          }

          function listWeekdaysShort(localeSorted, format, index) {
            return listWeekdaysImpl(
              localeSorted,
              format,
              index,
              'weekdaysShort'
            )
          }

          function listWeekdaysMin(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin')
          }

          getSetGlobalLocale('en', {
            eras: [
              {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
              },
              {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
              },
            ],
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (number) {
              var b = number % 10,
                output =
                  toInt((number % 100) / 10) === 1
                    ? 'th'
                    : b === 1
                    ? 'st'
                    : b === 2
                    ? 'nd'
                    : b === 3
                    ? 'rd'
                    : 'th'
              return number + output
            },
          })

          // Side effect imports

          hooks.lang = deprecate(
            'moment.lang is deprecated. Use moment.locale instead.',
            getSetGlobalLocale
          )
          hooks.langData = deprecate(
            'moment.langData is deprecated. Use moment.localeData instead.',
            getLocale
          )

          var mathAbs = Math.abs

          function abs() {
            var data = this._data

            this._milliseconds = mathAbs(this._milliseconds)
            this._days = mathAbs(this._days)
            this._months = mathAbs(this._months)

            data.milliseconds = mathAbs(data.milliseconds)
            data.seconds = mathAbs(data.seconds)
            data.minutes = mathAbs(data.minutes)
            data.hours = mathAbs(data.hours)
            data.months = mathAbs(data.months)
            data.years = mathAbs(data.years)

            return this
          }

          function addSubtract$1(duration, input, value, direction) {
            var other = createDuration(input, value)

            duration._milliseconds += direction * other._milliseconds
            duration._days += direction * other._days
            duration._months += direction * other._months

            return duration._bubble()
          }

          // supports only 2.0-style add(1, 's') or add(duration)
          function add$1(input, value) {
            return addSubtract$1(this, input, value, 1)
          }

          // supports only 2.0-style subtract(1, 's') or subtract(duration)
          function subtract$1(input, value) {
            return addSubtract$1(this, input, value, -1)
          }

          function absCeil(number) {
            if (number < 0) {
              return Math.floor(number)
            } else {
              return Math.ceil(number)
            }
          }

          function bubble() {
            var milliseconds = this._milliseconds,
              days = this._days,
              months = this._months,
              data = this._data,
              seconds,
              minutes,
              hours,
              years,
              monthsFromDays

            // if we have a mix of positive and negative values, bubble down first
            // check: https://github.com/moment/moment/issues/2166
            if (
              !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
              )
            ) {
              milliseconds += absCeil(monthsToDays(months) + days) * 864e5
              days = 0
              months = 0
            }

            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000

            seconds = absFloor(milliseconds / 1000)
            data.seconds = seconds % 60

            minutes = absFloor(seconds / 60)
            data.minutes = minutes % 60

            hours = absFloor(minutes / 60)
            data.hours = hours % 24

            days += absFloor(hours / 24)

            // convert days to months
            monthsFromDays = absFloor(daysToMonths(days))
            months += monthsFromDays
            days -= absCeil(monthsToDays(monthsFromDays))

            // 12 months -> 1 year
            years = absFloor(months / 12)
            months %= 12

            data.days = days
            data.months = months
            data.years = years

            return this
          }

          function daysToMonths(days) {
            // 400 years have 146097 days (taking into account leap year rules)
            // 400 years have 12 months === 4800
            return (days * 4800) / 146097
          }

          function monthsToDays(months) {
            // the reverse of daysToMonths
            return (months * 146097) / 4800
          }

          function as(units) {
            if (!this.isValid()) {
              return NaN
            }
            var days,
              months,
              milliseconds = this._milliseconds

            units = normalizeUnits(units)

            if (units === 'month' || units === 'quarter' || units === 'year') {
              days = this._days + milliseconds / 864e5
              months = this._months + daysToMonths(days)
              switch (units) {
                case 'month':
                  return months
                case 'quarter':
                  return months / 3
                case 'year':
                  return months / 12
              }
            } else {
              // handle milliseconds separately because of floating point math errors (issue #1867)
              days = this._days + Math.round(monthsToDays(this._months))
              switch (units) {
                case 'week':
                  return days / 7 + milliseconds / 6048e5
                case 'day':
                  return days + milliseconds / 864e5
                case 'hour':
                  return days * 24 + milliseconds / 36e5
                case 'minute':
                  return days * 1440 + milliseconds / 6e4
                case 'second':
                  return days * 86400 + milliseconds / 1000
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                  return Math.floor(days * 864e5) + milliseconds
                default:
                  throw new Error('Unknown unit ' + units)
              }
            }
          }

          // TODO: Use this.as('ms')?
          function valueOf$1() {
            if (!this.isValid()) {
              return NaN
            }
            return (
              this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6
            )
          }

          function makeAs(alias) {
            return function () {
              return this.as(alias)
            }
          }

          var asMilliseconds = makeAs('ms'),
            asSeconds = makeAs('s'),
            asMinutes = makeAs('m'),
            asHours = makeAs('h'),
            asDays = makeAs('d'),
            asWeeks = makeAs('w'),
            asMonths = makeAs('M'),
            asQuarters = makeAs('Q'),
            asYears = makeAs('y')

          function clone$1() {
            return createDuration(this)
          }

          function get$2(units) {
            units = normalizeUnits(units)
            return this.isValid() ? this[units + 's']() : NaN
          }

          function makeGetter(name) {
            return function () {
              return this.isValid() ? this._data[name] : NaN
            }
          }

          var milliseconds = makeGetter('milliseconds'),
            seconds = makeGetter('seconds'),
            minutes = makeGetter('minutes'),
            hours = makeGetter('hours'),
            days = makeGetter('days'),
            months = makeGetter('months'),
            years = makeGetter('years')

          function weeks() {
            return absFloor(this.days() / 7)
          }

          var round = Math.round,
            thresholds = {
              ss: 44, // a few seconds to seconds
              s: 45, // seconds to minute
              m: 45, // minutes to hour
              h: 22, // hours to day
              d: 26, // days to month/week
              w: null, // weeks to month
              M: 11, // months to year
            }

          // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
          function substituteTimeAgo(
            string,
            number,
            withoutSuffix,
            isFuture,
            locale
          ) {
            return locale.relativeTime(
              number || 1,
              !!withoutSuffix,
              string,
              isFuture
            )
          }

          function relativeTime$1(
            posNegDuration,
            withoutSuffix,
            thresholds,
            locale
          ) {
            var duration = createDuration(posNegDuration).abs(),
              seconds = round(duration.as('s')),
              minutes = round(duration.as('m')),
              hours = round(duration.as('h')),
              days = round(duration.as('d')),
              months = round(duration.as('M')),
              weeks = round(duration.as('w')),
              years = round(duration.as('y')),
              a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days])

            if (thresholds.w != null) {
              a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks])
            }
            a = a ||
              (months <= 1 && ['M']) ||
              (months < thresholds.M && ['MM', months]) ||
              (years <= 1 && ['y']) || ['yy', years]

            a[2] = withoutSuffix
            a[3] = +posNegDuration > 0
            a[4] = locale
            return substituteTimeAgo.apply(null, a)
          }

          // This function allows you to set the rounding function for relative time strings
          function getSetRelativeTimeRounding(roundingFunction) {
            if (roundingFunction === undefined) {
              return round
            }
            if (typeof roundingFunction === 'function') {
              round = roundingFunction
              return true
            }
            return false
          }

          // This function allows you to set a threshold for relative time strings
          function getSetRelativeTimeThreshold(threshold, limit) {
            if (thresholds[threshold] === undefined) {
              return false
            }
            if (limit === undefined) {
              return thresholds[threshold]
            }
            thresholds[threshold] = limit
            if (threshold === 's') {
              thresholds.ss = limit - 1
            }
            return true
          }

          function humanize(argWithSuffix, argThresholds) {
            if (!this.isValid()) {
              return this.localeData().invalidDate()
            }

            var withSuffix = false,
              th = thresholds,
              locale,
              output

            if (typeof argWithSuffix === 'object') {
              argThresholds = argWithSuffix
              argWithSuffix = false
            }
            if (typeof argWithSuffix === 'boolean') {
              withSuffix = argWithSuffix
            }
            if (typeof argThresholds === 'object') {
              th = Object.assign({}, thresholds, argThresholds)
              if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1
              }
            }

            locale = this.localeData()
            output = relativeTime$1(this, !withSuffix, th, locale)

            if (withSuffix) {
              output = locale.pastFuture(+this, output)
            }

            return locale.postformat(output)
          }

          var abs$1 = Math.abs

          function sign(x) {
            return (x > 0) - (x < 0) || +x
          }

          function toISOString$1() {
            // for ISO strings we do not use the normal bubbling rules:
            //  * milliseconds bubble up until they become hours
            //  * days do not bubble at all
            //  * months bubble up until they become years
            // This is because there is no context-free conversion between hours and days
            // (think of clock changes)
            // and also not between days and months (28-31 days per month)
            if (!this.isValid()) {
              return this.localeData().invalidDate()
            }

            var seconds = abs$1(this._milliseconds) / 1000,
              days = abs$1(this._days),
              months = abs$1(this._months),
              minutes,
              hours,
              years,
              s,
              total = this.asSeconds(),
              totalSign,
              ymSign,
              daysSign,
              hmsSign

            if (!total) {
              // this is the same as C#'s (Noda) and python (isodate)...
              // but not other JS (goog.date)
              return 'P0D'
            }

            // 3600 seconds -> 60 minutes -> 1 hour
            minutes = absFloor(seconds / 60)
            hours = absFloor(minutes / 60)
            seconds %= 60
            minutes %= 60

            // 12 months -> 1 year
            years = absFloor(months / 12)
            months %= 12

            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : ''

            totalSign = total < 0 ? '-' : ''
            ymSign = sign(this._months) !== sign(total) ? '-' : ''
            daysSign = sign(this._days) !== sign(total) ? '-' : ''
            hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : ''

            return (
              totalSign +
              'P' +
              (years ? ymSign + years + 'Y' : '') +
              (months ? ymSign + months + 'M' : '') +
              (days ? daysSign + days + 'D' : '') +
              (hours || minutes || seconds ? 'T' : '') +
              (hours ? hmsSign + hours + 'H' : '') +
              (minutes ? hmsSign + minutes + 'M' : '') +
              (seconds ? hmsSign + s + 'S' : '')
            )
          }

          var proto$2 = Duration.prototype

          proto$2.isValid = isValid$1
          proto$2.abs = abs
          proto$2.add = add$1
          proto$2.subtract = subtract$1
          proto$2.as = as
          proto$2.asMilliseconds = asMilliseconds
          proto$2.asSeconds = asSeconds
          proto$2.asMinutes = asMinutes
          proto$2.asHours = asHours
          proto$2.asDays = asDays
          proto$2.asWeeks = asWeeks
          proto$2.asMonths = asMonths
          proto$2.asQuarters = asQuarters
          proto$2.asYears = asYears
          proto$2.valueOf = valueOf$1
          proto$2._bubble = bubble
          proto$2.clone = clone$1
          proto$2.get = get$2
          proto$2.milliseconds = milliseconds
          proto$2.seconds = seconds
          proto$2.minutes = minutes
          proto$2.hours = hours
          proto$2.days = days
          proto$2.weeks = weeks
          proto$2.months = months
          proto$2.years = years
          proto$2.humanize = humanize
          proto$2.toISOString = toISOString$1
          proto$2.toString = toISOString$1
          proto$2.toJSON = toISOString$1
          proto$2.locale = locale
          proto$2.localeData = localeData

          proto$2.toIsoString = deprecate(
            'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
            toISOString$1
          )
          proto$2.lang = lang

          // FORMATTING

          addFormatToken('X', 0, 0, 'unix')
          addFormatToken('x', 0, 0, 'valueOf')

          // PARSING

          addRegexToken('x', matchSigned)
          addRegexToken('X', matchTimestamp)
          addParseToken('X', function (input, array, config) {
            config._d = new Date(parseFloat(input) * 1000)
          })
          addParseToken('x', function (input, array, config) {
            config._d = new Date(toInt(input))
          })

          //! moment.js

          hooks.version = '2.29.1'

          setHookCallback(createLocal)

          hooks.fn = proto
          hooks.min = min
          hooks.max = max
          hooks.now = now
          hooks.utc = createUTC
          hooks.unix = createUnix
          hooks.months = listMonths
          hooks.isDate = isDate
          hooks.locale = getSetGlobalLocale
          hooks.invalid = createInvalid
          hooks.duration = createDuration
          hooks.isMoment = isMoment
          hooks.weekdays = listWeekdays
          hooks.parseZone = createInZone
          hooks.localeData = getLocale
          hooks.isDuration = isDuration
          hooks.monthsShort = listMonthsShort
          hooks.weekdaysMin = listWeekdaysMin
          hooks.defineLocale = defineLocale
          hooks.updateLocale = updateLocale
          hooks.locales = listLocales
          hooks.weekdaysShort = listWeekdaysShort
          hooks.normalizeUnits = normalizeUnits
          hooks.relativeTimeRounding = getSetRelativeTimeRounding
          hooks.relativeTimeThreshold = getSetRelativeTimeThreshold
          hooks.calendarFormat = getCalendarFormat
          hooks.prototype = proto

          // currently HTML5 input type only supports 24-hour formats
          hooks.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
            DATE: 'YYYY-MM-DD', // <input type="date" />
            TIME: 'HH:mm', // <input type="time" />
            TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
            TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
            WEEK: 'GGGG-[W]WW', // <input type="week" />
            MONTH: 'YYYY-MM', // <input type="month" />
          }

          return hooks
        })

        /***/
      },

    /***/ './node_modules/process/browser.js':
      /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
      /***/ (module) => {
        // shim for using process in browser
        var process = (module.exports = {})

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout
        var cachedClearTimeout

        function defaultSetTimout() {
          throw new Error('setTimeout has not been defined')
        }
        function defaultClearTimeout() {
          throw new Error('clearTimeout has not been defined')
        }
        ;(function () {
          try {
            if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout
            } else {
              cachedSetTimeout = defaultSetTimout
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout
          }
          try {
            if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout
            } else {
              cachedClearTimeout = defaultClearTimeout
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout
          }
        })()
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0)
          }
          // if setTimeout wasn't available but was latter defined
          if (
            (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout
            return setTimeout(fun, 0)
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0)
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0)
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0)
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker)
          }
          // if clearTimeout wasn't available but was latter defined
          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout
            return clearTimeout(marker)
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker)
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker)
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker)
            }
          }
        }
        var queue = []
        var draining = false
        var currentQueue
        var queueIndex = -1

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return
          }
          draining = false
          if (currentQueue.length) {
            queue = currentQueue.concat(queue)
          } else {
            queueIndex = -1
          }
          if (queue.length) {
            drainQueue()
          }
        }

        function drainQueue() {
          if (draining) {
            return
          }
          var timeout = runTimeout(cleanUpNextTick)
          draining = true

          var len = queue.length
          while (len) {
            currentQueue = queue
            queue = []
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run()
              }
            }
            queueIndex = -1
            len = queue.length
          }
          currentQueue = null
          draining = false
          runClearTimeout(timeout)
        }

        process.nextTick = function (fun) {
          var args = new Array(arguments.length - 1)
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i]
            }
          }
          queue.push(new Item(fun, args))
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue)
          }
        }

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun
          this.array = array
        }
        Item.prototype.run = function () {
          this.fun.apply(null, this.array)
        }
        process.title = 'browser'
        process.browser = true
        process.env = {}
        process.argv = []
        process.version = '' // empty string to avoid regexp issues
        process.versions = {}

        function noop() {}

        process.on = noop
        process.addListener = noop
        process.once = noop
        process.off = noop
        process.removeListener = noop
        process.removeAllListeners = noop
        process.emit = noop
        process.prependListener = noop
        process.prependOnceListener = noop

        process.listeners = function (name) {
          return []
        }

        process.binding = function (name) {
          throw new Error('process.binding is not supported')
        }

        process.cwd = function () {
          return '/'
        }
        process.chdir = function (dir) {
          throw new Error('process.chdir is not supported')
        }
        process.umask = function () {
          return 0
        }

        /***/
      },

    /***/ './node_modules/regenerator-runtime/runtime.js':
      /*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
      /***/ (module) => {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var runtime = (function (exports) {
          'use strict'

          var Op = Object.prototype
          var hasOwn = Op.hasOwnProperty
          var undefined // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {}
          var iteratorSymbol = $Symbol.iterator || '@@iterator'
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator'
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag'

          function define(obj, key, value) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            })
            return obj[key]
          }
          try {
            // IE 8 has a broken Object.defineProperty that only works on DOM objects.
            define({}, '')
          } catch (err) {
            define = function (obj, key, value) {
              return (obj[key] = value)
            }
          }

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator
            var generator = Object.create(protoGenerator.prototype)
            var context = new Context(tryLocsList || [])

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context)

            return generator
          }
          exports.wrap = wrap

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) }
            } catch (err) {
              return { type: 'throw', arg: err }
            }
          }

          var GenStateSuspendedStart = 'suspendedStart'
          var GenStateSuspendedYield = 'suspendedYield'
          var GenStateExecuting = 'executing'
          var GenStateCompleted = 'completed'

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {}

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {}
          define(IteratorPrototype, iteratorSymbol, function () {
            return this
          })

          var getProto = Object.getPrototypeOf
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])))
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype
          }

          var Gp =
            (GeneratorFunctionPrototype.prototype =
            Generator.prototype =
              Object.create(IteratorPrototype))
          GeneratorFunction.prototype = GeneratorFunctionPrototype
          define(Gp, 'constructor', GeneratorFunctionPrototype)
          define(GeneratorFunctionPrototype, 'constructor', GeneratorFunction)
          GeneratorFunction.displayName = define(
            GeneratorFunctionPrototype,
            toStringTagSymbol,
            'GeneratorFunction'
          )

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ;['next', 'throw', 'return'].forEach(function (method) {
              define(prototype, method, function (arg) {
                return this._invoke(method, arg)
              })
            })
          }

          exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false
          }

          exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype)
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype
              define(genFun, toStringTagSymbol, 'GeneratorFunction')
            }
            genFun.prototype = Object.create(Gp)
            return genFun
          }

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          exports.awrap = function (arg) {
            return { __await: arg }
          }

          function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg)
              if (record.type === 'throw') {
                reject(record.arg)
              } else {
                var result = record.arg
                var value = result.value
                if (
                  value &&
                  typeof value === 'object' &&
                  hasOwn.call(value, '__await')
                ) {
                  return PromiseImpl.resolve(value.__await).then(
                    function (value) {
                      invoke('next', value, resolve, reject)
                    },
                    function (err) {
                      invoke('throw', err, resolve, reject)
                    }
                  )
                }

                return PromiseImpl.resolve(value).then(
                  function (unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped
                    resolve(result)
                  },
                  function (error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke('throw', error, resolve, reject)
                  }
                )
              }
            }

            var previousPromise

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function (resolve, reject) {
                  invoke(method, arg, resolve, reject)
                })
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg())
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue
          }

          defineIteratorMethods(AsyncIterator.prototype)
          define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
            return this
          })
          exports.AsyncIterator = AsyncIterator

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          exports.async = function (
            innerFn,
            outerFn,
            self,
            tryLocsList,
            PromiseImpl
          ) {
            if (PromiseImpl === void 0) PromiseImpl = Promise

            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList),
              PromiseImpl
            )

            return exports.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function (result) {
                  return result.done ? result.value : iter.next()
                })
          }

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running')
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult()
              }

              context.method = method
              context.arg = arg

              while (true) {
                var delegate = context.delegate
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context)
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue
                    return delegateResult
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted
                    throw context.arg
                  }

                  context.dispatchException(context.arg)
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg)
                }

                state = GenStateExecuting

                var record = tryCatch(innerFn, self, context)
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield

                  if (record.arg === ContinueSentinel) {
                    continue
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  }
                } else if (record.type === 'throw') {
                  state = GenStateCompleted
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw'
                  context.arg = record.arg
                }
              }
            }
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method]
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null

              if (context.method === 'throw') {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator['return']) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return'
                  context.arg = undefined
                  maybeInvokeDelegate(delegate, context)

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel
                  }
                }

                context.method = 'throw'
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                )
              }

              return ContinueSentinel
            }

            var record = tryCatch(method, delegate.iterator, context.arg)

            if (record.type === 'throw') {
              context.method = 'throw'
              context.arg = record.arg
              context.delegate = null
              return ContinueSentinel
            }

            var info = record.arg

            if (!info) {
              context.method = 'throw'
              context.arg = new TypeError('iterator result is not an object')
              context.delegate = null
              return ContinueSentinel
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next'
                context.arg = undefined
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null
            return ContinueSentinel
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp)

          define(Gp, toStringTagSymbol, 'Generator')

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          define(Gp, iteratorSymbol, function () {
            return this
          })

          define(Gp, 'toString', function () {
            return '[object Generator]'
          })

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] }

            if (1 in locs) {
              entry.catchLoc = locs[1]
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2]
              entry.afterLoc = locs[3]
            }

            this.tryEntries.push(entry)
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {}
            record.type = 'normal'
            delete record.arg
            entry.completion = record
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }]
            tryLocsList.forEach(pushTryEntry, this)
            this.reset(true)
          }

          exports.keys = function (object) {
            var keys = []
            for (var key in object) {
              keys.push(key)
            }
            keys.reverse()

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop()
                if (key in object) {
                  next.value = key
                  next.done = false
                  return next
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true
              return next
            }
          }

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol]
              if (iteratorMethod) {
                return iteratorMethod.call(iterable)
              }

              if (typeof iterable.next === 'function') {
                return iterable
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i]
                        next.done = false
                        return next
                      }
                    }

                    next.value = undefined
                    next.done = true

                    return next
                  }

                return (next.next = next)
              }
            }

            // Return an iterator with no values.
            return { next: doneResult }
          }
          exports.values = values

          function doneResult() {
            return { value: undefined, done: true }
          }

          Context.prototype = {
            constructor: Context,

            reset: function (skipTempReset) {
              this.prev = 0
              this.next = 0
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined
              this.done = false
              this.delegate = null

              this.method = 'next'
              this.arg = undefined

              this.tryEntries.forEach(resetTryEntry)

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === 't' &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined
                  }
                }
              }
            },

            stop: function () {
              this.done = true

              var rootEntry = this.tryEntries[0]
              var rootRecord = rootEntry.completion
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg
              }

              return this.rval
            },

            dispatchException: function (exception) {
              if (this.done) {
                throw exception
              }

              var context = this
              function handle(loc, caught) {
                record.type = 'throw'
                record.arg = exception
                context.next = loc

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next'
                  context.arg = undefined
                }

                return !!caught
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i]
                var record = entry.completion

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end')
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc')
                  var hasFinally = hasOwn.call(entry, 'finallyLoc')

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true)
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc)
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true)
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc)
                    }
                  } else {
                    throw new Error('try statement without catch or finally')
                  }
                }
              }
            },

            abrupt: function (type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i]
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry
                  break
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null
              }

              var record = finallyEntry ? finallyEntry.completion : {}
              record.type = type
              record.arg = arg

              if (finallyEntry) {
                this.method = 'next'
                this.next = finallyEntry.finallyLoc
                return ContinueSentinel
              }

              return this.complete(record)
            },

            complete: function (record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg
                this.method = 'return'
                this.next = 'end'
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc
              }

              return ContinueSentinel
            },

            finish: function (finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i]
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc)
                  resetTryEntry(entry)
                  return ContinueSentinel
                }
              }
            },

            catch: function (tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i]
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion
                  if (record.type === 'throw') {
                    var thrown = record.arg
                    resetTryEntry(entry)
                  }
                  return thrown
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt')
            },

            delegateYield: function (iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              }

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined
              }

              return ContinueSentinel
            },
          }

          // Regardless of whether this script is executing as a CommonJS module
          // or not, return the runtime object so that we can declare the variable
          // regeneratorRuntime in the outer scope, which allows this module to be
          // injected easily by `bin/regenerator --include-runtime script.js`.
          return exports
        })(
          // If this script is executing as a CommonJS module, use module.exports
          // as the regeneratorRuntime namespace. Otherwise create a new empty
          // object. Either way, the resulting object will be used to initialize
          // the regeneratorRuntime variable at the top of this file.
          true ? module.exports : 0
        )

        try {
          regeneratorRuntime = runtime
        } catch (accidentalStrictMode) {
          // This module should not be running in strict mode, so the above
          // assignment should always work unless something is misconfigured. Just
          // in case runtime.js accidentally runs in strict mode, in modern engines
          // we can explicitly access globalThis. In older engines we can escape
          // strict mode using a global Function call. This could conceivably fail
          // if a Content Security Policy forbids using Function, but in that case
          // the proper solution is to fix the accidental strict mode problem. If
          // you've misconfigured your bundler to force strict mode and applied a
          // CSP to forbid Function, and you're not willing to fix either of those
          // problems, please detail your unique predicament in a GitHub issue.
          if (typeof globalThis === 'object') {
            globalThis.regeneratorRuntime = runtime
          } else {
            Function('r', 'regeneratorRuntime = r')(runtime)
          }
        }

        /***/
      },

    /***/ './node_modules/vue2-datepicker/index.css':
      /*!************************************************!*\
  !*** ./node_modules/vue2-datepicker/index.css ***!
  \************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! !../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ './node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js'
          )
        /* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default =
          /*#__PURE__*/ __webpack_require__.n(
            _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__
          )
        /* harmony import */ var _css_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_1_postcss_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! !!../css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!./index.css */ './node_modules/css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!./node_modules/vue2-datepicker/index.css'
          )

        var options = {}

        options.insert = 'head'
        options.singleton = false

        var update =
          _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(
            _css_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_1_postcss_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__[
              'default'
            ],
            options
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          _css_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_1_postcss_loader_dist_cjs_js_clonedRuleSet_9_0_rules_0_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ].locals || {}

        /***/
      },

    /***/ './node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        'use strict'

        var isOldIE = (function isOldIE() {
          var memo
          return function memorize() {
            if (typeof memo === 'undefined') {
              // Test for IE <= 9 as proposed by Browserhacks
              // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
              // Tests for existence of standard globals is to allow style-loader
              // to operate correctly into non-standard environments
              // @see https://github.com/webpack-contrib/style-loader/issues/177
              memo = Boolean(window && document && document.all && !window.atob)
            }

            return memo
          }
        })()

        var getTarget = (function getTarget() {
          var memo = {}
          return function memorize(target) {
            if (typeof memo[target] === 'undefined') {
              var styleTarget = document.querySelector(target) // Special case to return head of iframe instead of iframe itself

              if (
                window.HTMLIFrameElement &&
                styleTarget instanceof window.HTMLIFrameElement
              ) {
                try {
                  // This will throw an exception if access to iframe is blocked
                  // due to cross-origin restrictions
                  styleTarget = styleTarget.contentDocument.head
                } catch (e) {
                  // istanbul ignore next
                  styleTarget = null
                }
              }

              memo[target] = styleTarget
            }

            return memo[target]
          }
        })()

        var stylesInDom = []

        function getIndexByIdentifier(identifier) {
          var result = -1

          for (var i = 0; i < stylesInDom.length; i++) {
            if (stylesInDom[i].identifier === identifier) {
              result = i
              break
            }
          }

          return result
        }

        function modulesToDom(list, options) {
          var idCountMap = {}
          var identifiers = []

          for (var i = 0; i < list.length; i++) {
            var item = list[i]
            var id = options.base ? item[0] + options.base : item[0]
            var count = idCountMap[id] || 0
            var identifier = ''.concat(id, ' ').concat(count)
            idCountMap[id] = count + 1
            var index = getIndexByIdentifier(identifier)
            var obj = {
              css: item[1],
              media: item[2],
              sourceMap: item[3],
            }

            if (index !== -1) {
              stylesInDom[index].references++
              stylesInDom[index].updater(obj)
            } else {
              stylesInDom.push({
                identifier: identifier,
                updater: addStyle(obj, options),
                references: 1,
              })
            }

            identifiers.push(identifier)
          }

          return identifiers
        }

        function insertStyleElement(options) {
          var style = document.createElement('style')
          var attributes = options.attributes || {}

          if (typeof attributes.nonce === 'undefined') {
            var nonce = true ? __webpack_require__.nc : 0

            if (nonce) {
              attributes.nonce = nonce
            }
          }

          Object.keys(attributes).forEach(function (key) {
            style.setAttribute(key, attributes[key])
          })

          if (typeof options.insert === 'function') {
            options.insert(style)
          } else {
            var target = getTarget(options.insert || 'head')

            if (!target) {
              throw new Error(
                "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."
              )
            }

            target.appendChild(style)
          }

          return style
        }

        function removeStyleElement(style) {
          // istanbul ignore if
          if (style.parentNode === null) {
            return false
          }

          style.parentNode.removeChild(style)
        }
        /* istanbul ignore next  */

        var replaceText = (function replaceText() {
          var textStore = []
          return function replace(index, replacement) {
            textStore[index] = replacement
            return textStore.filter(Boolean).join('\n')
          }
        })()

        function applyToSingletonTag(style, index, remove, obj) {
          var css = remove
            ? ''
            : obj.media
            ? '@media '.concat(obj.media, ' {').concat(obj.css, '}')
            : obj.css // For old IE

          /* istanbul ignore if  */

          if (style.styleSheet) {
            style.styleSheet.cssText = replaceText(index, css)
          } else {
            var cssNode = document.createTextNode(css)
            var childNodes = style.childNodes

            if (childNodes[index]) {
              style.removeChild(childNodes[index])
            }

            if (childNodes.length) {
              style.insertBefore(cssNode, childNodes[index])
            } else {
              style.appendChild(cssNode)
            }
          }
        }

        function applyToTag(style, options, obj) {
          var css = obj.css
          var media = obj.media
          var sourceMap = obj.sourceMap

          if (media) {
            style.setAttribute('media', media)
          } else {
            style.removeAttribute('media')
          }

          if (sourceMap && typeof btoa !== 'undefined') {
            css +=
              '\n/*# sourceMappingURL=data:application/json;base64,'.concat(
                btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))),
                ' */'
              )
          } // For old IE

          /* istanbul ignore if  */

          if (style.styleSheet) {
            style.styleSheet.cssText = css
          } else {
            while (style.firstChild) {
              style.removeChild(style.firstChild)
            }

            style.appendChild(document.createTextNode(css))
          }
        }

        var singleton = null
        var singletonCounter = 0

        function addStyle(obj, options) {
          var style
          var update
          var remove

          if (options.singleton) {
            var styleIndex = singletonCounter++
            style = singleton || (singleton = insertStyleElement(options))
            update = applyToSingletonTag.bind(null, style, styleIndex, false)
            remove = applyToSingletonTag.bind(null, style, styleIndex, true)
          } else {
            style = insertStyleElement(options)
            update = applyToTag.bind(null, style, options)

            remove = function remove() {
              removeStyleElement(style)
            }
          }

          update(obj)
          return function updateStyle(newObj) {
            if (newObj) {
              if (
                newObj.css === obj.css &&
                newObj.media === obj.media &&
                newObj.sourceMap === obj.sourceMap
              ) {
                return
              }

              update((obj = newObj))
            } else {
              remove()
            }
          }
        }

        module.exports = function (list, options) {
          options = options || {} // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
          // tags it will allow on a page

          if (!options.singleton && typeof options.singleton !== 'boolean') {
            options.singleton = isOldIE()
          }

          list = list || []
          var lastIdentifiers = modulesToDom(list, options)
          return function update(newList) {
            newList = newList || []

            if (Object.prototype.toString.call(newList) !== '[object Array]') {
              return
            }

            for (var i = 0; i < lastIdentifiers.length; i++) {
              var identifier = lastIdentifiers[i]
              var index = getIndexByIdentifier(identifier)
              stylesInDom[index].references--
            }

            var newLastIdentifiers = modulesToDom(newList, options)

            for (var _i = 0; _i < lastIdentifiers.length; _i++) {
              var _identifier = lastIdentifiers[_i]

              var _index = getIndexByIdentifier(_identifier)

              if (stylesInDom[_index].references === 0) {
                stylesInDom[_index].updater()

                stylesInDom.splice(_index, 1)
              }
            }

            lastIdentifiers = newLastIdentifiers
          }
        }

        /***/
      },

    /***/ './resources/js/components/AppFloatForm.vue':
      /*!**************************************************!*\
  !*** ./resources/js/components/AppFloatForm.vue ***!
  \**************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./AppFloatForm.vue?vue&type=template&id=2e1a46ec& */ './resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec&'
          )
        /* harmony import */ var _AppFloatForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./AppFloatForm.vue?vue&type=script&lang=js& */ './resources/js/components/AppFloatForm.vue?vue&type=script&lang=js&'
          )
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ './node_modules/vue-loader/lib/runtime/componentNormalizer.js'
          )

        /* normalize component */
        var component = (0,
        _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[
          'default'
        ])(
          _AppFloatForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ],
          _AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__.render,
          _AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
          false,
          null,
          null,
          null
        )

        /* hot reload */
        if (false) {
          var api
        }
        component.options.__file = 'resources/js/components/AppFloatForm.vue'
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          component.exports

        /***/
      },

    /***/ './resources/js/components/AppForm.vue':
      /*!*********************************************!*\
  !*** ./resources/js/components/AppForm.vue ***!
  \*********************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./AppForm.vue?vue&type=template&id=204d616a& */ './resources/js/components/AppForm.vue?vue&type=template&id=204d616a&'
          )
        /* harmony import */ var _AppForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./AppForm.vue?vue&type=script&lang=js& */ './resources/js/components/AppForm.vue?vue&type=script&lang=js&'
          )
        /* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ './node_modules/vue-loader/lib/runtime/componentNormalizer.js'
          )

        /* normalize component */
        var component = (0,
        _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[
          'default'
        ])(
          _AppForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ],
          _AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__.render,
          _AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
          false,
          null,
          null,
          null
        )

        /* hot reload */
        if (false) {
          var api
        }
        component.options.__file = 'resources/js/components/AppForm.vue'
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          component.exports

        /***/
      },

    /***/ './resources/js/components/AppFloatForm.vue?vue&type=script&lang=js&':
      /*!***************************************************************************!*\
  !*** ./resources/js/components/AppFloatForm.vue?vue&type=script&lang=js& ***!
  \***************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppFloatForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppFloatForm.vue?vue&type=script&lang=js& */ './node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=script&lang=js&'
          )
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppFloatForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]

        /***/
      },

    /***/ './resources/js/components/AppForm.vue?vue&type=script&lang=js&':
      /*!**********************************************************************!*\
  !*** ./resources/js/components/AppForm.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppForm.vue?vue&type=script&lang=js& */ './node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=script&lang=js&'
          )
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[
            'default'
          ]

        /***/
      },

    /***/ './resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec&':
      /*!*********************************************************************************!*\
  !*** ./resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec& ***!
  \*********************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ render: () =>
            /* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__.render,
          /* harmony export */ staticRenderFns: () =>
            /* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
          /* harmony export */
        })
        /* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppFloatForm_vue_vue_type_template_id_2e1a46ec___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppFloatForm.vue?vue&type=template&id=2e1a46ec& */ './node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec&'
          )

        /***/
      },

    /***/ './resources/js/components/AppForm.vue?vue&type=template&id=204d616a&':
      /*!****************************************************************************!*\
  !*** ./resources/js/components/AppForm.vue?vue&type=template&id=204d616a& ***!
  \****************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ render: () =>
            /* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__.render,
          /* harmony export */ staticRenderFns: () =>
            /* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
          /* harmony export */
        })
        /* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AppForm_vue_vue_type_template_id_204d616a___WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppForm.vue?vue&type=template&id=204d616a& */ './node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=template&id=204d616a&'
          )

        /***/
      },

    /***/ './node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec&':
      /*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppFloatForm.vue?vue&type=template&id=2e1a46ec& ***!
  \************************************************************************************************************************************************************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ render: () => /* binding */ render,
          /* harmony export */ staticRenderFns: () =>
            /* binding */ staticRenderFns,
          /* harmony export */
        })
        var render = function () {
          var _vm = this
          var _h = _vm.$createElement
          var _c = _vm._self._c || _h
          return _c('div', { staticClass: 'float-form' }, [
            _c(
              'form',
              {
                staticClass: 'callback-form',
                class: { '-open': _vm.isOpen },
                on: {
                  submit: function ($event) {
                    $event.preventDefault()
                    return _vm.send.apply(null, arguments)
                  },
                },
              },
              [
                _c(
                  'div',
                  {
                    staticClass: 'callback-form-close',
                    on: { click: _vm.close },
                  },
                  [
                    _c('img', {
                      attrs: { src: '/img/icons/close.svg', alt: 'icon' },
                    }),
                  ]
                ),
                _vm._v(' '),
                !_vm.sended
                  ? _c('div', [
                      _vm._m(0),
                      _vm._v(' '),
                      _c('label', { staticClass: 'input-wrp' }, [
                        _c('input', {
                          directives: [
                            {
                              name: 'model',
                              rawName: 'v-model',
                              value: _vm.name,
                              expression: 'name',
                            },
                          ],
                          staticClass: 'input',
                          attrs: { type: 'text', name: 'name', required: '' },
                          domProps: { value: _vm.name },
                          on: {
                            input: function ($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.name = $event.target.value
                            },
                          },
                        }),
                        _vm._v(' '),
                        _c('span', { staticClass: 'input-label' }, [
                          _vm._v('Введите свое имя*'),
                        ]),
                      ]),
                      _vm._v(' '),
                      _c('label', { staticClass: 'input-wrp' }, [
                        _c('input', {
                          directives: [
                            {
                              name: 'model',
                              rawName: 'v-model',
                              value: _vm.phone,
                              expression: 'phone',
                            },
                          ],
                          staticClass: 'input phone-mask',
                          attrs: { type: 'tel', name: 'phone', required: '' },
                          domProps: { value: _vm.phone },
                          on: {
                            input: function ($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.phone = $event.target.value
                            },
                          },
                        }),
                        _vm._v(' '),
                        _c('span', { staticClass: 'input-label' }, [
                          _vm._v('Номер телефона*'),
                        ]),
                      ]),
                      _vm._v(' '),
                      _c('div', { staticClass: 'select-wrp' }, [
                        _c(
                          'select',
                          {
                            directives: [
                              {
                                name: 'model',
                                rawName: 'v-model',
                                value: _vm.direction,
                                expression: 'direction',
                              },
                            ],
                            staticClass: 'select',
                            attrs: { name: 'direction', required: '' },
                            on: {
                              change: function ($event) {
                                var $$selectedVal = Array.prototype.filter
                                  .call($event.target.options, function (o) {
                                    return o.selected
                                  })
                                  .map(function (o) {
                                    var val = '_value' in o ? o._value : o.value
                                    return val
                                  })
                                _vm.direction = $event.target.multiple
                                  ? $$selectedVal
                                  : $$selectedVal[0]
                              },
                            },
                          },
                          [
                            _c(
                              'option',
                              {
                                attrs: {
                                  value: '-1',
                                  selected: '',
                                  disabled: '',
                                },
                              },
                              [_vm._v('Выберите филиал')]
                            ),
                            _vm._v(' '),
                            _c(
                              'option',
                              { attrs: { value: 'Bro-clinic на Бухар Жырау' } },
                              [_vm._v('Bro-clinic на Бухар Жырау')]
                            ),
                            _vm._v(' '),
                            _c(
                              'option',
                              { attrs: { value: 'Bro-clinic на Шарипова А.' } },
                              [_vm._v('Bro-clinic на Шарипова А.')]
                            ),
                          ]
                        ),
                        _vm._v(' '),
                        _c('img', {
                          staticClass: 'select-arrow',
                          attrs: {
                            src: '/img/icons/select-arrow.svg',
                            alt: 'arrow',
                          },
                        }),
                      ]),
                      _vm._v(' '),
                      _c('textarea', {
                        directives: [
                          {
                            name: 'model',
                            rawName: 'v-model',
                            value: _vm.message,
                            expression: 'message',
                          },
                        ],
                        staticClass: 'input',
                        attrs: { required: '', placeholder: 'Сообщение' },
                        domProps: { value: _vm.message },
                        on: {
                          input: function ($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.message = $event.target.value
                          },
                        },
                      }),
                      _vm._v(' '),
                      _vm._m(1),
                      _vm._v(' '),
                      _c(
                        'button',
                        {
                          staticClass: 'button',
                          attrs: { disabled: _vm.disabled },
                        },
                        [_vm._v('Отправить')]
                      ),
                    ])
                  : _c('div', { staticClass: 'callback-form-success' }, [
                      _c('h4', { staticClass: 'float-form-heading' }, [
                        _vm._v('Ваша заявка принята!'),
                      ]),
                      _vm._v(' '),
                      _c('h3', { staticClass: 'float-form-title' }, [
                        _vm._v('Спасибо!'),
                      ]),
                      _vm._v(' '),
                      _c('p', { staticClass: 'float-form-text' }, [
                        _vm._v(
                          'Ваша заявка отправлена, мы свяжемся с Вами в ближайшее время!'
                        ),
                      ]),
                      _vm._v(' '),
                      _c('p', { staticClass: 'float-form-text' }, [
                        _vm._v(
                          'Мы гарантируем сохранность Ваших личных данных'
                        ),
                      ]),
                      _vm._v(' '),
                      _c(
                        'button',
                        {
                          staticClass: 'float-form-close-btn',
                          on: { click: _vm.close },
                        },
                        [_vm._v('Закрыть')]
                      ),
                    ]),
              ]
            ),
            _vm._v(' '),
            _c(
              'button',
              { staticClass: 'float-form-btn', on: { click: _vm.open } },
              [
                _c('img', {
                  attrs: { src: '/img/icons/phone-call.svg', alt: 'icon' },
                }),
              ]
            ),
          ])
        }
        var staticRenderFns = [
          function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('div', { staticClass: 'callback-form-row' }, [
              _c('img', {
                staticClass: 'float-form-icon',
                attrs: { src: '/img/icons/mail-dark.svg', alt: 'icon' },
              }),
              _vm._v(' '),
              _c('h4', { staticClass: 'float-form-heading' }, [
                _vm._v('Связаться с нами'),
              ]),
            ])
          },
          function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c('label', { staticClass: 'callback-form-row' }, [
              _c('input', { attrs: { type: 'file', hidden: '', id: 'file' } }),
              _vm._v(' '),
              _c('img', {
                attrs: { src: '/img/icons/attach.svg', alt: 'icon' },
              }),
              _vm._v(' '),
              _c('p', [_vm._v('Прикрепить файл')]),
            ])
          },
        ]
        render._withStripped = true

        /***/
      },

    /***/ './node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=template&id=204d616a&':
      /*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./resources/js/components/AppForm.vue?vue&type=template&id=204d616a& ***!
  \*******************************************************************************************************************************************************************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ render: () => /* binding */ render,
          /* harmony export */ staticRenderFns: () =>
            /* binding */ staticRenderFns,
          /* harmony export */
        })
        var render = function () {
          var _vm = this
          var _h = _vm.$createElement
          var _c = _vm._self._c || _h
          return _c(
            'form',
            {
              staticClass: 'callback-form',
              on: {
                submit: function ($event) {
                  $event.preventDefault()
                  return _vm.send.apply(null, arguments)
                },
              },
            },
            [
              !_vm.sended
                ? _c('div', [
                    _c('h5', { staticClass: 'callback-form-title' }, [
                      _vm._v(_vm._s(_vm.data.title)),
                    ]),
                    _vm._v(' '),
                    _c('label', { staticClass: 'input-wrp' }, [
                      _c('input', {
                        directives: [
                          {
                            name: 'model',
                            rawName: 'v-model',
                            value: _vm.patient,
                            expression: 'patient',
                          },
                        ],
                        staticClass: 'input',
                        attrs: { type: 'text', name: 'patient', required: '' },
                        domProps: { value: _vm.patient },
                        on: {
                          input: function ($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.patient = $event.target.value
                          },
                        },
                      }),
                      _vm._v(' '),
                      _c('span', { staticClass: 'input-label' }, [
                        _vm._v(_vm._s(_vm.data.name_placeholder)),
                      ]),
                    ]),
                    _vm._v(' '),
                    _c('label', { staticClass: 'input-wrp' }, [
                      _c('input', {
                        directives: [
                          {
                            name: 'model',
                            rawName: 'v-model',
                            value: _vm.phone,
                            expression: 'phone',
                          },
                        ],
                        staticClass: 'input phone-mask',
                        attrs: { type: 'tel', name: 'phone', required: '' },
                        domProps: { value: _vm.phone },
                        on: {
                          input: function ($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.phone = $event.target.value
                          },
                        },
                      }),
                      _vm._v(' '),
                      _c('span', { staticClass: 'input-label' }, [
                        _vm._v(_vm._s(_vm.data.phone_placeholder)),
                      ]),
                    ]),
                    _vm._v(' '),
                    _vm.error
                      ? _c('p', { staticClass: 'input-error-txt' }, [
                          _vm._v(_vm._s(_vm.error)),
                        ])
                      : _vm._e(),
                    _vm._v(' '),
                    _c(
                      'label',
                      { staticClass: 'input-wrp' },
                      [
                        _c(
                          'date-picker',
                          {
                            attrs: {
                              placeholder: _vm.data.date_placeholder,
                              type: 'date',
                            },
                            model: {
                              value: _vm.time,
                              callback: function ($$v) {
                                _vm.time = $$v
                              },
                              expression: 'time',
                            },
                          },
                          [
                            _c('img', {
                              staticClass: 'input-icon',
                              attrs: {
                                slot: 'icon-calendar',
                                src: '/img/icons/calendar.svg',
                                alt: 'icon',
                              },
                              slot: 'icon-calendar',
                            }),
                            _vm._v(' '),
                            _c('i', {
                              attrs: { slot: 'calendar-icon' },
                              slot: 'calendar-icon',
                            }),
                          ]
                        ),
                      ],
                      1
                    ),
                    _vm._v(' '),
                    _vm.directions
                      ? _c('div', { staticClass: 'select-wrp' }, [
                          _c(
                            'select',
                            {
                              directives: [
                                {
                                  name: 'model',
                                  rawName: 'v-model',
                                  value: _vm.direction,
                                  expression: 'direction',
                                },
                              ],
                              staticClass: 'select',
                              attrs: { name: 'direction', required: '' },
                              on: {
                                change: function ($event) {
                                  var $$selectedVal = Array.prototype.filter
                                    .call($event.target.options, function (o) {
                                      return o.selected
                                    })
                                    .map(function (o) {
                                      var val =
                                        '_value' in o ? o._value : o.value
                                      return val
                                    })
                                  _vm.direction = $event.target.multiple
                                    ? $$selectedVal
                                    : $$selectedVal[0]
                                },
                              },
                            },
                            [
                              _c(
                                'option',
                                {
                                  attrs: { selected: '', disabled: '' },
                                  domProps: { value: null },
                                },
                                [
                                  _vm._v(
                                    _vm._s(_vm.data.directions_placeholder)
                                  ),
                                ]
                              ),
                              _vm._v(' '),
                              _vm._l(_vm.directions, function (item) {
                                return _c(
                                  'option',
                                  {
                                    key: item.id,
                                    domProps: { value: item.name },
                                  },
                                  [_vm._v(_vm._s(item.name))]
                                )
                              }),
                            ],
                            2
                          ),
                          _vm._v(' '),
                          _c('img', {
                            staticClass: 'select-arrow',
                            attrs: {
                              src: '/img/icons/select-arrow.svg',
                              alt: 'arrow',
                            },
                          }),
                        ])
                      : _vm._e(),
                    _vm._v(' '),
                    _vm.addresses
                      ? _c('div', { staticClass: 'select-wrp' }, [
                          _c(
                            'select',
                            {
                              directives: [
                                {
                                  name: 'model',
                                  rawName: 'v-model',
                                  value: _vm.addressId,
                                  expression: 'addressId',
                                },
                              ],
                              staticClass: 'select',
                              attrs: { name: 'direction', required: '' },
                              on: {
                                change: function ($event) {
                                  var $$selectedVal = Array.prototype.filter
                                    .call($event.target.options, function (o) {
                                      return o.selected
                                    })
                                    .map(function (o) {
                                      var val =
                                        '_value' in o ? o._value : o.value
                                      return val
                                    })
                                  _vm.addressId = $event.target.multiple
                                    ? $$selectedVal
                                    : $$selectedVal[0]
                                },
                              },
                            },
                            _vm._l(_vm.addresses, function (item, index) {
                              return _c(
                                'option',
                                { key: index, domProps: { value: index } },
                                [
                                  _vm._v(
                                    '\n                    ' +
                                      _vm._s(item) +
                                      '\n                '
                                  ),
                                ]
                              )
                            }),
                            0
                          ),
                          _vm._v(' '),
                          _c('img', {
                            staticClass: 'select-arrow',
                            attrs: {
                              src: '/img/icons/select-arrow.svg',
                              alt: 'arrow',
                            },
                          }),
                        ])
                      : _vm._e(),
                    _vm._v(' '),
                    _c('button', { staticClass: 'button' }, [
                      _vm._v(_vm._s(_vm.data.title)),
                    ]),
                    _vm._v(' '),
                    _c('p', { staticClass: 'callback-form-text' }, [
                      _vm._v(_vm._s(_vm.data.form_description)),
                    ]),
                  ])
                : _c('div', { staticClass: 'callback-form-success' }, [
                    _vm._v('\n        Заявка успешно отправлена\n    '),
                  ]),
            ]
          )
        }
        var staticRenderFns = []
        render._withStripped = true

        /***/
      },

    /***/ './node_modules/vue-loader/lib/runtime/componentNormalizer.js':
      /*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ normalizeComponent,
          /* harmony export */
        })
        /* globals __VUE_SSR_CONTEXT__ */

        // IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
        // This module is a runtime utility for cleaner component module output and will
        // be included in the final webpack user bundle.

        function normalizeComponent(
          scriptExports,
          render,
          staticRenderFns,
          functionalTemplate,
          injectStyles,
          scopeId,
          moduleIdentifier /* server only */,
          shadowMode /* vue-cli only */
        ) {
          // Vue.extend constructor export interop
          var options =
            typeof scriptExports === 'function'
              ? scriptExports.options
              : scriptExports

          // render functions
          if (render) {
            options.render = render
            options.staticRenderFns = staticRenderFns
            options._compiled = true
          }

          // functional template
          if (functionalTemplate) {
            options.functional = true
          }

          // scopedId
          if (scopeId) {
            options._scopeId = 'data-v-' + scopeId
          }

          var hook
          if (moduleIdentifier) {
            // server build
            hook = function (context) {
              // 2.3 injection
              context =
                context || // cached call
                (this.$vnode && this.$vnode.ssrContext) || // stateful
                (this.parent &&
                  this.parent.$vnode &&
                  this.parent.$vnode.ssrContext) // functional
              // 2.2 with runInNewContext: true
              if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__
              }
              // inject component styles
              if (injectStyles) {
                injectStyles.call(this, context)
              }
              // register component module identifier for async chunk inferrence
              if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier)
              }
            }
            // used by ssr in case component is cached and beforeCreate
            // never gets called
            options._ssrRegister = hook
          } else if (injectStyles) {
            hook = shadowMode
              ? function () {
                  injectStyles.call(
                    this,
                    (options.functional ? this.parent : this).$root.$options
                      .shadowRoot
                  )
                }
              : injectStyles
          }

          if (hook) {
            if (options.functional) {
              // for template-only hot-reload because in that case the render fn doesn't
              // go through the normalizer
              options._injectStyles = hook
              // register for functional component in vue file
              var originalRender = options.render
              options.render = function renderWithStyleInjection(h, context) {
                hook.call(context)
                return originalRender(h, context)
              }
            } else {
              // inject component registration as beforeCreate hook
              var existing = options.beforeCreate
              options.beforeCreate = existing
                ? [].concat(existing, hook)
                : [hook]
            }
          }

          return {
            exports: scriptExports,
            options: options,
          }
        }

        /***/
      },

    /***/ './node_modules/vue/dist/vue.esm.js':
      /*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /*!
         * Vue.js v2.6.14
         * (c) 2014-2021 Evan You
         * Released under the MIT License.
         */
        /*  */

        var emptyObject = Object.freeze({})

        // These helpers produce better VM code in JS engines due to their
        // explicitness and function inlining.
        function isUndef(v) {
          return v === undefined || v === null
        }

        function isDef(v) {
          return v !== undefined && v !== null
        }

        function isTrue(v) {
          return v === true
        }

        function isFalse(v) {
          return v === false
        }

        /**
         * Check if value is primitive.
         */
        function isPrimitive(value) {
          return (
            typeof value === 'string' ||
            typeof value === 'number' ||
            // $flow-disable-line
            typeof value === 'symbol' ||
            typeof value === 'boolean'
          )
        }

        /**
         * Quick object check - this is primarily used to tell
         * Objects from primitive values when we know the value
         * is a JSON-compliant type.
         */
        function isObject(obj) {
          return obj !== null && typeof obj === 'object'
        }

        /**
         * Get the raw type string of a value, e.g., [object Object].
         */
        var _toString = Object.prototype.toString

        function toRawType(value) {
          return _toString.call(value).slice(8, -1)
        }

        /**
         * Strict object type check. Only returns true
         * for plain JavaScript objects.
         */
        function isPlainObject(obj) {
          return _toString.call(obj) === '[object Object]'
        }

        function isRegExp(v) {
          return _toString.call(v) === '[object RegExp]'
        }

        /**
         * Check if val is a valid array index.
         */
        function isValidArrayIndex(val) {
          var n = parseFloat(String(val))
          return n >= 0 && Math.floor(n) === n && isFinite(val)
        }

        function isPromise(val) {
          return (
            isDef(val) &&
            typeof val.then === 'function' &&
            typeof val.catch === 'function'
          )
        }

        /**
         * Convert a value to a string that is actually rendered.
         */
        function toString(val) {
          return val == null
            ? ''
            : Array.isArray(val) ||
              (isPlainObject(val) && val.toString === _toString)
            ? JSON.stringify(val, null, 2)
            : String(val)
        }

        /**
         * Convert an input value to a number for persistence.
         * If the conversion fails, return original string.
         */
        function toNumber(val) {
          var n = parseFloat(val)
          return isNaN(n) ? val : n
        }

        /**
         * Make a map and return a function for checking if a key
         * is in that map.
         */
        function makeMap(str, expectsLowerCase) {
          var map = Object.create(null)
          var list = str.split(',')
          for (var i = 0; i < list.length; i++) {
            map[list[i]] = true
          }
          return expectsLowerCase
            ? function (val) {
                return map[val.toLowerCase()]
              }
            : function (val) {
                return map[val]
              }
        }

        /**
         * Check if a tag is a built-in tag.
         */
        var isBuiltInTag = makeMap('slot,component', true)

        /**
         * Check if an attribute is a reserved attribute.
         */
        var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is')

        /**
         * Remove an item from an array.
         */
        function remove(arr, item) {
          if (arr.length) {
            var index = arr.indexOf(item)
            if (index > -1) {
              return arr.splice(index, 1)
            }
          }
        }

        /**
         * Check whether an object has the property.
         */
        var hasOwnProperty = Object.prototype.hasOwnProperty
        function hasOwn(obj, key) {
          return hasOwnProperty.call(obj, key)
        }

        /**
         * Create a cached version of a pure function.
         */
        function cached(fn) {
          var cache = Object.create(null)
          return function cachedFn(str) {
            var hit = cache[str]
            return hit || (cache[str] = fn(str))
          }
        }

        /**
         * Camelize a hyphen-delimited string.
         */
        var camelizeRE = /-(\w)/g
        var camelize = cached(function (str) {
          return str.replace(camelizeRE, function (_, c) {
            return c ? c.toUpperCase() : ''
          })
        })

        /**
         * Capitalize a string.
         */
        var capitalize = cached(function (str) {
          return str.charAt(0).toUpperCase() + str.slice(1)
        })

        /**
         * Hyphenate a camelCase string.
         */
        var hyphenateRE = /\B([A-Z])/g
        var hyphenate = cached(function (str) {
          return str.replace(hyphenateRE, '-$1').toLowerCase()
        })

        /**
         * Simple bind polyfill for environments that do not support it,
         * e.g., PhantomJS 1.x. Technically, we don't need this anymore
         * since native bind is now performant enough in most browsers.
         * But removing it would mean breaking code that was able to run in
         * PhantomJS 1.x, so this must be kept for backward compatibility.
         */

        /* istanbul ignore next */
        function polyfillBind(fn, ctx) {
          function boundFn(a) {
            var l = arguments.length
            return l
              ? l > 1
                ? fn.apply(ctx, arguments)
                : fn.call(ctx, a)
              : fn.call(ctx)
          }

          boundFn._length = fn.length
          return boundFn
        }

        function nativeBind(fn, ctx) {
          return fn.bind(ctx)
        }

        var bind = Function.prototype.bind ? nativeBind : polyfillBind

        /**
         * Convert an Array-like object to a real Array.
         */
        function toArray(list, start) {
          start = start || 0
          var i = list.length - start
          var ret = new Array(i)
          while (i--) {
            ret[i] = list[i + start]
          }
          return ret
        }

        /**
         * Mix properties into target object.
         */
        function extend(to, _from) {
          for (var key in _from) {
            to[key] = _from[key]
          }
          return to
        }

        /**
         * Merge an Array of Objects into a single Object.
         */
        function toObject(arr) {
          var res = {}
          for (var i = 0; i < arr.length; i++) {
            if (arr[i]) {
              extend(res, arr[i])
            }
          }
          return res
        }

        /* eslint-disable no-unused-vars */

        /**
         * Perform no operation.
         * Stubbing args to make Flow happy without leaving useless transpiled code
         * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
         */
        function noop(a, b, c) {}

        /**
         * Always return false.
         */
        var no = function (a, b, c) {
          return false
        }

        /* eslint-enable no-unused-vars */

        /**
         * Return the same value.
         */
        var identity = function (_) {
          return _
        }

        /**
         * Generate a string containing static keys from compiler modules.
         */
        function genStaticKeys(modules) {
          return modules
            .reduce(function (keys, m) {
              return keys.concat(m.staticKeys || [])
            }, [])
            .join(',')
        }

        /**
         * Check if two values are loosely equal - that is,
         * if they are plain objects, do they have the same shape?
         */
        function looseEqual(a, b) {
          if (a === b) {
            return true
          }
          var isObjectA = isObject(a)
          var isObjectB = isObject(b)
          if (isObjectA && isObjectB) {
            try {
              var isArrayA = Array.isArray(a)
              var isArrayB = Array.isArray(b)
              if (isArrayA && isArrayB) {
                return (
                  a.length === b.length &&
                  a.every(function (e, i) {
                    return looseEqual(e, b[i])
                  })
                )
              } else if (a instanceof Date && b instanceof Date) {
                return a.getTime() === b.getTime()
              } else if (!isArrayA && !isArrayB) {
                var keysA = Object.keys(a)
                var keysB = Object.keys(b)
                return (
                  keysA.length === keysB.length &&
                  keysA.every(function (key) {
                    return looseEqual(a[key], b[key])
                  })
                )
              } else {
                /* istanbul ignore next */
                return false
              }
            } catch (e) {
              /* istanbul ignore next */
              return false
            }
          } else if (!isObjectA && !isObjectB) {
            return String(a) === String(b)
          } else {
            return false
          }
        }

        /**
         * Return the first index at which a loosely equal value can be
         * found in the array (if value is a plain object, the array must
         * contain an object of the same shape), or -1 if it is not present.
         */
        function looseIndexOf(arr, val) {
          for (var i = 0; i < arr.length; i++) {
            if (looseEqual(arr[i], val)) {
              return i
            }
          }
          return -1
        }

        /**
         * Ensure a function is called only once.
         */
        function once(fn) {
          var called = false
          return function () {
            if (!called) {
              called = true
              fn.apply(this, arguments)
            }
          }
        }

        var SSR_ATTR = 'data-server-rendered'

        var ASSET_TYPES = ['component', 'directive', 'filter']

        var LIFECYCLE_HOOKS = [
          'beforeCreate',
          'created',
          'beforeMount',
          'mounted',
          'beforeUpdate',
          'updated',
          'beforeDestroy',
          'destroyed',
          'activated',
          'deactivated',
          'errorCaptured',
          'serverPrefetch',
        ]

        /*  */

        var config = {
          /**
           * Option merge strategies (used in core/util/options)
           */
          // $flow-disable-line
          optionMergeStrategies: Object.create(null),

          /**
           * Whether to suppress warnings.
           */
          silent: false,

          /**
           * Show production mode tip message on boot?
           */
          productionTip: 'development' !== 'production',

          /**
           * Whether to enable devtools
           */
          devtools: 'development' !== 'production',

          /**
           * Whether to record perf
           */
          performance: false,

          /**
           * Error handler for watcher errors
           */
          errorHandler: null,

          /**
           * Warn handler for watcher warns
           */
          warnHandler: null,

          /**
           * Ignore certain custom elements
           */
          ignoredElements: [],

          /**
           * Custom user key aliases for v-on
           */
          // $flow-disable-line
          keyCodes: Object.create(null),

          /**
           * Check if a tag is reserved so that it cannot be registered as a
           * component. This is platform-dependent and may be overwritten.
           */
          isReservedTag: no,

          /**
           * Check if an attribute is reserved so that it cannot be used as a component
           * prop. This is platform-dependent and may be overwritten.
           */
          isReservedAttr: no,

          /**
           * Check if a tag is an unknown element.
           * Platform-dependent.
           */
          isUnknownElement: no,

          /**
           * Get the namespace of an element
           */
          getTagNamespace: noop,

          /**
           * Parse the real tag name for the specific platform.
           */
          parsePlatformTagName: identity,

          /**
           * Check if an attribute must be bound using property, e.g. value
           * Platform-dependent.
           */
          mustUseProp: no,

          /**
           * Perform updates asynchronously. Intended to be used by Vue Test Utils
           * This will significantly reduce performance if set to false.
           */
          async: true,

          /**
           * Exposed for legacy reasons
           */
          _lifecycleHooks: LIFECYCLE_HOOKS,
        }

        /*  */

        /**
         * unicode letters used for parsing html tags, component names and property paths.
         * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
         * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
         */
        var unicodeRegExp =
          /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/

        /**
         * Check if a string starts with $ or _
         */
        function isReserved(str) {
          var c = (str + '').charCodeAt(0)
          return c === 0x24 || c === 0x5f
        }

        /**
         * Define a property.
         */
        function def(obj, key, val, enumerable) {
          Object.defineProperty(obj, key, {
            value: val,
            enumerable: !!enumerable,
            writable: true,
            configurable: true,
          })
        }

        /**
         * Parse simple path.
         */
        var bailRE = new RegExp('[^' + unicodeRegExp.source + '.$_\\d]')
        function parsePath(path) {
          if (bailRE.test(path)) {
            return
          }
          var segments = path.split('.')
          return function (obj) {
            for (var i = 0; i < segments.length; i++) {
              if (!obj) {
                return
              }
              obj = obj[segments[i]]
            }
            return obj
          }
        }

        /*  */

        // can we use __proto__?
        var hasProto = '__proto__' in {}

        // Browser environment sniffing
        var inBrowser = typeof window !== 'undefined'
        var inWeex =
          typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform
        var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase()
        var UA = inBrowser && window.navigator.userAgent.toLowerCase()
        var isIE = UA && /msie|trident/.test(UA)
        var isIE9 = UA && UA.indexOf('msie 9.0') > 0
        var isEdge = UA && UA.indexOf('edge/') > 0
        var isAndroid =
          (UA && UA.indexOf('android') > 0) || weexPlatform === 'android'
        var isIOS =
          (UA && /iphone|ipad|ipod|ios/.test(UA)) || weexPlatform === 'ios'
        var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge
        var isPhantomJS = UA && /phantomjs/.test(UA)
        var isFF = UA && UA.match(/firefox\/(\d+)/)

        // Firefox has a "watch" function on Object.prototype...
        var nativeWatch = {}.watch

        var supportsPassive = false
        if (inBrowser) {
          try {
            var opts = {}
            Object.defineProperty(opts, 'passive', {
              get: function get() {
                /* istanbul ignore next */
                supportsPassive = true
              },
            }) // https://github.com/facebook/flow/issues/285
            window.addEventListener('test-passive', null, opts)
          } catch (e) {}
        }

        // this needs to be lazy-evaled because vue may be required before
        // vue-server-renderer can set VUE_ENV
        var _isServer
        var isServerRendering = function () {
          if (_isServer === undefined) {
            /* istanbul ignore if */
            if (
              !inBrowser &&
              !inWeex &&
              typeof __webpack_require__.g !== 'undefined'
            ) {
              // detect presence of vue-server-renderer and avoid
              // Webpack shimming the process
              _isServer =
                __webpack_require__.g['process'] &&
                __webpack_require__.g['process'].env.VUE_ENV === 'server'
            } else {
              _isServer = false
            }
          }
          return _isServer
        }

        // detect devtools
        var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__

        /* istanbul ignore next */
        function isNative(Ctor) {
          return (
            typeof Ctor === 'function' && /native code/.test(Ctor.toString())
          )
        }

        var hasSymbol =
          typeof Symbol !== 'undefined' &&
          isNative(Symbol) &&
          typeof Reflect !== 'undefined' &&
          isNative(Reflect.ownKeys)

        var _Set
        /* istanbul ignore if */ // $flow-disable-line
        if (typeof Set !== 'undefined' && isNative(Set)) {
          // use native Set when available.
          _Set = Set
        } else {
          // a non-standard Set polyfill that only works with primitive keys.
          _Set = /*@__PURE__*/ (function () {
            function Set() {
              this.set = Object.create(null)
            }
            Set.prototype.has = function has(key) {
              return this.set[key] === true
            }
            Set.prototype.add = function add(key) {
              this.set[key] = true
            }
            Set.prototype.clear = function clear() {
              this.set = Object.create(null)
            }

            return Set
          })()
        }

        /*  */

        var warn = noop
        var tip = noop
        var generateComponentTrace = noop // work around flow check
        var formatComponentName = noop

        if (true) {
          var hasConsole = typeof console !== 'undefined'
          var classifyRE = /(?:^|[-_])(\w)/g
          var classify = function (str) {
            return str
              .replace(classifyRE, function (c) {
                return c.toUpperCase()
              })
              .replace(/[-_]/g, '')
          }

          warn = function (msg, vm) {
            var trace = vm ? generateComponentTrace(vm) : ''

            if (config.warnHandler) {
              config.warnHandler.call(null, msg, vm, trace)
            } else if (hasConsole && !config.silent) {
              console.error('[Vue warn]: ' + msg + trace)
            }
          }

          tip = function (msg, vm) {
            if (hasConsole && !config.silent) {
              console.warn(
                '[Vue tip]: ' + msg + (vm ? generateComponentTrace(vm) : '')
              )
            }
          }

          formatComponentName = function (vm, includeFile) {
            if (vm.$root === vm) {
              return '<Root>'
            }
            var options =
              typeof vm === 'function' && vm.cid != null
                ? vm.options
                : vm._isVue
                ? vm.$options || vm.constructor.options
                : vm
            var name = options.name || options._componentTag
            var file = options.__file
            if (!name && file) {
              var match = file.match(/([^/\\]+)\.vue$/)
              name = match && match[1]
            }

            return (
              (name ? '<' + classify(name) + '>' : '<Anonymous>') +
              (file && includeFile !== false ? ' at ' + file : '')
            )
          }

          var repeat = function (str, n) {
            var res = ''
            while (n) {
              if (n % 2 === 1) {
                res += str
              }
              if (n > 1) {
                str += str
              }
              n >>= 1
            }
            return res
          }

          generateComponentTrace = function (vm) {
            if (vm._isVue && vm.$parent) {
              var tree = []
              var currentRecursiveSequence = 0
              while (vm) {
                if (tree.length > 0) {
                  var last = tree[tree.length - 1]
                  if (last.constructor === vm.constructor) {
                    currentRecursiveSequence++
                    vm = vm.$parent
                    continue
                  } else if (currentRecursiveSequence > 0) {
                    tree[tree.length - 1] = [last, currentRecursiveSequence]
                    currentRecursiveSequence = 0
                  }
                }
                tree.push(vm)
                vm = vm.$parent
              }
              return (
                '\n\nfound in\n\n' +
                tree
                  .map(function (vm, i) {
                    return (
                      '' +
                      (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) +
                      (Array.isArray(vm)
                        ? formatComponentName(vm[0]) +
                          '... (' +
                          vm[1] +
                          ' recursive calls)'
                        : formatComponentName(vm))
                    )
                  })
                  .join('\n')
              )
            } else {
              return '\n\n(found in ' + formatComponentName(vm) + ')'
            }
          }
        }

        /*  */

        var uid = 0

        /**
         * A dep is an observable that can have multiple
         * directives subscribing to it.
         */
        var Dep = function Dep() {
          this.id = uid++
          this.subs = []
        }

        Dep.prototype.addSub = function addSub(sub) {
          this.subs.push(sub)
        }

        Dep.prototype.removeSub = function removeSub(sub) {
          remove(this.subs, sub)
        }

        Dep.prototype.depend = function depend() {
          if (Dep.target) {
            Dep.target.addDep(this)
          }
        }

        Dep.prototype.notify = function notify() {
          // stabilize the subscriber list first
          var subs = this.subs.slice()
          if (true && !config.async) {
            // subs aren't sorted in scheduler if not running async
            // we need to sort them now to make sure they fire in correct
            // order
            subs.sort(function (a, b) {
              return a.id - b.id
            })
          }
          for (var i = 0, l = subs.length; i < l; i++) {
            subs[i].update()
          }
        }

        // The current target watcher being evaluated.
        // This is globally unique because only one watcher
        // can be evaluated at a time.
        Dep.target = null
        var targetStack = []

        function pushTarget(target) {
          targetStack.push(target)
          Dep.target = target
        }

        function popTarget() {
          targetStack.pop()
          Dep.target = targetStack[targetStack.length - 1]
        }

        /*  */

        var VNode = function VNode(
          tag,
          data,
          children,
          text,
          elm,
          context,
          componentOptions,
          asyncFactory
        ) {
          this.tag = tag
          this.data = data
          this.children = children
          this.text = text
          this.elm = elm
          this.ns = undefined
          this.context = context
          this.fnContext = undefined
          this.fnOptions = undefined
          this.fnScopeId = undefined
          this.key = data && data.key
          this.componentOptions = componentOptions
          this.componentInstance = undefined
          this.parent = undefined
          this.raw = false
          this.isStatic = false
          this.isRootInsert = true
          this.isComment = false
          this.isCloned = false
          this.isOnce = false
          this.asyncFactory = asyncFactory
          this.asyncMeta = undefined
          this.isAsyncPlaceholder = false
        }

        var prototypeAccessors = { child: { configurable: true } }

        // DEPRECATED: alias for componentInstance for backwards compat.
        /* istanbul ignore next */
        prototypeAccessors.child.get = function () {
          return this.componentInstance
        }

        Object.defineProperties(VNode.prototype, prototypeAccessors)

        var createEmptyVNode = function (text) {
          if (text === void 0) text = ''

          var node = new VNode()
          node.text = text
          node.isComment = true
          return node
        }

        function createTextVNode(val) {
          return new VNode(undefined, undefined, undefined, String(val))
        }

        // optimized shallow clone
        // used for static nodes and slot nodes because they may be reused across
        // multiple renders, cloning them avoids errors when DOM manipulations rely
        // on their elm reference.
        function cloneVNode(vnode) {
          var cloned = new VNode(
            vnode.tag,
            vnode.data,
            // #7975
            // clone children array to avoid mutating original in case of cloning
            // a child.
            vnode.children && vnode.children.slice(),
            vnode.text,
            vnode.elm,
            vnode.context,
            vnode.componentOptions,
            vnode.asyncFactory
          )
          cloned.ns = vnode.ns
          cloned.isStatic = vnode.isStatic
          cloned.key = vnode.key
          cloned.isComment = vnode.isComment
          cloned.fnContext = vnode.fnContext
          cloned.fnOptions = vnode.fnOptions
          cloned.fnScopeId = vnode.fnScopeId
          cloned.asyncMeta = vnode.asyncMeta
          cloned.isCloned = true
          return cloned
        }

        /*
         * not type checking this file because flow doesn't play well with
         * dynamically accessing methods on Array prototype
         */

        var arrayProto = Array.prototype
        var arrayMethods = Object.create(arrayProto)

        var methodsToPatch = [
          'push',
          'pop',
          'shift',
          'unshift',
          'splice',
          'sort',
          'reverse',
        ]

        /**
         * Intercept mutating methods and emit events
         */
        methodsToPatch.forEach(function (method) {
          // cache original method
          var original = arrayProto[method]
          def(arrayMethods, method, function mutator() {
            var args = [],
              len = arguments.length
            while (len--) args[len] = arguments[len]

            var result = original.apply(this, args)
            var ob = this.__ob__
            var inserted
            switch (method) {
              case 'push':
              case 'unshift':
                inserted = args
                break
              case 'splice':
                inserted = args.slice(2)
                break
            }
            if (inserted) {
              ob.observeArray(inserted)
            }
            // notify change
            ob.dep.notify()
            return result
          })
        })

        /*  */

        var arrayKeys = Object.getOwnPropertyNames(arrayMethods)

        /**
         * In some cases we may want to disable observation inside a component's
         * update computation.
         */
        var shouldObserve = true

        function toggleObserving(value) {
          shouldObserve = value
        }

        /**
         * Observer class that is attached to each observed
         * object. Once attached, the observer converts the target
         * object's property keys into getter/setters that
         * collect dependencies and dispatch updates.
         */
        var Observer = function Observer(value) {
          this.value = value
          this.dep = new Dep()
          this.vmCount = 0
          def(value, '__ob__', this)
          if (Array.isArray(value)) {
            if (hasProto) {
              protoAugment(value, arrayMethods)
            } else {
              copyAugment(value, arrayMethods, arrayKeys)
            }
            this.observeArray(value)
          } else {
            this.walk(value)
          }
        }

        /**
         * Walk through all properties and convert them into
         * getter/setters. This method should only be called when
         * value type is Object.
         */
        Observer.prototype.walk = function walk(obj) {
          var keys = Object.keys(obj)
          for (var i = 0; i < keys.length; i++) {
            defineReactive$$1(obj, keys[i])
          }
        }

        /**
         * Observe a list of Array items.
         */
        Observer.prototype.observeArray = function observeArray(items) {
          for (var i = 0, l = items.length; i < l; i++) {
            observe(items[i])
          }
        }

        // helpers

        /**
         * Augment a target Object or Array by intercepting
         * the prototype chain using __proto__
         */
        function protoAugment(target, src) {
          /* eslint-disable no-proto */
          target.__proto__ = src
          /* eslint-enable no-proto */
        }

        /**
         * Augment a target Object or Array by defining
         * hidden properties.
         */
        /* istanbul ignore next */
        function copyAugment(target, src, keys) {
          for (var i = 0, l = keys.length; i < l; i++) {
            var key = keys[i]
            def(target, key, src[key])
          }
        }

        /**
         * Attempt to create an observer instance for a value,
         * returns the new observer if successfully observed,
         * or the existing observer if the value already has one.
         */
        function observe(value, asRootData) {
          if (!isObject(value) || value instanceof VNode) {
            return
          }
          var ob
          if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
            ob = value.__ob__
          } else if (
            shouldObserve &&
            !isServerRendering() &&
            (Array.isArray(value) || isPlainObject(value)) &&
            Object.isExtensible(value) &&
            !value._isVue
          ) {
            ob = new Observer(value)
          }
          if (asRootData && ob) {
            ob.vmCount++
          }
          return ob
        }

        /**
         * Define a reactive property on an Object.
         */
        function defineReactive$$1(obj, key, val, customSetter, shallow) {
          var dep = new Dep()

          var property = Object.getOwnPropertyDescriptor(obj, key)
          if (property && property.configurable === false) {
            return
          }

          // cater for pre-defined getter/setters
          var getter = property && property.get
          var setter = property && property.set
          if ((!getter || setter) && arguments.length === 2) {
            val = obj[key]
          }

          var childOb = !shallow && observe(val)
          Object.defineProperty(obj, key, {
            enumerable: true,
            configurable: true,
            get: function reactiveGetter() {
              var value = getter ? getter.call(obj) : val
              if (Dep.target) {
                dep.depend()
                if (childOb) {
                  childOb.dep.depend()
                  if (Array.isArray(value)) {
                    dependArray(value)
                  }
                }
              }
              return value
            },
            set: function reactiveSetter(newVal) {
              var value = getter ? getter.call(obj) : val
              /* eslint-disable no-self-compare */
              if (newVal === value || (newVal !== newVal && value !== value)) {
                return
              }
              /* eslint-enable no-self-compare */
              if (true && customSetter) {
                customSetter()
              }
              // #7981: for accessor properties without setter
              if (getter && !setter) {
                return
              }
              if (setter) {
                setter.call(obj, newVal)
              } else {
                val = newVal
              }
              childOb = !shallow && observe(newVal)
              dep.notify()
            },
          })
        }

        /**
         * Set a property on an object. Adds the new property and
         * triggers change notification if the property doesn't
         * already exist.
         */
        function set(target, key, val) {
          if (true && (isUndef(target) || isPrimitive(target))) {
            warn(
              'Cannot set reactive property on undefined, null, or primitive value: ' +
                target
            )
          }
          if (Array.isArray(target) && isValidArrayIndex(key)) {
            target.length = Math.max(target.length, key)
            target.splice(key, 1, val)
            return val
          }
          if (key in target && !(key in Object.prototype)) {
            target[key] = val
            return val
          }
          var ob = target.__ob__
          if (target._isVue || (ob && ob.vmCount)) {
            true &&
              warn(
                'Avoid adding reactive properties to a Vue instance or its root $data ' +
                  'at runtime - declare it upfront in the data option.'
              )
            return val
          }
          if (!ob) {
            target[key] = val
            return val
          }
          defineReactive$$1(ob.value, key, val)
          ob.dep.notify()
          return val
        }

        /**
         * Delete a property and trigger change if necessary.
         */
        function del(target, key) {
          if (true && (isUndef(target) || isPrimitive(target))) {
            warn(
              'Cannot delete reactive property on undefined, null, or primitive value: ' +
                target
            )
          }
          if (Array.isArray(target) && isValidArrayIndex(key)) {
            target.splice(key, 1)
            return
          }
          var ob = target.__ob__
          if (target._isVue || (ob && ob.vmCount)) {
            true &&
              warn(
                'Avoid deleting properties on a Vue instance or its root $data ' +
                  '- just set it to null.'
              )
            return
          }
          if (!hasOwn(target, key)) {
            return
          }
          delete target[key]
          if (!ob) {
            return
          }
          ob.dep.notify()
        }

        /**
         * Collect dependencies on array elements when the array is touched, since
         * we cannot intercept array element access like property getters.
         */
        function dependArray(value) {
          for (var e = void 0, i = 0, l = value.length; i < l; i++) {
            e = value[i]
            e && e.__ob__ && e.__ob__.dep.depend()
            if (Array.isArray(e)) {
              dependArray(e)
            }
          }
        }

        /*  */

        /**
         * Option overwriting strategies are functions that handle
         * how to merge a parent option value and a child option
         * value into the final value.
         */
        var strats = config.optionMergeStrategies

        /**
         * Options with restrictions
         */
        if (true) {
          strats.el = strats.propsData = function (parent, child, vm, key) {
            if (!vm) {
              warn(
                'option "' +
                  key +
                  '" can only be used during instance ' +
                  'creation with the `new` keyword.'
              )
            }
            return defaultStrat(parent, child)
          }
        }

        /**
         * Helper that recursively merges two data objects together.
         */
        function mergeData(to, from) {
          if (!from) {
            return to
          }
          var key, toVal, fromVal

          var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from)

          for (var i = 0; i < keys.length; i++) {
            key = keys[i]
            // in case the object is already observed...
            if (key === '__ob__') {
              continue
            }
            toVal = to[key]
            fromVal = from[key]
            if (!hasOwn(to, key)) {
              set(to, key, fromVal)
            } else if (
              toVal !== fromVal &&
              isPlainObject(toVal) &&
              isPlainObject(fromVal)
            ) {
              mergeData(toVal, fromVal)
            }
          }
          return to
        }

        /**
         * Data
         */
        function mergeDataOrFn(parentVal, childVal, vm) {
          if (!vm) {
            // in a Vue.extend merge, both should be functions
            if (!childVal) {
              return parentVal
            }
            if (!parentVal) {
              return childVal
            }
            // when parentVal & childVal are both present,
            // we need to return a function that returns the
            // merged result of both functions... no need to
            // check if parentVal is a function here because
            // it has to be a function to pass previous merges.
            return function mergedDataFn() {
              return mergeData(
                typeof childVal === 'function'
                  ? childVal.call(this, this)
                  : childVal,
                typeof parentVal === 'function'
                  ? parentVal.call(this, this)
                  : parentVal
              )
            }
          } else {
            return function mergedInstanceDataFn() {
              // instance merge
              var instanceData =
                typeof childVal === 'function'
                  ? childVal.call(vm, vm)
                  : childVal
              var defaultData =
                typeof parentVal === 'function'
                  ? parentVal.call(vm, vm)
                  : parentVal
              if (instanceData) {
                return mergeData(instanceData, defaultData)
              } else {
                return defaultData
              }
            }
          }
        }

        strats.data = function (parentVal, childVal, vm) {
          if (!vm) {
            if (childVal && typeof childVal !== 'function') {
              true &&
                warn(
                  'The "data" option should be a function ' +
                    'that returns a per-instance value in component ' +
                    'definitions.',
                  vm
                )

              return parentVal
            }
            return mergeDataOrFn(parentVal, childVal)
          }

          return mergeDataOrFn(parentVal, childVal, vm)
        }

        /**
         * Hooks and props are merged as arrays.
         */
        function mergeHook(parentVal, childVal) {
          var res = childVal
            ? parentVal
              ? parentVal.concat(childVal)
              : Array.isArray(childVal)
              ? childVal
              : [childVal]
            : parentVal
          return res ? dedupeHooks(res) : res
        }

        function dedupeHooks(hooks) {
          var res = []
          for (var i = 0; i < hooks.length; i++) {
            if (res.indexOf(hooks[i]) === -1) {
              res.push(hooks[i])
            }
          }
          return res
        }

        LIFECYCLE_HOOKS.forEach(function (hook) {
          strats[hook] = mergeHook
        })

        /**
         * Assets
         *
         * When a vm is present (instance creation), we need to do
         * a three-way merge between constructor options, instance
         * options and parent options.
         */
        function mergeAssets(parentVal, childVal, vm, key) {
          var res = Object.create(parentVal || null)
          if (childVal) {
            true && assertObjectType(key, childVal, vm)
            return extend(res, childVal)
          } else {
            return res
          }
        }

        ASSET_TYPES.forEach(function (type) {
          strats[type + 's'] = mergeAssets
        })

        /**
         * Watchers.
         *
         * Watchers hashes should not overwrite one
         * another, so we merge them as arrays.
         */
        strats.watch = function (parentVal, childVal, vm, key) {
          // work around Firefox's Object.prototype.watch...
          if (parentVal === nativeWatch) {
            parentVal = undefined
          }
          if (childVal === nativeWatch) {
            childVal = undefined
          }
          /* istanbul ignore if */
          if (!childVal) {
            return Object.create(parentVal || null)
          }
          if (true) {
            assertObjectType(key, childVal, vm)
          }
          if (!parentVal) {
            return childVal
          }
          var ret = {}
          extend(ret, parentVal)
          for (var key$1 in childVal) {
            var parent = ret[key$1]
            var child = childVal[key$1]
            if (parent && !Array.isArray(parent)) {
              parent = [parent]
            }
            ret[key$1] = parent
              ? parent.concat(child)
              : Array.isArray(child)
              ? child
              : [child]
          }
          return ret
        }

        /**
         * Other object hashes.
         */
        strats.props =
          strats.methods =
          strats.inject =
          strats.computed =
            function (parentVal, childVal, vm, key) {
              if (childVal && 'development' !== 'production') {
                assertObjectType(key, childVal, vm)
              }
              if (!parentVal) {
                return childVal
              }
              var ret = Object.create(null)
              extend(ret, parentVal)
              if (childVal) {
                extend(ret, childVal)
              }
              return ret
            }
        strats.provide = mergeDataOrFn

        /**
         * Default strategy.
         */
        var defaultStrat = function (parentVal, childVal) {
          return childVal === undefined ? parentVal : childVal
        }

        /**
         * Validate component names
         */
        function checkComponents(options) {
          for (var key in options.components) {
            validateComponentName(key)
          }
        }

        function validateComponentName(name) {
          if (
            !new RegExp(
              '^[a-zA-Z][\\-\\.0-9_' + unicodeRegExp.source + ']*$'
            ).test(name)
          ) {
            warn(
              'Invalid component name: "' +
                name +
                '". Component names ' +
                'should conform to valid custom element name in html5 specification.'
            )
          }
          if (isBuiltInTag(name) || config.isReservedTag(name)) {
            warn(
              'Do not use built-in or reserved HTML elements as component ' +
                'id: ' +
                name
            )
          }
        }

        /**
         * Ensure all props option syntax are normalized into the
         * Object-based format.
         */
        function normalizeProps(options, vm) {
          var props = options.props
          if (!props) {
            return
          }
          var res = {}
          var i, val, name
          if (Array.isArray(props)) {
            i = props.length
            while (i--) {
              val = props[i]
              if (typeof val === 'string') {
                name = camelize(val)
                res[name] = { type: null }
              } else if (true) {
                warn('props must be strings when using array syntax.')
              }
            }
          } else if (isPlainObject(props)) {
            for (var key in props) {
              val = props[key]
              name = camelize(key)
              res[name] = isPlainObject(val) ? val : { type: val }
            }
          } else if (true) {
            warn(
              'Invalid value for option "props": expected an Array or an Object, ' +
                'but got ' +
                toRawType(props) +
                '.',
              vm
            )
          }
          options.props = res
        }

        /**
         * Normalize all injections into Object-based format
         */
        function normalizeInject(options, vm) {
          var inject = options.inject
          if (!inject) {
            return
          }
          var normalized = (options.inject = {})
          if (Array.isArray(inject)) {
            for (var i = 0; i < inject.length; i++) {
              normalized[inject[i]] = { from: inject[i] }
            }
          } else if (isPlainObject(inject)) {
            for (var key in inject) {
              var val = inject[key]
              normalized[key] = isPlainObject(val)
                ? extend({ from: key }, val)
                : { from: val }
            }
          } else if (true) {
            warn(
              'Invalid value for option "inject": expected an Array or an Object, ' +
                'but got ' +
                toRawType(inject) +
                '.',
              vm
            )
          }
        }

        /**
         * Normalize raw function directives into object format.
         */
        function normalizeDirectives(options) {
          var dirs = options.directives
          if (dirs) {
            for (var key in dirs) {
              var def$$1 = dirs[key]
              if (typeof def$$1 === 'function') {
                dirs[key] = { bind: def$$1, update: def$$1 }
              }
            }
          }
        }

        function assertObjectType(name, value, vm) {
          if (!isPlainObject(value)) {
            warn(
              'Invalid value for option "' +
                name +
                '": expected an Object, ' +
                'but got ' +
                toRawType(value) +
                '.',
              vm
            )
          }
        }

        /**
         * Merge two option objects into a new one.
         * Core utility used in both instantiation and inheritance.
         */
        function mergeOptions(parent, child, vm) {
          if (true) {
            checkComponents(child)
          }

          if (typeof child === 'function') {
            child = child.options
          }

          normalizeProps(child, vm)
          normalizeInject(child, vm)
          normalizeDirectives(child)

          // Apply extends and mixins on the child options,
          // but only if it is a raw options object that isn't
          // the result of another mergeOptions call.
          // Only merged options has the _base property.
          if (!child._base) {
            if (child.extends) {
              parent = mergeOptions(parent, child.extends, vm)
            }
            if (child.mixins) {
              for (var i = 0, l = child.mixins.length; i < l; i++) {
                parent = mergeOptions(parent, child.mixins[i], vm)
              }
            }
          }

          var options = {}
          var key
          for (key in parent) {
            mergeField(key)
          }
          for (key in child) {
            if (!hasOwn(parent, key)) {
              mergeField(key)
            }
          }
          function mergeField(key) {
            var strat = strats[key] || defaultStrat
            options[key] = strat(parent[key], child[key], vm, key)
          }
          return options
        }

        /**
         * Resolve an asset.
         * This function is used because child instances need access
         * to assets defined in its ancestor chain.
         */
        function resolveAsset(options, type, id, warnMissing) {
          /* istanbul ignore if */
          if (typeof id !== 'string') {
            return
          }
          var assets = options[type]
          // check local registration variations first
          if (hasOwn(assets, id)) {
            return assets[id]
          }
          var camelizedId = camelize(id)
          if (hasOwn(assets, camelizedId)) {
            return assets[camelizedId]
          }
          var PascalCaseId = capitalize(camelizedId)
          if (hasOwn(assets, PascalCaseId)) {
            return assets[PascalCaseId]
          }
          // fallback to prototype chain
          var res = assets[id] || assets[camelizedId] || assets[PascalCaseId]
          if (true && warnMissing && !res) {
            warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options)
          }
          return res
        }

        /*  */

        function validateProp(key, propOptions, propsData, vm) {
          var prop = propOptions[key]
          var absent = !hasOwn(propsData, key)
          var value = propsData[key]
          // boolean casting
          var booleanIndex = getTypeIndex(Boolean, prop.type)
          if (booleanIndex > -1) {
            if (absent && !hasOwn(prop, 'default')) {
              value = false
            } else if (value === '' || value === hyphenate(key)) {
              // only cast empty string / same name to boolean if
              // boolean has higher priority
              var stringIndex = getTypeIndex(String, prop.type)
              if (stringIndex < 0 || booleanIndex < stringIndex) {
                value = true
              }
            }
          }
          // check default value
          if (value === undefined) {
            value = getPropDefaultValue(vm, prop, key)
            // since the default value is a fresh copy,
            // make sure to observe it.
            var prevShouldObserve = shouldObserve
            toggleObserving(true)
            observe(value)
            toggleObserving(prevShouldObserve)
          }
          if (true) {
            assertProp(prop, key, value, vm, absent)
          }
          return value
        }

        /**
         * Get the default value of a prop.
         */
        function getPropDefaultValue(vm, prop, key) {
          // no default, return undefined
          if (!hasOwn(prop, 'default')) {
            return undefined
          }
          var def = prop.default
          // warn against non-factory defaults for Object & Array
          if (true && isObject(def)) {
            warn(
              'Invalid default value for prop "' +
                key +
                '": ' +
                'Props with type Object/Array must use a factory function ' +
                'to return the default value.',
              vm
            )
          }
          // the raw prop value was also undefined from previous render,
          // return previous default value to avoid unnecessary watcher trigger
          if (
            vm &&
            vm.$options.propsData &&
            vm.$options.propsData[key] === undefined &&
            vm._props[key] !== undefined
          ) {
            return vm._props[key]
          }
          // call factory function for non-Function types
          // a value is Function if its prototype is function even across different execution context
          return typeof def === 'function' && getType(prop.type) !== 'Function'
            ? def.call(vm)
            : def
        }

        /**
         * Assert whether a prop is valid.
         */
        function assertProp(prop, name, value, vm, absent) {
          if (prop.required && absent) {
            warn('Missing required prop: "' + name + '"', vm)
            return
          }
          if (value == null && !prop.required) {
            return
          }
          var type = prop.type
          var valid = !type || type === true
          var expectedTypes = []
          if (type) {
            if (!Array.isArray(type)) {
              type = [type]
            }
            for (var i = 0; i < type.length && !valid; i++) {
              var assertedType = assertType(value, type[i], vm)
              expectedTypes.push(assertedType.expectedType || '')
              valid = assertedType.valid
            }
          }

          var haveExpectedTypes = expectedTypes.some(function (t) {
            return t
          })
          if (!valid && haveExpectedTypes) {
            warn(getInvalidTypeMessage(name, value, expectedTypes), vm)
            return
          }
          var validator = prop.validator
          if (validator) {
            if (!validator(value)) {
              warn(
                'Invalid prop: custom validator check failed for prop "' +
                  name +
                  '".',
                vm
              )
            }
          }
        }

        var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/

        function assertType(value, type, vm) {
          var valid
          var expectedType = getType(type)
          if (simpleCheckRE.test(expectedType)) {
            var t = typeof value
            valid = t === expectedType.toLowerCase()
            // for primitive wrapper objects
            if (!valid && t === 'object') {
              valid = value instanceof type
            }
          } else if (expectedType === 'Object') {
            valid = isPlainObject(value)
          } else if (expectedType === 'Array') {
            valid = Array.isArray(value)
          } else {
            try {
              valid = value instanceof type
            } catch (e) {
              warn(
                'Invalid prop type: "' +
                  String(type) +
                  '" is not a constructor',
                vm
              )
              valid = false
            }
          }
          return {
            valid: valid,
            expectedType: expectedType,
          }
        }

        var functionTypeCheckRE = /^\s*function (\w+)/

        /**
         * Use function string name to check built-in types,
         * because a simple equality check will fail when running
         * across different vms / iframes.
         */
        function getType(fn) {
          var match = fn && fn.toString().match(functionTypeCheckRE)
          return match ? match[1] : ''
        }

        function isSameType(a, b) {
          return getType(a) === getType(b)
        }

        function getTypeIndex(type, expectedTypes) {
          if (!Array.isArray(expectedTypes)) {
            return isSameType(expectedTypes, type) ? 0 : -1
          }
          for (var i = 0, len = expectedTypes.length; i < len; i++) {
            if (isSameType(expectedTypes[i], type)) {
              return i
            }
          }
          return -1
        }

        function getInvalidTypeMessage(name, value, expectedTypes) {
          var message =
            'Invalid prop: type check failed for prop "' +
            name +
            '".' +
            ' Expected ' +
            expectedTypes.map(capitalize).join(', ')
          var expectedType = expectedTypes[0]
          var receivedType = toRawType(value)
          // check if we need to specify expected value
          if (
            expectedTypes.length === 1 &&
            isExplicable(expectedType) &&
            isExplicable(typeof value) &&
            !isBoolean(expectedType, receivedType)
          ) {
            message += ' with value ' + styleValue(value, expectedType)
          }
          message += ', got ' + receivedType + ' '
          // check if we need to specify received value
          if (isExplicable(receivedType)) {
            message += 'with value ' + styleValue(value, receivedType) + '.'
          }
          return message
        }

        function styleValue(value, type) {
          if (type === 'String') {
            return '"' + value + '"'
          } else if (type === 'Number') {
            return '' + Number(value)
          } else {
            return '' + value
          }
        }

        var EXPLICABLE_TYPES = ['string', 'number', 'boolean']
        function isExplicable(value) {
          return EXPLICABLE_TYPES.some(function (elem) {
            return value.toLowerCase() === elem
          })
        }

        function isBoolean() {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          return args.some(function (elem) {
            return elem.toLowerCase() === 'boolean'
          })
        }

        /*  */

        function handleError(err, vm, info) {
          // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
          // See: https://github.com/vuejs/vuex/issues/1505
          pushTarget()
          try {
            if (vm) {
              var cur = vm
              while ((cur = cur.$parent)) {
                var hooks = cur.$options.errorCaptured
                if (hooks) {
                  for (var i = 0; i < hooks.length; i++) {
                    try {
                      var capture = hooks[i].call(cur, err, vm, info) === false
                      if (capture) {
                        return
                      }
                    } catch (e) {
                      globalHandleError(e, cur, 'errorCaptured hook')
                    }
                  }
                }
              }
            }
            globalHandleError(err, vm, info)
          } finally {
            popTarget()
          }
        }

        function invokeWithErrorHandling(handler, context, args, vm, info) {
          var res
          try {
            res = args ? handler.apply(context, args) : handler.call(context)
            if (res && !res._isVue && isPromise(res) && !res._handled) {
              res.catch(function (e) {
                return handleError(e, vm, info + ' (Promise/async)')
              })
              // issue #9511
              // avoid catch triggering multiple times when nested calls
              res._handled = true
            }
          } catch (e) {
            handleError(e, vm, info)
          }
          return res
        }

        function globalHandleError(err, vm, info) {
          if (config.errorHandler) {
            try {
              return config.errorHandler.call(null, err, vm, info)
            } catch (e) {
              // if the user intentionally throws the original error in the handler,
              // do not log it twice
              if (e !== err) {
                logError(e, null, 'config.errorHandler')
              }
            }
          }
          logError(err, vm, info)
        }

        function logError(err, vm, info) {
          if (true) {
            warn('Error in ' + info + ': "' + err.toString() + '"', vm)
          }
          /* istanbul ignore else */
          if ((inBrowser || inWeex) && typeof console !== 'undefined') {
            console.error(err)
          } else {
            throw err
          }
        }

        /*  */

        var isUsingMicroTask = false

        var callbacks = []
        var pending = false

        function flushCallbacks() {
          pending = false
          var copies = callbacks.slice(0)
          callbacks.length = 0
          for (var i = 0; i < copies.length; i++) {
            copies[i]()
          }
        }

        // Here we have async deferring wrappers using microtasks.
        // In 2.5 we used (macro) tasks (in combination with microtasks).
        // However, it has subtle problems when state is changed right before repaint
        // (e.g. #6813, out-in transitions).
        // Also, using (macro) tasks in event handler would cause some weird behaviors
        // that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
        // So we now use microtasks everywhere, again.
        // A major drawback of this tradeoff is that there are some scenarios
        // where microtasks have too high a priority and fire in between supposedly
        // sequential events (e.g. #4521, #6690, which have workarounds)
        // or even between bubbling of the same event (#6566).
        var timerFunc

        // The nextTick behavior leverages the microtask queue, which can be accessed
        // via either native Promise.then or MutationObserver.
        // MutationObserver has wider support, however it is seriously bugged in
        // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
        // completely stops working after triggering a few times... so, if native
        // Promise is available, we will use it:
        /* istanbul ignore next, $flow-disable-line */
        if (typeof Promise !== 'undefined' && isNative(Promise)) {
          var p = Promise.resolve()
          timerFunc = function () {
            p.then(flushCallbacks)
            // In problematic UIWebViews, Promise.then doesn't completely break, but
            // it can get stuck in a weird state where callbacks are pushed into the
            // microtask queue but the queue isn't being flushed, until the browser
            // needs to do some other work, e.g. handle a timer. Therefore we can
            // "force" the microtask queue to be flushed by adding an empty timer.
            if (isIOS) {
              setTimeout(noop)
            }
          }
          isUsingMicroTask = true
        } else if (
          !isIE &&
          typeof MutationObserver !== 'undefined' &&
          (isNative(MutationObserver) ||
            // PhantomJS and iOS 7.x
            MutationObserver.toString() ===
              '[object MutationObserverConstructor]')
        ) {
          // Use MutationObserver where native Promise is not available,
          // e.g. PhantomJS, iOS7, Android 4.4
          // (#6466 MutationObserver is unreliable in IE11)
          var counter = 1
          var observer = new MutationObserver(flushCallbacks)
          var textNode = document.createTextNode(String(counter))
          observer.observe(textNode, {
            characterData: true,
          })
          timerFunc = function () {
            counter = (counter + 1) % 2
            textNode.data = String(counter)
          }
          isUsingMicroTask = true
        } else if (
          typeof setImmediate !== 'undefined' &&
          isNative(setImmediate)
        ) {
          // Fallback to setImmediate.
          // Technically it leverages the (macro) task queue,
          // but it is still a better choice than setTimeout.
          timerFunc = function () {
            setImmediate(flushCallbacks)
          }
        } else {
          // Fallback to setTimeout.
          timerFunc = function () {
            setTimeout(flushCallbacks, 0)
          }
        }

        function nextTick(cb, ctx) {
          var _resolve
          callbacks.push(function () {
            if (cb) {
              try {
                cb.call(ctx)
              } catch (e) {
                handleError(e, ctx, 'nextTick')
              }
            } else if (_resolve) {
              _resolve(ctx)
            }
          })
          if (!pending) {
            pending = true
            timerFunc()
          }
          // $flow-disable-line
          if (!cb && typeof Promise !== 'undefined') {
            return new Promise(function (resolve) {
              _resolve = resolve
            })
          }
        }

        /*  */

        var mark
        var measure

        if (true) {
          var perf = inBrowser && window.performance
          /* istanbul ignore if */
          if (
            perf &&
            perf.mark &&
            perf.measure &&
            perf.clearMarks &&
            perf.clearMeasures
          ) {
            mark = function (tag) {
              return perf.mark(tag)
            }
            measure = function (name, startTag, endTag) {
              perf.measure(name, startTag, endTag)
              perf.clearMarks(startTag)
              perf.clearMarks(endTag)
              // perf.clearMeasures(name)
            }
          }
        }

        /* not type checking this file because flow doesn't play well with Proxy */

        var initProxy

        if (true) {
          var allowedGlobals = makeMap(
            'Infinity,undefined,NaN,isFinite,isNaN,' +
              'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
              'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +
              'require' // for Webpack/Browserify
          )

          var warnNonPresent = function (target, key) {
            warn(
              'Property or method "' +
                key +
                '" is not defined on the instance but ' +
                'referenced during render. Make sure that this property is reactive, ' +
                'either in the data option, or for class-based components, by ' +
                'initializing the property. ' +
                'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
              target
            )
          }

          var warnReservedPrefix = function (target, key) {
            warn(
              'Property "' +
                key +
                '" must be accessed with "$data.' +
                key +
                '" because ' +
                'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
                'prevent conflicts with Vue internals. ' +
                'See: https://vuejs.org/v2/api/#data',
              target
            )
          }

          var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy)

          if (hasProxy) {
            var isBuiltInModifier = makeMap(
              'stop,prevent,self,ctrl,shift,alt,meta,exact'
            )
            config.keyCodes = new Proxy(config.keyCodes, {
              set: function set(target, key, value) {
                if (isBuiltInModifier(key)) {
                  warn(
                    'Avoid overwriting built-in modifier in config.keyCodes: .' +
                      key
                  )
                  return false
                } else {
                  target[key] = value
                  return true
                }
              },
            })
          }

          var hasHandler = {
            has: function has(target, key) {
              var has = key in target
              var isAllowed =
                allowedGlobals(key) ||
                (typeof key === 'string' &&
                  key.charAt(0) === '_' &&
                  !(key in target.$data))
              if (!has && !isAllowed) {
                if (key in target.$data) {
                  warnReservedPrefix(target, key)
                } else {
                  warnNonPresent(target, key)
                }
              }
              return has || !isAllowed
            },
          }

          var getHandler = {
            get: function get(target, key) {
              if (typeof key === 'string' && !(key in target)) {
                if (key in target.$data) {
                  warnReservedPrefix(target, key)
                } else {
                  warnNonPresent(target, key)
                }
              }
              return target[key]
            },
          }

          initProxy = function initProxy(vm) {
            if (hasProxy) {
              // determine which proxy handler to use
              var options = vm.$options
              var handlers =
                options.render && options.render._withStripped
                  ? getHandler
                  : hasHandler
              vm._renderProxy = new Proxy(vm, handlers)
            } else {
              vm._renderProxy = vm
            }
          }
        }

        /*  */

        var seenObjects = new _Set()

        /**
         * Recursively traverse an object to evoke all converted
         * getters, so that every nested property inside the object
         * is collected as a "deep" dependency.
         */
        function traverse(val) {
          _traverse(val, seenObjects)
          seenObjects.clear()
        }

        function _traverse(val, seen) {
          var i, keys
          var isA = Array.isArray(val)
          if (
            (!isA && !isObject(val)) ||
            Object.isFrozen(val) ||
            val instanceof VNode
          ) {
            return
          }
          if (val.__ob__) {
            var depId = val.__ob__.dep.id
            if (seen.has(depId)) {
              return
            }
            seen.add(depId)
          }
          if (isA) {
            i = val.length
            while (i--) {
              _traverse(val[i], seen)
            }
          } else {
            keys = Object.keys(val)
            i = keys.length
            while (i--) {
              _traverse(val[keys[i]], seen)
            }
          }
        }

        /*  */

        var normalizeEvent = cached(function (name) {
          var passive = name.charAt(0) === '&'
          name = passive ? name.slice(1) : name
          var once$$1 = name.charAt(0) === '~' // Prefixed last, checked first
          name = once$$1 ? name.slice(1) : name
          var capture = name.charAt(0) === '!'
          name = capture ? name.slice(1) : name
          return {
            name: name,
            once: once$$1,
            capture: capture,
            passive: passive,
          }
        })

        function createFnInvoker(fns, vm) {
          function invoker() {
            var arguments$1 = arguments

            var fns = invoker.fns
            if (Array.isArray(fns)) {
              var cloned = fns.slice()
              for (var i = 0; i < cloned.length; i++) {
                invokeWithErrorHandling(
                  cloned[i],
                  null,
                  arguments$1,
                  vm,
                  'v-on handler'
                )
              }
            } else {
              // return handler return value for single handlers
              return invokeWithErrorHandling(
                fns,
                null,
                arguments,
                vm,
                'v-on handler'
              )
            }
          }
          invoker.fns = fns
          return invoker
        }

        function updateListeners(
          on,
          oldOn,
          add,
          remove$$1,
          createOnceHandler,
          vm
        ) {
          var name, def$$1, cur, old, event
          for (name in on) {
            def$$1 = cur = on[name]
            old = oldOn[name]
            event = normalizeEvent(name)
            if (isUndef(cur)) {
              true &&
                warn(
                  'Invalid handler for event "' +
                    event.name +
                    '": got ' +
                    String(cur),
                  vm
                )
            } else if (isUndef(old)) {
              if (isUndef(cur.fns)) {
                cur = on[name] = createFnInvoker(cur, vm)
              }
              if (isTrue(event.once)) {
                cur = on[name] = createOnceHandler(
                  event.name,
                  cur,
                  event.capture
                )
              }
              add(event.name, cur, event.capture, event.passive, event.params)
            } else if (cur !== old) {
              old.fns = cur
              on[name] = old
            }
          }
          for (name in oldOn) {
            if (isUndef(on[name])) {
              event = normalizeEvent(name)
              remove$$1(event.name, oldOn[name], event.capture)
            }
          }
        }

        /*  */

        function mergeVNodeHook(def, hookKey, hook) {
          if (def instanceof VNode) {
            def = def.data.hook || (def.data.hook = {})
          }
          var invoker
          var oldHook = def[hookKey]

          function wrappedHook() {
            hook.apply(this, arguments)
            // important: remove merged hook to ensure it's called only once
            // and prevent memory leak
            remove(invoker.fns, wrappedHook)
          }

          if (isUndef(oldHook)) {
            // no existing hook
            invoker = createFnInvoker([wrappedHook])
          } else {
            /* istanbul ignore if */
            if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
              // already a merged invoker
              invoker = oldHook
              invoker.fns.push(wrappedHook)
            } else {
              // existing plain hook
              invoker = createFnInvoker([oldHook, wrappedHook])
            }
          }

          invoker.merged = true
          def[hookKey] = invoker
        }

        /*  */

        function extractPropsFromVNodeData(data, Ctor, tag) {
          // we are only extracting raw values here.
          // validation and default values are handled in the child
          // component itself.
          var propOptions = Ctor.options.props
          if (isUndef(propOptions)) {
            return
          }
          var res = {}
          var attrs = data.attrs
          var props = data.props
          if (isDef(attrs) || isDef(props)) {
            for (var key in propOptions) {
              var altKey = hyphenate(key)
              if (true) {
                var keyInLowerCase = key.toLowerCase()
                if (
                  key !== keyInLowerCase &&
                  attrs &&
                  hasOwn(attrs, keyInLowerCase)
                ) {
                  tip(
                    'Prop "' +
                      keyInLowerCase +
                      '" is passed to component ' +
                      formatComponentName(tag || Ctor) +
                      ', but the declared prop name is' +
                      ' "' +
                      key +
                      '". ' +
                      'Note that HTML attributes are case-insensitive and camelCased ' +
                      'props need to use their kebab-case equivalents when using in-DOM ' +
                      'templates. You should probably use "' +
                      altKey +
                      '" instead of "' +
                      key +
                      '".'
                  )
                }
              }
              checkProp(res, props, key, altKey, true) ||
                checkProp(res, attrs, key, altKey, false)
            }
          }
          return res
        }

        function checkProp(res, hash, key, altKey, preserve) {
          if (isDef(hash)) {
            if (hasOwn(hash, key)) {
              res[key] = hash[key]
              if (!preserve) {
                delete hash[key]
              }
              return true
            } else if (hasOwn(hash, altKey)) {
              res[key] = hash[altKey]
              if (!preserve) {
                delete hash[altKey]
              }
              return true
            }
          }
          return false
        }

        /*  */

        // The template compiler attempts to minimize the need for normalization by
        // statically analyzing the template at compile time.
        //
        // For plain HTML markup, normalization can be completely skipped because the
        // generated render function is guaranteed to return Array<VNode>. There are
        // two cases where extra normalization is needed:

        // 1. When the children contains components - because a functional component
        // may return an Array instead of a single root. In this case, just a simple
        // normalization is needed - if any child is an Array, we flatten the whole
        // thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
        // because functional components already normalize their own children.
        function simpleNormalizeChildren(children) {
          for (var i = 0; i < children.length; i++) {
            if (Array.isArray(children[i])) {
              return Array.prototype.concat.apply([], children)
            }
          }
          return children
        }

        // 2. When the children contains constructs that always generated nested Arrays,
        // e.g. <template>, <slot>, v-for, or when the children is provided by user
        // with hand-written render functions / JSX. In such cases a full normalization
        // is needed to cater to all possible types of children values.
        function normalizeChildren(children) {
          return isPrimitive(children)
            ? [createTextVNode(children)]
            : Array.isArray(children)
            ? normalizeArrayChildren(children)
            : undefined
        }

        function isTextNode(node) {
          return isDef(node) && isDef(node.text) && isFalse(node.isComment)
        }

        function normalizeArrayChildren(children, nestedIndex) {
          var res = []
          var i, c, lastIndex, last
          for (i = 0; i < children.length; i++) {
            c = children[i]
            if (isUndef(c) || typeof c === 'boolean') {
              continue
            }
            lastIndex = res.length - 1
            last = res[lastIndex]
            //  nested
            if (Array.isArray(c)) {
              if (c.length > 0) {
                c = normalizeArrayChildren(c, (nestedIndex || '') + '_' + i)
                // merge adjacent text nodes
                if (isTextNode(c[0]) && isTextNode(last)) {
                  res[lastIndex] = createTextVNode(last.text + c[0].text)
                  c.shift()
                }
                res.push.apply(res, c)
              }
            } else if (isPrimitive(c)) {
              if (isTextNode(last)) {
                // merge adjacent text nodes
                // this is necessary for SSR hydration because text nodes are
                // essentially merged when rendered to HTML strings
                res[lastIndex] = createTextVNode(last.text + c)
              } else if (c !== '') {
                // convert primitive to vnode
                res.push(createTextVNode(c))
              }
            } else {
              if (isTextNode(c) && isTextNode(last)) {
                // merge adjacent text nodes
                res[lastIndex] = createTextVNode(last.text + c.text)
              } else {
                // default key for nested array children (likely generated by v-for)
                if (
                  isTrue(children._isVList) &&
                  isDef(c.tag) &&
                  isUndef(c.key) &&
                  isDef(nestedIndex)
                ) {
                  c.key = '__vlist' + nestedIndex + '_' + i + '__'
                }
                res.push(c)
              }
            }
          }
          return res
        }

        /*  */

        function initProvide(vm) {
          var provide = vm.$options.provide
          if (provide) {
            vm._provided =
              typeof provide === 'function' ? provide.call(vm) : provide
          }
        }

        function initInjections(vm) {
          var result = resolveInject(vm.$options.inject, vm)
          if (result) {
            toggleObserving(false)
            Object.keys(result).forEach(function (key) {
              /* istanbul ignore else */
              if (true) {
                defineReactive$$1(vm, key, result[key], function () {
                  warn(
                    'Avoid mutating an injected value directly since the changes will be ' +
                      'overwritten whenever the provided component re-renders. ' +
                      'injection being mutated: "' +
                      key +
                      '"',
                    vm
                  )
                })
              } else {
              }
            })
            toggleObserving(true)
          }
        }

        function resolveInject(inject, vm) {
          if (inject) {
            // inject is :any because flow is not smart enough to figure out cached
            var result = Object.create(null)
            var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject)

            for (var i = 0; i < keys.length; i++) {
              var key = keys[i]
              // #6574 in case the inject object is observed...
              if (key === '__ob__') {
                continue
              }
              var provideKey = inject[key].from
              var source = vm
              while (source) {
                if (source._provided && hasOwn(source._provided, provideKey)) {
                  result[key] = source._provided[provideKey]
                  break
                }
                source = source.$parent
              }
              if (!source) {
                if ('default' in inject[key]) {
                  var provideDefault = inject[key].default
                  result[key] =
                    typeof provideDefault === 'function'
                      ? provideDefault.call(vm)
                      : provideDefault
                } else if (true) {
                  warn('Injection "' + key + '" not found', vm)
                }
              }
            }
            return result
          }
        }

        /*  */

        /**
         * Runtime helper for resolving raw children VNodes into a slot object.
         */
        function resolveSlots(children, context) {
          if (!children || !children.length) {
            return {}
          }
          var slots = {}
          for (var i = 0, l = children.length; i < l; i++) {
            var child = children[i]
            var data = child.data
            // remove slot attribute if the node is resolved as a Vue slot node
            if (data && data.attrs && data.attrs.slot) {
              delete data.attrs.slot
            }
            // named slots should only be respected if the vnode was rendered in the
            // same context.
            if (
              (child.context === context || child.fnContext === context) &&
              data &&
              data.slot != null
            ) {
              var name = data.slot
              var slot = slots[name] || (slots[name] = [])
              if (child.tag === 'template') {
                slot.push.apply(slot, child.children || [])
              } else {
                slot.push(child)
              }
            } else {
              ;(slots.default || (slots.default = [])).push(child)
            }
          }
          // ignore slots that contains only whitespace
          for (var name$1 in slots) {
            if (slots[name$1].every(isWhitespace)) {
              delete slots[name$1]
            }
          }
          return slots
        }

        function isWhitespace(node) {
          return (node.isComment && !node.asyncFactory) || node.text === ' '
        }

        /*  */

        function isAsyncPlaceholder(node) {
          return node.isComment && node.asyncFactory
        }

        /*  */

        function normalizeScopedSlots(slots, normalSlots, prevSlots) {
          var res
          var hasNormalSlots = Object.keys(normalSlots).length > 0
          var isStable = slots ? !!slots.$stable : !hasNormalSlots
          var key = slots && slots.$key
          if (!slots) {
            res = {}
          } else if (slots._normalized) {
            // fast path 1: child component re-render only, parent did not change
            return slots._normalized
          } else if (
            isStable &&
            prevSlots &&
            prevSlots !== emptyObject &&
            key === prevSlots.$key &&
            !hasNormalSlots &&
            !prevSlots.$hasNormal
          ) {
            // fast path 2: stable scoped slots w/ no normal slots to proxy,
            // only need to normalize once
            return prevSlots
          } else {
            res = {}
            for (var key$1 in slots) {
              if (slots[key$1] && key$1[0] !== '$') {
                res[key$1] = normalizeScopedSlot(
                  normalSlots,
                  key$1,
                  slots[key$1]
                )
              }
            }
          }
          // expose normal slots on scopedSlots
          for (var key$2 in normalSlots) {
            if (!(key$2 in res)) {
              res[key$2] = proxyNormalSlot(normalSlots, key$2)
            }
          }
          // avoriaz seems to mock a non-extensible $scopedSlots object
          // and when that is passed down this would cause an error
          if (slots && Object.isExtensible(slots)) {
            slots._normalized = res
          }
          def(res, '$stable', isStable)
          def(res, '$key', key)
          def(res, '$hasNormal', hasNormalSlots)
          return res
        }

        function normalizeScopedSlot(normalSlots, key, fn) {
          var normalized = function () {
            var res = arguments.length ? fn.apply(null, arguments) : fn({})
            res =
              res && typeof res === 'object' && !Array.isArray(res)
                ? [res] // single vnode
                : normalizeChildren(res)
            var vnode = res && res[0]
            return res &&
              (!vnode ||
                (res.length === 1 &&
                  vnode.isComment &&
                  !isAsyncPlaceholder(vnode))) // #9658, #10391
              ? undefined
              : res
          }
          // this is a slot using the new v-slot syntax without scope. although it is
          // compiled as a scoped slot, render fn users would expect it to be present
          // on this.$slots because the usage is semantically a normal slot.
          if (fn.proxy) {
            Object.defineProperty(normalSlots, key, {
              get: normalized,
              enumerable: true,
              configurable: true,
            })
          }
          return normalized
        }

        function proxyNormalSlot(slots, key) {
          return function () {
            return slots[key]
          }
        }

        /*  */

        /**
         * Runtime helper for rendering v-for lists.
         */
        function renderList(val, render) {
          var ret, i, l, keys, key
          if (Array.isArray(val) || typeof val === 'string') {
            ret = new Array(val.length)
            for (i = 0, l = val.length; i < l; i++) {
              ret[i] = render(val[i], i)
            }
          } else if (typeof val === 'number') {
            ret = new Array(val)
            for (i = 0; i < val; i++) {
              ret[i] = render(i + 1, i)
            }
          } else if (isObject(val)) {
            if (hasSymbol && val[Symbol.iterator]) {
              ret = []
              var iterator = val[Symbol.iterator]()
              var result = iterator.next()
              while (!result.done) {
                ret.push(render(result.value, ret.length))
                result = iterator.next()
              }
            } else {
              keys = Object.keys(val)
              ret = new Array(keys.length)
              for (i = 0, l = keys.length; i < l; i++) {
                key = keys[i]
                ret[i] = render(val[key], key, i)
              }
            }
          }
          if (!isDef(ret)) {
            ret = []
          }
          ret._isVList = true
          return ret
        }

        /*  */

        /**
         * Runtime helper for rendering <slot>
         */
        function renderSlot(name, fallbackRender, props, bindObject) {
          var scopedSlotFn = this.$scopedSlots[name]
          var nodes
          if (scopedSlotFn) {
            // scoped slot
            props = props || {}
            if (bindObject) {
              if (true && !isObject(bindObject)) {
                warn('slot v-bind without argument expects an Object', this)
              }
              props = extend(extend({}, bindObject), props)
            }
            nodes =
              scopedSlotFn(props) ||
              (typeof fallbackRender === 'function'
                ? fallbackRender()
                : fallbackRender)
          } else {
            nodes =
              this.$slots[name] ||
              (typeof fallbackRender === 'function'
                ? fallbackRender()
                : fallbackRender)
          }

          var target = props && props.slot
          if (target) {
            return this.$createElement('template', { slot: target }, nodes)
          } else {
            return nodes
          }
        }

        /*  */

        /**
         * Runtime helper for resolving filters
         */
        function resolveFilter(id) {
          return resolveAsset(this.$options, 'filters', id, true) || identity
        }

        /*  */

        function isKeyNotMatch(expect, actual) {
          if (Array.isArray(expect)) {
            return expect.indexOf(actual) === -1
          } else {
            return expect !== actual
          }
        }

        /**
         * Runtime helper for checking keyCodes from config.
         * exposed as Vue.prototype._k
         * passing in eventKeyName as last argument separately for backwards compat
         */
        function checkKeyCodes(
          eventKeyCode,
          key,
          builtInKeyCode,
          eventKeyName,
          builtInKeyName
        ) {
          var mappedKeyCode = config.keyCodes[key] || builtInKeyCode
          if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
            return isKeyNotMatch(builtInKeyName, eventKeyName)
          } else if (mappedKeyCode) {
            return isKeyNotMatch(mappedKeyCode, eventKeyCode)
          } else if (eventKeyName) {
            return hyphenate(eventKeyName) !== key
          }
          return eventKeyCode === undefined
        }

        /*  */

        /**
         * Runtime helper for merging v-bind="object" into a VNode's data.
         */
        function bindObjectProps(data, tag, value, asProp, isSync) {
          if (value) {
            if (!isObject(value)) {
              true &&
                warn(
                  'v-bind without argument expects an Object or Array value',
                  this
                )
            } else {
              if (Array.isArray(value)) {
                value = toObject(value)
              }
              var hash
              var loop = function (key) {
                if (
                  key === 'class' ||
                  key === 'style' ||
                  isReservedAttribute(key)
                ) {
                  hash = data
                } else {
                  var type = data.attrs && data.attrs.type
                  hash =
                    asProp || config.mustUseProp(tag, type, key)
                      ? data.domProps || (data.domProps = {})
                      : data.attrs || (data.attrs = {})
                }
                var camelizedKey = camelize(key)
                var hyphenatedKey = hyphenate(key)
                if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
                  hash[key] = value[key]

                  if (isSync) {
                    var on = data.on || (data.on = {})
                    on['update:' + key] = function ($event) {
                      value[key] = $event
                    }
                  }
                }
              }

              for (var key in value) loop(key)
            }
          }
          return data
        }

        /*  */

        /**
         * Runtime helper for rendering static trees.
         */
        function renderStatic(index, isInFor) {
          var cached = this._staticTrees || (this._staticTrees = [])
          var tree = cached[index]
          // if has already-rendered static tree and not inside v-for,
          // we can reuse the same tree.
          if (tree && !isInFor) {
            return tree
          }
          // otherwise, render a fresh tree.
          tree = cached[index] = this.$options.staticRenderFns[index].call(
            this._renderProxy,
            null,
            this // for render fns generated for functional component templates
          )
          markStatic(tree, '__static__' + index, false)
          return tree
        }

        /**
         * Runtime helper for v-once.
         * Effectively it means marking the node as static with a unique key.
         */
        function markOnce(tree, index, key) {
          markStatic(tree, '__once__' + index + (key ? '_' + key : ''), true)
          return tree
        }

        function markStatic(tree, key, isOnce) {
          if (Array.isArray(tree)) {
            for (var i = 0; i < tree.length; i++) {
              if (tree[i] && typeof tree[i] !== 'string') {
                markStaticNode(tree[i], key + '_' + i, isOnce)
              }
            }
          } else {
            markStaticNode(tree, key, isOnce)
          }
        }

        function markStaticNode(node, key, isOnce) {
          node.isStatic = true
          node.key = key
          node.isOnce = isOnce
        }

        /*  */

        function bindObjectListeners(data, value) {
          if (value) {
            if (!isPlainObject(value)) {
              true &&
                warn('v-on without argument expects an Object value', this)
            } else {
              var on = (data.on = data.on ? extend({}, data.on) : {})
              for (var key in value) {
                var existing = on[key]
                var ours = value[key]
                on[key] = existing ? [].concat(existing, ours) : ours
              }
            }
          }
          return data
        }

        /*  */

        function resolveScopedSlots(
          fns, // see flow/vnode
          res,
          // the following are added in 2.6
          hasDynamicKeys,
          contentHashKey
        ) {
          res = res || { $stable: !hasDynamicKeys }
          for (var i = 0; i < fns.length; i++) {
            var slot = fns[i]
            if (Array.isArray(slot)) {
              resolveScopedSlots(slot, res, hasDynamicKeys)
            } else if (slot) {
              // marker for reverse proxying v-slot without scope on this.$slots
              if (slot.proxy) {
                slot.fn.proxy = true
              }
              res[slot.key] = slot.fn
            }
          }
          if (contentHashKey) {
            res.$key = contentHashKey
          }
          return res
        }

        /*  */

        function bindDynamicKeys(baseObj, values) {
          for (var i = 0; i < values.length; i += 2) {
            var key = values[i]
            if (typeof key === 'string' && key) {
              baseObj[values[i]] = values[i + 1]
            } else if (true && key !== '' && key !== null) {
              // null is a special value for explicitly removing a binding
              warn(
                'Invalid value for dynamic directive argument (expected string or null): ' +
                  key,
                this
              )
            }
          }
          return baseObj
        }

        // helper to dynamically append modifier runtime markers to event names.
        // ensure only append when value is already string, otherwise it will be cast
        // to string and cause the type check to miss.
        function prependModifier(value, symbol) {
          return typeof value === 'string' ? symbol + value : value
        }

        /*  */

        function installRenderHelpers(target) {
          target._o = markOnce
          target._n = toNumber
          target._s = toString
          target._l = renderList
          target._t = renderSlot
          target._q = looseEqual
          target._i = looseIndexOf
          target._m = renderStatic
          target._f = resolveFilter
          target._k = checkKeyCodes
          target._b = bindObjectProps
          target._v = createTextVNode
          target._e = createEmptyVNode
          target._u = resolveScopedSlots
          target._g = bindObjectListeners
          target._d = bindDynamicKeys
          target._p = prependModifier
        }

        /*  */

        function FunctionalRenderContext(data, props, children, parent, Ctor) {
          var this$1 = this

          var options = Ctor.options
          // ensure the createElement function in functional components
          // gets a unique context - this is necessary for correct named slot check
          var contextVm
          if (hasOwn(parent, '_uid')) {
            contextVm = Object.create(parent)
            // $flow-disable-line
            contextVm._original = parent
          } else {
            // the context vm passed in is a functional context as well.
            // in this case we want to make sure we are able to get a hold to the
            // real context instance.
            contextVm = parent
            // $flow-disable-line
            parent = parent._original
          }
          var isCompiled = isTrue(options._compiled)
          var needNormalization = !isCompiled

          this.data = data
          this.props = props
          this.children = children
          this.parent = parent
          this.listeners = data.on || emptyObject
          this.injections = resolveInject(options.inject, parent)
          this.slots = function () {
            if (!this$1.$slots) {
              normalizeScopedSlots(
                data.scopedSlots,
                (this$1.$slots = resolveSlots(children, parent))
              )
            }
            return this$1.$slots
          }

          Object.defineProperty(this, 'scopedSlots', {
            enumerable: true,
            get: function get() {
              return normalizeScopedSlots(data.scopedSlots, this.slots())
            },
          })

          // support for compiled functional template
          if (isCompiled) {
            // exposing $options for renderStatic()
            this.$options = options
            // pre-resolve slots for renderSlot()
            this.$slots = this.slots()
            this.$scopedSlots = normalizeScopedSlots(
              data.scopedSlots,
              this.$slots
            )
          }

          if (options._scopeId) {
            this._c = function (a, b, c, d) {
              var vnode = createElement(
                contextVm,
                a,
                b,
                c,
                d,
                needNormalization
              )
              if (vnode && !Array.isArray(vnode)) {
                vnode.fnScopeId = options._scopeId
                vnode.fnContext = parent
              }
              return vnode
            }
          } else {
            this._c = function (a, b, c, d) {
              return createElement(contextVm, a, b, c, d, needNormalization)
            }
          }
        }

        installRenderHelpers(FunctionalRenderContext.prototype)

        function createFunctionalComponent(
          Ctor,
          propsData,
          data,
          contextVm,
          children
        ) {
          var options = Ctor.options
          var props = {}
          var propOptions = options.props
          if (isDef(propOptions)) {
            for (var key in propOptions) {
              props[key] = validateProp(
                key,
                propOptions,
                propsData || emptyObject
              )
            }
          } else {
            if (isDef(data.attrs)) {
              mergeProps(props, data.attrs)
            }
            if (isDef(data.props)) {
              mergeProps(props, data.props)
            }
          }

          var renderContext = new FunctionalRenderContext(
            data,
            props,
            children,
            contextVm,
            Ctor
          )

          var vnode = options.render.call(null, renderContext._c, renderContext)

          if (vnode instanceof VNode) {
            return cloneAndMarkFunctionalResult(
              vnode,
              data,
              renderContext.parent,
              options,
              renderContext
            )
          } else if (Array.isArray(vnode)) {
            var vnodes = normalizeChildren(vnode) || []
            var res = new Array(vnodes.length)
            for (var i = 0; i < vnodes.length; i++) {
              res[i] = cloneAndMarkFunctionalResult(
                vnodes[i],
                data,
                renderContext.parent,
                options,
                renderContext
              )
            }
            return res
          }
        }

        function cloneAndMarkFunctionalResult(
          vnode,
          data,
          contextVm,
          options,
          renderContext
        ) {
          // #7817 clone node before setting fnContext, otherwise if the node is reused
          // (e.g. it was from a cached normal slot) the fnContext causes named slots
          // that should not be matched to match.
          var clone = cloneVNode(vnode)
          clone.fnContext = contextVm
          clone.fnOptions = options
          if (true) {
            ;(clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext =
              renderContext
          }
          if (data.slot) {
            ;(clone.data || (clone.data = {})).slot = data.slot
          }
          return clone
        }

        function mergeProps(to, from) {
          for (var key in from) {
            to[camelize(key)] = from[key]
          }
        }

        /*  */

        /*  */

        /*  */

        /*  */

        // inline hooks to be invoked on component VNodes during patch
        var componentVNodeHooks = {
          init: function init(vnode, hydrating) {
            if (
              vnode.componentInstance &&
              !vnode.componentInstance._isDestroyed &&
              vnode.data.keepAlive
            ) {
              // kept-alive components, treat as a patch
              var mountedNode = vnode // work around flow
              componentVNodeHooks.prepatch(mountedNode, mountedNode)
            } else {
              var child = (vnode.componentInstance =
                createComponentInstanceForVnode(vnode, activeInstance))
              child.$mount(hydrating ? vnode.elm : undefined, hydrating)
            }
          },

          prepatch: function prepatch(oldVnode, vnode) {
            var options = vnode.componentOptions
            var child = (vnode.componentInstance = oldVnode.componentInstance)
            updateChildComponent(
              child,
              options.propsData, // updated props
              options.listeners, // updated listeners
              vnode, // new parent vnode
              options.children // new children
            )
          },

          insert: function insert(vnode) {
            var context = vnode.context
            var componentInstance = vnode.componentInstance
            if (!componentInstance._isMounted) {
              componentInstance._isMounted = true
              callHook(componentInstance, 'mounted')
            }
            if (vnode.data.keepAlive) {
              if (context._isMounted) {
                // vue-router#1212
                // During updates, a kept-alive component's child components may
                // change, so directly walking the tree here may call activated hooks
                // on incorrect children. Instead we push them into a queue which will
                // be processed after the whole patch process ended.
                queueActivatedComponent(componentInstance)
              } else {
                activateChildComponent(componentInstance, true /* direct */)
              }
            }
          },

          destroy: function destroy(vnode) {
            var componentInstance = vnode.componentInstance
            if (!componentInstance._isDestroyed) {
              if (!vnode.data.keepAlive) {
                componentInstance.$destroy()
              } else {
                deactivateChildComponent(componentInstance, true /* direct */)
              }
            }
          },
        }

        var hooksToMerge = Object.keys(componentVNodeHooks)

        function createComponent(Ctor, data, context, children, tag) {
          if (isUndef(Ctor)) {
            return
          }

          var baseCtor = context.$options._base

          // plain options object: turn it into a constructor
          if (isObject(Ctor)) {
            Ctor = baseCtor.extend(Ctor)
          }

          // if at this stage it's not a constructor or an async component factory,
          // reject.
          if (typeof Ctor !== 'function') {
            if (true) {
              warn('Invalid Component definition: ' + String(Ctor), context)
            }
            return
          }

          // async component
          var asyncFactory
          if (isUndef(Ctor.cid)) {
            asyncFactory = Ctor
            Ctor = resolveAsyncComponent(asyncFactory, baseCtor)
            if (Ctor === undefined) {
              // return a placeholder node for async component, which is rendered
              // as a comment node but preserves all the raw information for the node.
              // the information will be used for async server-rendering and hydration.
              return createAsyncPlaceholder(
                asyncFactory,
                data,
                context,
                children,
                tag
              )
            }
          }

          data = data || {}

          // resolve constructor options in case global mixins are applied after
          // component constructor creation
          resolveConstructorOptions(Ctor)

          // transform component v-model data into props & events
          if (isDef(data.model)) {
            transformModel(Ctor.options, data)
          }

          // extract props
          var propsData = extractPropsFromVNodeData(data, Ctor, tag)

          // functional component
          if (isTrue(Ctor.options.functional)) {
            return createFunctionalComponent(
              Ctor,
              propsData,
              data,
              context,
              children
            )
          }

          // extract listeners, since these needs to be treated as
          // child component listeners instead of DOM listeners
          var listeners = data.on
          // replace with listeners with .native modifier
          // so it gets processed during parent component patch.
          data.on = data.nativeOn

          if (isTrue(Ctor.options.abstract)) {
            // abstract components do not keep anything
            // other than props & listeners & slot

            // work around flow
            var slot = data.slot
            data = {}
            if (slot) {
              data.slot = slot
            }
          }

          // install component management hooks onto the placeholder node
          installComponentHooks(data)

          // return a placeholder vnode
          var name = Ctor.options.name || tag
          var vnode = new VNode(
            'vue-component-' + Ctor.cid + (name ? '-' + name : ''),
            data,
            undefined,
            undefined,
            undefined,
            context,
            {
              Ctor: Ctor,
              propsData: propsData,
              listeners: listeners,
              tag: tag,
              children: children,
            },
            asyncFactory
          )

          return vnode
        }

        function createComponentInstanceForVnode(
          // we know it's MountedComponentVNode but flow doesn't
          vnode,
          // activeInstance in lifecycle state
          parent
        ) {
          var options = {
            _isComponent: true,
            _parentVnode: vnode,
            parent: parent,
          }
          // check inline-template render functions
          var inlineTemplate = vnode.data.inlineTemplate
          if (isDef(inlineTemplate)) {
            options.render = inlineTemplate.render
            options.staticRenderFns = inlineTemplate.staticRenderFns
          }
          return new vnode.componentOptions.Ctor(options)
        }

        function installComponentHooks(data) {
          var hooks = data.hook || (data.hook = {})
          for (var i = 0; i < hooksToMerge.length; i++) {
            var key = hooksToMerge[i]
            var existing = hooks[key]
            var toMerge = componentVNodeHooks[key]
            if (existing !== toMerge && !(existing && existing._merged)) {
              hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge
            }
          }
        }

        function mergeHook$1(f1, f2) {
          var merged = function (a, b) {
            // flow complains about extra args which is why we use any
            f1(a, b)
            f2(a, b)
          }
          merged._merged = true
          return merged
        }

        // transform component v-model info (value and callback) into
        // prop and event handler respectively.
        function transformModel(options, data) {
          var prop = (options.model && options.model.prop) || 'value'
          var event = (options.model && options.model.event) || 'input'
          ;(data.attrs || (data.attrs = {}))[prop] = data.model.value
          var on = data.on || (data.on = {})
          var existing = on[event]
          var callback = data.model.callback
          if (isDef(existing)) {
            if (
              Array.isArray(existing)
                ? existing.indexOf(callback) === -1
                : existing !== callback
            ) {
              on[event] = [callback].concat(existing)
            }
          } else {
            on[event] = callback
          }
        }

        /*  */

        var SIMPLE_NORMALIZE = 1
        var ALWAYS_NORMALIZE = 2

        // wrapper function for providing a more flexible interface
        // without getting yelled at by flow
        function createElement(
          context,
          tag,
          data,
          children,
          normalizationType,
          alwaysNormalize
        ) {
          if (Array.isArray(data) || isPrimitive(data)) {
            normalizationType = children
            children = data
            data = undefined
          }
          if (isTrue(alwaysNormalize)) {
            normalizationType = ALWAYS_NORMALIZE
          }
          return _createElement(context, tag, data, children, normalizationType)
        }

        function _createElement(
          context,
          tag,
          data,
          children,
          normalizationType
        ) {
          if (isDef(data) && isDef(data.__ob__)) {
            true &&
              warn(
                'Avoid using observed data object as vnode data: ' +
                  JSON.stringify(data) +
                  '\n' +
                  'Always create fresh vnode data objects in each render!',
                context
              )
            return createEmptyVNode()
          }
          // object syntax in v-bind
          if (isDef(data) && isDef(data.is)) {
            tag = data.is
          }
          if (!tag) {
            // in case of component :is set to falsy value
            return createEmptyVNode()
          }
          // warn against non-primitive key
          if (
            true &&
            isDef(data) &&
            isDef(data.key) &&
            !isPrimitive(data.key)
          ) {
            {
              warn(
                'Avoid using non-primitive value as key, ' +
                  'use string/number value instead.',
                context
              )
            }
          }
          // support single function children as default scoped slot
          if (Array.isArray(children) && typeof children[0] === 'function') {
            data = data || {}
            data.scopedSlots = { default: children[0] }
            children.length = 0
          }
          if (normalizationType === ALWAYS_NORMALIZE) {
            children = normalizeChildren(children)
          } else if (normalizationType === SIMPLE_NORMALIZE) {
            children = simpleNormalizeChildren(children)
          }
          var vnode, ns
          if (typeof tag === 'string') {
            var Ctor
            ns =
              (context.$vnode && context.$vnode.ns) ||
              config.getTagNamespace(tag)
            if (config.isReservedTag(tag)) {
              // platform built-in elements
              if (
                true &&
                isDef(data) &&
                isDef(data.nativeOn) &&
                data.tag !== 'component'
              ) {
                warn(
                  'The .native modifier for v-on is only valid on components but it was used on <' +
                    tag +
                    '>.',
                  context
                )
              }
              vnode = new VNode(
                config.parsePlatformTagName(tag),
                data,
                children,
                undefined,
                undefined,
                context
              )
            } else if (
              (!data || !data.pre) &&
              isDef((Ctor = resolveAsset(context.$options, 'components', tag)))
            ) {
              // component
              vnode = createComponent(Ctor, data, context, children, tag)
            } else {
              // unknown or unlisted namespaced elements
              // check at runtime because it may get assigned a namespace when its
              // parent normalizes children
              vnode = new VNode(
                tag,
                data,
                children,
                undefined,
                undefined,
                context
              )
            }
          } else {
            // direct component options / constructor
            vnode = createComponent(tag, data, context, children)
          }
          if (Array.isArray(vnode)) {
            return vnode
          } else if (isDef(vnode)) {
            if (isDef(ns)) {
              applyNS(vnode, ns)
            }
            if (isDef(data)) {
              registerDeepBindings(data)
            }
            return vnode
          } else {
            return createEmptyVNode()
          }
        }

        function applyNS(vnode, ns, force) {
          vnode.ns = ns
          if (vnode.tag === 'foreignObject') {
            // use default namespace inside foreignObject
            ns = undefined
            force = true
          }
          if (isDef(vnode.children)) {
            for (var i = 0, l = vnode.children.length; i < l; i++) {
              var child = vnode.children[i]
              if (
                isDef(child.tag) &&
                (isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))
              ) {
                applyNS(child, ns, force)
              }
            }
          }
        }

        // ref #5318
        // necessary to ensure parent re-render when deep bindings like :style and
        // :class are used on slot nodes
        function registerDeepBindings(data) {
          if (isObject(data.style)) {
            traverse(data.style)
          }
          if (isObject(data.class)) {
            traverse(data.class)
          }
        }

        /*  */

        function initRender(vm) {
          vm._vnode = null // the root of the child tree
          vm._staticTrees = null // v-once cached trees
          var options = vm.$options
          var parentVnode = (vm.$vnode = options._parentVnode) // the placeholder node in parent tree
          var renderContext = parentVnode && parentVnode.context
          vm.$slots = resolveSlots(options._renderChildren, renderContext)
          vm.$scopedSlots = emptyObject
          // bind the createElement fn to this instance
          // so that we get proper render context inside it.
          // args order: tag, data, children, normalizationType, alwaysNormalize
          // internal version is used by render functions compiled from templates
          vm._c = function (a, b, c, d) {
            return createElement(vm, a, b, c, d, false)
          }
          // normalization is always applied for the public version, used in
          // user-written render functions.
          vm.$createElement = function (a, b, c, d) {
            return createElement(vm, a, b, c, d, true)
          }

          // $attrs & $listeners are exposed for easier HOC creation.
          // they need to be reactive so that HOCs using them are always updated
          var parentData = parentVnode && parentVnode.data

          /* istanbul ignore else */
          if (true) {
            defineReactive$$1(
              vm,
              '$attrs',
              (parentData && parentData.attrs) || emptyObject,
              function () {
                !isUpdatingChildComponent && warn('$attrs is readonly.', vm)
              },
              true
            )
            defineReactive$$1(
              vm,
              '$listeners',
              options._parentListeners || emptyObject,
              function () {
                !isUpdatingChildComponent && warn('$listeners is readonly.', vm)
              },
              true
            )
          } else {
          }
        }

        var currentRenderingInstance = null

        function renderMixin(Vue) {
          // install runtime convenience helpers
          installRenderHelpers(Vue.prototype)

          Vue.prototype.$nextTick = function (fn) {
            return nextTick(fn, this)
          }

          Vue.prototype._render = function () {
            var vm = this
            var ref = vm.$options
            var render = ref.render
            var _parentVnode = ref._parentVnode

            if (_parentVnode) {
              vm.$scopedSlots = normalizeScopedSlots(
                _parentVnode.data.scopedSlots,
                vm.$slots,
                vm.$scopedSlots
              )
            }

            // set parent vnode. this allows render functions to have access
            // to the data on the placeholder node.
            vm.$vnode = _parentVnode
            // render self
            var vnode
            try {
              // There's no need to maintain a stack because all render fns are called
              // separately from one another. Nested component's render fns are called
              // when parent component is patched.
              currentRenderingInstance = vm
              vnode = render.call(vm._renderProxy, vm.$createElement)
            } catch (e) {
              handleError(e, vm, 'render')
              // return error render result,
              // or previous vnode to prevent render error causing blank component
              /* istanbul ignore else */
              if (true && vm.$options.renderError) {
                try {
                  vnode = vm.$options.renderError.call(
                    vm._renderProxy,
                    vm.$createElement,
                    e
                  )
                } catch (e) {
                  handleError(e, vm, 'renderError')
                  vnode = vm._vnode
                }
              } else {
                vnode = vm._vnode
              }
            } finally {
              currentRenderingInstance = null
            }
            // if the returned array contains only a single node, allow it
            if (Array.isArray(vnode) && vnode.length === 1) {
              vnode = vnode[0]
            }
            // return empty vnode in case the render function errored out
            if (!(vnode instanceof VNode)) {
              if (true && Array.isArray(vnode)) {
                warn(
                  'Multiple root nodes returned from render function. Render function ' +
                    'should return a single root node.',
                  vm
                )
              }
              vnode = createEmptyVNode()
            }
            // set parent
            vnode.parent = _parentVnode
            return vnode
          }
        }

        /*  */

        function ensureCtor(comp, base) {
          if (
            comp.__esModule ||
            (hasSymbol && comp[Symbol.toStringTag] === 'Module')
          ) {
            comp = comp.default
          }
          return isObject(comp) ? base.extend(comp) : comp
        }

        function createAsyncPlaceholder(factory, data, context, children, tag) {
          var node = createEmptyVNode()
          node.asyncFactory = factory
          node.asyncMeta = {
            data: data,
            context: context,
            children: children,
            tag: tag,
          }
          return node
        }

        function resolveAsyncComponent(factory, baseCtor) {
          if (isTrue(factory.error) && isDef(factory.errorComp)) {
            return factory.errorComp
          }

          if (isDef(factory.resolved)) {
            return factory.resolved
          }

          var owner = currentRenderingInstance
          if (
            owner &&
            isDef(factory.owners) &&
            factory.owners.indexOf(owner) === -1
          ) {
            // already pending
            factory.owners.push(owner)
          }

          if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
            return factory.loadingComp
          }

          if (owner && !isDef(factory.owners)) {
            var owners = (factory.owners = [owner])
            var sync = true
            var timerLoading = null
            var timerTimeout = null

            owner.$on('hook:destroyed', function () {
              return remove(owners, owner)
            })

            var forceRender = function (renderCompleted) {
              for (var i = 0, l = owners.length; i < l; i++) {
                owners[i].$forceUpdate()
              }

              if (renderCompleted) {
                owners.length = 0
                if (timerLoading !== null) {
                  clearTimeout(timerLoading)
                  timerLoading = null
                }
                if (timerTimeout !== null) {
                  clearTimeout(timerTimeout)
                  timerTimeout = null
                }
              }
            }

            var resolve = once(function (res) {
              // cache resolved
              factory.resolved = ensureCtor(res, baseCtor)
              // invoke callbacks only if this is not a synchronous resolve
              // (async resolves are shimmed as synchronous during SSR)
              if (!sync) {
                forceRender(true)
              } else {
                owners.length = 0
              }
            })

            var reject = once(function (reason) {
              true &&
                warn(
                  'Failed to resolve async component: ' +
                    String(factory) +
                    (reason ? '\nReason: ' + reason : '')
                )
              if (isDef(factory.errorComp)) {
                factory.error = true
                forceRender(true)
              }
            })

            var res = factory(resolve, reject)

            if (isObject(res)) {
              if (isPromise(res)) {
                // () => Promise
                if (isUndef(factory.resolved)) {
                  res.then(resolve, reject)
                }
              } else if (isPromise(res.component)) {
                res.component.then(resolve, reject)

                if (isDef(res.error)) {
                  factory.errorComp = ensureCtor(res.error, baseCtor)
                }

                if (isDef(res.loading)) {
                  factory.loadingComp = ensureCtor(res.loading, baseCtor)
                  if (res.delay === 0) {
                    factory.loading = true
                  } else {
                    timerLoading = setTimeout(function () {
                      timerLoading = null
                      if (isUndef(factory.resolved) && isUndef(factory.error)) {
                        factory.loading = true
                        forceRender(false)
                      }
                    }, res.delay || 200)
                  }
                }

                if (isDef(res.timeout)) {
                  timerTimeout = setTimeout(function () {
                    timerTimeout = null
                    if (isUndef(factory.resolved)) {
                      reject(true ? 'timeout (' + res.timeout + 'ms)' : 0)
                    }
                  }, res.timeout)
                }
              }
            }

            sync = false
            // return in case resolved synchronously
            return factory.loading ? factory.loadingComp : factory.resolved
          }
        }

        /*  */

        function getFirstComponentChild(children) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              var c = children[i]
              if (
                isDef(c) &&
                (isDef(c.componentOptions) || isAsyncPlaceholder(c))
              ) {
                return c
              }
            }
          }
        }

        /*  */

        /*  */

        function initEvents(vm) {
          vm._events = Object.create(null)
          vm._hasHookEvent = false
          // init parent attached events
          var listeners = vm.$options._parentListeners
          if (listeners) {
            updateComponentListeners(vm, listeners)
          }
        }

        var target

        function add(event, fn) {
          target.$on(event, fn)
        }

        function remove$1(event, fn) {
          target.$off(event, fn)
        }

        function createOnceHandler(event, fn) {
          var _target = target
          return function onceHandler() {
            var res = fn.apply(null, arguments)
            if (res !== null) {
              _target.$off(event, onceHandler)
            }
          }
        }

        function updateComponentListeners(vm, listeners, oldListeners) {
          target = vm
          updateListeners(
            listeners,
            oldListeners || {},
            add,
            remove$1,
            createOnceHandler,
            vm
          )
          target = undefined
        }

        function eventsMixin(Vue) {
          var hookRE = /^hook:/
          Vue.prototype.$on = function (event, fn) {
            var vm = this
            if (Array.isArray(event)) {
              for (var i = 0, l = event.length; i < l; i++) {
                vm.$on(event[i], fn)
              }
            } else {
              ;(vm._events[event] || (vm._events[event] = [])).push(fn)
              // optimize hook:event cost by using a boolean flag marked at registration
              // instead of a hash lookup
              if (hookRE.test(event)) {
                vm._hasHookEvent = true
              }
            }
            return vm
          }

          Vue.prototype.$once = function (event, fn) {
            var vm = this
            function on() {
              vm.$off(event, on)
              fn.apply(vm, arguments)
            }
            on.fn = fn
            vm.$on(event, on)
            return vm
          }

          Vue.prototype.$off = function (event, fn) {
            var vm = this
            // all
            if (!arguments.length) {
              vm._events = Object.create(null)
              return vm
            }
            // array of events
            if (Array.isArray(event)) {
              for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
                vm.$off(event[i$1], fn)
              }
              return vm
            }
            // specific event
            var cbs = vm._events[event]
            if (!cbs) {
              return vm
            }
            if (!fn) {
              vm._events[event] = null
              return vm
            }
            // specific handler
            var cb
            var i = cbs.length
            while (i--) {
              cb = cbs[i]
              if (cb === fn || cb.fn === fn) {
                cbs.splice(i, 1)
                break
              }
            }
            return vm
          }

          Vue.prototype.$emit = function (event) {
            var vm = this
            if (true) {
              var lowerCaseEvent = event.toLowerCase()
              if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
                tip(
                  'Event "' +
                    lowerCaseEvent +
                    '" is emitted in component ' +
                    formatComponentName(vm) +
                    ' but the handler is registered for "' +
                    event +
                    '". ' +
                    'Note that HTML attributes are case-insensitive and you cannot use ' +
                    'v-on to listen to camelCase events when using in-DOM templates. ' +
                    'You should probably use "' +
                    hyphenate(event) +
                    '" instead of "' +
                    event +
                    '".'
                )
              }
            }
            var cbs = vm._events[event]
            if (cbs) {
              cbs = cbs.length > 1 ? toArray(cbs) : cbs
              var args = toArray(arguments, 1)
              var info = 'event handler for "' + event + '"'
              for (var i = 0, l = cbs.length; i < l; i++) {
                invokeWithErrorHandling(cbs[i], vm, args, vm, info)
              }
            }
            return vm
          }
        }

        /*  */

        var activeInstance = null
        var isUpdatingChildComponent = false

        function setActiveInstance(vm) {
          var prevActiveInstance = activeInstance
          activeInstance = vm
          return function () {
            activeInstance = prevActiveInstance
          }
        }

        function initLifecycle(vm) {
          var options = vm.$options

          // locate first non-abstract parent
          var parent = options.parent
          if (parent && !options.abstract) {
            while (parent.$options.abstract && parent.$parent) {
              parent = parent.$parent
            }
            parent.$children.push(vm)
          }

          vm.$parent = parent
          vm.$root = parent ? parent.$root : vm

          vm.$children = []
          vm.$refs = {}

          vm._watcher = null
          vm._inactive = null
          vm._directInactive = false
          vm._isMounted = false
          vm._isDestroyed = false
          vm._isBeingDestroyed = false
        }

        function lifecycleMixin(Vue) {
          Vue.prototype._update = function (vnode, hydrating) {
            var vm = this
            var prevEl = vm.$el
            var prevVnode = vm._vnode
            var restoreActiveInstance = setActiveInstance(vm)
            vm._vnode = vnode
            // Vue.prototype.__patch__ is injected in entry points
            // based on the rendering backend used.
            if (!prevVnode) {
              // initial render
              vm.$el = vm.__patch__(
                vm.$el,
                vnode,
                hydrating,
                false /* removeOnly */
              )
            } else {
              // updates
              vm.$el = vm.__patch__(prevVnode, vnode)
            }
            restoreActiveInstance()
            // update __vue__ reference
            if (prevEl) {
              prevEl.__vue__ = null
            }
            if (vm.$el) {
              vm.$el.__vue__ = vm
            }
            // if parent is an HOC, update its $el as well
            if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
              vm.$parent.$el = vm.$el
            }
            // updated hook is called by the scheduler to ensure that children are
            // updated in a parent's updated hook.
          }

          Vue.prototype.$forceUpdate = function () {
            var vm = this
            if (vm._watcher) {
              vm._watcher.update()
            }
          }

          Vue.prototype.$destroy = function () {
            var vm = this
            if (vm._isBeingDestroyed) {
              return
            }
            callHook(vm, 'beforeDestroy')
            vm._isBeingDestroyed = true
            // remove self from parent
            var parent = vm.$parent
            if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
              remove(parent.$children, vm)
            }
            // teardown watchers
            if (vm._watcher) {
              vm._watcher.teardown()
            }
            var i = vm._watchers.length
            while (i--) {
              vm._watchers[i].teardown()
            }
            // remove reference from data ob
            // frozen object may not have observer.
            if (vm._data.__ob__) {
              vm._data.__ob__.vmCount--
            }
            // call the last hook...
            vm._isDestroyed = true
            // invoke destroy hooks on current rendered tree
            vm.__patch__(vm._vnode, null)
            // fire destroyed hook
            callHook(vm, 'destroyed')
            // turn off all instance listeners.
            vm.$off()
            // remove __vue__ reference
            if (vm.$el) {
              vm.$el.__vue__ = null
            }
            // release circular reference (#6759)
            if (vm.$vnode) {
              vm.$vnode.parent = null
            }
          }
        }

        function mountComponent(vm, el, hydrating) {
          vm.$el = el
          if (!vm.$options.render) {
            vm.$options.render = createEmptyVNode
            if (true) {
              /* istanbul ignore if */
              if (
                (vm.$options.template &&
                  vm.$options.template.charAt(0) !== '#') ||
                vm.$options.el ||
                el
              ) {
                warn(
                  'You are using the runtime-only build of Vue where the template ' +
                    'compiler is not available. Either pre-compile the templates into ' +
                    'render functions, or use the compiler-included build.',
                  vm
                )
              } else {
                warn(
                  'Failed to mount component: template or render function not defined.',
                  vm
                )
              }
            }
          }
          callHook(vm, 'beforeMount')

          var updateComponent
          /* istanbul ignore if */
          if (true && config.performance && mark) {
            updateComponent = function () {
              var name = vm._name
              var id = vm._uid
              var startTag = 'vue-perf-start:' + id
              var endTag = 'vue-perf-end:' + id

              mark(startTag)
              var vnode = vm._render()
              mark(endTag)
              measure('vue ' + name + ' render', startTag, endTag)

              mark(startTag)
              vm._update(vnode, hydrating)
              mark(endTag)
              measure('vue ' + name + ' patch', startTag, endTag)
            }
          } else {
            updateComponent = function () {
              vm._update(vm._render(), hydrating)
            }
          }

          // we set this to vm._watcher inside the watcher's constructor
          // since the watcher's initial patch may call $forceUpdate (e.g. inside child
          // component's mounted hook), which relies on vm._watcher being already defined
          new Watcher(
            vm,
            updateComponent,
            noop,
            {
              before: function before() {
                if (vm._isMounted && !vm._isDestroyed) {
                  callHook(vm, 'beforeUpdate')
                }
              },
            },
            true /* isRenderWatcher */
          )
          hydrating = false

          // manually mounted instance, call mounted on self
          // mounted is called for render-created child components in its inserted hook
          if (vm.$vnode == null) {
            vm._isMounted = true
            callHook(vm, 'mounted')
          }
          return vm
        }

        function updateChildComponent(
          vm,
          propsData,
          listeners,
          parentVnode,
          renderChildren
        ) {
          if (true) {
            isUpdatingChildComponent = true
          }

          // determine whether component has slot children
          // we need to do this before overwriting $options._renderChildren.

          // check if there are dynamic scopedSlots (hand-written or compiled but with
          // dynamic slot names). Static scoped slots compiled from template has the
          // "$stable" marker.
          var newScopedSlots = parentVnode.data.scopedSlots
          var oldScopedSlots = vm.$scopedSlots
          var hasDynamicScopedSlot = !!(
            (newScopedSlots && !newScopedSlots.$stable) ||
            (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
            (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||
            (!newScopedSlots && vm.$scopedSlots.$key)
          )

          // Any static slot children from the parent may have changed during parent's
          // update. Dynamic scoped slots may also have changed. In such cases, a forced
          // update is necessary to ensure correctness.
          var needsForceUpdate = !!(
            renderChildren || // has new static slots
            vm.$options._renderChildren || // has old static slots
            hasDynamicScopedSlot
          )

          vm.$options._parentVnode = parentVnode
          vm.$vnode = parentVnode // update vm's placeholder node without re-render

          if (vm._vnode) {
            // update child tree's parent
            vm._vnode.parent = parentVnode
          }
          vm.$options._renderChildren = renderChildren

          // update $attrs and $listeners hash
          // these are also reactive so they may trigger child update if the child
          // used them during render
          vm.$attrs = parentVnode.data.attrs || emptyObject
          vm.$listeners = listeners || emptyObject

          // update props
          if (propsData && vm.$options.props) {
            toggleObserving(false)
            var props = vm._props
            var propKeys = vm.$options._propKeys || []
            for (var i = 0; i < propKeys.length; i++) {
              var key = propKeys[i]
              var propOptions = vm.$options.props // wtf flow?
              props[key] = validateProp(key, propOptions, propsData, vm)
            }
            toggleObserving(true)
            // keep a copy of raw propsData
            vm.$options.propsData = propsData
          }

          // update listeners
          listeners = listeners || emptyObject
          var oldListeners = vm.$options._parentListeners
          vm.$options._parentListeners = listeners
          updateComponentListeners(vm, listeners, oldListeners)

          // resolve slots + force update if has children
          if (needsForceUpdate) {
            vm.$slots = resolveSlots(renderChildren, parentVnode.context)
            vm.$forceUpdate()
          }

          if (true) {
            isUpdatingChildComponent = false
          }
        }

        function isInInactiveTree(vm) {
          while (vm && (vm = vm.$parent)) {
            if (vm._inactive) {
              return true
            }
          }
          return false
        }

        function activateChildComponent(vm, direct) {
          if (direct) {
            vm._directInactive = false
            if (isInInactiveTree(vm)) {
              return
            }
          } else if (vm._directInactive) {
            return
          }
          if (vm._inactive || vm._inactive === null) {
            vm._inactive = false
            for (var i = 0; i < vm.$children.length; i++) {
              activateChildComponent(vm.$children[i])
            }
            callHook(vm, 'activated')
          }
        }

        function deactivateChildComponent(vm, direct) {
          if (direct) {
            vm._directInactive = true
            if (isInInactiveTree(vm)) {
              return
            }
          }
          if (!vm._inactive) {
            vm._inactive = true
            for (var i = 0; i < vm.$children.length; i++) {
              deactivateChildComponent(vm.$children[i])
            }
            callHook(vm, 'deactivated')
          }
        }

        function callHook(vm, hook) {
          // #7573 disable dep collection when invoking lifecycle hooks
          pushTarget()
          var handlers = vm.$options[hook]
          var info = hook + ' hook'
          if (handlers) {
            for (var i = 0, j = handlers.length; i < j; i++) {
              invokeWithErrorHandling(handlers[i], vm, null, vm, info)
            }
          }
          if (vm._hasHookEvent) {
            vm.$emit('hook:' + hook)
          }
          popTarget()
        }

        /*  */

        var MAX_UPDATE_COUNT = 100

        var queue = []
        var activatedChildren = []
        var has = {}
        var circular = {}
        var waiting = false
        var flushing = false
        var index = 0

        /**
         * Reset the scheduler's state.
         */
        function resetSchedulerState() {
          index = queue.length = activatedChildren.length = 0
          has = {}
          if (true) {
            circular = {}
          }
          waiting = flushing = false
        }

        // Async edge case #6566 requires saving the timestamp when event listeners are
        // attached. However, calling performance.now() has a perf overhead especially
        // if the page has thousands of event listeners. Instead, we take a timestamp
        // every time the scheduler flushes and use that for all event listeners
        // attached during that flush.
        var currentFlushTimestamp = 0

        // Async edge case fix requires storing an event listener's attach timestamp.
        var getNow = Date.now

        // Determine what event timestamp the browser is using. Annoyingly, the
        // timestamp can either be hi-res (relative to page load) or low-res
        // (relative to UNIX epoch), so in order to compare time we have to use the
        // same timestamp type when saving the flush timestamp.
        // All IE versions use low-res event timestamps, and have problematic clock
        // implementations (#9632)
        if (inBrowser && !isIE) {
          var performance = window.performance
          if (
            performance &&
            typeof performance.now === 'function' &&
            getNow() > document.createEvent('Event').timeStamp
          ) {
            // if the event timestamp, although evaluated AFTER the Date.now(), is
            // smaller than it, it means the event is using a hi-res timestamp,
            // and we need to use the hi-res version for event listener timestamps as
            // well.
            getNow = function () {
              return performance.now()
            }
          }
        }

        /**
         * Flush both queues and run the watchers.
         */
        function flushSchedulerQueue() {
          currentFlushTimestamp = getNow()
          flushing = true
          var watcher, id

          // Sort queue before flush.
          // This ensures that:
          // 1. Components are updated from parent to child. (because parent is always
          //    created before the child)
          // 2. A component's user watchers are run before its render watcher (because
          //    user watchers are created before the render watcher)
          // 3. If a component is destroyed during a parent component's watcher run,
          //    its watchers can be skipped.
          queue.sort(function (a, b) {
            return a.id - b.id
          })

          // do not cache length because more watchers might be pushed
          // as we run existing watchers
          for (index = 0; index < queue.length; index++) {
            watcher = queue[index]
            if (watcher.before) {
              watcher.before()
            }
            id = watcher.id
            has[id] = null
            watcher.run()
            // in dev build, check and stop circular updates.
            if (true && has[id] != null) {
              circular[id] = (circular[id] || 0) + 1
              if (circular[id] > MAX_UPDATE_COUNT) {
                warn(
                  'You may have an infinite update loop ' +
                    (watcher.user
                      ? 'in watcher with expression "' +
                        watcher.expression +
                        '"'
                      : 'in a component render function.'),
                  watcher.vm
                )
                break
              }
            }
          }

          // keep copies of post queues before resetting state
          var activatedQueue = activatedChildren.slice()
          var updatedQueue = queue.slice()

          resetSchedulerState()

          // call component updated and activated hooks
          callActivatedHooks(activatedQueue)
          callUpdatedHooks(updatedQueue)

          // devtool hook
          /* istanbul ignore if */
          if (devtools && config.devtools) {
            devtools.emit('flush')
          }
        }

        function callUpdatedHooks(queue) {
          var i = queue.length
          while (i--) {
            var watcher = queue[i]
            var vm = watcher.vm
            if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
              callHook(vm, 'updated')
            }
          }
        }

        /**
         * Queue a kept-alive component that was activated during patch.
         * The queue will be processed after the entire tree has been patched.
         */
        function queueActivatedComponent(vm) {
          // setting _inactive to false here so that a render function can
          // rely on checking whether it's in an inactive tree (e.g. router-view)
          vm._inactive = false
          activatedChildren.push(vm)
        }

        function callActivatedHooks(queue) {
          for (var i = 0; i < queue.length; i++) {
            queue[i]._inactive = true
            activateChildComponent(queue[i], true /* true */)
          }
        }

        /**
         * Push a watcher into the watcher queue.
         * Jobs with duplicate IDs will be skipped unless it's
         * pushed when the queue is being flushed.
         */
        function queueWatcher(watcher) {
          var id = watcher.id
          if (has[id] == null) {
            has[id] = true
            if (!flushing) {
              queue.push(watcher)
            } else {
              // if already flushing, splice the watcher based on its id
              // if already past its id, it will be run next immediately.
              var i = queue.length - 1
              while (i > index && queue[i].id > watcher.id) {
                i--
              }
              queue.splice(i + 1, 0, watcher)
            }
            // queue the flush
            if (!waiting) {
              waiting = true

              if (true && !config.async) {
                flushSchedulerQueue()
                return
              }
              nextTick(flushSchedulerQueue)
            }
          }
        }

        /*  */

        var uid$2 = 0

        /**
         * A watcher parses an expression, collects dependencies,
         * and fires callback when the expression value changes.
         * This is used for both the $watch() api and directives.
         */
        var Watcher = function Watcher(
          vm,
          expOrFn,
          cb,
          options,
          isRenderWatcher
        ) {
          this.vm = vm
          if (isRenderWatcher) {
            vm._watcher = this
          }
          vm._watchers.push(this)
          // options
          if (options) {
            this.deep = !!options.deep
            this.user = !!options.user
            this.lazy = !!options.lazy
            this.sync = !!options.sync
            this.before = options.before
          } else {
            this.deep = this.user = this.lazy = this.sync = false
          }
          this.cb = cb
          this.id = ++uid$2 // uid for batching
          this.active = true
          this.dirty = this.lazy // for lazy watchers
          this.deps = []
          this.newDeps = []
          this.depIds = new _Set()
          this.newDepIds = new _Set()
          this.expression = true ? expOrFn.toString() : 0
          // parse expression for getter
          if (typeof expOrFn === 'function') {
            this.getter = expOrFn
          } else {
            this.getter = parsePath(expOrFn)
            if (!this.getter) {
              this.getter = noop
              true &&
                warn(
                  'Failed watching path: "' +
                    expOrFn +
                    '" ' +
                    'Watcher only accepts simple dot-delimited paths. ' +
                    'For full control, use a function instead.',
                  vm
                )
            }
          }
          this.value = this.lazy ? undefined : this.get()
        }

        /**
         * Evaluate the getter, and re-collect dependencies.
         */
        Watcher.prototype.get = function get() {
          pushTarget(this)
          var value
          var vm = this.vm
          try {
            value = this.getter.call(vm, vm)
          } catch (e) {
            if (this.user) {
              handleError(e, vm, 'getter for watcher "' + this.expression + '"')
            } else {
              throw e
            }
          } finally {
            // "touch" every property so they are all tracked as
            // dependencies for deep watching
            if (this.deep) {
              traverse(value)
            }
            popTarget()
            this.cleanupDeps()
          }
          return value
        }

        /**
         * Add a dependency to this directive.
         */
        Watcher.prototype.addDep = function addDep(dep) {
          var id = dep.id
          if (!this.newDepIds.has(id)) {
            this.newDepIds.add(id)
            this.newDeps.push(dep)
            if (!this.depIds.has(id)) {
              dep.addSub(this)
            }
          }
        }

        /**
         * Clean up for dependency collection.
         */
        Watcher.prototype.cleanupDeps = function cleanupDeps() {
          var i = this.deps.length
          while (i--) {
            var dep = this.deps[i]
            if (!this.newDepIds.has(dep.id)) {
              dep.removeSub(this)
            }
          }
          var tmp = this.depIds
          this.depIds = this.newDepIds
          this.newDepIds = tmp
          this.newDepIds.clear()
          tmp = this.deps
          this.deps = this.newDeps
          this.newDeps = tmp
          this.newDeps.length = 0
        }

        /**
         * Subscriber interface.
         * Will be called when a dependency changes.
         */
        Watcher.prototype.update = function update() {
          /* istanbul ignore else */
          if (this.lazy) {
            this.dirty = true
          } else if (this.sync) {
            this.run()
          } else {
            queueWatcher(this)
          }
        }

        /**
         * Scheduler job interface.
         * Will be called by the scheduler.
         */
        Watcher.prototype.run = function run() {
          if (this.active) {
            var value = this.get()
            if (
              value !== this.value ||
              // Deep watchers and watchers on Object/Arrays should fire even
              // when the value is the same, because the value may
              // have mutated.
              isObject(value) ||
              this.deep
            ) {
              // set new value
              var oldValue = this.value
              this.value = value
              if (this.user) {
                var info = 'callback for watcher "' + this.expression + '"'
                invokeWithErrorHandling(
                  this.cb,
                  this.vm,
                  [value, oldValue],
                  this.vm,
                  info
                )
              } else {
                this.cb.call(this.vm, value, oldValue)
              }
            }
          }
        }

        /**
         * Evaluate the value of the watcher.
         * This only gets called for lazy watchers.
         */
        Watcher.prototype.evaluate = function evaluate() {
          this.value = this.get()
          this.dirty = false
        }

        /**
         * Depend on all deps collected by this watcher.
         */
        Watcher.prototype.depend = function depend() {
          var i = this.deps.length
          while (i--) {
            this.deps[i].depend()
          }
        }

        /**
         * Remove self from all dependencies' subscriber list.
         */
        Watcher.prototype.teardown = function teardown() {
          if (this.active) {
            // remove self from vm's watcher list
            // this is a somewhat expensive operation so we skip it
            // if the vm is being destroyed.
            if (!this.vm._isBeingDestroyed) {
              remove(this.vm._watchers, this)
            }
            var i = this.deps.length
            while (i--) {
              this.deps[i].removeSub(this)
            }
            this.active = false
          }
        }

        /*  */

        var sharedPropertyDefinition = {
          enumerable: true,
          configurable: true,
          get: noop,
          set: noop,
        }

        function proxy(target, sourceKey, key) {
          sharedPropertyDefinition.get = function proxyGetter() {
            return this[sourceKey][key]
          }
          sharedPropertyDefinition.set = function proxySetter(val) {
            this[sourceKey][key] = val
          }
          Object.defineProperty(target, key, sharedPropertyDefinition)
        }

        function initState(vm) {
          vm._watchers = []
          var opts = vm.$options
          if (opts.props) {
            initProps(vm, opts.props)
          }
          if (opts.methods) {
            initMethods(vm, opts.methods)
          }
          if (opts.data) {
            initData(vm)
          } else {
            observe((vm._data = {}), true /* asRootData */)
          }
          if (opts.computed) {
            initComputed(vm, opts.computed)
          }
          if (opts.watch && opts.watch !== nativeWatch) {
            initWatch(vm, opts.watch)
          }
        }

        function initProps(vm, propsOptions) {
          var propsData = vm.$options.propsData || {}
          var props = (vm._props = {})
          // cache prop keys so that future props updates can iterate using Array
          // instead of dynamic object key enumeration.
          var keys = (vm.$options._propKeys = [])
          var isRoot = !vm.$parent
          // root instance props should be converted
          if (!isRoot) {
            toggleObserving(false)
          }
          var loop = function (key) {
            keys.push(key)
            var value = validateProp(key, propsOptions, propsData, vm)
            /* istanbul ignore else */
            if (true) {
              var hyphenatedKey = hyphenate(key)
              if (
                isReservedAttribute(hyphenatedKey) ||
                config.isReservedAttr(hyphenatedKey)
              ) {
                warn(
                  '"' +
                    hyphenatedKey +
                    '" is a reserved attribute and cannot be used as component prop.',
                  vm
                )
              }
              defineReactive$$1(props, key, value, function () {
                if (!isRoot && !isUpdatingChildComponent) {
                  warn(
                    'Avoid mutating a prop directly since the value will be ' +
                      'overwritten whenever the parent component re-renders. ' +
                      "Instead, use a data or computed property based on the prop's " +
                      'value. Prop being mutated: "' +
                      key +
                      '"',
                    vm
                  )
                }
              })
            } else {
            }
            // static props are already proxied on the component's prototype
            // during Vue.extend(). We only need to proxy props defined at
            // instantiation here.
            if (!(key in vm)) {
              proxy(vm, '_props', key)
            }
          }

          for (var key in propsOptions) loop(key)
          toggleObserving(true)
        }

        function initData(vm) {
          var data = vm.$options.data
          data = vm._data =
            typeof data === 'function' ? getData(data, vm) : data || {}
          if (!isPlainObject(data)) {
            data = {}
            true &&
              warn(
                'data functions should return an object:\n' +
                  'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                vm
              )
          }
          // proxy data on instance
          var keys = Object.keys(data)
          var props = vm.$options.props
          var methods = vm.$options.methods
          var i = keys.length
          while (i--) {
            var key = keys[i]
            if (true) {
              if (methods && hasOwn(methods, key)) {
                warn(
                  'Method "' +
                    key +
                    '" has already been defined as a data property.',
                  vm
                )
              }
            }
            if (props && hasOwn(props, key)) {
              true &&
                warn(
                  'The data property "' +
                    key +
                    '" is already declared as a prop. ' +
                    'Use prop default value instead.',
                  vm
                )
            } else if (!isReserved(key)) {
              proxy(vm, '_data', key)
            }
          }
          // observe data
          observe(data, true /* asRootData */)
        }

        function getData(data, vm) {
          // #7573 disable dep collection when invoking data getters
          pushTarget()
          try {
            return data.call(vm, vm)
          } catch (e) {
            handleError(e, vm, 'data()')
            return {}
          } finally {
            popTarget()
          }
        }

        var computedWatcherOptions = { lazy: true }

        function initComputed(vm, computed) {
          // $flow-disable-line
          var watchers = (vm._computedWatchers = Object.create(null))
          // computed properties are just getters during SSR
          var isSSR = isServerRendering()

          for (var key in computed) {
            var userDef = computed[key]
            var getter = typeof userDef === 'function' ? userDef : userDef.get
            if (true && getter == null) {
              warn('Getter is missing for computed property "' + key + '".', vm)
            }

            if (!isSSR) {
              // create internal watcher for the computed property.
              watchers[key] = new Watcher(
                vm,
                getter || noop,
                noop,
                computedWatcherOptions
              )
            }

            // component-defined computed properties are already defined on the
            // component prototype. We only need to define computed properties defined
            // at instantiation here.
            if (!(key in vm)) {
              defineComputed(vm, key, userDef)
            } else if (true) {
              if (key in vm.$data) {
                warn(
                  'The computed property "' +
                    key +
                    '" is already defined in data.',
                  vm
                )
              } else if (vm.$options.props && key in vm.$options.props) {
                warn(
                  'The computed property "' +
                    key +
                    '" is already defined as a prop.',
                  vm
                )
              } else if (vm.$options.methods && key in vm.$options.methods) {
                warn(
                  'The computed property "' +
                    key +
                    '" is already defined as a method.',
                  vm
                )
              }
            }
          }
        }

        function defineComputed(target, key, userDef) {
          var shouldCache = !isServerRendering()
          if (typeof userDef === 'function') {
            sharedPropertyDefinition.get = shouldCache
              ? createComputedGetter(key)
              : createGetterInvoker(userDef)
            sharedPropertyDefinition.set = noop
          } else {
            sharedPropertyDefinition.get = userDef.get
              ? shouldCache && userDef.cache !== false
                ? createComputedGetter(key)
                : createGetterInvoker(userDef.get)
              : noop
            sharedPropertyDefinition.set = userDef.set || noop
          }
          if (true && sharedPropertyDefinition.set === noop) {
            sharedPropertyDefinition.set = function () {
              warn(
                'Computed property "' +
                  key +
                  '" was assigned to but it has no setter.',
                this
              )
            }
          }
          Object.defineProperty(target, key, sharedPropertyDefinition)
        }

        function createComputedGetter(key) {
          return function computedGetter() {
            var watcher = this._computedWatchers && this._computedWatchers[key]
            if (watcher) {
              if (watcher.dirty) {
                watcher.evaluate()
              }
              if (Dep.target) {
                watcher.depend()
              }
              return watcher.value
            }
          }
        }

        function createGetterInvoker(fn) {
          return function computedGetter() {
            return fn.call(this, this)
          }
        }

        function initMethods(vm, methods) {
          var props = vm.$options.props
          for (var key in methods) {
            if (true) {
              if (typeof methods[key] !== 'function') {
                warn(
                  'Method "' +
                    key +
                    '" has type "' +
                    typeof methods[key] +
                    '" in the component definition. ' +
                    'Did you reference the function correctly?',
                  vm
                )
              }
              if (props && hasOwn(props, key)) {
                warn(
                  'Method "' + key + '" has already been defined as a prop.',
                  vm
                )
              }
              if (key in vm && isReserved(key)) {
                warn(
                  'Method "' +
                    key +
                    '" conflicts with an existing Vue instance method. ' +
                    'Avoid defining component methods that start with _ or $.'
                )
              }
            }
            vm[key] =
              typeof methods[key] !== 'function' ? noop : bind(methods[key], vm)
          }
        }

        function initWatch(vm, watch) {
          for (var key in watch) {
            var handler = watch[key]
            if (Array.isArray(handler)) {
              for (var i = 0; i < handler.length; i++) {
                createWatcher(vm, key, handler[i])
              }
            } else {
              createWatcher(vm, key, handler)
            }
          }
        }

        function createWatcher(vm, expOrFn, handler, options) {
          if (isPlainObject(handler)) {
            options = handler
            handler = handler.handler
          }
          if (typeof handler === 'string') {
            handler = vm[handler]
          }
          return vm.$watch(expOrFn, handler, options)
        }

        function stateMixin(Vue) {
          // flow somehow has problems with directly declared definition object
          // when using Object.defineProperty, so we have to procedurally build up
          // the object here.
          var dataDef = {}
          dataDef.get = function () {
            return this._data
          }
          var propsDef = {}
          propsDef.get = function () {
            return this._props
          }
          if (true) {
            dataDef.set = function () {
              warn(
                'Avoid replacing instance root $data. ' +
                  'Use nested data properties instead.',
                this
              )
            }
            propsDef.set = function () {
              warn('$props is readonly.', this)
            }
          }
          Object.defineProperty(Vue.prototype, '$data', dataDef)
          Object.defineProperty(Vue.prototype, '$props', propsDef)

          Vue.prototype.$set = set
          Vue.prototype.$delete = del

          Vue.prototype.$watch = function (expOrFn, cb, options) {
            var vm = this
            if (isPlainObject(cb)) {
              return createWatcher(vm, expOrFn, cb, options)
            }
            options = options || {}
            options.user = true
            var watcher = new Watcher(vm, expOrFn, cb, options)
            if (options.immediate) {
              var info =
                'callback for immediate watcher "' + watcher.expression + '"'
              pushTarget()
              invokeWithErrorHandling(cb, vm, [watcher.value], vm, info)
              popTarget()
            }
            return function unwatchFn() {
              watcher.teardown()
            }
          }
        }

        /*  */

        var uid$3 = 0

        function initMixin(Vue) {
          Vue.prototype._init = function (options) {
            var vm = this
            // a uid
            vm._uid = uid$3++

            var startTag, endTag
            /* istanbul ignore if */
            if (true && config.performance && mark) {
              startTag = 'vue-perf-start:' + vm._uid
              endTag = 'vue-perf-end:' + vm._uid
              mark(startTag)
            }

            // a flag to avoid this being observed
            vm._isVue = true
            // merge options
            if (options && options._isComponent) {
              // optimize internal component instantiation
              // since dynamic options merging is pretty slow, and none of the
              // internal component options needs special treatment.
              initInternalComponent(vm, options)
            } else {
              vm.$options = mergeOptions(
                resolveConstructorOptions(vm.constructor),
                options || {},
                vm
              )
            }
            /* istanbul ignore else */
            if (true) {
              initProxy(vm)
            } else {
            }
            // expose real self
            vm._self = vm
            initLifecycle(vm)
            initEvents(vm)
            initRender(vm)
            callHook(vm, 'beforeCreate')
            initInjections(vm) // resolve injections before data/props
            initState(vm)
            initProvide(vm) // resolve provide after data/props
            callHook(vm, 'created')

            /* istanbul ignore if */
            if (true && config.performance && mark) {
              vm._name = formatComponentName(vm, false)
              mark(endTag)
              measure('vue ' + vm._name + ' init', startTag, endTag)
            }

            if (vm.$options.el) {
              vm.$mount(vm.$options.el)
            }
          }
        }

        function initInternalComponent(vm, options) {
          var opts = (vm.$options = Object.create(vm.constructor.options))
          // doing this because it's faster than dynamic enumeration.
          var parentVnode = options._parentVnode
          opts.parent = options.parent
          opts._parentVnode = parentVnode

          var vnodeComponentOptions = parentVnode.componentOptions
          opts.propsData = vnodeComponentOptions.propsData
          opts._parentListeners = vnodeComponentOptions.listeners
          opts._renderChildren = vnodeComponentOptions.children
          opts._componentTag = vnodeComponentOptions.tag

          if (options.render) {
            opts.render = options.render
            opts.staticRenderFns = options.staticRenderFns
          }
        }

        function resolveConstructorOptions(Ctor) {
          var options = Ctor.options
          if (Ctor.super) {
            var superOptions = resolveConstructorOptions(Ctor.super)
            var cachedSuperOptions = Ctor.superOptions
            if (superOptions !== cachedSuperOptions) {
              // super option changed,
              // need to resolve new options.
              Ctor.superOptions = superOptions
              // check if there are any late-modified/attached options (#4976)
              var modifiedOptions = resolveModifiedOptions(Ctor)
              // update base extend options
              if (modifiedOptions) {
                extend(Ctor.extendOptions, modifiedOptions)
              }
              options = Ctor.options = mergeOptions(
                superOptions,
                Ctor.extendOptions
              )
              if (options.name) {
                options.components[options.name] = Ctor
              }
            }
          }
          return options
        }

        function resolveModifiedOptions(Ctor) {
          var modified
          var latest = Ctor.options
          var sealed = Ctor.sealedOptions
          for (var key in latest) {
            if (latest[key] !== sealed[key]) {
              if (!modified) {
                modified = {}
              }
              modified[key] = latest[key]
            }
          }
          return modified
        }

        function Vue(options) {
          if (true && !(this instanceof Vue)) {
            warn(
              'Vue is a constructor and should be called with the `new` keyword'
            )
          }
          this._init(options)
        }

        initMixin(Vue)
        stateMixin(Vue)
        eventsMixin(Vue)
        lifecycleMixin(Vue)
        renderMixin(Vue)

        /*  */

        function initUse(Vue) {
          Vue.use = function (plugin) {
            var installedPlugins =
              this._installedPlugins || (this._installedPlugins = [])
            if (installedPlugins.indexOf(plugin) > -1) {
              return this
            }

            // additional parameters
            var args = toArray(arguments, 1)
            args.unshift(this)
            if (typeof plugin.install === 'function') {
              plugin.install.apply(plugin, args)
            } else if (typeof plugin === 'function') {
              plugin.apply(null, args)
            }
            installedPlugins.push(plugin)
            return this
          }
        }

        /*  */

        function initMixin$1(Vue) {
          Vue.mixin = function (mixin) {
            this.options = mergeOptions(this.options, mixin)
            return this
          }
        }

        /*  */

        function initExtend(Vue) {
          /**
           * Each instance constructor, including Vue, has a unique
           * cid. This enables us to create wrapped "child
           * constructors" for prototypal inheritance and cache them.
           */
          Vue.cid = 0
          var cid = 1

          /**
           * Class inheritance
           */
          Vue.extend = function (extendOptions) {
            extendOptions = extendOptions || {}
            var Super = this
            var SuperId = Super.cid
            var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {})
            if (cachedCtors[SuperId]) {
              return cachedCtors[SuperId]
            }

            var name = extendOptions.name || Super.options.name
            if (true && name) {
              validateComponentName(name)
            }

            var Sub = function VueComponent(options) {
              this._init(options)
            }
            Sub.prototype = Object.create(Super.prototype)
            Sub.prototype.constructor = Sub
            Sub.cid = cid++
            Sub.options = mergeOptions(Super.options, extendOptions)
            Sub['super'] = Super

            // For props and computed properties, we define the proxy getters on
            // the Vue instances at extension time, on the extended prototype. This
            // avoids Object.defineProperty calls for each instance created.
            if (Sub.options.props) {
              initProps$1(Sub)
            }
            if (Sub.options.computed) {
              initComputed$1(Sub)
            }

            // allow further extension/mixin/plugin usage
            Sub.extend = Super.extend
            Sub.mixin = Super.mixin
            Sub.use = Super.use

            // create asset registers, so extended classes
            // can have their private assets too.
            ASSET_TYPES.forEach(function (type) {
              Sub[type] = Super[type]
            })
            // enable recursive self-lookup
            if (name) {
              Sub.options.components[name] = Sub
            }

            // keep a reference to the super options at extension time.
            // later at instantiation we can check if Super's options have
            // been updated.
            Sub.superOptions = Super.options
            Sub.extendOptions = extendOptions
            Sub.sealedOptions = extend({}, Sub.options)

            // cache constructor
            cachedCtors[SuperId] = Sub
            return Sub
          }
        }

        function initProps$1(Comp) {
          var props = Comp.options.props
          for (var key in props) {
            proxy(Comp.prototype, '_props', key)
          }
        }

        function initComputed$1(Comp) {
          var computed = Comp.options.computed
          for (var key in computed) {
            defineComputed(Comp.prototype, key, computed[key])
          }
        }

        /*  */

        function initAssetRegisters(Vue) {
          /**
           * Create asset registration methods.
           */
          ASSET_TYPES.forEach(function (type) {
            Vue[type] = function (id, definition) {
              if (!definition) {
                return this.options[type + 's'][id]
              } else {
                /* istanbul ignore if */
                if (true && type === 'component') {
                  validateComponentName(id)
                }
                if (type === 'component' && isPlainObject(definition)) {
                  definition.name = definition.name || id
                  definition = this.options._base.extend(definition)
                }
                if (type === 'directive' && typeof definition === 'function') {
                  definition = { bind: definition, update: definition }
                }
                this.options[type + 's'][id] = definition
                return definition
              }
            }
          })
        }

        /*  */

        function getComponentName(opts) {
          return opts && (opts.Ctor.options.name || opts.tag)
        }

        function matches(pattern, name) {
          if (Array.isArray(pattern)) {
            return pattern.indexOf(name) > -1
          } else if (typeof pattern === 'string') {
            return pattern.split(',').indexOf(name) > -1
          } else if (isRegExp(pattern)) {
            return pattern.test(name)
          }
          /* istanbul ignore next */
          return false
        }

        function pruneCache(keepAliveInstance, filter) {
          var cache = keepAliveInstance.cache
          var keys = keepAliveInstance.keys
          var _vnode = keepAliveInstance._vnode
          for (var key in cache) {
            var entry = cache[key]
            if (entry) {
              var name = entry.name
              if (name && !filter(name)) {
                pruneCacheEntry(cache, key, keys, _vnode)
              }
            }
          }
        }

        function pruneCacheEntry(cache, key, keys, current) {
          var entry = cache[key]
          if (entry && (!current || entry.tag !== current.tag)) {
            entry.componentInstance.$destroy()
          }
          cache[key] = null
          remove(keys, key)
        }

        var patternTypes = [String, RegExp, Array]

        var KeepAlive = {
          name: 'keep-alive',
          abstract: true,

          props: {
            include: patternTypes,
            exclude: patternTypes,
            max: [String, Number],
          },

          methods: {
            cacheVNode: function cacheVNode() {
              var ref = this
              var cache = ref.cache
              var keys = ref.keys
              var vnodeToCache = ref.vnodeToCache
              var keyToCache = ref.keyToCache
              if (vnodeToCache) {
                var tag = vnodeToCache.tag
                var componentInstance = vnodeToCache.componentInstance
                var componentOptions = vnodeToCache.componentOptions
                cache[keyToCache] = {
                  name: getComponentName(componentOptions),
                  tag: tag,
                  componentInstance: componentInstance,
                }
                keys.push(keyToCache)
                // prune oldest entry
                if (this.max && keys.length > parseInt(this.max)) {
                  pruneCacheEntry(cache, keys[0], keys, this._vnode)
                }
                this.vnodeToCache = null
              }
            },
          },

          created: function created() {
            this.cache = Object.create(null)
            this.keys = []
          },

          destroyed: function destroyed() {
            for (var key in this.cache) {
              pruneCacheEntry(this.cache, key, this.keys)
            }
          },

          mounted: function mounted() {
            var this$1 = this

            this.cacheVNode()
            this.$watch('include', function (val) {
              pruneCache(this$1, function (name) {
                return matches(val, name)
              })
            })
            this.$watch('exclude', function (val) {
              pruneCache(this$1, function (name) {
                return !matches(val, name)
              })
            })
          },

          updated: function updated() {
            this.cacheVNode()
          },

          render: function render() {
            var slot = this.$slots.default
            var vnode = getFirstComponentChild(slot)
            var componentOptions = vnode && vnode.componentOptions
            if (componentOptions) {
              // check pattern
              var name = getComponentName(componentOptions)
              var ref = this
              var include = ref.include
              var exclude = ref.exclude
              if (
                // not included
                (include && (!name || !matches(include, name))) ||
                // excluded
                (exclude && name && matches(exclude, name))
              ) {
                return vnode
              }

              var ref$1 = this
              var cache = ref$1.cache
              var keys = ref$1.keys
              var key =
                vnode.key == null
                  ? // same constructor may get registered as different local components
                    // so cid alone is not enough (#3269)
                    componentOptions.Ctor.cid +
                    (componentOptions.tag ? '::' + componentOptions.tag : '')
                  : vnode.key
              if (cache[key]) {
                vnode.componentInstance = cache[key].componentInstance
                // make current key freshest
                remove(keys, key)
                keys.push(key)
              } else {
                // delay setting the cache until update
                this.vnodeToCache = vnode
                this.keyToCache = key
              }

              vnode.data.keepAlive = true
            }
            return vnode || (slot && slot[0])
          },
        }

        var builtInComponents = {
          KeepAlive: KeepAlive,
        }

        /*  */

        function initGlobalAPI(Vue) {
          // config
          var configDef = {}
          configDef.get = function () {
            return config
          }
          if (true) {
            configDef.set = function () {
              warn(
                'Do not replace the Vue.config object, set individual fields instead.'
              )
            }
          }
          Object.defineProperty(Vue, 'config', configDef)

          // exposed util methods.
          // NOTE: these are not considered part of the public API - avoid relying on
          // them unless you are aware of the risk.
          Vue.util = {
            warn: warn,
            extend: extend,
            mergeOptions: mergeOptions,
            defineReactive: defineReactive$$1,
          }

          Vue.set = set
          Vue.delete = del
          Vue.nextTick = nextTick

          // 2.6 explicit observable API
          Vue.observable = function (obj) {
            observe(obj)
            return obj
          }

          Vue.options = Object.create(null)
          ASSET_TYPES.forEach(function (type) {
            Vue.options[type + 's'] = Object.create(null)
          })

          // this is used to identify the "base" constructor to extend all plain-object
          // components with in Weex's multi-instance scenarios.
          Vue.options._base = Vue

          extend(Vue.options.components, builtInComponents)

          initUse(Vue)
          initMixin$1(Vue)
          initExtend(Vue)
          initAssetRegisters(Vue)
        }

        initGlobalAPI(Vue)

        Object.defineProperty(Vue.prototype, '$isServer', {
          get: isServerRendering,
        })

        Object.defineProperty(Vue.prototype, '$ssrContext', {
          get: function get() {
            /* istanbul ignore next */
            return this.$vnode && this.$vnode.ssrContext
          },
        })

        // expose FunctionalRenderContext for ssr runtime helper installation
        Object.defineProperty(Vue, 'FunctionalRenderContext', {
          value: FunctionalRenderContext,
        })

        Vue.version = '2.6.14'

        /*  */

        // these are reserved for web because they are directly compiled away
        // during template compilation
        var isReservedAttr = makeMap('style,class')

        // attributes that should be using props for binding
        var acceptValue = makeMap('input,textarea,option,select,progress')
        var mustUseProp = function (tag, type, attr) {
          return (
            (attr === 'value' && acceptValue(tag) && type !== 'button') ||
            (attr === 'selected' && tag === 'option') ||
            (attr === 'checked' && tag === 'input') ||
            (attr === 'muted' && tag === 'video')
          )
        }

        var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck')

        var isValidContentEditableValue = makeMap(
          'events,caret,typing,plaintext-only'
        )

        var convertEnumeratedValue = function (key, value) {
          return isFalsyAttrValue(value) || value === 'false'
            ? 'false'
            : // allow arbitrary string value for contenteditable
            key === 'contenteditable' && isValidContentEditableValue(value)
            ? value
            : 'true'
        }

        var isBooleanAttr = makeMap(
          'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
            'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
            'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
            'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
            'required,reversed,scoped,seamless,selected,sortable,' +
            'truespeed,typemustmatch,visible'
        )

        var xlinkNS = 'http://www.w3.org/1999/xlink'

        var isXlink = function (name) {
          return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
        }

        var getXlinkProp = function (name) {
          return isXlink(name) ? name.slice(6, name.length) : ''
        }

        var isFalsyAttrValue = function (val) {
          return val == null || val === false
        }

        /*  */

        function genClassForVnode(vnode) {
          var data = vnode.data
          var parentNode = vnode
          var childNode = vnode
          while (isDef(childNode.componentInstance)) {
            childNode = childNode.componentInstance._vnode
            if (childNode && childNode.data) {
              data = mergeClassData(childNode.data, data)
            }
          }
          while (isDef((parentNode = parentNode.parent))) {
            if (parentNode && parentNode.data) {
              data = mergeClassData(data, parentNode.data)
            }
          }
          return renderClass(data.staticClass, data.class)
        }

        function mergeClassData(child, parent) {
          return {
            staticClass: concat(child.staticClass, parent.staticClass),
            class: isDef(child.class)
              ? [child.class, parent.class]
              : parent.class,
          }
        }

        function renderClass(staticClass, dynamicClass) {
          if (isDef(staticClass) || isDef(dynamicClass)) {
            return concat(staticClass, stringifyClass(dynamicClass))
          }
          /* istanbul ignore next */
          return ''
        }

        function concat(a, b) {
          return a ? (b ? a + ' ' + b : a) : b || ''
        }

        function stringifyClass(value) {
          if (Array.isArray(value)) {
            return stringifyArray(value)
          }
          if (isObject(value)) {
            return stringifyObject(value)
          }
          if (typeof value === 'string') {
            return value
          }
          /* istanbul ignore next */
          return ''
        }

        function stringifyArray(value) {
          var res = ''
          var stringified
          for (var i = 0, l = value.length; i < l; i++) {
            if (
              isDef((stringified = stringifyClass(value[i]))) &&
              stringified !== ''
            ) {
              if (res) {
                res += ' '
              }
              res += stringified
            }
          }
          return res
        }

        function stringifyObject(value) {
          var res = ''
          for (var key in value) {
            if (value[key]) {
              if (res) {
                res += ' '
              }
              res += key
            }
          }
          return res
        }

        /*  */

        var namespaceMap = {
          svg: 'http://www.w3.org/2000/svg',
          math: 'http://www.w3.org/1998/Math/MathML',
        }

        var isHTMLTag = makeMap(
          'html,body,base,head,link,meta,style,title,' +
            'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
            'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
            'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
            's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
            'embed,object,param,source,canvas,script,noscript,del,ins,' +
            'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
            'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
            'output,progress,select,textarea,' +
            'details,dialog,menu,menuitem,summary,' +
            'content,element,shadow,template,blockquote,iframe,tfoot'
        )

        // this map is intentionally selective, only covering SVG elements that may
        // contain child elements.
        var isSVG = makeMap(
          'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
            'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
            'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
          true
        )

        var isPreTag = function (tag) {
          return tag === 'pre'
        }

        var isReservedTag = function (tag) {
          return isHTMLTag(tag) || isSVG(tag)
        }

        function getTagNamespace(tag) {
          if (isSVG(tag)) {
            return 'svg'
          }
          // basic support for MathML
          // note it doesn't support other MathML elements being component roots
          if (tag === 'math') {
            return 'math'
          }
        }

        var unknownElementCache = Object.create(null)
        function isUnknownElement(tag) {
          /* istanbul ignore if */
          if (!inBrowser) {
            return true
          }
          if (isReservedTag(tag)) {
            return false
          }
          tag = tag.toLowerCase()
          /* istanbul ignore if */
          if (unknownElementCache[tag] != null) {
            return unknownElementCache[tag]
          }
          var el = document.createElement(tag)
          if (tag.indexOf('-') > -1) {
            // http://stackoverflow.com/a/28210364/1070244
            return (unknownElementCache[tag] =
              el.constructor === window.HTMLUnknownElement ||
              el.constructor === window.HTMLElement)
          } else {
            return (unknownElementCache[tag] = /HTMLUnknownElement/.test(
              el.toString()
            ))
          }
        }

        var isTextInputType = makeMap(
          'text,number,password,search,email,tel,url'
        )

        /*  */

        /**
         * Query an element selector if it's not an element already.
         */
        function query(el) {
          if (typeof el === 'string') {
            var selected = document.querySelector(el)
            if (!selected) {
              true && warn('Cannot find element: ' + el)
              return document.createElement('div')
            }
            return selected
          } else {
            return el
          }
        }

        /*  */

        function createElement$1(tagName, vnode) {
          var elm = document.createElement(tagName)
          if (tagName !== 'select') {
            return elm
          }
          // false or null will remove the attribute but undefined will not
          if (
            vnode.data &&
            vnode.data.attrs &&
            vnode.data.attrs.multiple !== undefined
          ) {
            elm.setAttribute('multiple', 'multiple')
          }
          return elm
        }

        function createElementNS(namespace, tagName) {
          return document.createElementNS(namespaceMap[namespace], tagName)
        }

        function createTextNode(text) {
          return document.createTextNode(text)
        }

        function createComment(text) {
          return document.createComment(text)
        }

        function insertBefore(parentNode, newNode, referenceNode) {
          parentNode.insertBefore(newNode, referenceNode)
        }

        function removeChild(node, child) {
          node.removeChild(child)
        }

        function appendChild(node, child) {
          node.appendChild(child)
        }

        function parentNode(node) {
          return node.parentNode
        }

        function nextSibling(node) {
          return node.nextSibling
        }

        function tagName(node) {
          return node.tagName
        }

        function setTextContent(node, text) {
          node.textContent = text
        }

        function setStyleScope(node, scopeId) {
          node.setAttribute(scopeId, '')
        }

        var nodeOps = /*#__PURE__*/ Object.freeze({
          createElement: createElement$1,
          createElementNS: createElementNS,
          createTextNode: createTextNode,
          createComment: createComment,
          insertBefore: insertBefore,
          removeChild: removeChild,
          appendChild: appendChild,
          parentNode: parentNode,
          nextSibling: nextSibling,
          tagName: tagName,
          setTextContent: setTextContent,
          setStyleScope: setStyleScope,
        })

        /*  */

        var ref = {
          create: function create(_, vnode) {
            registerRef(vnode)
          },
          update: function update(oldVnode, vnode) {
            if (oldVnode.data.ref !== vnode.data.ref) {
              registerRef(oldVnode, true)
              registerRef(vnode)
            }
          },
          destroy: function destroy(vnode) {
            registerRef(vnode, true)
          },
        }

        function registerRef(vnode, isRemoval) {
          var key = vnode.data.ref
          if (!isDef(key)) {
            return
          }

          var vm = vnode.context
          var ref = vnode.componentInstance || vnode.elm
          var refs = vm.$refs
          if (isRemoval) {
            if (Array.isArray(refs[key])) {
              remove(refs[key], ref)
            } else if (refs[key] === ref) {
              refs[key] = undefined
            }
          } else {
            if (vnode.data.refInFor) {
              if (!Array.isArray(refs[key])) {
                refs[key] = [ref]
              } else if (refs[key].indexOf(ref) < 0) {
                // $flow-disable-line
                refs[key].push(ref)
              }
            } else {
              refs[key] = ref
            }
          }
        }

        /**
         * Virtual DOM patching algorithm based on Snabbdom by
         * Simon Friis Vindum (@paldepind)
         * Licensed under the MIT License
         * https://github.com/paldepind/snabbdom/blob/master/LICENSE
         *
         * modified by Evan You (@yyx990803)
         *
         * Not type-checking this because this file is perf-critical and the cost
         * of making flow understand it is not worth it.
         */

        var emptyNode = new VNode('', {}, [])

        var hooks = ['create', 'activate', 'update', 'remove', 'destroy']

        function sameVnode(a, b) {
          return (
            a.key === b.key &&
            a.asyncFactory === b.asyncFactory &&
            ((a.tag === b.tag &&
              a.isComment === b.isComment &&
              isDef(a.data) === isDef(b.data) &&
              sameInputType(a, b)) ||
              (isTrue(a.isAsyncPlaceholder) && isUndef(b.asyncFactory.error)))
          )
        }

        function sameInputType(a, b) {
          if (a.tag !== 'input') {
            return true
          }
          var i
          var typeA = isDef((i = a.data)) && isDef((i = i.attrs)) && i.type
          var typeB = isDef((i = b.data)) && isDef((i = i.attrs)) && i.type
          return (
            typeA === typeB ||
            (isTextInputType(typeA) && isTextInputType(typeB))
          )
        }

        function createKeyToOldIdx(children, beginIdx, endIdx) {
          var i, key
          var map = {}
          for (i = beginIdx; i <= endIdx; ++i) {
            key = children[i].key
            if (isDef(key)) {
              map[key] = i
            }
          }
          return map
        }

        function createPatchFunction(backend) {
          var i, j
          var cbs = {}

          var modules = backend.modules
          var nodeOps = backend.nodeOps

          for (i = 0; i < hooks.length; ++i) {
            cbs[hooks[i]] = []
            for (j = 0; j < modules.length; ++j) {
              if (isDef(modules[j][hooks[i]])) {
                cbs[hooks[i]].push(modules[j][hooks[i]])
              }
            }
          }

          function emptyNodeAt(elm) {
            return new VNode(
              nodeOps.tagName(elm).toLowerCase(),
              {},
              [],
              undefined,
              elm
            )
          }

          function createRmCb(childElm, listeners) {
            function remove$$1() {
              if (--remove$$1.listeners === 0) {
                removeNode(childElm)
              }
            }
            remove$$1.listeners = listeners
            return remove$$1
          }

          function removeNode(el) {
            var parent = nodeOps.parentNode(el)
            // element may have already been removed due to v-html / v-text
            if (isDef(parent)) {
              nodeOps.removeChild(parent, el)
            }
          }

          function isUnknownElement$$1(vnode, inVPre) {
            return (
              !inVPre &&
              !vnode.ns &&
              !(
                config.ignoredElements.length &&
                config.ignoredElements.some(function (ignore) {
                  return isRegExp(ignore)
                    ? ignore.test(vnode.tag)
                    : ignore === vnode.tag
                })
              ) &&
              config.isUnknownElement(vnode.tag)
            )
          }

          var creatingElmInVPre = 0

          function createElm(
            vnode,
            insertedVnodeQueue,
            parentElm,
            refElm,
            nested,
            ownerArray,
            index
          ) {
            if (isDef(vnode.elm) && isDef(ownerArray)) {
              // This vnode was used in a previous render!
              // now it's used as a new node, overwriting its elm would cause
              // potential patch errors down the road when it's used as an insertion
              // reference node. Instead, we clone the node on-demand before creating
              // associated DOM element for it.
              vnode = ownerArray[index] = cloneVNode(vnode)
            }

            vnode.isRootInsert = !nested // for transition enter check
            if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
              return
            }

            var data = vnode.data
            var children = vnode.children
            var tag = vnode.tag
            if (isDef(tag)) {
              if (true) {
                if (data && data.pre) {
                  creatingElmInVPre++
                }
                if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                  warn(
                    'Unknown custom element: <' +
                      tag +
                      '> - did you ' +
                      'register the component correctly? For recursive components, ' +
                      'make sure to provide the "name" option.',
                    vnode.context
                  )
                }
              }

              vnode.elm = vnode.ns
                ? nodeOps.createElementNS(vnode.ns, tag)
                : nodeOps.createElement(tag, vnode)
              setScope(vnode)

              /* istanbul ignore if */
              {
                createChildren(vnode, children, insertedVnodeQueue)
                if (isDef(data)) {
                  invokeCreateHooks(vnode, insertedVnodeQueue)
                }
                insert(parentElm, vnode.elm, refElm)
              }

              if (true && data && data.pre) {
                creatingElmInVPre--
              }
            } else if (isTrue(vnode.isComment)) {
              vnode.elm = nodeOps.createComment(vnode.text)
              insert(parentElm, vnode.elm, refElm)
            } else {
              vnode.elm = nodeOps.createTextNode(vnode.text)
              insert(parentElm, vnode.elm, refElm)
            }
          }

          function createComponent(
            vnode,
            insertedVnodeQueue,
            parentElm,
            refElm
          ) {
            var i = vnode.data
            if (isDef(i)) {
              var isReactivated = isDef(vnode.componentInstance) && i.keepAlive
              if (isDef((i = i.hook)) && isDef((i = i.init))) {
                i(vnode, false /* hydrating */)
              }
              // after calling the init hook, if the vnode is a child component
              // it should've created a child instance and mounted it. the child
              // component also has set the placeholder vnode's elm.
              // in that case we can just return the element and be done.
              if (isDef(vnode.componentInstance)) {
                initComponent(vnode, insertedVnodeQueue)
                insert(parentElm, vnode.elm, refElm)
                if (isTrue(isReactivated)) {
                  reactivateComponent(
                    vnode,
                    insertedVnodeQueue,
                    parentElm,
                    refElm
                  )
                }
                return true
              }
            }
          }

          function initComponent(vnode, insertedVnodeQueue) {
            if (isDef(vnode.data.pendingInsert)) {
              insertedVnodeQueue.push.apply(
                insertedVnodeQueue,
                vnode.data.pendingInsert
              )
              vnode.data.pendingInsert = null
            }
            vnode.elm = vnode.componentInstance.$el
            if (isPatchable(vnode)) {
              invokeCreateHooks(vnode, insertedVnodeQueue)
              setScope(vnode)
            } else {
              // empty component root.
              // skip all element-related modules except for ref (#3455)
              registerRef(vnode)
              // make sure to invoke the insert hook
              insertedVnodeQueue.push(vnode)
            }
          }

          function reactivateComponent(
            vnode,
            insertedVnodeQueue,
            parentElm,
            refElm
          ) {
            var i
            // hack for #4339: a reactivated component with inner transition
            // does not trigger because the inner node's created hooks are not called
            // again. It's not ideal to involve module-specific logic in here but
            // there doesn't seem to be a better way to do it.
            var innerNode = vnode
            while (innerNode.componentInstance) {
              innerNode = innerNode.componentInstance._vnode
              if (isDef((i = innerNode.data)) && isDef((i = i.transition))) {
                for (i = 0; i < cbs.activate.length; ++i) {
                  cbs.activate[i](emptyNode, innerNode)
                }
                insertedVnodeQueue.push(innerNode)
                break
              }
            }
            // unlike a newly created component,
            // a reactivated keep-alive component doesn't insert itself
            insert(parentElm, vnode.elm, refElm)
          }

          function insert(parent, elm, ref$$1) {
            if (isDef(parent)) {
              if (isDef(ref$$1)) {
                if (nodeOps.parentNode(ref$$1) === parent) {
                  nodeOps.insertBefore(parent, elm, ref$$1)
                }
              } else {
                nodeOps.appendChild(parent, elm)
              }
            }
          }

          function createChildren(vnode, children, insertedVnodeQueue) {
            if (Array.isArray(children)) {
              if (true) {
                checkDuplicateKeys(children)
              }
              for (var i = 0; i < children.length; ++i) {
                createElm(
                  children[i],
                  insertedVnodeQueue,
                  vnode.elm,
                  null,
                  true,
                  children,
                  i
                )
              }
            } else if (isPrimitive(vnode.text)) {
              nodeOps.appendChild(
                vnode.elm,
                nodeOps.createTextNode(String(vnode.text))
              )
            }
          }

          function isPatchable(vnode) {
            while (vnode.componentInstance) {
              vnode = vnode.componentInstance._vnode
            }
            return isDef(vnode.tag)
          }

          function invokeCreateHooks(vnode, insertedVnodeQueue) {
            for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
              cbs.create[i$1](emptyNode, vnode)
            }
            i = vnode.data.hook // Reuse variable
            if (isDef(i)) {
              if (isDef(i.create)) {
                i.create(emptyNode, vnode)
              }
              if (isDef(i.insert)) {
                insertedVnodeQueue.push(vnode)
              }
            }
          }

          // set scope id attribute for scoped CSS.
          // this is implemented as a special case to avoid the overhead
          // of going through the normal attribute patching process.
          function setScope(vnode) {
            var i
            if (isDef((i = vnode.fnScopeId))) {
              nodeOps.setStyleScope(vnode.elm, i)
            } else {
              var ancestor = vnode
              while (ancestor) {
                if (
                  isDef((i = ancestor.context)) &&
                  isDef((i = i.$options._scopeId))
                ) {
                  nodeOps.setStyleScope(vnode.elm, i)
                }
                ancestor = ancestor.parent
              }
            }
            // for slot content they should also get the scopeId from the host instance.
            if (
              isDef((i = activeInstance)) &&
              i !== vnode.context &&
              i !== vnode.fnContext &&
              isDef((i = i.$options._scopeId))
            ) {
              nodeOps.setStyleScope(vnode.elm, i)
            }
          }

          function addVnodes(
            parentElm,
            refElm,
            vnodes,
            startIdx,
            endIdx,
            insertedVnodeQueue
          ) {
            for (; startIdx <= endIdx; ++startIdx) {
              createElm(
                vnodes[startIdx],
                insertedVnodeQueue,
                parentElm,
                refElm,
                false,
                vnodes,
                startIdx
              )
            }
          }

          function invokeDestroyHook(vnode) {
            var i, j
            var data = vnode.data
            if (isDef(data)) {
              if (isDef((i = data.hook)) && isDef((i = i.destroy))) {
                i(vnode)
              }
              for (i = 0; i < cbs.destroy.length; ++i) {
                cbs.destroy[i](vnode)
              }
            }
            if (isDef((i = vnode.children))) {
              for (j = 0; j < vnode.children.length; ++j) {
                invokeDestroyHook(vnode.children[j])
              }
            }
          }

          function removeVnodes(vnodes, startIdx, endIdx) {
            for (; startIdx <= endIdx; ++startIdx) {
              var ch = vnodes[startIdx]
              if (isDef(ch)) {
                if (isDef(ch.tag)) {
                  removeAndInvokeRemoveHook(ch)
                  invokeDestroyHook(ch)
                } else {
                  // Text node
                  removeNode(ch.elm)
                }
              }
            }
          }

          function removeAndInvokeRemoveHook(vnode, rm) {
            if (isDef(rm) || isDef(vnode.data)) {
              var i
              var listeners = cbs.remove.length + 1
              if (isDef(rm)) {
                // we have a recursively passed down rm callback
                // increase the listeners count
                rm.listeners += listeners
              } else {
                // directly removing
                rm = createRmCb(vnode.elm, listeners)
              }
              // recursively invoke hooks on child component root node
              if (
                isDef((i = vnode.componentInstance)) &&
                isDef((i = i._vnode)) &&
                isDef(i.data)
              ) {
                removeAndInvokeRemoveHook(i, rm)
              }
              for (i = 0; i < cbs.remove.length; ++i) {
                cbs.remove[i](vnode, rm)
              }
              if (isDef((i = vnode.data.hook)) && isDef((i = i.remove))) {
                i(vnode, rm)
              } else {
                rm()
              }
            } else {
              removeNode(vnode.elm)
            }
          }

          function updateChildren(
            parentElm,
            oldCh,
            newCh,
            insertedVnodeQueue,
            removeOnly
          ) {
            var oldStartIdx = 0
            var newStartIdx = 0
            var oldEndIdx = oldCh.length - 1
            var oldStartVnode = oldCh[0]
            var oldEndVnode = oldCh[oldEndIdx]
            var newEndIdx = newCh.length - 1
            var newStartVnode = newCh[0]
            var newEndVnode = newCh[newEndIdx]
            var oldKeyToIdx, idxInOld, vnodeToMove, refElm

            // removeOnly is a special flag used only by <transition-group>
            // to ensure removed elements stay in correct relative positions
            // during leaving transitions
            var canMove = !removeOnly

            if (true) {
              checkDuplicateKeys(newCh)
            }

            while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
              if (isUndef(oldStartVnode)) {
                oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left
              } else if (isUndef(oldEndVnode)) {
                oldEndVnode = oldCh[--oldEndIdx]
              } else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(
                  oldStartVnode,
                  newStartVnode,
                  insertedVnodeQueue,
                  newCh,
                  newStartIdx
                )
                oldStartVnode = oldCh[++oldStartIdx]
                newStartVnode = newCh[++newStartIdx]
              } else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(
                  oldEndVnode,
                  newEndVnode,
                  insertedVnodeQueue,
                  newCh,
                  newEndIdx
                )
                oldEndVnode = oldCh[--oldEndIdx]
                newEndVnode = newCh[--newEndIdx]
              } else if (sameVnode(oldStartVnode, newEndVnode)) {
                // Vnode moved right
                patchVnode(
                  oldStartVnode,
                  newEndVnode,
                  insertedVnodeQueue,
                  newCh,
                  newEndIdx
                )
                canMove &&
                  nodeOps.insertBefore(
                    parentElm,
                    oldStartVnode.elm,
                    nodeOps.nextSibling(oldEndVnode.elm)
                  )
                oldStartVnode = oldCh[++oldStartIdx]
                newEndVnode = newCh[--newEndIdx]
              } else if (sameVnode(oldEndVnode, newStartVnode)) {
                // Vnode moved left
                patchVnode(
                  oldEndVnode,
                  newStartVnode,
                  insertedVnodeQueue,
                  newCh,
                  newStartIdx
                )
                canMove &&
                  nodeOps.insertBefore(
                    parentElm,
                    oldEndVnode.elm,
                    oldStartVnode.elm
                  )
                oldEndVnode = oldCh[--oldEndIdx]
                newStartVnode = newCh[++newStartIdx]
              } else {
                if (isUndef(oldKeyToIdx)) {
                  oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)
                }
                idxInOld = isDef(newStartVnode.key)
                  ? oldKeyToIdx[newStartVnode.key]
                  : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx)
                if (isUndef(idxInOld)) {
                  // New element
                  createElm(
                    newStartVnode,
                    insertedVnodeQueue,
                    parentElm,
                    oldStartVnode.elm,
                    false,
                    newCh,
                    newStartIdx
                  )
                } else {
                  vnodeToMove = oldCh[idxInOld]
                  if (sameVnode(vnodeToMove, newStartVnode)) {
                    patchVnode(
                      vnodeToMove,
                      newStartVnode,
                      insertedVnodeQueue,
                      newCh,
                      newStartIdx
                    )
                    oldCh[idxInOld] = undefined
                    canMove &&
                      nodeOps.insertBefore(
                        parentElm,
                        vnodeToMove.elm,
                        oldStartVnode.elm
                      )
                  } else {
                    // same key but different element. treat as new element
                    createElm(
                      newStartVnode,
                      insertedVnodeQueue,
                      parentElm,
                      oldStartVnode.elm,
                      false,
                      newCh,
                      newStartIdx
                    )
                  }
                }
                newStartVnode = newCh[++newStartIdx]
              }
            }
            if (oldStartIdx > oldEndIdx) {
              refElm = isUndef(newCh[newEndIdx + 1])
                ? null
                : newCh[newEndIdx + 1].elm
              addVnodes(
                parentElm,
                refElm,
                newCh,
                newStartIdx,
                newEndIdx,
                insertedVnodeQueue
              )
            } else if (newStartIdx > newEndIdx) {
              removeVnodes(oldCh, oldStartIdx, oldEndIdx)
            }
          }

          function checkDuplicateKeys(children) {
            var seenKeys = {}
            for (var i = 0; i < children.length; i++) {
              var vnode = children[i]
              var key = vnode.key
              if (isDef(key)) {
                if (seenKeys[key]) {
                  warn(
                    "Duplicate keys detected: '" +
                      key +
                      "'. This may cause an update error.",
                    vnode.context
                  )
                } else {
                  seenKeys[key] = true
                }
              }
            }
          }

          function findIdxInOld(node, oldCh, start, end) {
            for (var i = start; i < end; i++) {
              var c = oldCh[i]
              if (isDef(c) && sameVnode(node, c)) {
                return i
              }
            }
          }

          function patchVnode(
            oldVnode,
            vnode,
            insertedVnodeQueue,
            ownerArray,
            index,
            removeOnly
          ) {
            if (oldVnode === vnode) {
              return
            }

            if (isDef(vnode.elm) && isDef(ownerArray)) {
              // clone reused vnode
              vnode = ownerArray[index] = cloneVNode(vnode)
            }

            var elm = (vnode.elm = oldVnode.elm)

            if (isTrue(oldVnode.isAsyncPlaceholder)) {
              if (isDef(vnode.asyncFactory.resolved)) {
                hydrate(oldVnode.elm, vnode, insertedVnodeQueue)
              } else {
                vnode.isAsyncPlaceholder = true
              }
              return
            }

            // reuse element for static trees.
            // note we only do this if the vnode is cloned -
            // if the new node is not cloned it means the render functions have been
            // reset by the hot-reload-api and we need to do a proper re-render.
            if (
              isTrue(vnode.isStatic) &&
              isTrue(oldVnode.isStatic) &&
              vnode.key === oldVnode.key &&
              (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
            ) {
              vnode.componentInstance = oldVnode.componentInstance
              return
            }

            var i
            var data = vnode.data
            if (
              isDef(data) &&
              isDef((i = data.hook)) &&
              isDef((i = i.prepatch))
            ) {
              i(oldVnode, vnode)
            }

            var oldCh = oldVnode.children
            var ch = vnode.children
            if (isDef(data) && isPatchable(vnode)) {
              for (i = 0; i < cbs.update.length; ++i) {
                cbs.update[i](oldVnode, vnode)
              }
              if (isDef((i = data.hook)) && isDef((i = i.update))) {
                i(oldVnode, vnode)
              }
            }
            if (isUndef(vnode.text)) {
              if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch) {
                  updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly)
                }
              } else if (isDef(ch)) {
                if (true) {
                  checkDuplicateKeys(ch)
                }
                if (isDef(oldVnode.text)) {
                  nodeOps.setTextContent(elm, '')
                }
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)
              } else if (isDef(oldCh)) {
                removeVnodes(oldCh, 0, oldCh.length - 1)
              } else if (isDef(oldVnode.text)) {
                nodeOps.setTextContent(elm, '')
              }
            } else if (oldVnode.text !== vnode.text) {
              nodeOps.setTextContent(elm, vnode.text)
            }
            if (isDef(data)) {
              if (isDef((i = data.hook)) && isDef((i = i.postpatch))) {
                i(oldVnode, vnode)
              }
            }
          }

          function invokeInsertHook(vnode, queue, initial) {
            // delay insert hooks for component root nodes, invoke them after the
            // element is really inserted
            if (isTrue(initial) && isDef(vnode.parent)) {
              vnode.parent.data.pendingInsert = queue
            } else {
              for (var i = 0; i < queue.length; ++i) {
                queue[i].data.hook.insert(queue[i])
              }
            }
          }

          var hydrationBailed = false
          // list of modules that can skip create hook during hydration because they
          // are already rendered on the client or has no need for initialization
          // Note: style is excluded because it relies on initial clone for future
          // deep updates (#7063).
          var isRenderedModule = makeMap(
            'attrs,class,staticClass,staticStyle,key'
          )

          // Note: this is a browser-only function so we can assume elms are DOM nodes.
          function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
            var i
            var tag = vnode.tag
            var data = vnode.data
            var children = vnode.children
            inVPre = inVPre || (data && data.pre)
            vnode.elm = elm

            if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
              vnode.isAsyncPlaceholder = true
              return true
            }
            // assert node match
            if (true) {
              if (!assertNodeMatch(elm, vnode, inVPre)) {
                return false
              }
            }
            if (isDef(data)) {
              if (isDef((i = data.hook)) && isDef((i = i.init))) {
                i(vnode, true /* hydrating */)
              }
              if (isDef((i = vnode.componentInstance))) {
                // child component. it should have hydrated its own tree.
                initComponent(vnode, insertedVnodeQueue)
                return true
              }
            }
            if (isDef(tag)) {
              if (isDef(children)) {
                // empty element, allow client to pick up and populate children
                if (!elm.hasChildNodes()) {
                  createChildren(vnode, children, insertedVnodeQueue)
                } else {
                  // v-html and domProps: innerHTML
                  if (
                    isDef((i = data)) &&
                    isDef((i = i.domProps)) &&
                    isDef((i = i.innerHTML))
                  ) {
                    if (i !== elm.innerHTML) {
                      /* istanbul ignore if */
                      if (
                        true &&
                        typeof console !== 'undefined' &&
                        !hydrationBailed
                      ) {
                        hydrationBailed = true
                        console.warn('Parent: ', elm)
                        console.warn('server innerHTML: ', i)
                        console.warn('client innerHTML: ', elm.innerHTML)
                      }
                      return false
                    }
                  } else {
                    // iterate and compare children lists
                    var childrenMatch = true
                    var childNode = elm.firstChild
                    for (var i$1 = 0; i$1 < children.length; i$1++) {
                      if (
                        !childNode ||
                        !hydrate(
                          childNode,
                          children[i$1],
                          insertedVnodeQueue,
                          inVPre
                        )
                      ) {
                        childrenMatch = false
                        break
                      }
                      childNode = childNode.nextSibling
                    }
                    // if childNode is not null, it means the actual childNodes list is
                    // longer than the virtual children list.
                    if (!childrenMatch || childNode) {
                      /* istanbul ignore if */
                      if (
                        true &&
                        typeof console !== 'undefined' &&
                        !hydrationBailed
                      ) {
                        hydrationBailed = true
                        console.warn('Parent: ', elm)
                        console.warn(
                          'Mismatching childNodes vs. VNodes: ',
                          elm.childNodes,
                          children
                        )
                      }
                      return false
                    }
                  }
                }
              }
              if (isDef(data)) {
                var fullInvoke = false
                for (var key in data) {
                  if (!isRenderedModule(key)) {
                    fullInvoke = true
                    invokeCreateHooks(vnode, insertedVnodeQueue)
                    break
                  }
                }
                if (!fullInvoke && data['class']) {
                  // ensure collecting deps for deep class bindings for future updates
                  traverse(data['class'])
                }
              }
            } else if (elm.data !== vnode.text) {
              elm.data = vnode.text
            }
            return true
          }

          function assertNodeMatch(node, vnode, inVPre) {
            if (isDef(vnode.tag)) {
              return (
                vnode.tag.indexOf('vue-component') === 0 ||
                (!isUnknownElement$$1(vnode, inVPre) &&
                  vnode.tag.toLowerCase() ===
                    (node.tagName && node.tagName.toLowerCase()))
              )
            } else {
              return node.nodeType === (vnode.isComment ? 8 : 3)
            }
          }

          return function patch(oldVnode, vnode, hydrating, removeOnly) {
            if (isUndef(vnode)) {
              if (isDef(oldVnode)) {
                invokeDestroyHook(oldVnode)
              }
              return
            }

            var isInitialPatch = false
            var insertedVnodeQueue = []

            if (isUndef(oldVnode)) {
              // empty mount (likely as component), create new root element
              isInitialPatch = true
              createElm(vnode, insertedVnodeQueue)
            } else {
              var isRealElement = isDef(oldVnode.nodeType)
              if (!isRealElement && sameVnode(oldVnode, vnode)) {
                // patch existing root node
                patchVnode(
                  oldVnode,
                  vnode,
                  insertedVnodeQueue,
                  null,
                  null,
                  removeOnly
                )
              } else {
                if (isRealElement) {
                  // mounting to a real element
                  // check if this is server-rendered content and if we can perform
                  // a successful hydration.
                  if (
                    oldVnode.nodeType === 1 &&
                    oldVnode.hasAttribute(SSR_ATTR)
                  ) {
                    oldVnode.removeAttribute(SSR_ATTR)
                    hydrating = true
                  }
                  if (isTrue(hydrating)) {
                    if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                      invokeInsertHook(vnode, insertedVnodeQueue, true)
                      return oldVnode
                    } else if (true) {
                      warn(
                        'The client-side rendered virtual DOM tree is not matching ' +
                          'server-rendered content. This is likely caused by incorrect ' +
                          'HTML markup, for example nesting block-level elements inside ' +
                          '<p>, or missing <tbody>. Bailing hydration and performing ' +
                          'full client-side render.'
                      )
                    }
                  }
                  // either not server-rendered, or hydration failed.
                  // create an empty node and replace it
                  oldVnode = emptyNodeAt(oldVnode)
                }

                // replacing existing element
                var oldElm = oldVnode.elm
                var parentElm = nodeOps.parentNode(oldElm)

                // create new node
                createElm(
                  vnode,
                  insertedVnodeQueue,
                  // extremely rare edge case: do not insert if old element is in a
                  // leaving transition. Only happens when combining transition +
                  // keep-alive + HOCs. (#4590)
                  oldElm._leaveCb ? null : parentElm,
                  nodeOps.nextSibling(oldElm)
                )

                // update parent placeholder node element, recursively
                if (isDef(vnode.parent)) {
                  var ancestor = vnode.parent
                  var patchable = isPatchable(vnode)
                  while (ancestor) {
                    for (var i = 0; i < cbs.destroy.length; ++i) {
                      cbs.destroy[i](ancestor)
                    }
                    ancestor.elm = vnode.elm
                    if (patchable) {
                      for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                        cbs.create[i$1](emptyNode, ancestor)
                      }
                      // #6513
                      // invoke insert hooks that may have been merged by create hooks.
                      // e.g. for directives that uses the "inserted" hook.
                      var insert = ancestor.data.hook.insert
                      if (insert.merged) {
                        // start at index 1 to avoid re-invoking component mounted hook
                        for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                          insert.fns[i$2]()
                        }
                      }
                    } else {
                      registerRef(ancestor)
                    }
                    ancestor = ancestor.parent
                  }
                }

                // destroy old node
                if (isDef(parentElm)) {
                  removeVnodes([oldVnode], 0, 0)
                } else if (isDef(oldVnode.tag)) {
                  invokeDestroyHook(oldVnode)
                }
              }
            }

            invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)
            return vnode.elm
          }
        }

        /*  */

        var directives = {
          create: updateDirectives,
          update: updateDirectives,
          destroy: function unbindDirectives(vnode) {
            updateDirectives(vnode, emptyNode)
          },
        }

        function updateDirectives(oldVnode, vnode) {
          if (oldVnode.data.directives || vnode.data.directives) {
            _update(oldVnode, vnode)
          }
        }

        function _update(oldVnode, vnode) {
          var isCreate = oldVnode === emptyNode
          var isDestroy = vnode === emptyNode
          var oldDirs = normalizeDirectives$1(
            oldVnode.data.directives,
            oldVnode.context
          )
          var newDirs = normalizeDirectives$1(
            vnode.data.directives,
            vnode.context
          )

          var dirsWithInsert = []
          var dirsWithPostpatch = []

          var key, oldDir, dir
          for (key in newDirs) {
            oldDir = oldDirs[key]
            dir = newDirs[key]
            if (!oldDir) {
              // new directive, bind
              callHook$1(dir, 'bind', vnode, oldVnode)
              if (dir.def && dir.def.inserted) {
                dirsWithInsert.push(dir)
              }
            } else {
              // existing directive, update
              dir.oldValue = oldDir.value
              dir.oldArg = oldDir.arg
              callHook$1(dir, 'update', vnode, oldVnode)
              if (dir.def && dir.def.componentUpdated) {
                dirsWithPostpatch.push(dir)
              }
            }
          }

          if (dirsWithInsert.length) {
            var callInsert = function () {
              for (var i = 0; i < dirsWithInsert.length; i++) {
                callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode)
              }
            }
            if (isCreate) {
              mergeVNodeHook(vnode, 'insert', callInsert)
            } else {
              callInsert()
            }
          }

          if (dirsWithPostpatch.length) {
            mergeVNodeHook(vnode, 'postpatch', function () {
              for (var i = 0; i < dirsWithPostpatch.length; i++) {
                callHook$1(
                  dirsWithPostpatch[i],
                  'componentUpdated',
                  vnode,
                  oldVnode
                )
              }
            })
          }

          if (!isCreate) {
            for (key in oldDirs) {
              if (!newDirs[key]) {
                // no longer present, unbind
                callHook$1(
                  oldDirs[key],
                  'unbind',
                  oldVnode,
                  oldVnode,
                  isDestroy
                )
              }
            }
          }
        }

        var emptyModifiers = Object.create(null)

        function normalizeDirectives$1(dirs, vm) {
          var res = Object.create(null)
          if (!dirs) {
            // $flow-disable-line
            return res
          }
          var i, dir
          for (i = 0; i < dirs.length; i++) {
            dir = dirs[i]
            if (!dir.modifiers) {
              // $flow-disable-line
              dir.modifiers = emptyModifiers
            }
            res[getRawDirName(dir)] = dir
            dir.def = resolveAsset(vm.$options, 'directives', dir.name, true)
          }
          // $flow-disable-line
          return res
        }

        function getRawDirName(dir) {
          return (
            dir.rawName ||
            dir.name + '.' + Object.keys(dir.modifiers || {}).join('.')
          )
        }

        function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
          var fn = dir.def && dir.def[hook]
          if (fn) {
            try {
              fn(vnode.elm, dir, vnode, oldVnode, isDestroy)
            } catch (e) {
              handleError(
                e,
                vnode.context,
                'directive ' + dir.name + ' ' + hook + ' hook'
              )
            }
          }
        }

        var baseModules = [ref, directives]

        /*  */

        function updateAttrs(oldVnode, vnode) {
          var opts = vnode.componentOptions
          if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
            return
          }
          if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
            return
          }
          var key, cur, old
          var elm = vnode.elm
          var oldAttrs = oldVnode.data.attrs || {}
          var attrs = vnode.data.attrs || {}
          // clone observed objects, as the user probably wants to mutate it
          if (isDef(attrs.__ob__)) {
            attrs = vnode.data.attrs = extend({}, attrs)
          }

          for (key in attrs) {
            cur = attrs[key]
            old = oldAttrs[key]
            if (old !== cur) {
              setAttr(elm, key, cur, vnode.data.pre)
            }
          }
          // #4391: in IE9, setting type can reset value for input[type=radio]
          // #6666: IE/Edge forces progress value down to 1 before setting a max
          /* istanbul ignore if */
          if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
            setAttr(elm, 'value', attrs.value)
          }
          for (key in oldAttrs) {
            if (isUndef(attrs[key])) {
              if (isXlink(key)) {
                elm.removeAttributeNS(xlinkNS, getXlinkProp(key))
              } else if (!isEnumeratedAttr(key)) {
                elm.removeAttribute(key)
              }
            }
          }
        }

        function setAttr(el, key, value, isInPre) {
          if (isInPre || el.tagName.indexOf('-') > -1) {
            baseSetAttr(el, key, value)
          } else if (isBooleanAttr(key)) {
            // set attribute for blank value
            // e.g. <option disabled>Select one</option>
            if (isFalsyAttrValue(value)) {
              el.removeAttribute(key)
            } else {
              // technically allowfullscreen is a boolean attribute for <iframe>,
              // but Flash expects a value of "true" when used on <embed> tag
              value =
                key === 'allowfullscreen' && el.tagName === 'EMBED'
                  ? 'true'
                  : key
              el.setAttribute(key, value)
            }
          } else if (isEnumeratedAttr(key)) {
            el.setAttribute(key, convertEnumeratedValue(key, value))
          } else if (isXlink(key)) {
            if (isFalsyAttrValue(value)) {
              el.removeAttributeNS(xlinkNS, getXlinkProp(key))
            } else {
              el.setAttributeNS(xlinkNS, key, value)
            }
          } else {
            baseSetAttr(el, key, value)
          }
        }

        function baseSetAttr(el, key, value) {
          if (isFalsyAttrValue(value)) {
            el.removeAttribute(key)
          } else {
            // #7138: IE10 & 11 fires input event when setting placeholder on
            // <textarea>... block the first input event and remove the blocker
            // immediately.
            /* istanbul ignore if */
            if (
              isIE &&
              !isIE9 &&
              el.tagName === 'TEXTAREA' &&
              key === 'placeholder' &&
              value !== '' &&
              !el.__ieph
            ) {
              var blocker = function (e) {
                e.stopImmediatePropagation()
                el.removeEventListener('input', blocker)
              }
              el.addEventListener('input', blocker)
              // $flow-disable-line
              el.__ieph = true /* IE placeholder patched */
            }
            el.setAttribute(key, value)
          }
        }

        var attrs = {
          create: updateAttrs,
          update: updateAttrs,
        }

        /*  */

        function updateClass(oldVnode, vnode) {
          var el = vnode.elm
          var data = vnode.data
          var oldData = oldVnode.data
          if (
            isUndef(data.staticClass) &&
            isUndef(data.class) &&
            (isUndef(oldData) ||
              (isUndef(oldData.staticClass) && isUndef(oldData.class)))
          ) {
            return
          }

          var cls = genClassForVnode(vnode)

          // handle transition classes
          var transitionClass = el._transitionClasses
          if (isDef(transitionClass)) {
            cls = concat(cls, stringifyClass(transitionClass))
          }

          // set the class
          if (cls !== el._prevClass) {
            el.setAttribute('class', cls)
            el._prevClass = cls
          }
        }

        var klass = {
          create: updateClass,
          update: updateClass,
        }

        /*  */

        var validDivisionCharRE = /[\w).+\-_$\]]/

        function parseFilters(exp) {
          var inSingle = false
          var inDouble = false
          var inTemplateString = false
          var inRegex = false
          var curly = 0
          var square = 0
          var paren = 0
          var lastFilterIndex = 0
          var c, prev, i, expression, filters

          for (i = 0; i < exp.length; i++) {
            prev = c
            c = exp.charCodeAt(i)
            if (inSingle) {
              if (c === 0x27 && prev !== 0x5c) {
                inSingle = false
              }
            } else if (inDouble) {
              if (c === 0x22 && prev !== 0x5c) {
                inDouble = false
              }
            } else if (inTemplateString) {
              if (c === 0x60 && prev !== 0x5c) {
                inTemplateString = false
              }
            } else if (inRegex) {
              if (c === 0x2f && prev !== 0x5c) {
                inRegex = false
              }
            } else if (
              c === 0x7c && // pipe
              exp.charCodeAt(i + 1) !== 0x7c &&
              exp.charCodeAt(i - 1) !== 0x7c &&
              !curly &&
              !square &&
              !paren
            ) {
              if (expression === undefined) {
                // first filter, end of expression
                lastFilterIndex = i + 1
                expression = exp.slice(0, i).trim()
              } else {
                pushFilter()
              }
            } else {
              switch (c) {
                case 0x22:
                  inDouble = true
                  break // "
                case 0x27:
                  inSingle = true
                  break // '
                case 0x60:
                  inTemplateString = true
                  break // `
                case 0x28:
                  paren++
                  break // (
                case 0x29:
                  paren--
                  break // )
                case 0x5b:
                  square++
                  break // [
                case 0x5d:
                  square--
                  break // ]
                case 0x7b:
                  curly++
                  break // {
                case 0x7d:
                  curly--
                  break // }
              }
              if (c === 0x2f) {
                // /
                var j = i - 1
                var p = void 0
                // find first non-whitespace prev char
                for (; j >= 0; j--) {
                  p = exp.charAt(j)
                  if (p !== ' ') {
                    break
                  }
                }
                if (!p || !validDivisionCharRE.test(p)) {
                  inRegex = true
                }
              }
            }
          }

          if (expression === undefined) {
            expression = exp.slice(0, i).trim()
          } else if (lastFilterIndex !== 0) {
            pushFilter()
          }

          function pushFilter() {
            ;(filters || (filters = [])).push(
              exp.slice(lastFilterIndex, i).trim()
            )
            lastFilterIndex = i + 1
          }

          if (filters) {
            for (i = 0; i < filters.length; i++) {
              expression = wrapFilter(expression, filters[i])
            }
          }

          return expression
        }

        function wrapFilter(exp, filter) {
          var i = filter.indexOf('(')
          if (i < 0) {
            // _f: resolveFilter
            return '_f("' + filter + '")(' + exp + ')'
          } else {
            var name = filter.slice(0, i)
            var args = filter.slice(i + 1)
            return (
              '_f("' + name + '")(' + exp + (args !== ')' ? ',' + args : args)
            )
          }
        }

        /*  */

        /* eslint-disable no-unused-vars */
        function baseWarn(msg, range) {
          console.error('[Vue compiler]: ' + msg)
        }
        /* eslint-enable no-unused-vars */

        function pluckModuleFunction(modules, key) {
          return modules
            ? modules
                .map(function (m) {
                  return m[key]
                })
                .filter(function (_) {
                  return _
                })
            : []
        }

        function addProp(el, name, value, range, dynamic) {
          ;(el.props || (el.props = [])).push(
            rangeSetItem({ name: name, value: value, dynamic: dynamic }, range)
          )
          el.plain = false
        }

        function addAttr(el, name, value, range, dynamic) {
          var attrs = dynamic
            ? el.dynamicAttrs || (el.dynamicAttrs = [])
            : el.attrs || (el.attrs = [])
          attrs.push(
            rangeSetItem({ name: name, value: value, dynamic: dynamic }, range)
          )
          el.plain = false
        }

        // add a raw attr (use this in preTransforms)
        function addRawAttr(el, name, value, range) {
          el.attrsMap[name] = value
          el.attrsList.push(rangeSetItem({ name: name, value: value }, range))
        }

        function addDirective(
          el,
          name,
          rawName,
          value,
          arg,
          isDynamicArg,
          modifiers,
          range
        ) {
          ;(el.directives || (el.directives = [])).push(
            rangeSetItem(
              {
                name: name,
                rawName: rawName,
                value: value,
                arg: arg,
                isDynamicArg: isDynamicArg,
                modifiers: modifiers,
              },
              range
            )
          )
          el.plain = false
        }

        function prependModifierMarker(symbol, name, dynamic) {
          return dynamic ? '_p(' + name + ',"' + symbol + '")' : symbol + name // mark the event as captured
        }

        function addHandler(
          el,
          name,
          value,
          modifiers,
          important,
          warn,
          range,
          dynamic
        ) {
          modifiers = modifiers || emptyObject
          // warn prevent and passive modifier
          /* istanbul ignore if */
          if (true && warn && modifiers.prevent && modifiers.passive) {
            warn(
              "passive and prevent can't be used together. " +
                "Passive handler can't prevent default event.",
              range
            )
          }

          // normalize click.right and click.middle since they don't actually fire
          // this is technically browser-specific, but at least for now browsers are
          // the only target envs that have right/middle clicks.
          if (modifiers.right) {
            if (dynamic) {
              name = '(' + name + ")==='click'?'contextmenu':(" + name + ')'
            } else if (name === 'click') {
              name = 'contextmenu'
              delete modifiers.right
            }
          } else if (modifiers.middle) {
            if (dynamic) {
              name = '(' + name + ")==='click'?'mouseup':(" + name + ')'
            } else if (name === 'click') {
              name = 'mouseup'
            }
          }

          // check capture modifier
          if (modifiers.capture) {
            delete modifiers.capture
            name = prependModifierMarker('!', name, dynamic)
          }
          if (modifiers.once) {
            delete modifiers.once
            name = prependModifierMarker('~', name, dynamic)
          }
          /* istanbul ignore if */
          if (modifiers.passive) {
            delete modifiers.passive
            name = prependModifierMarker('&', name, dynamic)
          }

          var events
          if (modifiers.native) {
            delete modifiers.native
            events = el.nativeEvents || (el.nativeEvents = {})
          } else {
            events = el.events || (el.events = {})
          }

          var newHandler = rangeSetItem(
            { value: value.trim(), dynamic: dynamic },
            range
          )
          if (modifiers !== emptyObject) {
            newHandler.modifiers = modifiers
          }

          var handlers = events[name]
          /* istanbul ignore if */
          if (Array.isArray(handlers)) {
            important ? handlers.unshift(newHandler) : handlers.push(newHandler)
          } else if (handlers) {
            events[name] = important
              ? [newHandler, handlers]
              : [handlers, newHandler]
          } else {
            events[name] = newHandler
          }

          el.plain = false
        }

        function getRawBindingAttr(el, name) {
          return (
            el.rawAttrsMap[':' + name] ||
            el.rawAttrsMap['v-bind:' + name] ||
            el.rawAttrsMap[name]
          )
        }

        function getBindingAttr(el, name, getStatic) {
          var dynamicValue =
            getAndRemoveAttr(el, ':' + name) ||
            getAndRemoveAttr(el, 'v-bind:' + name)
          if (dynamicValue != null) {
            return parseFilters(dynamicValue)
          } else if (getStatic !== false) {
            var staticValue = getAndRemoveAttr(el, name)
            if (staticValue != null) {
              return JSON.stringify(staticValue)
            }
          }
        }

        // note: this only removes the attr from the Array (attrsList) so that it
        // doesn't get processed by processAttrs.
        // By default it does NOT remove it from the map (attrsMap) because the map is
        // needed during codegen.
        function getAndRemoveAttr(el, name, removeFromMap) {
          var val
          if ((val = el.attrsMap[name]) != null) {
            var list = el.attrsList
            for (var i = 0, l = list.length; i < l; i++) {
              if (list[i].name === name) {
                list.splice(i, 1)
                break
              }
            }
          }
          if (removeFromMap) {
            delete el.attrsMap[name]
          }
          return val
        }

        function getAndRemoveAttrByRegex(el, name) {
          var list = el.attrsList
          for (var i = 0, l = list.length; i < l; i++) {
            var attr = list[i]
            if (name.test(attr.name)) {
              list.splice(i, 1)
              return attr
            }
          }
        }

        function rangeSetItem(item, range) {
          if (range) {
            if (range.start != null) {
              item.start = range.start
            }
            if (range.end != null) {
              item.end = range.end
            }
          }
          return item
        }

        /*  */

        /**
         * Cross-platform code generation for component v-model
         */
        function genComponentModel(el, value, modifiers) {
          var ref = modifiers || {}
          var number = ref.number
          var trim = ref.trim

          var baseValueExpression = '$$v'
          var valueExpression = baseValueExpression
          if (trim) {
            valueExpression =
              '(typeof ' +
              baseValueExpression +
              " === 'string'" +
              '? ' +
              baseValueExpression +
              '.trim()' +
              ': ' +
              baseValueExpression +
              ')'
          }
          if (number) {
            valueExpression = '_n(' + valueExpression + ')'
          }
          var assignment = genAssignmentCode(value, valueExpression)

          el.model = {
            value: '(' + value + ')',
            expression: JSON.stringify(value),
            callback:
              'function (' + baseValueExpression + ') {' + assignment + '}',
          }
        }

        /**
         * Cross-platform codegen helper for generating v-model value assignment code.
         */
        function genAssignmentCode(value, assignment) {
          var res = parseModel(value)
          if (res.key === null) {
            return value + '=' + assignment
          } else {
            return '$set(' + res.exp + ', ' + res.key + ', ' + assignment + ')'
          }
        }

        /**
         * Parse a v-model expression into a base path and a final key segment.
         * Handles both dot-path and possible square brackets.
         *
         * Possible cases:
         *
         * - test
         * - test[key]
         * - test[test1[key]]
         * - test["a"][key]
         * - xxx.test[a[a].test1[key]]
         * - test.xxx.a["asa"][test1[key]]
         *
         */

        var len, str, chr, index$1, expressionPos, expressionEndPos

        function parseModel(val) {
          // Fix https://github.com/vuejs/vue/pull/7730
          // allow v-model="obj.val " (trailing whitespace)
          val = val.trim()
          len = val.length

          if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
            index$1 = val.lastIndexOf('.')
            if (index$1 > -1) {
              return {
                exp: val.slice(0, index$1),
                key: '"' + val.slice(index$1 + 1) + '"',
              }
            } else {
              return {
                exp: val,
                key: null,
              }
            }
          }

          str = val
          index$1 = expressionPos = expressionEndPos = 0

          while (!eof()) {
            chr = next()
            /* istanbul ignore if */
            if (isStringStart(chr)) {
              parseString(chr)
            } else if (chr === 0x5b) {
              parseBracket(chr)
            }
          }

          return {
            exp: val.slice(0, expressionPos),
            key: val.slice(expressionPos + 1, expressionEndPos),
          }
        }

        function next() {
          return str.charCodeAt(++index$1)
        }

        function eof() {
          return index$1 >= len
        }

        function isStringStart(chr) {
          return chr === 0x22 || chr === 0x27
        }

        function parseBracket(chr) {
          var inBracket = 1
          expressionPos = index$1
          while (!eof()) {
            chr = next()
            if (isStringStart(chr)) {
              parseString(chr)
              continue
            }
            if (chr === 0x5b) {
              inBracket++
            }
            if (chr === 0x5d) {
              inBracket--
            }
            if (inBracket === 0) {
              expressionEndPos = index$1
              break
            }
          }
        }

        function parseString(chr) {
          var stringQuote = chr
          while (!eof()) {
            chr = next()
            if (chr === stringQuote) {
              break
            }
          }
        }

        /*  */

        var warn$1

        // in some cases, the event used has to be determined at runtime
        // so we used some reserved tokens during compile.
        var RANGE_TOKEN = '__r'
        var CHECKBOX_RADIO_TOKEN = '__c'

        function model(el, dir, _warn) {
          warn$1 = _warn
          var value = dir.value
          var modifiers = dir.modifiers
          var tag = el.tag
          var type = el.attrsMap.type

          if (true) {
            // inputs with type="file" are read only and setting the input's
            // value will throw an error.
            if (tag === 'input' && type === 'file') {
              warn$1(
                '<' +
                  el.tag +
                  ' v-model="' +
                  value +
                  '" type="file">:\n' +
                  'File inputs are read only. Use a v-on:change listener instead.',
                el.rawAttrsMap['v-model']
              )
            }
          }

          if (el.component) {
            genComponentModel(el, value, modifiers)
            // component v-model doesn't need extra runtime
            return false
          } else if (tag === 'select') {
            genSelect(el, value, modifiers)
          } else if (tag === 'input' && type === 'checkbox') {
            genCheckboxModel(el, value, modifiers)
          } else if (tag === 'input' && type === 'radio') {
            genRadioModel(el, value, modifiers)
          } else if (tag === 'input' || tag === 'textarea') {
            genDefaultModel(el, value, modifiers)
          } else if (!config.isReservedTag(tag)) {
            genComponentModel(el, value, modifiers)
            // component v-model doesn't need extra runtime
            return false
          } else if (true) {
            warn$1(
              '<' +
                el.tag +
                ' v-model="' +
                value +
                '">: ' +
                'v-model is not supported on this element type. ' +
                "If you are working with contenteditable, it's recommended to " +
                'wrap a library dedicated for that purpose inside a custom component.',
              el.rawAttrsMap['v-model']
            )
          }

          // ensure runtime directive metadata
          return true
        }

        function genCheckboxModel(el, value, modifiers) {
          var number = modifiers && modifiers.number
          var valueBinding = getBindingAttr(el, 'value') || 'null'
          var trueValueBinding = getBindingAttr(el, 'true-value') || 'true'
          var falseValueBinding = getBindingAttr(el, 'false-value') || 'false'
          addProp(
            el,
            'checked',
            'Array.isArray(' +
              value +
              ')' +
              '?_i(' +
              value +
              ',' +
              valueBinding +
              ')>-1' +
              (trueValueBinding === 'true'
                ? ':(' + value + ')'
                : ':_q(' + value + ',' + trueValueBinding + ')')
          )
          addHandler(
            el,
            'change',
            'var $$a=' +
              value +
              ',' +
              '$$el=$event.target,' +
              '$$c=$$el.checked?(' +
              trueValueBinding +
              '):(' +
              falseValueBinding +
              ');' +
              'if(Array.isArray($$a)){' +
              'var $$v=' +
              (number ? '_n(' + valueBinding + ')' : valueBinding) +
              ',' +
              '$$i=_i($$a,$$v);' +
              'if($$el.checked){$$i<0&&(' +
              genAssignmentCode(value, '$$a.concat([$$v])') +
              ')}' +
              'else{$$i>-1&&(' +
              genAssignmentCode(
                value,
                '$$a.slice(0,$$i).concat($$a.slice($$i+1))'
              ) +
              ')}' +
              '}else{' +
              genAssignmentCode(value, '$$c') +
              '}',
            null,
            true
          )
        }

        function genRadioModel(el, value, modifiers) {
          var number = modifiers && modifiers.number
          var valueBinding = getBindingAttr(el, 'value') || 'null'
          valueBinding = number ? '_n(' + valueBinding + ')' : valueBinding
          addProp(el, 'checked', '_q(' + value + ',' + valueBinding + ')')
          addHandler(
            el,
            'change',
            genAssignmentCode(value, valueBinding),
            null,
            true
          )
        }

        function genSelect(el, value, modifiers) {
          var number = modifiers && modifiers.number
          var selectedVal =
            'Array.prototype.filter' +
            '.call($event.target.options,function(o){return o.selected})' +
            '.map(function(o){var val = "_value" in o ? o._value : o.value;' +
            'return ' +
            (number ? '_n(val)' : 'val') +
            '})'

          var assignment =
            '$event.target.multiple ? $$selectedVal : $$selectedVal[0]'
          var code = 'var $$selectedVal = ' + selectedVal + ';'
          code = code + ' ' + genAssignmentCode(value, assignment)
          addHandler(el, 'change', code, null, true)
        }

        function genDefaultModel(el, value, modifiers) {
          var type = el.attrsMap.type

          // warn if v-bind:value conflicts with v-model
          // except for inputs with v-bind:type
          if (true) {
            var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value']
            var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type']
            if (value$1 && !typeBinding) {
              var binding = el.attrsMap['v-bind:value']
                ? 'v-bind:value'
                : ':value'
              warn$1(
                binding +
                  '="' +
                  value$1 +
                  '" conflicts with v-model on the same element ' +
                  'because the latter already expands to a value binding internally',
                el.rawAttrsMap[binding]
              )
            }
          }

          var ref = modifiers || {}
          var lazy = ref.lazy
          var number = ref.number
          var trim = ref.trim
          var needCompositionGuard = !lazy && type !== 'range'
          var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input'

          var valueExpression = '$event.target.value'
          if (trim) {
            valueExpression = '$event.target.value.trim()'
          }
          if (number) {
            valueExpression = '_n(' + valueExpression + ')'
          }

          var code = genAssignmentCode(value, valueExpression)
          if (needCompositionGuard) {
            code = 'if($event.target.composing)return;' + code
          }

          addProp(el, 'value', '(' + value + ')')
          addHandler(el, event, code, null, true)
          if (trim || number) {
            addHandler(el, 'blur', '$forceUpdate()')
          }
        }

        /*  */

        // normalize v-model event tokens that can only be determined at runtime.
        // it's important to place the event as the first in the array because
        // the whole point is ensuring the v-model callback gets called before
        // user-attached handlers.
        function normalizeEvents(on) {
          /* istanbul ignore if */
          if (isDef(on[RANGE_TOKEN])) {
            // IE input[type=range] only supports `change` event
            var event = isIE ? 'change' : 'input'
            on[event] = [].concat(on[RANGE_TOKEN], on[event] || [])
            delete on[RANGE_TOKEN]
          }
          // This was originally intended to fix #4521 but no longer necessary
          // after 2.5. Keeping it for backwards compat with generated code from < 2.4
          /* istanbul ignore if */
          if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
            on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || [])
            delete on[CHECKBOX_RADIO_TOKEN]
          }
        }

        var target$1

        function createOnceHandler$1(event, handler, capture) {
          var _target = target$1 // save current target element in closure
          return function onceHandler() {
            var res = handler.apply(null, arguments)
            if (res !== null) {
              remove$2(event, onceHandler, capture, _target)
            }
          }
        }

        // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
        // implementation and does not fire microtasks in between event propagation, so
        // safe to exclude.
        var useMicrotaskFix =
          isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53)

        function add$1(name, handler, capture, passive) {
          // async edge case #6566: inner click event triggers patch, event handler
          // attached to outer element during patch, and triggered again. This
          // happens because browsers fire microtask ticks between event propagation.
          // the solution is simple: we save the timestamp when a handler is attached,
          // and the handler would only fire if the event passed to it was fired
          // AFTER it was attached.
          if (useMicrotaskFix) {
            var attachedTimestamp = currentFlushTimestamp
            var original = handler
            handler = original._wrapper = function (e) {
              if (
                // no bubbling, should always fire.
                // this is just a safety net in case event.timeStamp is unreliable in
                // certain weird environments...
                e.target === e.currentTarget ||
                // event is fired after handler attachment
                e.timeStamp >= attachedTimestamp ||
                // bail for environments that have buggy event.timeStamp implementations
                // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
                // #9681 QtWebEngine event.timeStamp is negative value
                e.timeStamp <= 0 ||
                // #9448 bail if event is fired in another document in a multi-page
                // electron/nw.js app, since event.timeStamp will be using a different
                // starting reference
                e.target.ownerDocument !== document
              ) {
                return original.apply(this, arguments)
              }
            }
          }
          target$1.addEventListener(
            name,
            handler,
            supportsPassive ? { capture: capture, passive: passive } : capture
          )
        }

        function remove$2(name, handler, capture, _target) {
          ;(_target || target$1).removeEventListener(
            name,
            handler._wrapper || handler,
            capture
          )
        }

        function updateDOMListeners(oldVnode, vnode) {
          if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
            return
          }
          var on = vnode.data.on || {}
          var oldOn = oldVnode.data.on || {}
          target$1 = vnode.elm
          normalizeEvents(on)
          updateListeners(
            on,
            oldOn,
            add$1,
            remove$2,
            createOnceHandler$1,
            vnode.context
          )
          target$1 = undefined
        }

        var events = {
          create: updateDOMListeners,
          update: updateDOMListeners,
        }

        /*  */

        var svgContainer

        function updateDOMProps(oldVnode, vnode) {
          if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
            return
          }
          var key, cur
          var elm = vnode.elm
          var oldProps = oldVnode.data.domProps || {}
          var props = vnode.data.domProps || {}
          // clone observed objects, as the user probably wants to mutate it
          if (isDef(props.__ob__)) {
            props = vnode.data.domProps = extend({}, props)
          }

          for (key in oldProps) {
            if (!(key in props)) {
              elm[key] = ''
            }
          }

          for (key in props) {
            cur = props[key]
            // ignore children if the node has textContent or innerHTML,
            // as these will throw away existing DOM nodes and cause removal errors
            // on subsequent patches (#3360)
            if (key === 'textContent' || key === 'innerHTML') {
              if (vnode.children) {
                vnode.children.length = 0
              }
              if (cur === oldProps[key]) {
                continue
              }
              // #6601 work around Chrome version <= 55 bug where single textNode
              // replaced by innerHTML/textContent retains its parentNode property
              if (elm.childNodes.length === 1) {
                elm.removeChild(elm.childNodes[0])
              }
            }

            if (key === 'value' && elm.tagName !== 'PROGRESS') {
              // store value as _value as well since
              // non-string values will be stringified
              elm._value = cur
              // avoid resetting cursor position when value is the same
              var strCur = isUndef(cur) ? '' : String(cur)
              if (shouldUpdateValue(elm, strCur)) {
                elm.value = strCur
              }
            } else if (
              key === 'innerHTML' &&
              isSVG(elm.tagName) &&
              isUndef(elm.innerHTML)
            ) {
              // IE doesn't support innerHTML for SVG elements
              svgContainer = svgContainer || document.createElement('div')
              svgContainer.innerHTML = '<svg>' + cur + '</svg>'
              var svg = svgContainer.firstChild
              while (elm.firstChild) {
                elm.removeChild(elm.firstChild)
              }
              while (svg.firstChild) {
                elm.appendChild(svg.firstChild)
              }
            } else if (
              // skip the update if old and new VDOM state is the same.
              // `value` is handled separately because the DOM value may be temporarily
              // out of sync with VDOM state due to focus, composition and modifiers.
              // This  #4521 by skipping the unnecessary `checked` update.
              cur !== oldProps[key]
            ) {
              // some property updates can throw
              // e.g. `value` on <progress> w/ non-finite value
              try {
                elm[key] = cur
              } catch (e) {}
            }
          }
        }

        // check platforms/web/util/attrs.js acceptValue

        function shouldUpdateValue(elm, checkVal) {
          return (
            !elm.composing &&
            (elm.tagName === 'OPTION' ||
              isNotInFocusAndDirty(elm, checkVal) ||
              isDirtyWithModifiers(elm, checkVal))
          )
        }

        function isNotInFocusAndDirty(elm, checkVal) {
          // return true when textbox (.number and .trim) loses focus and its value is
          // not equal to the updated value
          var notInFocus = true
          // #6157
          // work around IE bug when accessing document.activeElement in an iframe
          try {
            notInFocus = document.activeElement !== elm
          } catch (e) {}
          return notInFocus && elm.value !== checkVal
        }

        function isDirtyWithModifiers(elm, newVal) {
          var value = elm.value
          var modifiers = elm._vModifiers // injected by v-model runtime
          if (isDef(modifiers)) {
            if (modifiers.number) {
              return toNumber(value) !== toNumber(newVal)
            }
            if (modifiers.trim) {
              return value.trim() !== newVal.trim()
            }
          }
          return value !== newVal
        }

        var domProps = {
          create: updateDOMProps,
          update: updateDOMProps,
        }

        /*  */

        var parseStyleText = cached(function (cssText) {
          var res = {}
          var listDelimiter = /;(?![^(]*\))/g
          var propertyDelimiter = /:(.+)/
          cssText.split(listDelimiter).forEach(function (item) {
            if (item) {
              var tmp = item.split(propertyDelimiter)
              tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim())
            }
          })
          return res
        })

        // merge static and dynamic style data on the same vnode
        function normalizeStyleData(data) {
          var style = normalizeStyleBinding(data.style)
          // static style is pre-processed into an object during compilation
          // and is always a fresh object, so it's safe to merge into it
          return data.staticStyle ? extend(data.staticStyle, style) : style
        }

        // normalize possible array / string values into Object
        function normalizeStyleBinding(bindingStyle) {
          if (Array.isArray(bindingStyle)) {
            return toObject(bindingStyle)
          }
          if (typeof bindingStyle === 'string') {
            return parseStyleText(bindingStyle)
          }
          return bindingStyle
        }

        /**
         * parent component style should be after child's
         * so that parent component's style could override it
         */
        function getStyle(vnode, checkChild) {
          var res = {}
          var styleData

          if (checkChild) {
            var childNode = vnode
            while (childNode.componentInstance) {
              childNode = childNode.componentInstance._vnode
              if (
                childNode &&
                childNode.data &&
                (styleData = normalizeStyleData(childNode.data))
              ) {
                extend(res, styleData)
              }
            }
          }

          if ((styleData = normalizeStyleData(vnode.data))) {
            extend(res, styleData)
          }

          var parentNode = vnode
          while ((parentNode = parentNode.parent)) {
            if (
              parentNode.data &&
              (styleData = normalizeStyleData(parentNode.data))
            ) {
              extend(res, styleData)
            }
          }
          return res
        }

        /*  */

        var cssVarRE = /^--/
        var importantRE = /\s*!important$/
        var setProp = function (el, name, val) {
          /* istanbul ignore if */
          if (cssVarRE.test(name)) {
            el.style.setProperty(name, val)
          } else if (importantRE.test(val)) {
            el.style.setProperty(
              hyphenate(name),
              val.replace(importantRE, ''),
              'important'
            )
          } else {
            var normalizedName = normalize(name)
            if (Array.isArray(val)) {
              // Support values array created by autoprefixer, e.g.
              // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
              // Set them one by one, and the browser will only set those it can recognize
              for (var i = 0, len = val.length; i < len; i++) {
                el.style[normalizedName] = val[i]
              }
            } else {
              el.style[normalizedName] = val
            }
          }
        }

        var vendorNames = ['Webkit', 'Moz', 'ms']

        var emptyStyle
        var normalize = cached(function (prop) {
          emptyStyle = emptyStyle || document.createElement('div').style
          prop = camelize(prop)
          if (prop !== 'filter' && prop in emptyStyle) {
            return prop
          }
          var capName = prop.charAt(0).toUpperCase() + prop.slice(1)
          for (var i = 0; i < vendorNames.length; i++) {
            var name = vendorNames[i] + capName
            if (name in emptyStyle) {
              return name
            }
          }
        })

        function updateStyle(oldVnode, vnode) {
          var data = vnode.data
          var oldData = oldVnode.data

          if (
            isUndef(data.staticStyle) &&
            isUndef(data.style) &&
            isUndef(oldData.staticStyle) &&
            isUndef(oldData.style)
          ) {
            return
          }

          var cur, name
          var el = vnode.elm
          var oldStaticStyle = oldData.staticStyle
          var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}

          // if static style exists, stylebinding already merged into it when doing normalizeStyleData
          var oldStyle = oldStaticStyle || oldStyleBinding

          var style = normalizeStyleBinding(vnode.data.style) || {}

          // store normalized style under a different key for next diff
          // make sure to clone it if it's reactive, since the user likely wants
          // to mutate it.
          vnode.data.normalizedStyle = isDef(style.__ob__)
            ? extend({}, style)
            : style

          var newStyle = getStyle(vnode, true)

          for (name in oldStyle) {
            if (isUndef(newStyle[name])) {
              setProp(el, name, '')
            }
          }
          for (name in newStyle) {
            cur = newStyle[name]
            if (cur !== oldStyle[name]) {
              // ie9 setting to null has no effect, must use empty string
              setProp(el, name, cur == null ? '' : cur)
            }
          }
        }

        var style = {
          create: updateStyle,
          update: updateStyle,
        }

        /*  */

        var whitespaceRE = /\s+/

        /**
         * Add class with compatibility for SVG since classList is not supported on
         * SVG elements in IE
         */
        function addClass(el, cls) {
          /* istanbul ignore if */
          if (!cls || !(cls = cls.trim())) {
            return
          }

          /* istanbul ignore else */
          if (el.classList) {
            if (cls.indexOf(' ') > -1) {
              cls.split(whitespaceRE).forEach(function (c) {
                return el.classList.add(c)
              })
            } else {
              el.classList.add(cls)
            }
          } else {
            var cur = ' ' + (el.getAttribute('class') || '') + ' '
            if (cur.indexOf(' ' + cls + ' ') < 0) {
              el.setAttribute('class', (cur + cls).trim())
            }
          }
        }

        /**
         * Remove class with compatibility for SVG since classList is not supported on
         * SVG elements in IE
         */
        function removeClass(el, cls) {
          /* istanbul ignore if */
          if (!cls || !(cls = cls.trim())) {
            return
          }

          /* istanbul ignore else */
          if (el.classList) {
            if (cls.indexOf(' ') > -1) {
              cls.split(whitespaceRE).forEach(function (c) {
                return el.classList.remove(c)
              })
            } else {
              el.classList.remove(cls)
            }
            if (!el.classList.length) {
              el.removeAttribute('class')
            }
          } else {
            var cur = ' ' + (el.getAttribute('class') || '') + ' '
            var tar = ' ' + cls + ' '
            while (cur.indexOf(tar) >= 0) {
              cur = cur.replace(tar, ' ')
            }
            cur = cur.trim()
            if (cur) {
              el.setAttribute('class', cur)
            } else {
              el.removeAttribute('class')
            }
          }
        }

        /*  */

        function resolveTransition(def$$1) {
          if (!def$$1) {
            return
          }
          /* istanbul ignore else */
          if (typeof def$$1 === 'object') {
            var res = {}
            if (def$$1.css !== false) {
              extend(res, autoCssTransition(def$$1.name || 'v'))
            }
            extend(res, def$$1)
            return res
          } else if (typeof def$$1 === 'string') {
            return autoCssTransition(def$$1)
          }
        }

        var autoCssTransition = cached(function (name) {
          return {
            enterClass: name + '-enter',
            enterToClass: name + '-enter-to',
            enterActiveClass: name + '-enter-active',
            leaveClass: name + '-leave',
            leaveToClass: name + '-leave-to',
            leaveActiveClass: name + '-leave-active',
          }
        })

        var hasTransition = inBrowser && !isIE9
        var TRANSITION = 'transition'
        var ANIMATION = 'animation'

        // Transition property/event sniffing
        var transitionProp = 'transition'
        var transitionEndEvent = 'transitionend'
        var animationProp = 'animation'
        var animationEndEvent = 'animationend'
        if (hasTransition) {
          /* istanbul ignore if */
          if (
            window.ontransitionend === undefined &&
            window.onwebkittransitionend !== undefined
          ) {
            transitionProp = 'WebkitTransition'
            transitionEndEvent = 'webkitTransitionEnd'
          }
          if (
            window.onanimationend === undefined &&
            window.onwebkitanimationend !== undefined
          ) {
            animationProp = 'WebkitAnimation'
            animationEndEvent = 'webkitAnimationEnd'
          }
        }

        // binding to window is necessary to make hot reload work in IE in strict mode
        var raf = inBrowser
          ? window.requestAnimationFrame
            ? window.requestAnimationFrame.bind(window)
            : setTimeout
          : /* istanbul ignore next */ function (fn) {
              return fn()
            }

        function nextFrame(fn) {
          raf(function () {
            raf(fn)
          })
        }

        function addTransitionClass(el, cls) {
          var transitionClasses =
            el._transitionClasses || (el._transitionClasses = [])
          if (transitionClasses.indexOf(cls) < 0) {
            transitionClasses.push(cls)
            addClass(el, cls)
          }
        }

        function removeTransitionClass(el, cls) {
          if (el._transitionClasses) {
            remove(el._transitionClasses, cls)
          }
          removeClass(el, cls)
        }

        function whenTransitionEnds(el, expectedType, cb) {
          var ref = getTransitionInfo(el, expectedType)
          var type = ref.type
          var timeout = ref.timeout
          var propCount = ref.propCount
          if (!type) {
            return cb()
          }
          var event =
            type === TRANSITION ? transitionEndEvent : animationEndEvent
          var ended = 0
          var end = function () {
            el.removeEventListener(event, onEnd)
            cb()
          }
          var onEnd = function (e) {
            if (e.target === el) {
              if (++ended >= propCount) {
                end()
              }
            }
          }
          setTimeout(function () {
            if (ended < propCount) {
              end()
            }
          }, timeout + 1)
          el.addEventListener(event, onEnd)
        }

        var transformRE = /\b(transform|all)(,|$)/

        function getTransitionInfo(el, expectedType) {
          var styles = window.getComputedStyle(el)
          // JSDOM may return undefined for transition properties
          var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(
            ', '
          )
          var transitionDurations = (
            styles[transitionProp + 'Duration'] || ''
          ).split(', ')
          var transitionTimeout = getTimeout(
            transitionDelays,
            transitionDurations
          )
          var animationDelays = (styles[animationProp + 'Delay'] || '').split(
            ', '
          )
          var animationDurations = (
            styles[animationProp + 'Duration'] || ''
          ).split(', ')
          var animationTimeout = getTimeout(animationDelays, animationDurations)

          var type
          var timeout = 0
          var propCount = 0
          /* istanbul ignore if */
          if (expectedType === TRANSITION) {
            if (transitionTimeout > 0) {
              type = TRANSITION
              timeout = transitionTimeout
              propCount = transitionDurations.length
            }
          } else if (expectedType === ANIMATION) {
            if (animationTimeout > 0) {
              type = ANIMATION
              timeout = animationTimeout
              propCount = animationDurations.length
            }
          } else {
            timeout = Math.max(transitionTimeout, animationTimeout)
            type =
              timeout > 0
                ? transitionTimeout > animationTimeout
                  ? TRANSITION
                  : ANIMATION
                : null
            propCount = type
              ? type === TRANSITION
                ? transitionDurations.length
                : animationDurations.length
              : 0
          }
          var hasTransform =
            type === TRANSITION &&
            transformRE.test(styles[transitionProp + 'Property'])
          return {
            type: type,
            timeout: timeout,
            propCount: propCount,
            hasTransform: hasTransform,
          }
        }

        function getTimeout(delays, durations) {
          /* istanbul ignore next */
          while (delays.length < durations.length) {
            delays = delays.concat(delays)
          }

          return Math.max.apply(
            null,
            durations.map(function (d, i) {
              return toMs(d) + toMs(delays[i])
            })
          )
        }

        // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
        // in a locale-dependent way, using a comma instead of a dot.
        // If comma is not replaced with a dot, the input will be rounded down (i.e. acting
        // as a floor function) causing unexpected behaviors
        function toMs(s) {
          return Number(s.slice(0, -1).replace(',', '.')) * 1000
        }

        /*  */

        function enter(vnode, toggleDisplay) {
          var el = vnode.elm

          // call leave callback now
          if (isDef(el._leaveCb)) {
            el._leaveCb.cancelled = true
            el._leaveCb()
          }

          var data = resolveTransition(vnode.data.transition)
          if (isUndef(data)) {
            return
          }

          /* istanbul ignore if */
          if (isDef(el._enterCb) || el.nodeType !== 1) {
            return
          }

          var css = data.css
          var type = data.type
          var enterClass = data.enterClass
          var enterToClass = data.enterToClass
          var enterActiveClass = data.enterActiveClass
          var appearClass = data.appearClass
          var appearToClass = data.appearToClass
          var appearActiveClass = data.appearActiveClass
          var beforeEnter = data.beforeEnter
          var enter = data.enter
          var afterEnter = data.afterEnter
          var enterCancelled = data.enterCancelled
          var beforeAppear = data.beforeAppear
          var appear = data.appear
          var afterAppear = data.afterAppear
          var appearCancelled = data.appearCancelled
          var duration = data.duration

          // activeInstance will always be the <transition> component managing this
          // transition. One edge case to check is when the <transition> is placed
          // as the root node of a child component. In that case we need to check
          // <transition>'s parent for appear check.
          var context = activeInstance
          var transitionNode = activeInstance.$vnode
          while (transitionNode && transitionNode.parent) {
            context = transitionNode.context
            transitionNode = transitionNode.parent
          }

          var isAppear = !context._isMounted || !vnode.isRootInsert

          if (isAppear && !appear && appear !== '') {
            return
          }

          var startClass = isAppear && appearClass ? appearClass : enterClass
          var activeClass =
            isAppear && appearActiveClass ? appearActiveClass : enterActiveClass
          var toClass = isAppear && appearToClass ? appearToClass : enterToClass

          var beforeEnterHook = isAppear
            ? beforeAppear || beforeEnter
            : beforeEnter
          var enterHook = isAppear
            ? typeof appear === 'function'
              ? appear
              : enter
            : enter
          var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter
          var enterCancelledHook = isAppear
            ? appearCancelled || enterCancelled
            : enterCancelled

          var explicitEnterDuration = toNumber(
            isObject(duration) ? duration.enter : duration
          )

          if (true && explicitEnterDuration != null) {
            checkDuration(explicitEnterDuration, 'enter', vnode)
          }

          var expectsCSS = css !== false && !isIE9
          var userWantsControl = getHookArgumentsLength(enterHook)

          var cb = (el._enterCb = once(function () {
            if (expectsCSS) {
              removeTransitionClass(el, toClass)
              removeTransitionClass(el, activeClass)
            }
            if (cb.cancelled) {
              if (expectsCSS) {
                removeTransitionClass(el, startClass)
              }
              enterCancelledHook && enterCancelledHook(el)
            } else {
              afterEnterHook && afterEnterHook(el)
            }
            el._enterCb = null
          }))

          if (!vnode.data.show) {
            // remove pending leave element on enter by injecting an insert hook
            mergeVNodeHook(vnode, 'insert', function () {
              var parent = el.parentNode
              var pendingNode =
                parent && parent._pending && parent._pending[vnode.key]
              if (
                pendingNode &&
                pendingNode.tag === vnode.tag &&
                pendingNode.elm._leaveCb
              ) {
                pendingNode.elm._leaveCb()
              }
              enterHook && enterHook(el, cb)
            })
          }

          // start enter transition
          beforeEnterHook && beforeEnterHook(el)
          if (expectsCSS) {
            addTransitionClass(el, startClass)
            addTransitionClass(el, activeClass)
            nextFrame(function () {
              removeTransitionClass(el, startClass)
              if (!cb.cancelled) {
                addTransitionClass(el, toClass)
                if (!userWantsControl) {
                  if (isValidDuration(explicitEnterDuration)) {
                    setTimeout(cb, explicitEnterDuration)
                  } else {
                    whenTransitionEnds(el, type, cb)
                  }
                }
              }
            })
          }

          if (vnode.data.show) {
            toggleDisplay && toggleDisplay()
            enterHook && enterHook(el, cb)
          }

          if (!expectsCSS && !userWantsControl) {
            cb()
          }
        }

        function leave(vnode, rm) {
          var el = vnode.elm

          // call enter callback now
          if (isDef(el._enterCb)) {
            el._enterCb.cancelled = true
            el._enterCb()
          }

          var data = resolveTransition(vnode.data.transition)
          if (isUndef(data) || el.nodeType !== 1) {
            return rm()
          }

          /* istanbul ignore if */
          if (isDef(el._leaveCb)) {
            return
          }

          var css = data.css
          var type = data.type
          var leaveClass = data.leaveClass
          var leaveToClass = data.leaveToClass
          var leaveActiveClass = data.leaveActiveClass
          var beforeLeave = data.beforeLeave
          var leave = data.leave
          var afterLeave = data.afterLeave
          var leaveCancelled = data.leaveCancelled
          var delayLeave = data.delayLeave
          var duration = data.duration

          var expectsCSS = css !== false && !isIE9
          var userWantsControl = getHookArgumentsLength(leave)

          var explicitLeaveDuration = toNumber(
            isObject(duration) ? duration.leave : duration
          )

          if (true && isDef(explicitLeaveDuration)) {
            checkDuration(explicitLeaveDuration, 'leave', vnode)
          }

          var cb = (el._leaveCb = once(function () {
            if (el.parentNode && el.parentNode._pending) {
              el.parentNode._pending[vnode.key] = null
            }
            if (expectsCSS) {
              removeTransitionClass(el, leaveToClass)
              removeTransitionClass(el, leaveActiveClass)
            }
            if (cb.cancelled) {
              if (expectsCSS) {
                removeTransitionClass(el, leaveClass)
              }
              leaveCancelled && leaveCancelled(el)
            } else {
              rm()
              afterLeave && afterLeave(el)
            }
            el._leaveCb = null
          }))

          if (delayLeave) {
            delayLeave(performLeave)
          } else {
            performLeave()
          }

          function performLeave() {
            // the delayed leave may have already been cancelled
            if (cb.cancelled) {
              return
            }
            // record leaving element
            if (!vnode.data.show && el.parentNode) {
              ;(el.parentNode._pending || (el.parentNode._pending = {}))[
                vnode.key
              ] = vnode
            }
            beforeLeave && beforeLeave(el)
            if (expectsCSS) {
              addTransitionClass(el, leaveClass)
              addTransitionClass(el, leaveActiveClass)
              nextFrame(function () {
                removeTransitionClass(el, leaveClass)
                if (!cb.cancelled) {
                  addTransitionClass(el, leaveToClass)
                  if (!userWantsControl) {
                    if (isValidDuration(explicitLeaveDuration)) {
                      setTimeout(cb, explicitLeaveDuration)
                    } else {
                      whenTransitionEnds(el, type, cb)
                    }
                  }
                }
              })
            }
            leave && leave(el, cb)
            if (!expectsCSS && !userWantsControl) {
              cb()
            }
          }
        }

        // only used in dev mode
        function checkDuration(val, name, vnode) {
          if (typeof val !== 'number') {
            warn(
              '<transition> explicit ' +
                name +
                ' duration is not a valid number - ' +
                'got ' +
                JSON.stringify(val) +
                '.',
              vnode.context
            )
          } else if (isNaN(val)) {
            warn(
              '<transition> explicit ' +
                name +
                ' duration is NaN - ' +
                'the duration expression might be incorrect.',
              vnode.context
            )
          }
        }

        function isValidDuration(val) {
          return typeof val === 'number' && !isNaN(val)
        }

        /**
         * Normalize a transition hook's argument length. The hook may be:
         * - a merged hook (invoker) with the original in .fns
         * - a wrapped component method (check ._length)
         * - a plain function (.length)
         */
        function getHookArgumentsLength(fn) {
          if (isUndef(fn)) {
            return false
          }
          var invokerFns = fn.fns
          if (isDef(invokerFns)) {
            // invoker
            return getHookArgumentsLength(
              Array.isArray(invokerFns) ? invokerFns[0] : invokerFns
            )
          } else {
            return (fn._length || fn.length) > 1
          }
        }

        function _enter(_, vnode) {
          if (vnode.data.show !== true) {
            enter(vnode)
          }
        }

        var transition = inBrowser
          ? {
              create: _enter,
              activate: _enter,
              remove: function remove$$1(vnode, rm) {
                /* istanbul ignore else */
                if (vnode.data.show !== true) {
                  leave(vnode, rm)
                } else {
                  rm()
                }
              },
            }
          : {}

        var platformModules = [
          attrs,
          klass,
          events,
          domProps,
          style,
          transition,
        ]

        /*  */

        // the directive module should be applied last, after all
        // built-in modules have been applied.
        var modules = platformModules.concat(baseModules)

        var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules })

        /**
         * Not type checking this file because flow doesn't like attaching
         * properties to Elements.
         */

        /* istanbul ignore if */
        if (isIE9) {
          // http://www.matts411.com/post/internet-explorer-9-oninput/
          document.addEventListener('selectionchange', function () {
            var el = document.activeElement
            if (el && el.vmodel) {
              trigger(el, 'input')
            }
          })
        }

        var directive = {
          inserted: function inserted(el, binding, vnode, oldVnode) {
            if (vnode.tag === 'select') {
              // #6903
              if (oldVnode.elm && !oldVnode.elm._vOptions) {
                mergeVNodeHook(vnode, 'postpatch', function () {
                  directive.componentUpdated(el, binding, vnode)
                })
              } else {
                setSelected(el, binding, vnode.context)
              }
              el._vOptions = [].map.call(el.options, getValue)
            } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
              el._vModifiers = binding.modifiers
              if (!binding.modifiers.lazy) {
                el.addEventListener('compositionstart', onCompositionStart)
                el.addEventListener('compositionend', onCompositionEnd)
                // Safari < 10.2 & UIWebView doesn't fire compositionend when
                // switching focus before confirming composition choice
                // this also fixes the issue where some browsers e.g. iOS Chrome
                // fires "change" instead of "input" on autocomplete.
                el.addEventListener('change', onCompositionEnd)
                /* istanbul ignore if */
                if (isIE9) {
                  el.vmodel = true
                }
              }
            }
          },

          componentUpdated: function componentUpdated(el, binding, vnode) {
            if (vnode.tag === 'select') {
              setSelected(el, binding, vnode.context)
              // in case the options rendered by v-for have changed,
              // it's possible that the value is out-of-sync with the rendered options.
              // detect such cases and filter out values that no longer has a matching
              // option in the DOM.
              var prevOptions = el._vOptions
              var curOptions = (el._vOptions = [].map.call(
                el.options,
                getValue
              ))
              if (
                curOptions.some(function (o, i) {
                  return !looseEqual(o, prevOptions[i])
                })
              ) {
                // trigger change event if
                // no matching option found for at least one value
                var needReset = el.multiple
                  ? binding.value.some(function (v) {
                      return hasNoMatchingOption(v, curOptions)
                    })
                  : binding.value !== binding.oldValue &&
                    hasNoMatchingOption(binding.value, curOptions)
                if (needReset) {
                  trigger(el, 'change')
                }
              }
            }
          },
        }

        function setSelected(el, binding, vm) {
          actuallySetSelected(el, binding, vm)
          /* istanbul ignore if */
          if (isIE || isEdge) {
            setTimeout(function () {
              actuallySetSelected(el, binding, vm)
            }, 0)
          }
        }

        function actuallySetSelected(el, binding, vm) {
          var value = binding.value
          var isMultiple = el.multiple
          if (isMultiple && !Array.isArray(value)) {
            true &&
              warn(
                '<select multiple v-model="' +
                  binding.expression +
                  '"> ' +
                  'expects an Array value for its binding, but got ' +
                  Object.prototype.toString.call(value).slice(8, -1),
                vm
              )
            return
          }
          var selected, option
          for (var i = 0, l = el.options.length; i < l; i++) {
            option = el.options[i]
            if (isMultiple) {
              selected = looseIndexOf(value, getValue(option)) > -1
              if (option.selected !== selected) {
                option.selected = selected
              }
            } else {
              if (looseEqual(getValue(option), value)) {
                if (el.selectedIndex !== i) {
                  el.selectedIndex = i
                }
                return
              }
            }
          }
          if (!isMultiple) {
            el.selectedIndex = -1
          }
        }

        function hasNoMatchingOption(value, options) {
          return options.every(function (o) {
            return !looseEqual(o, value)
          })
        }

        function getValue(option) {
          return '_value' in option ? option._value : option.value
        }

        function onCompositionStart(e) {
          e.target.composing = true
        }

        function onCompositionEnd(e) {
          // prevent triggering an input event for no reason
          if (!e.target.composing) {
            return
          }
          e.target.composing = false
          trigger(e.target, 'input')
        }

        function trigger(el, type) {
          var e = document.createEvent('HTMLEvents')
          e.initEvent(type, true, true)
          el.dispatchEvent(e)
        }

        /*  */

        // recursively search for possible transition defined inside the component root
        function locateNode(vnode) {
          return vnode.componentInstance &&
            (!vnode.data || !vnode.data.transition)
            ? locateNode(vnode.componentInstance._vnode)
            : vnode
        }

        var show = {
          bind: function bind(el, ref, vnode) {
            var value = ref.value

            vnode = locateNode(vnode)
            var transition$$1 = vnode.data && vnode.data.transition
            var originalDisplay = (el.__vOriginalDisplay =
              el.style.display === 'none' ? '' : el.style.display)
            if (value && transition$$1) {
              vnode.data.show = true
              enter(vnode, function () {
                el.style.display = originalDisplay
              })
            } else {
              el.style.display = value ? originalDisplay : 'none'
            }
          },

          update: function update(el, ref, vnode) {
            var value = ref.value
            var oldValue = ref.oldValue

            /* istanbul ignore if */
            if (!value === !oldValue) {
              return
            }
            vnode = locateNode(vnode)
            var transition$$1 = vnode.data && vnode.data.transition
            if (transition$$1) {
              vnode.data.show = true
              if (value) {
                enter(vnode, function () {
                  el.style.display = el.__vOriginalDisplay
                })
              } else {
                leave(vnode, function () {
                  el.style.display = 'none'
                })
              }
            } else {
              el.style.display = value ? el.__vOriginalDisplay : 'none'
            }
          },

          unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
            if (!isDestroy) {
              el.style.display = el.__vOriginalDisplay
            }
          },
        }

        var platformDirectives = {
          model: directive,
          show: show,
        }

        /*  */

        var transitionProps = {
          name: String,
          appear: Boolean,
          css: Boolean,
          mode: String,
          type: String,
          enterClass: String,
          leaveClass: String,
          enterToClass: String,
          leaveToClass: String,
          enterActiveClass: String,
          leaveActiveClass: String,
          appearClass: String,
          appearActiveClass: String,
          appearToClass: String,
          duration: [Number, String, Object],
        }

        // in case the child is also an abstract component, e.g. <keep-alive>
        // we want to recursively retrieve the real component to be rendered
        function getRealChild(vnode) {
          var compOptions = vnode && vnode.componentOptions
          if (compOptions && compOptions.Ctor.options.abstract) {
            return getRealChild(getFirstComponentChild(compOptions.children))
          } else {
            return vnode
          }
        }

        function extractTransitionData(comp) {
          var data = {}
          var options = comp.$options
          // props
          for (var key in options.propsData) {
            data[key] = comp[key]
          }
          // events.
          // extract listeners and pass them directly to the transition methods
          var listeners = options._parentListeners
          for (var key$1 in listeners) {
            data[camelize(key$1)] = listeners[key$1]
          }
          return data
        }

        function placeholder(h, rawChild) {
          if (/\d-keep-alive$/.test(rawChild.tag)) {
            return h('keep-alive', {
              props: rawChild.componentOptions.propsData,
            })
          }
        }

        function hasParentTransition(vnode) {
          while ((vnode = vnode.parent)) {
            if (vnode.data.transition) {
              return true
            }
          }
        }

        function isSameChild(child, oldChild) {
          return oldChild.key === child.key && oldChild.tag === child.tag
        }

        var isNotTextNode = function (c) {
          return c.tag || isAsyncPlaceholder(c)
        }

        var isVShowDirective = function (d) {
          return d.name === 'show'
        }

        var Transition = {
          name: 'transition',
          props: transitionProps,
          abstract: true,

          render: function render(h) {
            var this$1 = this

            var children = this.$slots.default
            if (!children) {
              return
            }

            // filter out text nodes (possible whitespaces)
            children = children.filter(isNotTextNode)
            /* istanbul ignore if */
            if (!children.length) {
              return
            }

            // warn multiple elements
            if (true && children.length > 1) {
              warn(
                '<transition> can only be used on a single element. Use ' +
                  '<transition-group> for lists.',
                this.$parent
              )
            }

            var mode = this.mode

            // warn invalid mode
            if (true && mode && mode !== 'in-out' && mode !== 'out-in') {
              warn('invalid <transition> mode: ' + mode, this.$parent)
            }

            var rawChild = children[0]

            // if this is a component root node and the component's
            // parent container node also has transition, skip.
            if (hasParentTransition(this.$vnode)) {
              return rawChild
            }

            // apply transition data to child
            // use getRealChild() to ignore abstract components e.g. keep-alive
            var child = getRealChild(rawChild)
            /* istanbul ignore if */
            if (!child) {
              return rawChild
            }

            if (this._leaving) {
              return placeholder(h, rawChild)
            }

            // ensure a key that is unique to the vnode type and to this transition
            // component instance. This key will be used to remove pending leaving nodes
            // during entering.
            var id = '__transition-' + this._uid + '-'
            child.key =
              child.key == null
                ? child.isComment
                  ? id + 'comment'
                  : id + child.tag
                : isPrimitive(child.key)
                ? String(child.key).indexOf(id) === 0
                  ? child.key
                  : id + child.key
                : child.key

            var data = ((child.data || (child.data = {})).transition =
              extractTransitionData(this))
            var oldRawChild = this._vnode
            var oldChild = getRealChild(oldRawChild)

            // mark v-show
            // so that the transition module can hand over the control to the directive
            if (
              child.data.directives &&
              child.data.directives.some(isVShowDirective)
            ) {
              child.data.show = true
            }

            if (
              oldChild &&
              oldChild.data &&
              !isSameChild(child, oldChild) &&
              !isAsyncPlaceholder(oldChild) &&
              // #6687 component root is a comment node
              !(
                oldChild.componentInstance &&
                oldChild.componentInstance._vnode.isComment
              )
            ) {
              // replace old child transition data with fresh one
              // important for dynamic transitions!
              var oldData = (oldChild.data.transition = extend({}, data))
              // handle transition mode
              if (mode === 'out-in') {
                // return placeholder node and queue update when leave finishes
                this._leaving = true
                mergeVNodeHook(oldData, 'afterLeave', function () {
                  this$1._leaving = false
                  this$1.$forceUpdate()
                })
                return placeholder(h, rawChild)
              } else if (mode === 'in-out') {
                if (isAsyncPlaceholder(child)) {
                  return oldRawChild
                }
                var delayedLeave
                var performLeave = function () {
                  delayedLeave()
                }
                mergeVNodeHook(data, 'afterEnter', performLeave)
                mergeVNodeHook(data, 'enterCancelled', performLeave)
                mergeVNodeHook(oldData, 'delayLeave', function (leave) {
                  delayedLeave = leave
                })
              }
            }

            return rawChild
          },
        }

        /*  */

        var props = extend(
          {
            tag: String,
            moveClass: String,
          },
          transitionProps
        )

        delete props.mode

        var TransitionGroup = {
          props: props,

          beforeMount: function beforeMount() {
            var this$1 = this

            var update = this._update
            this._update = function (vnode, hydrating) {
              var restoreActiveInstance = setActiveInstance(this$1)
              // force removing pass
              this$1.__patch__(
                this$1._vnode,
                this$1.kept,
                false, // hydrating
                true // removeOnly (!important, avoids unnecessary moves)
              )
              this$1._vnode = this$1.kept
              restoreActiveInstance()
              update.call(this$1, vnode, hydrating)
            }
          },

          render: function render(h) {
            var tag = this.tag || this.$vnode.data.tag || 'span'
            var map = Object.create(null)
            var prevChildren = (this.prevChildren = this.children)
            var rawChildren = this.$slots.default || []
            var children = (this.children = [])
            var transitionData = extractTransitionData(this)

            for (var i = 0; i < rawChildren.length; i++) {
              var c = rawChildren[i]
              if (c.tag) {
                if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
                  children.push(c)
                  map[c.key] = c
                  ;(c.data || (c.data = {})).transition = transitionData
                } else if (true) {
                  var opts = c.componentOptions
                  var name = opts
                    ? opts.Ctor.options.name || opts.tag || ''
                    : c.tag
                  warn(
                    '<transition-group> children must be keyed: <' + name + '>'
                  )
                }
              }
            }

            if (prevChildren) {
              var kept = []
              var removed = []
              for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                var c$1 = prevChildren[i$1]
                c$1.data.transition = transitionData
                c$1.data.pos = c$1.elm.getBoundingClientRect()
                if (map[c$1.key]) {
                  kept.push(c$1)
                } else {
                  removed.push(c$1)
                }
              }
              this.kept = h(tag, null, kept)
              this.removed = removed
            }

            return h(tag, null, children)
          },

          updated: function updated() {
            var children = this.prevChildren
            var moveClass = this.moveClass || (this.name || 'v') + '-move'
            if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
              return
            }

            // we divide the work into three loops to avoid mixing DOM reads and writes
            // in each iteration - which helps prevent layout thrashing.
            children.forEach(callPendingCbs)
            children.forEach(recordPosition)
            children.forEach(applyTranslation)

            // force reflow to put everything in position
            // assign to this to avoid being removed in tree-shaking
            // $flow-disable-line
            this._reflow = document.body.offsetHeight

            children.forEach(function (c) {
              if (c.data.moved) {
                var el = c.elm
                var s = el.style
                addTransitionClass(el, moveClass)
                s.transform = s.WebkitTransform = s.transitionDuration = ''
                el.addEventListener(
                  transitionEndEvent,
                  (el._moveCb = function cb(e) {
                    if (e && e.target !== el) {
                      return
                    }
                    if (!e || /transform$/.test(e.propertyName)) {
                      el.removeEventListener(transitionEndEvent, cb)
                      el._moveCb = null
                      removeTransitionClass(el, moveClass)
                    }
                  })
                )
              }
            })
          },

          methods: {
            hasMove: function hasMove(el, moveClass) {
              /* istanbul ignore if */
              if (!hasTransition) {
                return false
              }
              /* istanbul ignore if */
              if (this._hasMove) {
                return this._hasMove
              }
              // Detect whether an element with the move class applied has
              // CSS transitions. Since the element may be inside an entering
              // transition at this very moment, we make a clone of it and remove
              // all other transition classes applied to ensure only the move class
              // is applied.
              var clone = el.cloneNode()
              if (el._transitionClasses) {
                el._transitionClasses.forEach(function (cls) {
                  removeClass(clone, cls)
                })
              }
              addClass(clone, moveClass)
              clone.style.display = 'none'
              this.$el.appendChild(clone)
              var info = getTransitionInfo(clone)
              this.$el.removeChild(clone)
              return (this._hasMove = info.hasTransform)
            },
          },
        }

        function callPendingCbs(c) {
          /* istanbul ignore if */
          if (c.elm._moveCb) {
            c.elm._moveCb()
          }
          /* istanbul ignore if */
          if (c.elm._enterCb) {
            c.elm._enterCb()
          }
        }

        function recordPosition(c) {
          c.data.newPos = c.elm.getBoundingClientRect()
        }

        function applyTranslation(c) {
          var oldPos = c.data.pos
          var newPos = c.data.newPos
          var dx = oldPos.left - newPos.left
          var dy = oldPos.top - newPos.top
          if (dx || dy) {
            c.data.moved = true
            var s = c.elm.style
            s.transform = s.WebkitTransform =
              'translate(' + dx + 'px,' + dy + 'px)'
            s.transitionDuration = '0s'
          }
        }

        var platformComponents = {
          Transition: Transition,
          TransitionGroup: TransitionGroup,
        }

        /*  */

        // install platform specific utils
        Vue.config.mustUseProp = mustUseProp
        Vue.config.isReservedTag = isReservedTag
        Vue.config.isReservedAttr = isReservedAttr
        Vue.config.getTagNamespace = getTagNamespace
        Vue.config.isUnknownElement = isUnknownElement

        // install platform runtime directives & components
        extend(Vue.options.directives, platformDirectives)
        extend(Vue.options.components, platformComponents)

        // install platform patch function
        Vue.prototype.__patch__ = inBrowser ? patch : noop

        // public mount method
        Vue.prototype.$mount = function (el, hydrating) {
          el = el && inBrowser ? query(el) : undefined
          return mountComponent(this, el, hydrating)
        }

        // devtools global hook
        /* istanbul ignore next */
        if (inBrowser) {
          setTimeout(function () {
            if (config.devtools) {
              if (devtools) {
                devtools.emit('init', Vue)
              } else if (true) {
                console[console.info ? 'info' : 'log'](
                  'Download the Vue Devtools extension for a better development experience:\n' +
                    'https://github.com/vuejs/vue-devtools'
                )
              }
            }
            if (
              true &&
              config.productionTip !== false &&
              typeof console !== 'undefined'
            ) {
              console[console.info ? 'info' : 'log'](
                'You are running Vue in development mode.\n' +
                  'Make sure to turn on production mode when deploying for production.\n' +
                  'See more tips at https://vuejs.org/guide/deployment.html'
              )
            }
          }, 0)
        }

        /*  */

        var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g
        var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g

        var buildRegex = cached(function (delimiters) {
          var open = delimiters[0].replace(regexEscapeRE, '\\$&')
          var close = delimiters[1].replace(regexEscapeRE, '\\$&')
          return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
        })

        function parseText(text, delimiters) {
          var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE
          if (!tagRE.test(text)) {
            return
          }
          var tokens = []
          var rawTokens = []
          var lastIndex = (tagRE.lastIndex = 0)
          var match, index, tokenValue
          while ((match = tagRE.exec(text))) {
            index = match.index
            // push text token
            if (index > lastIndex) {
              rawTokens.push((tokenValue = text.slice(lastIndex, index)))
              tokens.push(JSON.stringify(tokenValue))
            }
            // tag token
            var exp = parseFilters(match[1].trim())
            tokens.push('_s(' + exp + ')')
            rawTokens.push({ '@binding': exp })
            lastIndex = index + match[0].length
          }
          if (lastIndex < text.length) {
            rawTokens.push((tokenValue = text.slice(lastIndex)))
            tokens.push(JSON.stringify(tokenValue))
          }
          return {
            expression: tokens.join('+'),
            tokens: rawTokens,
          }
        }

        /*  */

        function transformNode(el, options) {
          var warn = options.warn || baseWarn
          var staticClass = getAndRemoveAttr(el, 'class')
          if (true && staticClass) {
            var res = parseText(staticClass, options.delimiters)
            if (res) {
              warn(
                'class="' +
                  staticClass +
                  '": ' +
                  'Interpolation inside attributes has been removed. ' +
                  'Use v-bind or the colon shorthand instead. For example, ' +
                  'instead of <div class="{{ val }}">, use <div :class="val">.',
                el.rawAttrsMap['class']
              )
            }
          }
          if (staticClass) {
            el.staticClass = JSON.stringify(staticClass)
          }
          var classBinding = getBindingAttr(el, 'class', false /* getStatic */)
          if (classBinding) {
            el.classBinding = classBinding
          }
        }

        function genData(el) {
          var data = ''
          if (el.staticClass) {
            data += 'staticClass:' + el.staticClass + ','
          }
          if (el.classBinding) {
            data += 'class:' + el.classBinding + ','
          }
          return data
        }

        var klass$1 = {
          staticKeys: ['staticClass'],
          transformNode: transformNode,
          genData: genData,
        }

        /*  */

        function transformNode$1(el, options) {
          var warn = options.warn || baseWarn
          var staticStyle = getAndRemoveAttr(el, 'style')
          if (staticStyle) {
            /* istanbul ignore if */
            if (true) {
              var res = parseText(staticStyle, options.delimiters)
              if (res) {
                warn(
                  'style="' +
                    staticStyle +
                    '": ' +
                    'Interpolation inside attributes has been removed. ' +
                    'Use v-bind or the colon shorthand instead. For example, ' +
                    'instead of <div style="{{ val }}">, use <div :style="val">.',
                  el.rawAttrsMap['style']
                )
              }
            }
            el.staticStyle = JSON.stringify(parseStyleText(staticStyle))
          }

          var styleBinding = getBindingAttr(el, 'style', false /* getStatic */)
          if (styleBinding) {
            el.styleBinding = styleBinding
          }
        }

        function genData$1(el) {
          var data = ''
          if (el.staticStyle) {
            data += 'staticStyle:' + el.staticStyle + ','
          }
          if (el.styleBinding) {
            data += 'style:(' + el.styleBinding + '),'
          }
          return data
        }

        var style$1 = {
          staticKeys: ['staticStyle'],
          transformNode: transformNode$1,
          genData: genData$1,
        }

        /*  */

        var decoder

        var he = {
          decode: function decode(html) {
            decoder = decoder || document.createElement('div')
            decoder.innerHTML = html
            return decoder.textContent
          },
        }

        /*  */

        var isUnaryTag = makeMap(
          'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
            'link,meta,param,source,track,wbr'
        )

        // Elements that you can, intentionally, leave open
        // (and which close themselves)
        var canBeLeftOpenTag = makeMap(
          'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
        )

        // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
        // Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
        var isNonPhrasingTag = makeMap(
          'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
            'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
            'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
            'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
            'title,tr,track'
        )

        /**
         * Not type-checking this file because it's mostly vendor code.
         */

        // Regular Expressions for parsing tags and attributes
        var attribute =
          /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/
        var dynamicArgAttribute =
          /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/
        var ncname = '[a-zA-Z_][\\-\\.0-9_a-zA-Z' + unicodeRegExp.source + ']*'
        var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')'
        var startTagOpen = new RegExp('^<' + qnameCapture)
        var startTagClose = /^\s*(\/?)>/
        var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>')
        var doctype = /^<!DOCTYPE [^>]+>/i
        // #7298: escape - to avoid being passed as HTML comment when inlined in page
        var comment = /^<!\--/
        var conditionalComment = /^<!\[/

        // Special Elements (can contain anything)
        var isPlainTextElement = makeMap('script,style,textarea', true)
        var reCache = {}

        var decodingMap = {
          '&lt;': '<',
          '&gt;': '>',
          '&quot;': '"',
          '&amp;': '&',
          '&#10;': '\n',
          '&#9;': '\t',
          '&#39;': "'",
        }
        var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g
        var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g

        // #5992
        var isIgnoreNewlineTag = makeMap('pre,textarea', true)
        var shouldIgnoreFirstNewline = function (tag, html) {
          return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'
        }

        function decodeAttr(value, shouldDecodeNewlines) {
          var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr
          return value.replace(re, function (match) {
            return decodingMap[match]
          })
        }

        function parseHTML(html, options) {
          var stack = []
          var expectHTML = options.expectHTML
          var isUnaryTag$$1 = options.isUnaryTag || no
          var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no
          var index = 0
          var last, lastTag
          while (html) {
            last = html
            // Make sure we're not in a plaintext content element like script/style
            if (!lastTag || !isPlainTextElement(lastTag)) {
              var textEnd = html.indexOf('<')
              if (textEnd === 0) {
                // Comment:
                if (comment.test(html)) {
                  var commentEnd = html.indexOf('-->')

                  if (commentEnd >= 0) {
                    if (options.shouldKeepComment) {
                      options.comment(
                        html.substring(4, commentEnd),
                        index,
                        index + commentEnd + 3
                      )
                    }
                    advance(commentEnd + 3)
                    continue
                  }
                }

                // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
                if (conditionalComment.test(html)) {
                  var conditionalEnd = html.indexOf(']>')

                  if (conditionalEnd >= 0) {
                    advance(conditionalEnd + 2)
                    continue
                  }
                }

                // Doctype:
                var doctypeMatch = html.match(doctype)
                if (doctypeMatch) {
                  advance(doctypeMatch[0].length)
                  continue
                }

                // End tag:
                var endTagMatch = html.match(endTag)
                if (endTagMatch) {
                  var curIndex = index
                  advance(endTagMatch[0].length)
                  parseEndTag(endTagMatch[1], curIndex, index)
                  continue
                }

                // Start tag:
                var startTagMatch = parseStartTag()
                if (startTagMatch) {
                  handleStartTag(startTagMatch)
                  if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {
                    advance(1)
                  }
                  continue
                }
              }

              var text = void 0,
                rest = void 0,
                next = void 0
              if (textEnd >= 0) {
                rest = html.slice(textEnd)
                while (
                  !endTag.test(rest) &&
                  !startTagOpen.test(rest) &&
                  !comment.test(rest) &&
                  !conditionalComment.test(rest)
                ) {
                  // < in plain text, be forgiving and treat it as text
                  next = rest.indexOf('<', 1)
                  if (next < 0) {
                    break
                  }
                  textEnd += next
                  rest = html.slice(textEnd)
                }
                text = html.substring(0, textEnd)
              }

              if (textEnd < 0) {
                text = html
              }

              if (text) {
                advance(text.length)
              }

              if (options.chars && text) {
                options.chars(text, index - text.length, index)
              }
            } else {
              var endTagLength = 0
              var stackedTag = lastTag.toLowerCase()
              var reStackedTag =
                reCache[stackedTag] ||
                (reCache[stackedTag] = new RegExp(
                  '([\\s\\S]*?)(</' + stackedTag + '[^>]*>)',
                  'i'
                ))
              var rest$1 = html.replace(
                reStackedTag,
                function (all, text, endTag) {
                  endTagLength = endTag.length
                  if (
                    !isPlainTextElement(stackedTag) &&
                    stackedTag !== 'noscript'
                  ) {
                    text = text
                      .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
                      .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1')
                  }
                  if (shouldIgnoreFirstNewline(stackedTag, text)) {
                    text = text.slice(1)
                  }
                  if (options.chars) {
                    options.chars(text)
                  }
                  return ''
                }
              )
              index += html.length - rest$1.length
              html = rest$1
              parseEndTag(stackedTag, index - endTagLength, index)
            }

            if (html === last) {
              options.chars && options.chars(html)
              if (true && !stack.length && options.warn) {
                options.warn(
                  'Mal-formatted tag at end of template: "' + html + '"',
                  { start: index + html.length }
                )
              }
              break
            }
          }

          // Clean up any remaining tags
          parseEndTag()

          function advance(n) {
            index += n
            html = html.substring(n)
          }

          function parseStartTag() {
            var start = html.match(startTagOpen)
            if (start) {
              var match = {
                tagName: start[1],
                attrs: [],
                start: index,
              }
              advance(start[0].length)
              var end, attr
              while (
                !(end = html.match(startTagClose)) &&
                (attr =
                  html.match(dynamicArgAttribute) || html.match(attribute))
              ) {
                attr.start = index
                advance(attr[0].length)
                attr.end = index
                match.attrs.push(attr)
              }
              if (end) {
                match.unarySlash = end[1]
                advance(end[0].length)
                match.end = index
                return match
              }
            }
          }

          function handleStartTag(match) {
            var tagName = match.tagName
            var unarySlash = match.unarySlash

            if (expectHTML) {
              if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
                parseEndTag(lastTag)
              }
              if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
                parseEndTag(tagName)
              }
            }

            var unary = isUnaryTag$$1(tagName) || !!unarySlash

            var l = match.attrs.length
            var attrs = new Array(l)
            for (var i = 0; i < l; i++) {
              var args = match.attrs[i]
              var value = args[3] || args[4] || args[5] || ''
              var shouldDecodeNewlines =
                tagName === 'a' && args[1] === 'href'
                  ? options.shouldDecodeNewlinesForHref
                  : options.shouldDecodeNewlines
              attrs[i] = {
                name: args[1],
                value: decodeAttr(value, shouldDecodeNewlines),
              }
              if (true && options.outputSourceRange) {
                attrs[i].start = args.start + args[0].match(/^\s*/).length
                attrs[i].end = args.end
              }
            }

            if (!unary) {
              stack.push({
                tag: tagName,
                lowerCasedTag: tagName.toLowerCase(),
                attrs: attrs,
                start: match.start,
                end: match.end,
              })
              lastTag = tagName
            }

            if (options.start) {
              options.start(tagName, attrs, unary, match.start, match.end)
            }
          }

          function parseEndTag(tagName, start, end) {
            var pos, lowerCasedTagName
            if (start == null) {
              start = index
            }
            if (end == null) {
              end = index
            }

            // Find the closest opened tag of the same type
            if (tagName) {
              lowerCasedTagName = tagName.toLowerCase()
              for (pos = stack.length - 1; pos >= 0; pos--) {
                if (stack[pos].lowerCasedTag === lowerCasedTagName) {
                  break
                }
              }
            } else {
              // If no tag name is provided, clean shop
              pos = 0
            }

            if (pos >= 0) {
              // Close all the open elements, up the stack
              for (var i = stack.length - 1; i >= pos; i--) {
                if (true && (i > pos || !tagName) && options.warn) {
                  options.warn(
                    'tag <' + stack[i].tag + '> has no matching end tag.',
                    { start: stack[i].start, end: stack[i].end }
                  )
                }
                if (options.end) {
                  options.end(stack[i].tag, start, end)
                }
              }

              // Remove the open elements from the stack
              stack.length = pos
              lastTag = pos && stack[pos - 1].tag
            } else if (lowerCasedTagName === 'br') {
              if (options.start) {
                options.start(tagName, [], true, start, end)
              }
            } else if (lowerCasedTagName === 'p') {
              if (options.start) {
                options.start(tagName, [], false, start, end)
              }
              if (options.end) {
                options.end(tagName, start, end)
              }
            }
          }
        }

        /*  */

        var onRE = /^@|^v-on:/
        var dirRE = /^v-|^@|^:|^#/
        var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/
        var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/
        var stripParensRE = /^\(|\)$/g
        var dynamicArgRE = /^\[.*\]$/

        var argRE = /:(.*)$/
        var bindRE = /^:|^\.|^v-bind:/
        var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g

        var slotRE = /^v-slot(:|$)|^#/

        var lineBreakRE = /[\r\n]/
        var whitespaceRE$1 = /[ \f\t\r\n]+/g

        var invalidAttributeRE = /[\s"'<>\/=]/

        var decodeHTMLCached = cached(he.decode)

        var emptySlotScopeToken = '_empty_'

        // configurable state
        var warn$2
        var delimiters
        var transforms
        var preTransforms
        var postTransforms
        var platformIsPreTag
        var platformMustUseProp
        var platformGetTagNamespace
        var maybeComponent

        function createASTElement(tag, attrs, parent) {
          return {
            type: 1,
            tag: tag,
            attrsList: attrs,
            attrsMap: makeAttrsMap(attrs),
            rawAttrsMap: {},
            parent: parent,
            children: [],
          }
        }

        /**
         * Convert HTML string to AST.
         */
        function parse(template, options) {
          warn$2 = options.warn || baseWarn

          platformIsPreTag = options.isPreTag || no
          platformMustUseProp = options.mustUseProp || no
          platformGetTagNamespace = options.getTagNamespace || no
          var isReservedTag = options.isReservedTag || no
          maybeComponent = function (el) {
            return !!(
              el.component ||
              el.attrsMap[':is'] ||
              el.attrsMap['v-bind:is'] ||
              !(el.attrsMap.is
                ? isReservedTag(el.attrsMap.is)
                : isReservedTag(el.tag))
            )
          }
          transforms = pluckModuleFunction(options.modules, 'transformNode')
          preTransforms = pluckModuleFunction(
            options.modules,
            'preTransformNode'
          )
          postTransforms = pluckModuleFunction(
            options.modules,
            'postTransformNode'
          )

          delimiters = options.delimiters

          var stack = []
          var preserveWhitespace = options.preserveWhitespace !== false
          var whitespaceOption = options.whitespace
          var root
          var currentParent
          var inVPre = false
          var inPre = false
          var warned = false

          function warnOnce(msg, range) {
            if (!warned) {
              warned = true
              warn$2(msg, range)
            }
          }

          function closeElement(element) {
            trimEndingWhitespace(element)
            if (!inVPre && !element.processed) {
              element = processElement(element, options)
            }
            // tree management
            if (!stack.length && element !== root) {
              // allow root elements with v-if, v-else-if and v-else
              if (root.if && (element.elseif || element.else)) {
                if (true) {
                  checkRootConstraints(element)
                }
                addIfCondition(root, {
                  exp: element.elseif,
                  block: element,
                })
              } else if (true) {
                warnOnce(
                  'Component template should contain exactly one root element. ' +
                    'If you are using v-if on multiple elements, ' +
                    'use v-else-if to chain them instead.',
                  { start: element.start }
                )
              }
            }
            if (currentParent && !element.forbidden) {
              if (element.elseif || element.else) {
                processIfConditions(element, currentParent)
              } else {
                if (element.slotScope) {
                  // scoped slot
                  // keep it in the children list so that v-else(-if) conditions can
                  // find it as the prev node.
                  var name = element.slotTarget || '"default"'
                  ;(currentParent.scopedSlots ||
                    (currentParent.scopedSlots = {}))[name] = element
                }
                currentParent.children.push(element)
                element.parent = currentParent
              }
            }

            // final children cleanup
            // filter out scoped slots
            element.children = element.children.filter(function (c) {
              return !c.slotScope
            })
            // remove trailing whitespace node again
            trimEndingWhitespace(element)

            // check pre state
            if (element.pre) {
              inVPre = false
            }
            if (platformIsPreTag(element.tag)) {
              inPre = false
            }
            // apply post-transforms
            for (var i = 0; i < postTransforms.length; i++) {
              postTransforms[i](element, options)
            }
          }

          function trimEndingWhitespace(el) {
            // remove trailing whitespace node
            if (!inPre) {
              var lastNode
              while (
                (lastNode = el.children[el.children.length - 1]) &&
                lastNode.type === 3 &&
                lastNode.text === ' '
              ) {
                el.children.pop()
              }
            }
          }

          function checkRootConstraints(el) {
            if (el.tag === 'slot' || el.tag === 'template') {
              warnOnce(
                'Cannot use <' +
                  el.tag +
                  '> as component root element because it may ' +
                  'contain multiple nodes.',
                { start: el.start }
              )
            }
            if (el.attrsMap.hasOwnProperty('v-for')) {
              warnOnce(
                'Cannot use v-for on stateful component root element because ' +
                  'it renders multiple elements.',
                el.rawAttrsMap['v-for']
              )
            }
          }

          parseHTML(template, {
            warn: warn$2,
            expectHTML: options.expectHTML,
            isUnaryTag: options.isUnaryTag,
            canBeLeftOpenTag: options.canBeLeftOpenTag,
            shouldDecodeNewlines: options.shouldDecodeNewlines,
            shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
            shouldKeepComment: options.comments,
            outputSourceRange: options.outputSourceRange,
            start: function start(tag, attrs, unary, start$1, end) {
              // check namespace.
              // inherit parent ns if there is one
              var ns =
                (currentParent && currentParent.ns) ||
                platformGetTagNamespace(tag)

              // handle IE svg bug
              /* istanbul ignore if */
              if (isIE && ns === 'svg') {
                attrs = guardIESVGBug(attrs)
              }

              var element = createASTElement(tag, attrs, currentParent)
              if (ns) {
                element.ns = ns
              }

              if (true) {
                if (options.outputSourceRange) {
                  element.start = start$1
                  element.end = end
                  element.rawAttrsMap = element.attrsList.reduce(function (
                    cumulated,
                    attr
                  ) {
                    cumulated[attr.name] = attr
                    return cumulated
                  },
                  {})
                }
                attrs.forEach(function (attr) {
                  if (invalidAttributeRE.test(attr.name)) {
                    warn$2(
                      'Invalid dynamic argument expression: attribute names cannot contain ' +
                        'spaces, quotes, <, >, / or =.',
                      {
                        start: attr.start + attr.name.indexOf('['),
                        end: attr.start + attr.name.length,
                      }
                    )
                  }
                })
              }

              if (isForbiddenTag(element) && !isServerRendering()) {
                element.forbidden = true
                true &&
                  warn$2(
                    'Templates should only be responsible for mapping the state to the ' +
                      'UI. Avoid placing tags with side-effects in your templates, such as ' +
                      '<' +
                      tag +
                      '>' +
                      ', as they will not be parsed.',
                    { start: element.start }
                  )
              }

              // apply pre-transforms
              for (var i = 0; i < preTransforms.length; i++) {
                element = preTransforms[i](element, options) || element
              }

              if (!inVPre) {
                processPre(element)
                if (element.pre) {
                  inVPre = true
                }
              }
              if (platformIsPreTag(element.tag)) {
                inPre = true
              }
              if (inVPre) {
                processRawAttrs(element)
              } else if (!element.processed) {
                // structural directives
                processFor(element)
                processIf(element)
                processOnce(element)
              }

              if (!root) {
                root = element
                if (true) {
                  checkRootConstraints(root)
                }
              }

              if (!unary) {
                currentParent = element
                stack.push(element)
              } else {
                closeElement(element)
              }
            },

            end: function end(tag, start, end$1) {
              var element = stack[stack.length - 1]
              // pop stack
              stack.length -= 1
              currentParent = stack[stack.length - 1]
              if (true && options.outputSourceRange) {
                element.end = end$1
              }
              closeElement(element)
            },

            chars: function chars(text, start, end) {
              if (!currentParent) {
                if (true) {
                  if (text === template) {
                    warnOnce(
                      'Component template requires a root element, rather than just text.',
                      { start: start }
                    )
                  } else if ((text = text.trim())) {
                    warnOnce(
                      'text "' +
                        text +
                        '" outside root element will be ignored.',
                      { start: start }
                    )
                  }
                }
                return
              }
              // IE textarea placeholder bug
              /* istanbul ignore if */
              if (
                isIE &&
                currentParent.tag === 'textarea' &&
                currentParent.attrsMap.placeholder === text
              ) {
                return
              }
              var children = currentParent.children
              if (inPre || text.trim()) {
                text = isTextTag(currentParent) ? text : decodeHTMLCached(text)
              } else if (!children.length) {
                // remove the whitespace-only node right after an opening tag
                text = ''
              } else if (whitespaceOption) {
                if (whitespaceOption === 'condense') {
                  // in condense mode, remove the whitespace node if it contains
                  // line break, otherwise condense to a single space
                  text = lineBreakRE.test(text) ? '' : ' '
                } else {
                  text = ' '
                }
              } else {
                text = preserveWhitespace ? ' ' : ''
              }
              if (text) {
                if (!inPre && whitespaceOption === 'condense') {
                  // condense consecutive whitespaces into single space
                  text = text.replace(whitespaceRE$1, ' ')
                }
                var res
                var child
                if (
                  !inVPre &&
                  text !== ' ' &&
                  (res = parseText(text, delimiters))
                ) {
                  child = {
                    type: 2,
                    expression: res.expression,
                    tokens: res.tokens,
                    text: text,
                  }
                } else if (
                  text !== ' ' ||
                  !children.length ||
                  children[children.length - 1].text !== ' '
                ) {
                  child = {
                    type: 3,
                    text: text,
                  }
                }
                if (child) {
                  if (true && options.outputSourceRange) {
                    child.start = start
                    child.end = end
                  }
                  children.push(child)
                }
              }
            },
            comment: function comment(text, start, end) {
              // adding anything as a sibling to the root node is forbidden
              // comments should still be allowed, but ignored
              if (currentParent) {
                var child = {
                  type: 3,
                  text: text,
                  isComment: true,
                }
                if (true && options.outputSourceRange) {
                  child.start = start
                  child.end = end
                }
                currentParent.children.push(child)
              }
            },
          })
          return root
        }

        function processPre(el) {
          if (getAndRemoveAttr(el, 'v-pre') != null) {
            el.pre = true
          }
        }

        function processRawAttrs(el) {
          var list = el.attrsList
          var len = list.length
          if (len) {
            var attrs = (el.attrs = new Array(len))
            for (var i = 0; i < len; i++) {
              attrs[i] = {
                name: list[i].name,
                value: JSON.stringify(list[i].value),
              }
              if (list[i].start != null) {
                attrs[i].start = list[i].start
                attrs[i].end = list[i].end
              }
            }
          } else if (!el.pre) {
            // non root node in pre blocks with no attributes
            el.plain = true
          }
        }

        function processElement(element, options) {
          processKey(element)

          // determine whether this is a plain element after
          // removing structural attributes
          element.plain =
            !element.key && !element.scopedSlots && !element.attrsList.length

          processRef(element)
          processSlotContent(element)
          processSlotOutlet(element)
          processComponent(element)
          for (var i = 0; i < transforms.length; i++) {
            element = transforms[i](element, options) || element
          }
          processAttrs(element)
          return element
        }

        function processKey(el) {
          var exp = getBindingAttr(el, 'key')
          if (exp) {
            if (true) {
              if (el.tag === 'template') {
                warn$2(
                  '<template> cannot be keyed. Place the key on real elements instead.',
                  getRawBindingAttr(el, 'key')
                )
              }
              if (el.for) {
                var iterator = el.iterator2 || el.iterator1
                var parent = el.parent
                if (
                  iterator &&
                  iterator === exp &&
                  parent &&
                  parent.tag === 'transition-group'
                ) {
                  warn$2(
                    'Do not use v-for index as key on <transition-group> children, ' +
                      'this is the same as not using keys.',
                    getRawBindingAttr(el, 'key'),
                    true /* tip */
                  )
                }
              }
            }
            el.key = exp
          }
        }

        function processRef(el) {
          var ref = getBindingAttr(el, 'ref')
          if (ref) {
            el.ref = ref
            el.refInFor = checkInFor(el)
          }
        }

        function processFor(el) {
          var exp
          if ((exp = getAndRemoveAttr(el, 'v-for'))) {
            var res = parseFor(exp)
            if (res) {
              extend(el, res)
            } else if (true) {
              warn$2(
                'Invalid v-for expression: ' + exp,
                el.rawAttrsMap['v-for']
              )
            }
          }
        }

        function parseFor(exp) {
          var inMatch = exp.match(forAliasRE)
          if (!inMatch) {
            return
          }
          var res = {}
          res.for = inMatch[2].trim()
          var alias = inMatch[1].trim().replace(stripParensRE, '')
          var iteratorMatch = alias.match(forIteratorRE)
          if (iteratorMatch) {
            res.alias = alias.replace(forIteratorRE, '').trim()
            res.iterator1 = iteratorMatch[1].trim()
            if (iteratorMatch[2]) {
              res.iterator2 = iteratorMatch[2].trim()
            }
          } else {
            res.alias = alias
          }
          return res
        }

        function processIf(el) {
          var exp = getAndRemoveAttr(el, 'v-if')
          if (exp) {
            el.if = exp
            addIfCondition(el, {
              exp: exp,
              block: el,
            })
          } else {
            if (getAndRemoveAttr(el, 'v-else') != null) {
              el.else = true
            }
            var elseif = getAndRemoveAttr(el, 'v-else-if')
            if (elseif) {
              el.elseif = elseif
            }
          }
        }

        function processIfConditions(el, parent) {
          var prev = findPrevElement(parent.children)
          if (prev && prev.if) {
            addIfCondition(prev, {
              exp: el.elseif,
              block: el,
            })
          } else if (true) {
            warn$2(
              'v-' +
                (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') +
                ' ' +
                'used on element <' +
                el.tag +
                '> without corresponding v-if.',
              el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']
            )
          }
        }

        function findPrevElement(children) {
          var i = children.length
          while (i--) {
            if (children[i].type === 1) {
              return children[i]
            } else {
              if (true && children[i].text !== ' ') {
                warn$2(
                  'text "' +
                    children[i].text.trim() +
                    '" between v-if and v-else(-if) ' +
                    'will be ignored.',
                  children[i]
                )
              }
              children.pop()
            }
          }
        }

        function addIfCondition(el, condition) {
          if (!el.ifConditions) {
            el.ifConditions = []
          }
          el.ifConditions.push(condition)
        }

        function processOnce(el) {
          var once$$1 = getAndRemoveAttr(el, 'v-once')
          if (once$$1 != null) {
            el.once = true
          }
        }

        // handle content being passed to a component as slot,
        // e.g. <template slot="xxx">, <div slot-scope="xxx">
        function processSlotContent(el) {
          var slotScope
          if (el.tag === 'template') {
            slotScope = getAndRemoveAttr(el, 'scope')
            /* istanbul ignore if */
            if (true && slotScope) {
              warn$2(
                'the "scope" attribute for scoped slots have been deprecated and ' +
                  'replaced by "slot-scope" since 2.5. The new "slot-scope" attribute ' +
                  'can also be used on plain elements in addition to <template> to ' +
                  'denote scoped slots.',
                el.rawAttrsMap['scope'],
                true
              )
            }
            el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope')
          } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
            /* istanbul ignore if */
            if (true && el.attrsMap['v-for']) {
              warn$2(
                'Ambiguous combined usage of slot-scope and v-for on <' +
                  el.tag +
                  '> ' +
                  '(v-for takes higher priority). Use a wrapper <template> for the ' +
                  'scoped slot to make it clearer.',
                el.rawAttrsMap['slot-scope'],
                true
              )
            }
            el.slotScope = slotScope
          }

          // slot="xxx"
          var slotTarget = getBindingAttr(el, 'slot')
          if (slotTarget) {
            el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget
            el.slotTargetDynamic = !!(
              el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']
            )
            // preserve slot as an attribute for native shadow DOM compat
            // only for non-scoped slots.
            if (el.tag !== 'template' && !el.slotScope) {
              addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'))
            }
          }

          // 2.6 v-slot syntax
          {
            if (el.tag === 'template') {
              // v-slot on <template>
              var slotBinding = getAndRemoveAttrByRegex(el, slotRE)
              if (slotBinding) {
                if (true) {
                  if (el.slotTarget || el.slotScope) {
                    warn$2(
                      'Unexpected mixed usage of different slot syntaxes.',
                      el
                    )
                  }
                  if (el.parent && !maybeComponent(el.parent)) {
                    warn$2(
                      '<template v-slot> can only appear at the root level inside ' +
                        'the receiving component',
                      el
                    )
                  }
                }
                var ref = getSlotName(slotBinding)
                var name = ref.name
                var dynamic = ref.dynamic
                el.slotTarget = name
                el.slotTargetDynamic = dynamic
                el.slotScope = slotBinding.value || emptySlotScopeToken // force it into a scoped slot for perf
              }
            } else {
              // v-slot on component, denotes default slot
              var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE)
              if (slotBinding$1) {
                if (true) {
                  if (!maybeComponent(el)) {
                    warn$2(
                      'v-slot can only be used on components or <template>.',
                      slotBinding$1
                    )
                  }
                  if (el.slotScope || el.slotTarget) {
                    warn$2(
                      'Unexpected mixed usage of different slot syntaxes.',
                      el
                    )
                  }
                  if (el.scopedSlots) {
                    warn$2(
                      'To avoid scope ambiguity, the default slot should also use ' +
                        '<template> syntax when there are other named slots.',
                      slotBinding$1
                    )
                  }
                }
                // add the component's children to its default slot
                var slots = el.scopedSlots || (el.scopedSlots = {})
                var ref$1 = getSlotName(slotBinding$1)
                var name$1 = ref$1.name
                var dynamic$1 = ref$1.dynamic
                var slotContainer = (slots[name$1] = createASTElement(
                  'template',
                  [],
                  el
                ))
                slotContainer.slotTarget = name$1
                slotContainer.slotTargetDynamic = dynamic$1
                slotContainer.children = el.children.filter(function (c) {
                  if (!c.slotScope) {
                    c.parent = slotContainer
                    return true
                  }
                })
                slotContainer.slotScope =
                  slotBinding$1.value || emptySlotScopeToken
                // remove children as they are returned from scopedSlots now
                el.children = []
                // mark el non-plain so data gets generated
                el.plain = false
              }
            }
          }
        }

        function getSlotName(binding) {
          var name = binding.name.replace(slotRE, '')
          if (!name) {
            if (binding.name[0] !== '#') {
              name = 'default'
            } else if (true) {
              warn$2('v-slot shorthand syntax requires a slot name.', binding)
            }
          }
          return dynamicArgRE.test(name)
            ? // dynamic [name]
              { name: name.slice(1, -1), dynamic: true }
            : // static name
              { name: '"' + name + '"', dynamic: false }
        }

        // handle <slot/> outlets
        function processSlotOutlet(el) {
          if (el.tag === 'slot') {
            el.slotName = getBindingAttr(el, 'name')
            if (true && el.key) {
              warn$2(
                '`key` does not work on <slot> because slots are abstract outlets ' +
                  'and can possibly expand into multiple elements. ' +
                  'Use the key on a wrapping element instead.',
                getRawBindingAttr(el, 'key')
              )
            }
          }
        }

        function processComponent(el) {
          var binding
          if ((binding = getBindingAttr(el, 'is'))) {
            el.component = binding
          }
          if (getAndRemoveAttr(el, 'inline-template') != null) {
            el.inlineTemplate = true
          }
        }

        function processAttrs(el) {
          var list = el.attrsList
          var i, l, name, rawName, value, modifiers, syncGen, isDynamic
          for (i = 0, l = list.length; i < l; i++) {
            name = rawName = list[i].name
            value = list[i].value
            if (dirRE.test(name)) {
              // mark element as dynamic
              el.hasBindings = true
              // modifiers
              modifiers = parseModifiers(name.replace(dirRE, ''))
              // support .foo shorthand syntax for the .prop modifier
              if (modifiers) {
                name = name.replace(modifierRE, '')
              }
              if (bindRE.test(name)) {
                // v-bind
                name = name.replace(bindRE, '')
                value = parseFilters(value)
                isDynamic = dynamicArgRE.test(name)
                if (isDynamic) {
                  name = name.slice(1, -1)
                }
                if (true && value.trim().length === 0) {
                  warn$2(
                    'The value for a v-bind expression cannot be empty. Found in "v-bind:' +
                      name +
                      '"'
                  )
                }
                if (modifiers) {
                  if (modifiers.prop && !isDynamic) {
                    name = camelize(name)
                    if (name === 'innerHtml') {
                      name = 'innerHTML'
                    }
                  }
                  if (modifiers.camel && !isDynamic) {
                    name = camelize(name)
                  }
                  if (modifiers.sync) {
                    syncGen = genAssignmentCode(value, '$event')
                    if (!isDynamic) {
                      addHandler(
                        el,
                        'update:' + camelize(name),
                        syncGen,
                        null,
                        false,
                        warn$2,
                        list[i]
                      )
                      if (hyphenate(name) !== camelize(name)) {
                        addHandler(
                          el,
                          'update:' + hyphenate(name),
                          syncGen,
                          null,
                          false,
                          warn$2,
                          list[i]
                        )
                      }
                    } else {
                      // handler w/ dynamic event name
                      addHandler(
                        el,
                        '"update:"+(' + name + ')',
                        syncGen,
                        null,
                        false,
                        warn$2,
                        list[i],
                        true // dynamic
                      )
                    }
                  }
                }
                if (
                  (modifiers && modifiers.prop) ||
                  (!el.component &&
                    platformMustUseProp(el.tag, el.attrsMap.type, name))
                ) {
                  addProp(el, name, value, list[i], isDynamic)
                } else {
                  addAttr(el, name, value, list[i], isDynamic)
                }
              } else if (onRE.test(name)) {
                // v-on
                name = name.replace(onRE, '')
                isDynamic = dynamicArgRE.test(name)
                if (isDynamic) {
                  name = name.slice(1, -1)
                }
                addHandler(
                  el,
                  name,
                  value,
                  modifiers,
                  false,
                  warn$2,
                  list[i],
                  isDynamic
                )
              } else {
                // normal directives
                name = name.replace(dirRE, '')
                // parse arg
                var argMatch = name.match(argRE)
                var arg = argMatch && argMatch[1]
                isDynamic = false
                if (arg) {
                  name = name.slice(0, -(arg.length + 1))
                  if (dynamicArgRE.test(arg)) {
                    arg = arg.slice(1, -1)
                    isDynamic = true
                  }
                }
                addDirective(
                  el,
                  name,
                  rawName,
                  value,
                  arg,
                  isDynamic,
                  modifiers,
                  list[i]
                )
                if (true && name === 'model') {
                  checkForAliasModel(el, value)
                }
              }
            } else {
              // literal attribute
              if (true) {
                var res = parseText(value, delimiters)
                if (res) {
                  warn$2(
                    name +
                      '="' +
                      value +
                      '": ' +
                      'Interpolation inside attributes has been removed. ' +
                      'Use v-bind or the colon shorthand instead. For example, ' +
                      'instead of <div id="{{ val }}">, use <div :id="val">.',
                    list[i]
                  )
                }
              }
              addAttr(el, name, JSON.stringify(value), list[i])
              // #6887 firefox doesn't update muted state if set via attribute
              // even immediately after element creation
              if (
                !el.component &&
                name === 'muted' &&
                platformMustUseProp(el.tag, el.attrsMap.type, name)
              ) {
                addProp(el, name, 'true', list[i])
              }
            }
          }
        }

        function checkInFor(el) {
          var parent = el
          while (parent) {
            if (parent.for !== undefined) {
              return true
            }
            parent = parent.parent
          }
          return false
        }

        function parseModifiers(name) {
          var match = name.match(modifierRE)
          if (match) {
            var ret = {}
            match.forEach(function (m) {
              ret[m.slice(1)] = true
            })
            return ret
          }
        }

        function makeAttrsMap(attrs) {
          var map = {}
          for (var i = 0, l = attrs.length; i < l; i++) {
            if (true && map[attrs[i].name] && !isIE && !isEdge) {
              warn$2('duplicate attribute: ' + attrs[i].name, attrs[i])
            }
            map[attrs[i].name] = attrs[i].value
          }
          return map
        }

        // for script (e.g. type="x/template") or style, do not decode content
        function isTextTag(el) {
          return el.tag === 'script' || el.tag === 'style'
        }

        function isForbiddenTag(el) {
          return (
            el.tag === 'style' ||
            (el.tag === 'script' &&
              (!el.attrsMap.type || el.attrsMap.type === 'text/javascript'))
          )
        }

        var ieNSBug = /^xmlns:NS\d+/
        var ieNSPrefix = /^NS\d+:/

        /* istanbul ignore next */
        function guardIESVGBug(attrs) {
          var res = []
          for (var i = 0; i < attrs.length; i++) {
            var attr = attrs[i]
            if (!ieNSBug.test(attr.name)) {
              attr.name = attr.name.replace(ieNSPrefix, '')
              res.push(attr)
            }
          }
          return res
        }

        function checkForAliasModel(el, value) {
          var _el = el
          while (_el) {
            if (_el.for && _el.alias === value) {
              warn$2(
                '<' +
                  el.tag +
                  ' v-model="' +
                  value +
                  '">: ' +
                  'You are binding v-model directly to a v-for iteration alias. ' +
                  'This will not be able to modify the v-for source array because ' +
                  'writing to the alias is like modifying a function local variable. ' +
                  'Consider using an array of objects and use v-model on an object property instead.',
                el.rawAttrsMap['v-model']
              )
            }
            _el = _el.parent
          }
        }

        /*  */

        function preTransformNode(el, options) {
          if (el.tag === 'input') {
            var map = el.attrsMap
            if (!map['v-model']) {
              return
            }

            var typeBinding
            if (map[':type'] || map['v-bind:type']) {
              typeBinding = getBindingAttr(el, 'type')
            }
            if (!map.type && !typeBinding && map['v-bind']) {
              typeBinding = '(' + map['v-bind'] + ').type'
            }

            if (typeBinding) {
              var ifCondition = getAndRemoveAttr(el, 'v-if', true)
              var ifConditionExtra = ifCondition
                ? '&&(' + ifCondition + ')'
                : ''
              var hasElse = getAndRemoveAttr(el, 'v-else', true) != null
              var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true)
              // 1. checkbox
              var branch0 = cloneASTElement(el)
              // process for on the main node
              processFor(branch0)
              addRawAttr(branch0, 'type', 'checkbox')
              processElement(branch0, options)
              branch0.processed = true // prevent it from double-processed
              branch0.if =
                '(' + typeBinding + ")==='checkbox'" + ifConditionExtra
              addIfCondition(branch0, {
                exp: branch0.if,
                block: branch0,
              })
              // 2. add radio else-if condition
              var branch1 = cloneASTElement(el)
              getAndRemoveAttr(branch1, 'v-for', true)
              addRawAttr(branch1, 'type', 'radio')
              processElement(branch1, options)
              addIfCondition(branch0, {
                exp: '(' + typeBinding + ")==='radio'" + ifConditionExtra,
                block: branch1,
              })
              // 3. other
              var branch2 = cloneASTElement(el)
              getAndRemoveAttr(branch2, 'v-for', true)
              addRawAttr(branch2, ':type', typeBinding)
              processElement(branch2, options)
              addIfCondition(branch0, {
                exp: ifCondition,
                block: branch2,
              })

              if (hasElse) {
                branch0.else = true
              } else if (elseIfCondition) {
                branch0.elseif = elseIfCondition
              }

              return branch0
            }
          }
        }

        function cloneASTElement(el) {
          return createASTElement(el.tag, el.attrsList.slice(), el.parent)
        }

        var model$1 = {
          preTransformNode: preTransformNode,
        }

        var modules$1 = [klass$1, style$1, model$1]

        /*  */

        function text(el, dir) {
          if (dir.value) {
            addProp(el, 'textContent', '_s(' + dir.value + ')', dir)
          }
        }

        /*  */

        function html(el, dir) {
          if (dir.value) {
            addProp(el, 'innerHTML', '_s(' + dir.value + ')', dir)
          }
        }

        var directives$1 = {
          model: model,
          text: text,
          html: html,
        }

        /*  */

        var baseOptions = {
          expectHTML: true,
          modules: modules$1,
          directives: directives$1,
          isPreTag: isPreTag,
          isUnaryTag: isUnaryTag,
          mustUseProp: mustUseProp,
          canBeLeftOpenTag: canBeLeftOpenTag,
          isReservedTag: isReservedTag,
          getTagNamespace: getTagNamespace,
          staticKeys: genStaticKeys(modules$1),
        }

        /*  */

        var isStaticKey
        var isPlatformReservedTag

        var genStaticKeysCached = cached(genStaticKeys$1)

        /**
         * Goal of the optimizer: walk the generated template AST tree
         * and detect sub-trees that are purely static, i.e. parts of
         * the DOM that never needs to change.
         *
         * Once we detect these sub-trees, we can:
         *
         * 1. Hoist them into constants, so that we no longer need to
         *    create fresh nodes for them on each re-render;
         * 2. Completely skip them in the patching process.
         */
        function optimize(root, options) {
          if (!root) {
            return
          }
          isStaticKey = genStaticKeysCached(options.staticKeys || '')
          isPlatformReservedTag = options.isReservedTag || no
          // first pass: mark all non-static nodes.
          markStatic$1(root)
          // second pass: mark static roots.
          markStaticRoots(root, false)
        }

        function genStaticKeys$1(keys) {
          return makeMap(
            'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +
              (keys ? ',' + keys : '')
          )
        }

        function markStatic$1(node) {
          node.static = isStatic(node)
          if (node.type === 1) {
            // do not make component slot content static. this avoids
            // 1. components not able to mutate slot nodes
            // 2. static slot content fails for hot-reloading
            if (
              !isPlatformReservedTag(node.tag) &&
              node.tag !== 'slot' &&
              node.attrsMap['inline-template'] == null
            ) {
              return
            }
            for (var i = 0, l = node.children.length; i < l; i++) {
              var child = node.children[i]
              markStatic$1(child)
              if (!child.static) {
                node.static = false
              }
            }
            if (node.ifConditions) {
              for (
                var i$1 = 1, l$1 = node.ifConditions.length;
                i$1 < l$1;
                i$1++
              ) {
                var block = node.ifConditions[i$1].block
                markStatic$1(block)
                if (!block.static) {
                  node.static = false
                }
              }
            }
          }
        }

        function markStaticRoots(node, isInFor) {
          if (node.type === 1) {
            if (node.static || node.once) {
              node.staticInFor = isInFor
            }
            // For a node to qualify as a static root, it should have children that
            // are not just static text. Otherwise the cost of hoisting out will
            // outweigh the benefits and it's better off to just always render it fresh.
            if (
              node.static &&
              node.children.length &&
              !(node.children.length === 1 && node.children[0].type === 3)
            ) {
              node.staticRoot = true
              return
            } else {
              node.staticRoot = false
            }
            if (node.children) {
              for (var i = 0, l = node.children.length; i < l; i++) {
                markStaticRoots(node.children[i], isInFor || !!node.for)
              }
            }
            if (node.ifConditions) {
              for (
                var i$1 = 1, l$1 = node.ifConditions.length;
                i$1 < l$1;
                i$1++
              ) {
                markStaticRoots(node.ifConditions[i$1].block, isInFor)
              }
            }
          }
        }

        function isStatic(node) {
          if (node.type === 2) {
            // expression
            return false
          }
          if (node.type === 3) {
            // text
            return true
          }
          return !!(
            node.pre ||
            (!node.hasBindings && // no dynamic bindings
              !node.if &&
              !node.for && // not v-if or v-for or v-else
              !isBuiltInTag(node.tag) && // not a built-in
              isPlatformReservedTag(node.tag) && // not a component
              !isDirectChildOfTemplateFor(node) &&
              Object.keys(node).every(isStaticKey))
          )
        }

        function isDirectChildOfTemplateFor(node) {
          while (node.parent) {
            node = node.parent
            if (node.tag !== 'template') {
              return false
            }
            if (node.for) {
              return true
            }
          }
          return false
        }

        /*  */

        var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/
        var fnInvokeRE = /\([^)]*?\);*$/
        var simplePathRE =
          /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/

        // KeyboardEvent.keyCode aliases
        var keyCodes = {
          esc: 27,
          tab: 9,
          enter: 13,
          space: 32,
          up: 38,
          left: 37,
          right: 39,
          down: 40,
          delete: [8, 46],
        }

        // KeyboardEvent.key aliases
        var keyNames = {
          // #7880: IE11 and Edge use `Esc` for Escape key name.
          esc: ['Esc', 'Escape'],
          tab: 'Tab',
          enter: 'Enter',
          // #9112: IE11 uses `Spacebar` for Space key name.
          space: [' ', 'Spacebar'],
          // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
          up: ['Up', 'ArrowUp'],
          left: ['Left', 'ArrowLeft'],
          right: ['Right', 'ArrowRight'],
          down: ['Down', 'ArrowDown'],
          // #9112: IE11 uses `Del` for Delete key name.
          delete: ['Backspace', 'Delete', 'Del'],
        }

        // #4868: modifiers that prevent the execution of the listener
        // need to explicitly return null so that we can determine whether to remove
        // the listener for .once
        var genGuard = function (condition) {
          return 'if(' + condition + ')return null;'
        }

        var modifierCode = {
          stop: '$event.stopPropagation();',
          prevent: '$event.preventDefault();',
          self: genGuard('$event.target !== $event.currentTarget'),
          ctrl: genGuard('!$event.ctrlKey'),
          shift: genGuard('!$event.shiftKey'),
          alt: genGuard('!$event.altKey'),
          meta: genGuard('!$event.metaKey'),
          left: genGuard("'button' in $event && $event.button !== 0"),
          middle: genGuard("'button' in $event && $event.button !== 1"),
          right: genGuard("'button' in $event && $event.button !== 2"),
        }

        function genHandlers(events, isNative) {
          var prefix = isNative ? 'nativeOn:' : 'on:'
          var staticHandlers = ''
          var dynamicHandlers = ''
          for (var name in events) {
            var handlerCode = genHandler(events[name])
            if (events[name] && events[name].dynamic) {
              dynamicHandlers += name + ',' + handlerCode + ','
            } else {
              staticHandlers += '"' + name + '":' + handlerCode + ','
            }
          }
          staticHandlers = '{' + staticHandlers.slice(0, -1) + '}'
          if (dynamicHandlers) {
            return (
              prefix +
              '_d(' +
              staticHandlers +
              ',[' +
              dynamicHandlers.slice(0, -1) +
              '])'
            )
          } else {
            return prefix + staticHandlers
          }
        }

        function genHandler(handler) {
          if (!handler) {
            return 'function(){}'
          }

          if (Array.isArray(handler)) {
            return (
              '[' +
              handler
                .map(function (handler) {
                  return genHandler(handler)
                })
                .join(',') +
              ']'
            )
          }

          var isMethodPath = simplePathRE.test(handler.value)
          var isFunctionExpression = fnExpRE.test(handler.value)
          var isFunctionInvocation = simplePathRE.test(
            handler.value.replace(fnInvokeRE, '')
          )

          if (!handler.modifiers) {
            if (isMethodPath || isFunctionExpression) {
              return handler.value
            }
            return (
              'function($event){' +
              (isFunctionInvocation
                ? 'return ' + handler.value
                : handler.value) +
              '}'
            ) // inline statement
          } else {
            var code = ''
            var genModifierCode = ''
            var keys = []
            for (var key in handler.modifiers) {
              if (modifierCode[key]) {
                genModifierCode += modifierCode[key]
                // left/right
                if (keyCodes[key]) {
                  keys.push(key)
                }
              } else if (key === 'exact') {
                var modifiers = handler.modifiers
                genModifierCode += genGuard(
                  ['ctrl', 'shift', 'alt', 'meta']
                    .filter(function (keyModifier) {
                      return !modifiers[keyModifier]
                    })
                    .map(function (keyModifier) {
                      return '$event.' + keyModifier + 'Key'
                    })
                    .join('||')
                )
              } else {
                keys.push(key)
              }
            }
            if (keys.length) {
              code += genKeyFilter(keys)
            }
            // Make sure modifiers like prevent and stop get executed after key filtering
            if (genModifierCode) {
              code += genModifierCode
            }
            var handlerCode = isMethodPath
              ? 'return ' + handler.value + '.apply(null, arguments)'
              : isFunctionExpression
              ? 'return (' + handler.value + ').apply(null, arguments)'
              : isFunctionInvocation
              ? 'return ' + handler.value
              : handler.value
            return 'function($event){' + code + handlerCode + '}'
          }
        }

        function genKeyFilter(keys) {
          return (
            // make sure the key filters only apply to KeyboardEvents
            // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
            // key events that do not have keyCode property...
            "if(!$event.type.indexOf('key')&&" +
            keys.map(genFilterCode).join('&&') +
            ')return null;'
          )
        }

        function genFilterCode(key) {
          var keyVal = parseInt(key, 10)
          if (keyVal) {
            return '$event.keyCode!==' + keyVal
          }
          var keyCode = keyCodes[key]
          var keyName = keyNames[key]
          return (
            '_k($event.keyCode,' +
            JSON.stringify(key) +
            ',' +
            JSON.stringify(keyCode) +
            ',' +
            '$event.key,' +
            '' +
            JSON.stringify(keyName) +
            ')'
          )
        }

        /*  */

        function on(el, dir) {
          if (true && dir.modifiers) {
            warn('v-on without argument does not support modifiers.')
          }
          el.wrapListeners = function (code) {
            return '_g(' + code + ',' + dir.value + ')'
          }
        }

        /*  */

        function bind$1(el, dir) {
          el.wrapData = function (code) {
            return (
              '_b(' +
              code +
              ",'" +
              el.tag +
              "'," +
              dir.value +
              ',' +
              (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') +
              (dir.modifiers && dir.modifiers.sync ? ',true' : '') +
              ')'
            )
          }
        }

        /*  */

        var baseDirectives = {
          on: on,
          bind: bind$1,
          cloak: noop,
        }

        /*  */

        var CodegenState = function CodegenState(options) {
          this.options = options
          this.warn = options.warn || baseWarn
          this.transforms = pluckModuleFunction(
            options.modules,
            'transformCode'
          )
          this.dataGenFns = pluckModuleFunction(options.modules, 'genData')
          this.directives = extend(
            extend({}, baseDirectives),
            options.directives
          )
          var isReservedTag = options.isReservedTag || no
          this.maybeComponent = function (el) {
            return !!el.component || !isReservedTag(el.tag)
          }
          this.onceId = 0
          this.staticRenderFns = []
          this.pre = false
        }

        function generate(ast, options) {
          var state = new CodegenState(options)
          // fix #11483, Root level <script> tags should not be rendered.
          var code = ast
            ? ast.tag === 'script'
              ? 'null'
              : genElement(ast, state)
            : '_c("div")'
          return {
            render: 'with(this){return ' + code + '}',
            staticRenderFns: state.staticRenderFns,
          }
        }

        function genElement(el, state) {
          if (el.parent) {
            el.pre = el.pre || el.parent.pre
          }

          if (el.staticRoot && !el.staticProcessed) {
            return genStatic(el, state)
          } else if (el.once && !el.onceProcessed) {
            return genOnce(el, state)
          } else if (el.for && !el.forProcessed) {
            return genFor(el, state)
          } else if (el.if && !el.ifProcessed) {
            return genIf(el, state)
          } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {
            return genChildren(el, state) || 'void 0'
          } else if (el.tag === 'slot') {
            return genSlot(el, state)
          } else {
            // component or element
            var code
            if (el.component) {
              code = genComponent(el.component, el, state)
            } else {
              var data
              if (!el.plain || (el.pre && state.maybeComponent(el))) {
                data = genData$2(el, state)
              }

              var children = el.inlineTemplate
                ? null
                : genChildren(el, state, true)
              code =
                "_c('" +
                el.tag +
                "'" +
                (data ? ',' + data : '') +
                (children ? ',' + children : '') +
                ')'
            }
            // module transforms
            for (var i = 0; i < state.transforms.length; i++) {
              code = state.transforms[i](el, code)
            }
            return code
          }
        }

        // hoist static sub-trees out
        function genStatic(el, state) {
          el.staticProcessed = true
          // Some elements (templates) need to behave differently inside of a v-pre
          // node.  All pre nodes are static roots, so we can use this as a location to
          // wrap a state change and reset it upon exiting the pre node.
          var originalPreState = state.pre
          if (el.pre) {
            state.pre = el.pre
          }
          state.staticRenderFns.push(
            'with(this){return ' + genElement(el, state) + '}'
          )
          state.pre = originalPreState
          return (
            '_m(' +
            (state.staticRenderFns.length - 1) +
            (el.staticInFor ? ',true' : '') +
            ')'
          )
        }

        // v-once
        function genOnce(el, state) {
          el.onceProcessed = true
          if (el.if && !el.ifProcessed) {
            return genIf(el, state)
          } else if (el.staticInFor) {
            var key = ''
            var parent = el.parent
            while (parent) {
              if (parent.for) {
                key = parent.key
                break
              }
              parent = parent.parent
            }
            if (!key) {
              true &&
                state.warn(
                  'v-once can only be used inside v-for that is keyed. ',
                  el.rawAttrsMap['v-once']
                )
              return genElement(el, state)
            }
            return (
              '_o(' +
              genElement(el, state) +
              ',' +
              state.onceId++ +
              ',' +
              key +
              ')'
            )
          } else {
            return genStatic(el, state)
          }
        }

        function genIf(el, state, altGen, altEmpty) {
          el.ifProcessed = true // avoid recursion
          return genIfConditions(
            el.ifConditions.slice(),
            state,
            altGen,
            altEmpty
          )
        }

        function genIfConditions(conditions, state, altGen, altEmpty) {
          if (!conditions.length) {
            return altEmpty || '_e()'
          }

          var condition = conditions.shift()
          if (condition.exp) {
            return (
              '(' +
              condition.exp +
              ')?' +
              genTernaryExp(condition.block) +
              ':' +
              genIfConditions(conditions, state, altGen, altEmpty)
            )
          } else {
            return '' + genTernaryExp(condition.block)
          }

          // v-if with v-once should generate code like (a)?_m(0):_m(1)
          function genTernaryExp(el) {
            return altGen
              ? altGen(el, state)
              : el.once
              ? genOnce(el, state)
              : genElement(el, state)
          }
        }

        function genFor(el, state, altGen, altHelper) {
          var exp = el.for
          var alias = el.alias
          var iterator1 = el.iterator1 ? ',' + el.iterator1 : ''
          var iterator2 = el.iterator2 ? ',' + el.iterator2 : ''

          if (
            true &&
            state.maybeComponent(el) &&
            el.tag !== 'slot' &&
            el.tag !== 'template' &&
            !el.key
          ) {
            state.warn(
              '<' +
                el.tag +
                ' v-for="' +
                alias +
                ' in ' +
                exp +
                '">: component lists rendered with ' +
                'v-for should have explicit keys. ' +
                'See https://vuejs.org/guide/list.html#key for more info.',
              el.rawAttrsMap['v-for'],
              true /* tip */
            )
          }

          el.forProcessed = true // avoid recursion
          return (
            (altHelper || '_l') +
            '((' +
            exp +
            '),' +
            'function(' +
            alias +
            iterator1 +
            iterator2 +
            '){' +
            'return ' +
            (altGen || genElement)(el, state) +
            '})'
          )
        }

        function genData$2(el, state) {
          var data = '{'

          // directives first.
          // directives may mutate the el's other properties before they are generated.
          var dirs = genDirectives(el, state)
          if (dirs) {
            data += dirs + ','
          }

          // key
          if (el.key) {
            data += 'key:' + el.key + ','
          }
          // ref
          if (el.ref) {
            data += 'ref:' + el.ref + ','
          }
          if (el.refInFor) {
            data += 'refInFor:true,'
          }
          // pre
          if (el.pre) {
            data += 'pre:true,'
          }
          // record original tag name for components using "is" attribute
          if (el.component) {
            data += 'tag:"' + el.tag + '",'
          }
          // module data generation functions
          for (var i = 0; i < state.dataGenFns.length; i++) {
            data += state.dataGenFns[i](el)
          }
          // attributes
          if (el.attrs) {
            data += 'attrs:' + genProps(el.attrs) + ','
          }
          // DOM props
          if (el.props) {
            data += 'domProps:' + genProps(el.props) + ','
          }
          // event handlers
          if (el.events) {
            data += genHandlers(el.events, false) + ','
          }
          if (el.nativeEvents) {
            data += genHandlers(el.nativeEvents, true) + ','
          }
          // slot target
          // only for non-scoped slots
          if (el.slotTarget && !el.slotScope) {
            data += 'slot:' + el.slotTarget + ','
          }
          // scoped slots
          if (el.scopedSlots) {
            data += genScopedSlots(el, el.scopedSlots, state) + ','
          }
          // component v-model
          if (el.model) {
            data +=
              'model:{value:' +
              el.model.value +
              ',callback:' +
              el.model.callback +
              ',expression:' +
              el.model.expression +
              '},'
          }
          // inline-template
          if (el.inlineTemplate) {
            var inlineTemplate = genInlineTemplate(el, state)
            if (inlineTemplate) {
              data += inlineTemplate + ','
            }
          }
          data = data.replace(/,$/, '') + '}'
          // v-bind dynamic argument wrap
          // v-bind with dynamic arguments must be applied using the same v-bind object
          // merge helper so that class/style/mustUseProp attrs are handled correctly.
          if (el.dynamicAttrs) {
            data =
              '_b(' +
              data +
              ',"' +
              el.tag +
              '",' +
              genProps(el.dynamicAttrs) +
              ')'
          }
          // v-bind data wrap
          if (el.wrapData) {
            data = el.wrapData(data)
          }
          // v-on data wrap
          if (el.wrapListeners) {
            data = el.wrapListeners(data)
          }
          return data
        }

        function genDirectives(el, state) {
          var dirs = el.directives
          if (!dirs) {
            return
          }
          var res = 'directives:['
          var hasRuntime = false
          var i, l, dir, needRuntime
          for (i = 0, l = dirs.length; i < l; i++) {
            dir = dirs[i]
            needRuntime = true
            var gen = state.directives[dir.name]
            if (gen) {
              // compile-time directive that manipulates AST.
              // returns true if it also needs a runtime counterpart.
              needRuntime = !!gen(el, dir, state.warn)
            }
            if (needRuntime) {
              hasRuntime = true
              res +=
                '{name:"' +
                dir.name +
                '",rawName:"' +
                dir.rawName +
                '"' +
                (dir.value
                  ? ',value:(' +
                    dir.value +
                    '),expression:' +
                    JSON.stringify(dir.value)
                  : '') +
                (dir.arg
                  ? ',arg:' + (dir.isDynamicArg ? dir.arg : '"' + dir.arg + '"')
                  : '') +
                (dir.modifiers
                  ? ',modifiers:' + JSON.stringify(dir.modifiers)
                  : '') +
                '},'
            }
          }
          if (hasRuntime) {
            return res.slice(0, -1) + ']'
          }
        }

        function genInlineTemplate(el, state) {
          var ast = el.children[0]
          if (true && (el.children.length !== 1 || ast.type !== 1)) {
            state.warn(
              'Inline-template components must have exactly one child element.',
              { start: el.start }
            )
          }
          if (ast && ast.type === 1) {
            var inlineRenderFns = generate(ast, state.options)
            return (
              'inlineTemplate:{render:function(){' +
              inlineRenderFns.render +
              '},staticRenderFns:[' +
              inlineRenderFns.staticRenderFns
                .map(function (code) {
                  return 'function(){' + code + '}'
                })
                .join(',') +
              ']}'
            )
          }
        }

        function genScopedSlots(el, slots, state) {
          // by default scoped slots are considered "stable", this allows child
          // components with only scoped slots to skip forced updates from parent.
          // but in some cases we have to bail-out of this optimization
          // for example if the slot contains dynamic names, has v-if or v-for on them...
          var needsForceUpdate =
            el.for ||
            Object.keys(slots).some(function (key) {
              var slot = slots[key]
              return (
                slot.slotTargetDynamic ||
                slot.if ||
                slot.for ||
                containsSlotChild(slot) // is passing down slot from parent which may be dynamic
              )
            })

          // #9534: if a component with scoped slots is inside a conditional branch,
          // it's possible for the same component to be reused but with different
          // compiled slot content. To avoid that, we generate a unique key based on
          // the generated code of all the slot contents.
          var needsKey = !!el.if

          // OR when it is inside another scoped slot or v-for (the reactivity may be
          // disconnected due to the intermediate scope variable)
          // #9438, #9506
          // TODO: this can be further optimized by properly analyzing in-scope bindings
          // and skip force updating ones that do not actually use scope variables.
          if (!needsForceUpdate) {
            var parent = el.parent
            while (parent) {
              if (
                (parent.slotScope &&
                  parent.slotScope !== emptySlotScopeToken) ||
                parent.for
              ) {
                needsForceUpdate = true
                break
              }
              if (parent.if) {
                needsKey = true
              }
              parent = parent.parent
            }
          }

          var generatedSlots = Object.keys(slots)
            .map(function (key) {
              return genScopedSlot(slots[key], state)
            })
            .join(',')

          return (
            'scopedSlots:_u([' +
            generatedSlots +
            ']' +
            (needsForceUpdate ? ',null,true' : '') +
            (!needsForceUpdate && needsKey
              ? ',null,false,' + hash(generatedSlots)
              : '') +
            ')'
          )
        }

        function hash(str) {
          var hash = 5381
          var i = str.length
          while (i) {
            hash = (hash * 33) ^ str.charCodeAt(--i)
          }
          return hash >>> 0
        }

        function containsSlotChild(el) {
          if (el.type === 1) {
            if (el.tag === 'slot') {
              return true
            }
            return el.children.some(containsSlotChild)
          }
          return false
        }

        function genScopedSlot(el, state) {
          var isLegacySyntax = el.attrsMap['slot-scope']
          if (el.if && !el.ifProcessed && !isLegacySyntax) {
            return genIf(el, state, genScopedSlot, 'null')
          }
          if (el.for && !el.forProcessed) {
            return genFor(el, state, genScopedSlot)
          }
          var slotScope =
            el.slotScope === emptySlotScopeToken ? '' : String(el.slotScope)
          var fn =
            'function(' +
            slotScope +
            '){' +
            'return ' +
            (el.tag === 'template'
              ? el.if && isLegacySyntax
                ? '(' +
                  el.if +
                  ')?' +
                  (genChildren(el, state) || 'undefined') +
                  ':undefined'
                : genChildren(el, state) || 'undefined'
              : genElement(el, state)) +
            '}'
          // reverse proxy v-slot without scope on this.$slots
          var reverseProxy = slotScope ? '' : ',proxy:true'
          return (
            '{key:' +
            (el.slotTarget || '"default"') +
            ',fn:' +
            fn +
            reverseProxy +
            '}'
          )
        }

        function genChildren(el, state, checkSkip, altGenElement, altGenNode) {
          var children = el.children
          if (children.length) {
            var el$1 = children[0]
            // optimize single v-for
            if (
              children.length === 1 &&
              el$1.for &&
              el$1.tag !== 'template' &&
              el$1.tag !== 'slot'
            ) {
              var normalizationType = checkSkip
                ? state.maybeComponent(el$1)
                  ? ',1'
                  : ',0'
                : ''
              return (
                '' +
                (altGenElement || genElement)(el$1, state) +
                normalizationType
              )
            }
            var normalizationType$1 = checkSkip
              ? getNormalizationType(children, state.maybeComponent)
              : 0
            var gen = altGenNode || genNode
            return (
              '[' +
              children
                .map(function (c) {
                  return gen(c, state)
                })
                .join(',') +
              ']' +
              (normalizationType$1 ? ',' + normalizationType$1 : '')
            )
          }
        }

        // determine the normalization needed for the children array.
        // 0: no normalization needed
        // 1: simple normalization needed (possible 1-level deep nested array)
        // 2: full normalization needed
        function getNormalizationType(children, maybeComponent) {
          var res = 0
          for (var i = 0; i < children.length; i++) {
            var el = children[i]
            if (el.type !== 1) {
              continue
            }
            if (
              needsNormalization(el) ||
              (el.ifConditions &&
                el.ifConditions.some(function (c) {
                  return needsNormalization(c.block)
                }))
            ) {
              res = 2
              break
            }
            if (
              maybeComponent(el) ||
              (el.ifConditions &&
                el.ifConditions.some(function (c) {
                  return maybeComponent(c.block)
                }))
            ) {
              res = 1
            }
          }
          return res
        }

        function needsNormalization(el) {
          return (
            el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
          )
        }

        function genNode(node, state) {
          if (node.type === 1) {
            return genElement(node, state)
          } else if (node.type === 3 && node.isComment) {
            return genComment(node)
          } else {
            return genText(node)
          }
        }

        function genText(text) {
          return (
            '_v(' +
            (text.type === 2
              ? text.expression // no need for () because already wrapped in _s()
              : transformSpecialNewlines(JSON.stringify(text.text))) +
            ')'
          )
        }

        function genComment(comment) {
          return '_e(' + JSON.stringify(comment.text) + ')'
        }

        function genSlot(el, state) {
          var slotName = el.slotName || '"default"'
          var children = genChildren(el, state)
          var res =
            '_t(' +
            slotName +
            (children ? ',function(){return ' + children + '}' : '')
          var attrs =
            el.attrs || el.dynamicAttrs
              ? genProps(
                  (el.attrs || [])
                    .concat(el.dynamicAttrs || [])
                    .map(function (attr) {
                      return {
                        // slot props are camelized
                        name: camelize(attr.name),
                        value: attr.value,
                        dynamic: attr.dynamic,
                      }
                    })
                )
              : null
          var bind$$1 = el.attrsMap['v-bind']
          if ((attrs || bind$$1) && !children) {
            res += ',null'
          }
          if (attrs) {
            res += ',' + attrs
          }
          if (bind$$1) {
            res += (attrs ? '' : ',null') + ',' + bind$$1
          }
          return res + ')'
        }

        // componentName is el.component, take it as argument to shun flow's pessimistic refinement
        function genComponent(componentName, el, state) {
          var children = el.inlineTemplate ? null : genChildren(el, state, true)
          return (
            '_c(' +
            componentName +
            ',' +
            genData$2(el, state) +
            (children ? ',' + children : '') +
            ')'
          )
        }

        function genProps(props) {
          var staticProps = ''
          var dynamicProps = ''
          for (var i = 0; i < props.length; i++) {
            var prop = props[i]
            var value = transformSpecialNewlines(prop.value)
            if (prop.dynamic) {
              dynamicProps += prop.name + ',' + value + ','
            } else {
              staticProps += '"' + prop.name + '":' + value + ','
            }
          }
          staticProps = '{' + staticProps.slice(0, -1) + '}'
          if (dynamicProps) {
            return '_d(' + staticProps + ',[' + dynamicProps.slice(0, -1) + '])'
          } else {
            return staticProps
          }
        }

        // #3895, #4268
        function transformSpecialNewlines(text) {
          return text
            .replace(/\u2028/g, '\\u2028')
            .replace(/\u2029/g, '\\u2029')
        }

        /*  */

        // these keywords should not appear inside expressions, but operators like
        // typeof, instanceof and in are allowed
        var prohibitedKeywordRE = new RegExp(
          '\\b' +
            (
              'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
              'super,throw,while,yield,delete,export,import,return,switch,default,' +
              'extends,finally,continue,debugger,function,arguments'
            )
              .split(',')
              .join('\\b|\\b') +
            '\\b'
        )

        // these unary operators should not be used as property/method names
        var unaryOperatorsRE = new RegExp(
          '\\b' +
            'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') +
            '\\s*\\([^\\)]*\\)'
        )

        // strip strings in expressions
        var stripStringRE =
          /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g

        // detect problematic expressions in a template
        function detectErrors(ast, warn) {
          if (ast) {
            checkNode(ast, warn)
          }
        }

        function checkNode(node, warn) {
          if (node.type === 1) {
            for (var name in node.attrsMap) {
              if (dirRE.test(name)) {
                var value = node.attrsMap[name]
                if (value) {
                  var range = node.rawAttrsMap[name]
                  if (name === 'v-for') {
                    checkFor(node, 'v-for="' + value + '"', warn, range)
                  } else if (name === 'v-slot' || name[0] === '#') {
                    checkFunctionParameterExpression(
                      value,
                      name + '="' + value + '"',
                      warn,
                      range
                    )
                  } else if (onRE.test(name)) {
                    checkEvent(value, name + '="' + value + '"', warn, range)
                  } else {
                    checkExpression(
                      value,
                      name + '="' + value + '"',
                      warn,
                      range
                    )
                  }
                }
              }
            }
            if (node.children) {
              for (var i = 0; i < node.children.length; i++) {
                checkNode(node.children[i], warn)
              }
            }
          } else if (node.type === 2) {
            checkExpression(node.expression, node.text, warn, node)
          }
        }

        function checkEvent(exp, text, warn, range) {
          var stripped = exp.replace(stripStringRE, '')
          var keywordMatch = stripped.match(unaryOperatorsRE)
          if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {
            warn(
              'avoid using JavaScript unary operator as property name: ' +
                '"' +
                keywordMatch[0] +
                '" in expression ' +
                text.trim(),
              range
            )
          }
          checkExpression(exp, text, warn, range)
        }

        function checkFor(node, text, warn, range) {
          checkExpression(node.for || '', text, warn, range)
          checkIdentifier(node.alias, 'v-for alias', text, warn, range)
          checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range)
          checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range)
        }

        function checkIdentifier(ident, type, text, warn, range) {
          if (typeof ident === 'string') {
            try {
              new Function('var ' + ident + '=_')
            } catch (e) {
              warn(
                'invalid ' +
                  type +
                  ' "' +
                  ident +
                  '" in expression: ' +
                  text.trim(),
                range
              )
            }
          }
        }

        function checkExpression(exp, text, warn, range) {
          try {
            new Function('return ' + exp)
          } catch (e) {
            var keywordMatch = exp
              .replace(stripStringRE, '')
              .match(prohibitedKeywordRE)
            if (keywordMatch) {
              warn(
                'avoid using JavaScript keyword as property name: ' +
                  '"' +
                  keywordMatch[0] +
                  '"\n  Raw expression: ' +
                  text.trim(),
                range
              )
            } else {
              warn(
                'invalid expression: ' +
                  e.message +
                  ' in\n\n' +
                  '    ' +
                  exp +
                  '\n\n' +
                  '  Raw expression: ' +
                  text.trim() +
                  '\n',
                range
              )
            }
          }
        }

        function checkFunctionParameterExpression(exp, text, warn, range) {
          try {
            new Function(exp, '')
          } catch (e) {
            warn(
              'invalid function parameter expression: ' +
                e.message +
                ' in\n\n' +
                '    ' +
                exp +
                '\n\n' +
                '  Raw expression: ' +
                text.trim() +
                '\n',
              range
            )
          }
        }

        /*  */

        var range = 2

        function generateCodeFrame(source, start, end) {
          if (start === void 0) start = 0
          if (end === void 0) end = source.length

          var lines = source.split(/\r?\n/)
          var count = 0
          var res = []
          for (var i = 0; i < lines.length; i++) {
            count += lines[i].length + 1
            if (count >= start) {
              for (var j = i - range; j <= i + range || end > count; j++) {
                if (j < 0 || j >= lines.length) {
                  continue
                }
                res.push(
                  '' +
                    (j + 1) +
                    repeat$1(' ', 3 - String(j + 1).length) +
                    '|  ' +
                    lines[j]
                )
                var lineLength = lines[j].length
                if (j === i) {
                  // push underline
                  var pad = start - (count - lineLength) + 1
                  var length = end > count ? lineLength - pad : end - start
                  res.push(
                    '   |  ' + repeat$1(' ', pad) + repeat$1('^', length)
                  )
                } else if (j > i) {
                  if (end > count) {
                    var length$1 = Math.min(end - count, lineLength)
                    res.push('   |  ' + repeat$1('^', length$1))
                  }
                  count += lineLength + 1
                }
              }
              break
            }
          }
          return res.join('\n')
        }

        function repeat$1(str, n) {
          var result = ''
          if (n > 0) {
            while (true) {
              // eslint-disable-line
              if (n & 1) {
                result += str
              }
              n >>>= 1
              if (n <= 0) {
                break
              }
              str += str
            }
          }
          return result
        }

        /*  */

        function createFunction(code, errors) {
          try {
            return new Function(code)
          } catch (err) {
            errors.push({ err: err, code: code })
            return noop
          }
        }

        function createCompileToFunctionFn(compile) {
          var cache = Object.create(null)

          return function compileToFunctions(template, options, vm) {
            options = extend({}, options)
            var warn$$1 = options.warn || warn
            delete options.warn

            /* istanbul ignore if */
            if (true) {
              // detect possible CSP restriction
              try {
                new Function('return 1')
              } catch (e) {
                if (e.toString().match(/unsafe-eval|CSP/)) {
                  warn$$1(
                    'It seems you are using the standalone build of Vue.js in an ' +
                      'environment with Content Security Policy that prohibits unsafe-eval. ' +
                      'The template compiler cannot work in this environment. Consider ' +
                      'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
                      'templates into render functions.'
                  )
                }
              }
            }

            // check cache
            var key = options.delimiters
              ? String(options.delimiters) + template
              : template
            if (cache[key]) {
              return cache[key]
            }

            // compile
            var compiled = compile(template, options)

            // check compilation errors/tips
            if (true) {
              if (compiled.errors && compiled.errors.length) {
                if (options.outputSourceRange) {
                  compiled.errors.forEach(function (e) {
                    warn$$1(
                      'Error compiling template:\n\n' +
                        e.msg +
                        '\n\n' +
                        generateCodeFrame(template, e.start, e.end),
                      vm
                    )
                  })
                } else {
                  warn$$1(
                    'Error compiling template:\n\n' +
                      template +
                      '\n\n' +
                      compiled.errors
                        .map(function (e) {
                          return '- ' + e
                        })
                        .join('\n') +
                      '\n',
                    vm
                  )
                }
              }
              if (compiled.tips && compiled.tips.length) {
                if (options.outputSourceRange) {
                  compiled.tips.forEach(function (e) {
                    return tip(e.msg, vm)
                  })
                } else {
                  compiled.tips.forEach(function (msg) {
                    return tip(msg, vm)
                  })
                }
              }
            }

            // turn code into functions
            var res = {}
            var fnGenErrors = []
            res.render = createFunction(compiled.render, fnGenErrors)
            res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
              return createFunction(code, fnGenErrors)
            })

            // check function generation errors.
            // this should only happen if there is a bug in the compiler itself.
            // mostly for codegen development use
            /* istanbul ignore if */
            if (true) {
              if (
                (!compiled.errors || !compiled.errors.length) &&
                fnGenErrors.length
              ) {
                warn$$1(
                  'Failed to generate render function:\n\n' +
                    fnGenErrors
                      .map(function (ref) {
                        var err = ref.err
                        var code = ref.code

                        return err.toString() + ' in\n\n' + code + '\n'
                      })
                      .join('\n'),
                  vm
                )
              }
            }

            return (cache[key] = res)
          }
        }

        /*  */

        function createCompilerCreator(baseCompile) {
          return function createCompiler(baseOptions) {
            function compile(template, options) {
              var finalOptions = Object.create(baseOptions)
              var errors = []
              var tips = []

              var warn = function (msg, range, tip) {
                ;(tip ? tips : errors).push(msg)
              }

              if (options) {
                if (true && options.outputSourceRange) {
                  // $flow-disable-line
                  var leadingSpaceLength = template.match(/^\s*/)[0].length

                  warn = function (msg, range, tip) {
                    var data = { msg: msg }
                    if (range) {
                      if (range.start != null) {
                        data.start = range.start + leadingSpaceLength
                      }
                      if (range.end != null) {
                        data.end = range.end + leadingSpaceLength
                      }
                    }
                    ;(tip ? tips : errors).push(data)
                  }
                }
                // merge custom modules
                if (options.modules) {
                  finalOptions.modules = (baseOptions.modules || []).concat(
                    options.modules
                  )
                }
                // merge custom directives
                if (options.directives) {
                  finalOptions.directives = extend(
                    Object.create(baseOptions.directives || null),
                    options.directives
                  )
                }
                // copy other options
                for (var key in options) {
                  if (key !== 'modules' && key !== 'directives') {
                    finalOptions[key] = options[key]
                  }
                }
              }

              finalOptions.warn = warn

              var compiled = baseCompile(template.trim(), finalOptions)
              if (true) {
                detectErrors(compiled.ast, warn)
              }
              compiled.errors = errors
              compiled.tips = tips
              return compiled
            }

            return {
              compile: compile,
              compileToFunctions: createCompileToFunctionFn(compile),
            }
          }
        }

        /*  */

        // `createCompilerCreator` allows creating compilers that use alternative
        // parser/optimizer/codegen, e.g the SSR optimizing compiler.
        // Here we just export a default compiler using the default parts.
        var createCompiler = createCompilerCreator(function baseCompile(
          template,
          options
        ) {
          var ast = parse(template.trim(), options)
          if (options.optimize !== false) {
            optimize(ast, options)
          }
          var code = generate(ast, options)
          return {
            ast: ast,
            render: code.render,
            staticRenderFns: code.staticRenderFns,
          }
        })

        /*  */

        var ref$1 = createCompiler(baseOptions)
        var compile = ref$1.compile
        var compileToFunctions = ref$1.compileToFunctions

        /*  */

        // check whether current browser encodes a char inside attribute values
        var div
        function getShouldDecode(href) {
          div = div || document.createElement('div')
          div.innerHTML = href ? '<a href="\n"/>' : '<div a="\n"/>'
          return div.innerHTML.indexOf('&#10;') > 0
        }

        // #3663: IE encodes newlines inside attribute values while other browsers don't
        var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false
        // #6828: chrome encodes content in a[href]
        var shouldDecodeNewlinesForHref = inBrowser
          ? getShouldDecode(true)
          : false

        /*  */

        var idToTemplate = cached(function (id) {
          var el = query(id)
          return el && el.innerHTML
        })

        var mount = Vue.prototype.$mount
        Vue.prototype.$mount = function (el, hydrating) {
          el = el && query(el)

          /* istanbul ignore if */
          if (el === document.body || el === document.documentElement) {
            true &&
              warn(
                'Do not mount Vue to <html> or <body> - mount to normal elements instead.'
              )
            return this
          }

          var options = this.$options
          // resolve template/el and convert to render function
          if (!options.render) {
            var template = options.template
            if (template) {
              if (typeof template === 'string') {
                if (template.charAt(0) === '#') {
                  template = idToTemplate(template)
                  /* istanbul ignore if */
                  if (true && !template) {
                    warn(
                      'Template element not found or is empty: ' +
                        options.template,
                      this
                    )
                  }
                }
              } else if (template.nodeType) {
                template = template.innerHTML
              } else {
                if (true) {
                  warn('invalid template option:' + template, this)
                }
                return this
              }
            } else if (el) {
              template = getOuterHTML(el)
            }
            if (template) {
              /* istanbul ignore if */
              if (true && config.performance && mark) {
                mark('compile')
              }

              var ref = compileToFunctions(
                template,
                {
                  outputSourceRange: 'development' !== 'production',
                  shouldDecodeNewlines: shouldDecodeNewlines,
                  shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
                  delimiters: options.delimiters,
                  comments: options.comments,
                },
                this
              )
              var render = ref.render
              var staticRenderFns = ref.staticRenderFns
              options.render = render
              options.staticRenderFns = staticRenderFns

              /* istanbul ignore if */
              if (true && config.performance && mark) {
                mark('compile end')
                measure(
                  'vue ' + this._name + ' compile',
                  'compile',
                  'compile end'
                )
              }
            }
          }
          return mount.call(this, el, hydrating)
        }

        /**
         * Get outerHTML of elements, taking care
         * of SVG elements in IE as well.
         */
        function getOuterHTML(el) {
          if (el.outerHTML) {
            return el.outerHTML
          } else {
            var container = document.createElement('div')
            container.appendChild(el.cloneNode(true))
            return container.innerHTML
          }
        }

        Vue.compile = compileToFunctions

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = Vue

        /***/
      },

    /***/ './node_modules/vue2-datepicker/index.esm.js':
      /*!***************************************************!*\
  !*** ./node_modules/vue2-datepicker/index.esm.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack_module,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var date_format_parse__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! date-format-parse */ './node_modules/date-format-parse/es/index.js'
          )

        function _typeof(obj) {
          '@babel/helpers - typeof'

          if (
            typeof Symbol === 'function' &&
            typeof Symbol.iterator === 'symbol'
          ) {
            _typeof = function (obj) {
              return typeof obj
            }
          } else {
            _typeof = function (obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj
            }
          }

          return _typeof(obj)
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            })
          } else {
            obj[key] = value
          }

          return obj
        }

        function _extends() {
          _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i]

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                  }
                }
              }

              return target
            }

          return _extends.apply(this, arguments)
        }

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object)

          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object)
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable
              })
            keys.push.apply(keys, symbols)
          }

          return keys
        }

        function _objectSpread2(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {}

            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key])
              })
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              )
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                )
              })
            }
          }

          return target
        }

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {}
          var target = {}
          var sourceKeys = Object.keys(source)
          var key, i

          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i]
            if (excluded.indexOf(key) >= 0) continue
            target[key] = source[key]
          }

          return target
        }

        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {}

          var target = _objectWithoutPropertiesLoose(source, excluded)

          var key, i

          if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source)

            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i]
              if (excluded.indexOf(key) >= 0) continue
              if (!Object.prototype.propertyIsEnumerable.call(source, key))
                continue
              target[key] = source[key]
            }
          }

          return target
        }

        function _slicedToArray(arr, i) {
          return (
            _arrayWithHoles(arr) ||
            _iterableToArrayLimit(arr, i) ||
            _unsupportedIterableToArray(arr, i) ||
            _nonIterableRest()
          )
        }

        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr
        }

        function _iterableToArrayLimit(arr, i) {
          if (
            typeof Symbol === 'undefined' ||
            !(Symbol.iterator in Object(arr))
          )
            return
          var _arr = []
          var _n = true
          var _d = false
          var _e = undefined

          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value)

              if (i && _arr.length === i) break
            }
          } catch (err) {
            _d = true
            _e = err
          } finally {
            try {
              if (!_n && _i['return'] != null) _i['return']()
            } finally {
              if (_d) throw _e
            }
          }

          return _arr
        }

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return
          if (typeof o === 'string') return _arrayLikeToArray(o, minLen)
          var n = Object.prototype.toString.call(o).slice(8, -1)
          if (n === 'Object' && o.constructor) n = o.constructor.name
          if (n === 'Map' || n === 'Set') return Array.from(n)
          if (
            n === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return _arrayLikeToArray(o, minLen)
        }

        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length

          for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]

          return arr2
        }

        function _nonIterableRest() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          )
        }

        function _extends$1() {
          return (
            (_extends$1 =
              Object.assign ||
              function (a) {
                for (var b, c = 1; c < arguments.length; c++) {
                  for (var d in ((b = arguments[c]), b)) {
                    Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d])
                  }
                }

                return a
              }),
            _extends$1.apply(this, arguments)
          )
        }

        var normalMerge = ['attrs', 'props', 'domProps'],
          toArrayMerge = ['class', 'style', 'directives'],
          functionalMerge = ['on', 'nativeOn'],
          mergeJsxProps = function mergeJsxProps(a) {
            return a.reduce(function (c, a) {
              for (var b in a) {
                if (!c[b]) c[b] = a[b]
                else if (-1 !== normalMerge.indexOf(b))
                  c[b] = _extends$1({}, c[b], a[b])
                else if (-1 !== toArrayMerge.indexOf(b)) {
                  var d = c[b] instanceof Array ? c[b] : [c[b]],
                    e = a[b] instanceof Array ? a[b] : [a[b]]
                  c[b] = d.concat(e)
                } else if (-1 !== functionalMerge.indexOf(b)) {
                  for (var f in a[b]) {
                    if (c[b][f]) {
                      var g = c[b][f] instanceof Array ? c[b][f] : [c[b][f]],
                        h = a[b][f] instanceof Array ? a[b][f] : [a[b][f]]
                      c[b][f] = g.concat(h)
                    } else c[b][f] = a[b][f]
                  }
                } else if ('hook' == b)
                  for (var i in a[b]) {
                    c[b][i] = c[b][i] ? mergeFn(c[b][i], a[b][i]) : a[b][i]
                  }
                else c[b] = a[b]
              }

              return c
            }, {})
          },
          mergeFn = function mergeFn(a, b) {
            return function () {
              a && a.apply(this, arguments), b && b.apply(this, arguments)
            }
          }

        var helper = mergeJsxProps

        // new Date(10, 0, 1) The year from 0 to 99 will be incremented by 1900 automatically.
        function createDate(y) {
          var M =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 0
          var d =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : 1
          var h =
            arguments.length > 3 && arguments[3] !== undefined
              ? arguments[3]
              : 0
          var m =
            arguments.length > 4 && arguments[4] !== undefined
              ? arguments[4]
              : 0
          var s =
            arguments.length > 5 && arguments[5] !== undefined
              ? arguments[5]
              : 0
          var ms =
            arguments.length > 6 && arguments[6] !== undefined
              ? arguments[6]
              : 0
          var date = new Date(y, M, d, h, m, s, ms)

          if (y < 100 && y >= 0) {
            date.setFullYear(y)
          }

          return date
        }
        function isValidDate(date) {
          return date instanceof Date && !isNaN(date)
        }
        function isValidRangeDate(date) {
          return (
            Array.isArray(date) &&
            date.length === 2 &&
            date.every(isValidDate) &&
            date[0] <= date[1]
          )
        }
        function isValidDates(dates) {
          return Array.isArray(dates) && dates.every(isValidDate)
        }
        function getValidDate(value) {
          var date = new Date(value)

          if (isValidDate(date)) {
            return date
          }

          for (
            var _len = arguments.length,
              backup = new Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            backup[_key - 1] = arguments[_key]
          }

          if (backup.length) {
            return getValidDate.apply(void 0, backup)
          }

          return new Date()
        }
        function startOfYear(value) {
          var date = new Date(value)
          date.setMonth(0, 1)
          date.setHours(0, 0, 0, 0)
          return date
        }
        function startOfMonth(value) {
          var date = new Date(value)
          date.setDate(1)
          date.setHours(0, 0, 0, 0)
          return date
        }
        function startOfDay(value) {
          var date = new Date(value)
          date.setHours(0, 0, 0, 0)
          return date
        }
        function getCalendar(_ref) {
          var firstDayOfWeek = _ref.firstDayOfWeek,
            year = _ref.year,
            month = _ref.month
          var arr = [] // change to the last day of the last month

          var calendar = createDate(year, month, 0)
          var lastDayInLastMonth = calendar.getDate() // getDay() 0 is Sunday, 1 is Monday

          var firstDayInLastMonth =
            lastDayInLastMonth - ((calendar.getDay() + 7 - firstDayOfWeek) % 7)

          for (var i = firstDayInLastMonth; i <= lastDayInLastMonth; i++) {
            arr.push(createDate(year, month, i - lastDayInLastMonth))
          } // change to the last day of the current month

          calendar.setMonth(month + 1, 0)
          var lastDayInCurrentMonth = calendar.getDate()

          for (var _i = 1; _i <= lastDayInCurrentMonth; _i++) {
            arr.push(createDate(year, month, _i))
          }

          var lastMonthLength = lastDayInLastMonth - firstDayInLastMonth + 1
          var nextMonthLength = 6 * 7 - lastMonthLength - lastDayInCurrentMonth

          for (var _i2 = 1; _i2 <= nextMonthLength; _i2++) {
            arr.push(createDate(year, month, lastDayInCurrentMonth + _i2))
          }

          return arr
        }
        function setMonth(dirtyDate, dirtyMonth) {
          var date = new Date(dirtyDate)
          var month = Number(dirtyMonth)
          var year = date.getFullYear()
          var daysInMonth = createDate(year, month + 1, 0).getDate()
          var day = date.getDate()
          date.setMonth(month, Math.min(day, daysInMonth))
          return date
        }
        function assignTime(target, source) {
          var date = new Date(target)
          var time = new Date(source)
          date.setHours(time.getHours(), time.getMinutes(), time.getSeconds())
          return date
        }

        /**
         * chunk the array
         * @param {Array} arr
         * @param {Number} size
         */
        function chunk(arr, size) {
          if (!Array.isArray(arr)) {
            return []
          }

          var result = []
          var len = arr.length
          var i = 0
          size = size || len

          while (i < len) {
            result.push(arr.slice(i, (i += size)))
          }

          return result
        }
        /**
         * isObject
         * @param {*} obj
         * @returns {Boolean}
         */

        function isObject(obj) {
          return Object.prototype.toString.call(obj) === '[object Object]'
        }
        /**
         * pick object
         * @param {Object} obj
         * @param {Array|String} props
         */

        function pick(obj, props) {
          if (!isObject(obj)) return {}

          if (!Array.isArray(props)) {
            props = [props]
          }

          var res = {}
          props.forEach(function (prop) {
            if (prop in obj) {
              res[prop] = obj[prop]
            }
          })
          return res
        }
        /**
         * deep merge two object without merging array
         * @param {object} target
         * @param {object} source
         */

        function mergeDeep(target, source) {
          if (!isObject(target)) {
            return {}
          }

          var result = target

          if (isObject(source)) {
            Object.keys(source).forEach(function (key) {
              var value = source[key]

              if (isObject(value) && isObject(target[key])) {
                value = mergeDeep(target[key], value)
              }

              result = _objectSpread2(
                {},
                result,
                _defineProperty({}, key, value)
              )
            })
          }

          return result
        }

        function unwrapExports(x) {
          return x &&
            x.__esModule &&
            Object.prototype.hasOwnProperty.call(x, 'default')
            ? x['default']
            : x
        }

        function createCommonjsModule(fn, module) {
          return (
            (module = { exports: {} }),
            fn(module, module.exports),
            module.exports
          )
        }

        var en = createCommonjsModule(function (module, exports) {
          Object.defineProperty(exports, '__esModule', {
            value: true,
          })
          exports['default'] = void 0
          var locale = {
            months: [
              'January',
              'February',
              'March',
              'April',
              'May',
              'June',
              'July',
              'August',
              'September',
              'October',
              'November',
              'December',
            ],
            monthsShort: [
              'Jan',
              'Feb',
              'Mar',
              'Apr',
              'May',
              'Jun',
              'Jul',
              'Aug',
              'Sep',
              'Oct',
              'Nov',
              'Dec',
            ],
            weekdays: [
              'Sunday',
              'Monday',
              'Tuesday',
              'Wednesday',
              'Thursday',
              'Friday',
              'Saturday',
            ],
            weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            weekdaysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
            firstDayOfWeek: 0,
            firstWeekContainsDate: 1,
          }
          var _default = locale
          exports['default'] = _default
          module.exports = exports.default
        })

        var en$1 = unwrapExports(en)

        var lang = {
          formatLocale: en$1,
          yearFormat: 'YYYY',
          monthFormat: 'MMM',
          monthBeforeYear: true,
        }

        var defaultLocale = 'en'
        var locales = {}
        locales[defaultLocale] = lang
        function locale(name, object, isLocal) {
          if (typeof name !== 'string') return locales[defaultLocale]
          var l = defaultLocale

          if (locales[name]) {
            l = name
          }

          if (object) {
            locales[name] = object
            l = name
          }

          if (!isLocal) {
            defaultLocale = l
          }

          return locales[name] || locales[defaultLocale]
        }
        /**
         * get locale object
         * @param {string} name lang
         */

        function getLocale(name) {
          return locale(name, null, true)
        }

        /* istanbul ignore file */
        function rafThrottle(fn) {
          var isRunning = false
          return function fnBinfRaf() {
            var _this = this

            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key]
            }

            if (isRunning) return
            isRunning = true
            requestAnimationFrame(function () {
              isRunning = false
              fn.apply(_this, args)
            })
          }
        }

        /**
         * get the hidden element width, height
         * @param {HTMLElement} element dom
         */
        function getPopupElementSize(element) {
          var originalDisplay = element.style.display
          var originalVisibility = element.style.visibility
          element.style.display = 'block'
          element.style.visibility = 'hidden'
          var styles = window.getComputedStyle(element)
          var width =
            element.offsetWidth +
            parseInt(styles.marginLeft, 10) +
            parseInt(styles.marginRight, 10)
          var height =
            element.offsetHeight +
            parseInt(styles.marginTop, 10) +
            parseInt(styles.marginBottom, 10)
          element.style.display = originalDisplay
          element.style.visibility = originalVisibility
          return {
            width: width,
            height: height,
          }
        }
        /**
         * get the popup position
         * @param {HTMLElement} el relative element
         * @param {Number} targetWidth target element's width
         * @param {Number} targetHeight target element's height
         * @param {Boolean} fixed
         */

        function getRelativePosition(el, targetWidth, targetHeight, fixed) {
          var left = 0
          var top = 0
          var offsetX = 0
          var offsetY = 0
          var relativeRect = el.getBoundingClientRect()
          var dw = document.documentElement.clientWidth
          var dh = document.documentElement.clientHeight

          if (fixed) {
            offsetX = window.pageXOffset + relativeRect.left
            offsetY = window.pageYOffset + relativeRect.top
          }

          if (
            dw - relativeRect.left < targetWidth &&
            relativeRect.right < targetWidth
          ) {
            left = offsetX - relativeRect.left + 1
          } else if (relativeRect.left + relativeRect.width / 2 <= dw / 2) {
            left = offsetX
          } else {
            left = offsetX + relativeRect.width - targetWidth
          }

          if (
            relativeRect.top <= targetHeight &&
            dh - relativeRect.bottom <= targetHeight
          ) {
            top = offsetY + dh - relativeRect.top - targetHeight
          } else if (relativeRect.top + relativeRect.height / 2 <= dh / 2) {
            top = offsetY + relativeRect.height
          } else {
            top = offsetY - targetHeight
          }

          return {
            left: ''.concat(left, 'px'),
            top: ''.concat(top, 'px'),
          }
        }
        function getScrollParent(node) {
          var until =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : document.body

          if (!node || node === until) {
            return null
          }

          var style = function style(value, prop) {
            return getComputedStyle(value, null).getPropertyValue(prop)
          }

          var regex = /(auto|scroll)/
          var scroll = regex.test(
            style(node, 'overflow') +
              style(node, 'overflow-y') +
              style(node, 'overflow-x')
          )
          return scroll ? node : getScrollParent(node.parentNode, until)
        }

        //
        var script = {
          name: 'Popup',
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            visible: {
              type: Boolean,
              default: false,
            },
            appendToBody: {
              type: Boolean,
              default: true,
            },
          },
          data: function data() {
            return {
              top: '',
              left: '',
            }
          },
          watch: {
            visible: {
              immediate: true,
              handler: function handler(val) {
                var _this = this

                this.$nextTick(function () {
                  if (val) {
                    _this.displayPopup()
                  }
                })
              },
            },
          },
          mounted: function mounted() {
            var _this2 = this

            if (this.appendToBody) {
              document.body.appendChild(this.$el)
            }

            this._clickoutEvent =
              'ontouchend' in document ? 'touchstart' : 'mousedown'
            document.addEventListener(
              this._clickoutEvent,
              this.handleClickOutside
            ) // change the popup position when resize or scroll

            var relativeElement = this.$parent.$el
            this._displayPopup = rafThrottle(function () {
              return _this2.displayPopup()
            })
            this._scrollParent = getScrollParent(relativeElement) || window

            this._scrollParent.addEventListener('scroll', this._displayPopup)

            window.addEventListener('resize', this._displayPopup)
          },
          beforeDestroy: function beforeDestroy() {
            if (this.appendToBody && this.$el.parentNode) {
              this.$el.parentNode.removeChild(this.$el)
            }

            document.removeEventListener(
              this._clickoutEvent,
              this.handleClickOutside
            )

            this._scrollParent.removeEventListener('scroll', this._displayPopup)

            window.removeEventListener('resize', this._displayPopup)
          },
          methods: {
            handleClickOutside: function handleClickOutside(evt) {
              if (!this.visible) return
              var target = evt.target
              var el = this.$el

              if (el && !el.contains(target)) {
                this.$emit('clickoutside', evt)
              }
            },
            displayPopup: function displayPopup() {
              if (!this.visible) return
              var popup = this.$el
              var relativeElement = this.$parent.$el
              var appendToBody = this.appendToBody

              if (!this._popupRect) {
                this._popupRect = getPopupElementSize(popup)
              }

              var _this$_popupRect = this._popupRect,
                width = _this$_popupRect.width,
                height = _this$_popupRect.height

              var _getRelativePosition = getRelativePosition(
                  relativeElement,
                  width,
                  height,
                  appendToBody
                ),
                left = _getRelativePosition.left,
                top = _getRelativePosition.top

              this.left = left
              this.top = top
            },
          },
        }

        function normalizeComponent(
          template,
          style,
          script,
          scopeId,
          isFunctionalTemplate,
          moduleIdentifier,
          /* server only */
          shadowMode,
          createInjector,
          createInjectorSSR,
          createInjectorShadow
        ) {
          if (typeof shadowMode !== 'boolean') {
            createInjectorSSR = createInjector
            createInjector = shadowMode
            shadowMode = false
          } // Vue.extend constructor export interop.

          var options = typeof script === 'function' ? script.options : script // render functions

          if (template && template.render) {
            options.render = template.render
            options.staticRenderFns = template.staticRenderFns
            options._compiled = true // functional template

            if (isFunctionalTemplate) {
              options.functional = true
            }
          } // scopedId

          if (scopeId) {
            options._scopeId = scopeId
          }

          var hook

          if (moduleIdentifier) {
            // server build
            hook = function hook(context) {
              // 2.3 injection
              context =
                context || // cached call
                (this.$vnode && this.$vnode.ssrContext) || // stateful
                (this.parent &&
                  this.parent.$vnode &&
                  this.parent.$vnode.ssrContext) // functional
              // 2.2 with runInNewContext: true

              if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__
              } // inject component styles

              if (style) {
                style.call(this, createInjectorSSR(context))
              } // register component module identifier for async chunk inference

              if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier)
              }
            } // used by ssr in case component is cached and beforeCreate
            // never gets called

            options._ssrRegister = hook
          } else if (style) {
            hook = shadowMode
              ? function (context) {
                  style.call(
                    this,
                    createInjectorShadow(
                      context,
                      this.$root.$options.shadowRoot
                    )
                  )
                }
              : function (context) {
                  style.call(this, createInjector(context))
                }
          }

          if (hook) {
            if (options.functional) {
              // register for functional component in vue file
              var originalRender = options.render

              options.render = function renderWithStyleInjection(h, context) {
                hook.call(context)
                return originalRender(h, context)
              }
            } else {
              // inject component registration as beforeCreate hook
              var existing = options.beforeCreate
              options.beforeCreate = existing
                ? [].concat(existing, hook)
                : [hook]
            }
          }

          return script
        }

        /* script */
        var __vue_script__ = script
        /* template */

        var __vue_render__ = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'transition',
            {
              attrs: {
                name: _vm.prefixClass + '-zoom-in-down',
              },
            },
            [
              _vm.visible
                ? _c(
                    'div',
                    {
                      class:
                        _vm.prefixClass +
                        '-datepicker-main ' +
                        _vm.prefixClass +
                        '-datepicker-popup',
                      style: {
                        top: _vm.top,
                        left: _vm.left,
                        position: 'absolute',
                      },
                    },
                    [_vm._t('default')],
                    2
                  )
                : _vm._e(),
            ]
          )
        }

        var __vue_staticRenderFns__ = []
        /* style */

        var __vue_inject_styles__ = undefined
        /* scoped */

        var __vue_scope_id__ = undefined
        /* module identifier */

        var __vue_module_identifier__ = undefined
        /* functional template */

        var __vue_is_functional_template__ = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__ = normalizeComponent(
          {
            render: __vue_render__,
            staticRenderFns: __vue_staticRenderFns__,
          },
          __vue_inject_styles__,
          __vue_script__,
          __vue_scope_id__,
          __vue_is_functional_template__,
          __vue_module_identifier__,
          false,
          undefined,
          undefined,
          undefined
        )

        /* script */

        /* template */
        var __vue_render__$1 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'svg',
            {
              attrs: {
                xmlns: 'http://www.w3.org/2000/svg',
                viewBox: '0 0 1024 1024',
                width: '1em',
                height: '1em',
              },
            },
            [
              _c('path', {
                attrs: {
                  d: 'M940.218182 107.054545h-209.454546V46.545455h-65.163636v60.50909H363.054545V46.545455H297.890909v60.50909H83.781818c-18.618182 0-32.581818 13.963636-32.581818 32.581819v805.236363c0 18.618182 13.963636 32.581818 32.581818 32.581818h861.090909c18.618182 0 32.581818-13.963636 32.581818-32.581818V139.636364c-4.654545-18.618182-18.618182-32.581818-37.236363-32.581819zM297.890909 172.218182V232.727273h65.163636V172.218182h307.2V232.727273h65.163637V172.218182h176.872727v204.8H116.363636V172.218182h181.527273zM116.363636 912.290909V442.181818h795.927273v470.109091H116.363636z',
                },
              }),
            ]
          )
        }

        var __vue_staticRenderFns__$1 = []
        /* style */

        var __vue_inject_styles__$1 = undefined
        /* scoped */

        var __vue_scope_id__$1 = undefined
        /* module identifier */

        var __vue_module_identifier__$1 = undefined
        /* functional template */

        var __vue_is_functional_template__$1 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$1 = normalizeComponent(
          {
            render: __vue_render__$1,
            staticRenderFns: __vue_staticRenderFns__$1,
          },
          __vue_inject_styles__$1,
          {},
          __vue_scope_id__$1,
          __vue_is_functional_template__$1,
          __vue_module_identifier__$1,
          false,
          undefined,
          undefined,
          undefined
        )

        /* script */

        /* template */
        var __vue_render__$2 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'svg',
            {
              attrs: {
                xmlns: 'http://www.w3.org/2000/svg',
                viewBox: '0 0 24 24',
                width: '1em',
                height: '1em',
              },
            },
            [
              _c('path', {
                attrs: {
                  d: 'M0 0h24v24H0z',
                  fill: 'none',
                },
              }),
              _vm._v(' '),
              _c('path', {
                attrs: {
                  d: 'M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z',
                },
              }),
              _vm._v(' '),
              _c('path', {
                attrs: {
                  d: 'M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z',
                },
              }),
            ]
          )
        }

        var __vue_staticRenderFns__$2 = []
        /* style */

        var __vue_inject_styles__$2 = undefined
        /* scoped */

        var __vue_scope_id__$2 = undefined
        /* module identifier */

        var __vue_module_identifier__$2 = undefined
        /* functional template */

        var __vue_is_functional_template__$2 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$2 = normalizeComponent(
          {
            render: __vue_render__$2,
            staticRenderFns: __vue_staticRenderFns__$2,
          },
          __vue_inject_styles__$2,
          {},
          __vue_scope_id__$2,
          __vue_is_functional_template__$2,
          __vue_module_identifier__$2,
          false,
          undefined,
          undefined,
          undefined
        )

        /* script */

        /* template */
        var __vue_render__$3 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'svg',
            {
              attrs: {
                xmlns: 'http://www.w3.org/2000/svg',
                viewBox: '0 0 1024 1024',
                width: '1em',
                height: '1em',
              },
            },
            [
              _c('path', {
                attrs: {
                  d: 'M810.005333 274.005333l-237.994667 237.994667 237.994667 237.994667-60.010667 60.010667-237.994667-237.994667-237.994667 237.994667-60.010667-60.010667 237.994667-237.994667-237.994667-237.994667 60.010667-60.010667 237.994667 237.994667 237.994667-237.994667z',
                },
              }),
            ]
          )
        }

        var __vue_staticRenderFns__$3 = []
        /* style */

        var __vue_inject_styles__$3 = undefined
        /* scoped */

        var __vue_scope_id__$3 = undefined
        /* module identifier */

        var __vue_module_identifier__$3 = undefined
        /* functional template */

        var __vue_is_functional_template__$3 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$3 = normalizeComponent(
          {
            render: __vue_render__$3,
            staticRenderFns: __vue_staticRenderFns__$3,
          },
          __vue_inject_styles__$3,
          {},
          __vue_scope_id__$3,
          __vue_is_functional_template__$3,
          __vue_module_identifier__$3,
          false,
          undefined,
          undefined,
          undefined
        )

        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        var script$1 = {
          props: {
            type: String,
          },
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
        }

        /* script */
        var __vue_script__$1 = script$1
        /* template */

        var __vue_render__$4 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'button',
            _vm._g(
              {
                class:
                  _vm.prefixClass +
                  '-btn ' +
                  _vm.prefixClass +
                  '-btn-text ' +
                  _vm.prefixClass +
                  '-btn-icon-' +
                  _vm.type,
                attrs: {
                  type: 'button',
                },
              },
              _vm.$listeners
            ),
            [
              _c('i', {
                class: _vm.prefixClass + '-icon-' + _vm.type,
              }),
            ]
          )
        }

        var __vue_staticRenderFns__$4 = []
        /* style */

        var __vue_inject_styles__$4 = undefined
        /* scoped */

        var __vue_scope_id__$4 = undefined
        /* module identifier */

        var __vue_module_identifier__$4 = undefined
        /* functional template */

        var __vue_is_functional_template__$4 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$4 = normalizeComponent(
          {
            render: __vue_render__$4,
            staticRenderFns: __vue_staticRenderFns__$4,
          },
          __vue_inject_styles__$4,
          __vue_script__$1,
          __vue_scope_id__$4,
          __vue_is_functional_template__$4,
          __vue_module_identifier__$4,
          false,
          undefined,
          undefined,
          undefined
        )

        var script$2 = {
          name: 'TableDate',
          components: {
            IconButton: __vue_component__$4,
          },
          inject: {
            getLocale: {
              default: function _default() {
                return getLocale
              },
            },
            getWeek: {
              default: function _default() {
                return date_format_parse__WEBPACK_IMPORTED_MODULE_0__.getWeek
              },
            },
            prefixClass: {
              default: 'mx',
            },
            onDateMouseEnter: {
              default: undefined,
            },
            onDateMouseLeave: {
              default: undefined,
            },
          },
          props: {
            calendar: {
              type: Date,
              default: function _default() {
                return new Date()
              },
            },
            showWeekNumber: {
              type: Boolean,
              default: false,
            },
            titleFormat: {
              type: String,
              default: 'YYYY-MM-DD',
            },
            getRowClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
            getCellClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
          },
          computed: {
            firstDayOfWeek: function firstDayOfWeek() {
              return this.getLocale().formatLocale.firstDayOfWeek || 0
            },
            yearMonth: function yearMonth() {
              var _this$getLocale = this.getLocale(),
                yearFormat = _this$getLocale.yearFormat,
                monthBeforeYear = _this$getLocale.monthBeforeYear,
                _this$getLocale$month = _this$getLocale.monthFormat,
                monthFormat =
                  _this$getLocale$month === void 0
                    ? 'MMM'
                    : _this$getLocale$month

              var yearLabel = {
                panel: 'year',
                label: this.formatDate(this.calendar, yearFormat),
              }
              var monthLabel = {
                panel: 'month',
                label: this.formatDate(this.calendar, monthFormat),
              }
              return monthBeforeYear
                ? [monthLabel, yearLabel]
                : [yearLabel, monthLabel]
            },
            days: function days() {
              var locale = this.getLocale()
              var days = locale.days || locale.formatLocale.weekdaysMin
              return days
                .concat(days)
                .slice(this.firstDayOfWeek, this.firstDayOfWeek + 7)
            },
            dates: function dates() {
              var year = this.calendar.getFullYear()
              var month = this.calendar.getMonth()
              var arr = getCalendar({
                firstDayOfWeek: this.firstDayOfWeek,
                year: year,
                month: month,
              })
              return chunk(arr, 7)
            },
          },
          methods: {
            getNextCalendar: function getNextCalendar(diffMonth) {
              var year = this.calendar.getFullYear()
              var month = this.calendar.getMonth()
              return createDate(year, month + diffMonth)
            },
            handleIconLeftClick: function handleIconLeftClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(-1),
                'last-month'
              )
            },
            handleIconRightClick: function handleIconRightClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(1),
                'next-month'
              )
            },
            handleIconDoubleLeftClick: function handleIconDoubleLeftClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(-12),
                'last-year'
              )
            },
            handleIconDoubleRightClick: function handleIconDoubleRightClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(12),
                'next-year'
              )
            },
            handlePanelChange: function handlePanelChange(panel) {
              this.$emit('changepanel', panel)
            },
            handleMouseEnter: function handleMouseEnter(cell) {
              if (typeof this.onDateMouseEnter === 'function') {
                this.onDateMouseEnter(cell)
              }
            },
            handleMouseLeave: function handleMouseLeave(cell) {
              if (typeof this.onDateMouseLeave === 'function') {
                this.onDateMouseLeave(cell)
              }
            },
            handleCellClick: function handleCellClick(evt) {
              var target = evt.target

              if (target.tagName.toUpperCase() === 'DIV') {
                target = target.parentNode
              }

              var index = target.getAttribute('data-row-col')

              if (index) {
                var _index$split$map = index.split(',').map(function (v) {
                    return parseInt(v, 10)
                  }),
                  _index$split$map2 = _slicedToArray(_index$split$map, 2),
                  row = _index$split$map2[0],
                  col = _index$split$map2[1]

                var date = this.dates[row][col]
                this.$emit('select', new Date(date))
              }
            },
            formatDate: function formatDate(date, fmt) {
              return (0, date_format_parse__WEBPACK_IMPORTED_MODULE_0__.format)(
                date,
                fmt,
                {
                  locale: this.getLocale().formatLocale,
                }
              )
            },
            getCellTitle: function getCellTitle(date) {
              var fmt = this.titleFormat
              return this.formatDate(date, fmt)
            },
            getWeekNumber: function getWeekNumber(date) {
              return this.getWeek(date, this.getLocale().formatLocale)
            },
          },
        }

        /* script */
        var __vue_script__$2 = script$2
        /* template */

        var __vue_render__$5 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class:
                _vm.prefixClass +
                '-calendar ' +
                _vm.prefixClass +
                '-calendar-panel-date',
            },
            [
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-header',
                },
                [
                  _c('icon-button', {
                    attrs: {
                      type: 'double-left',
                    },
                    on: {
                      click: _vm.handleIconDoubleLeftClick,
                    },
                  }),
                  _vm._v(' '),
                  _c('icon-button', {
                    attrs: {
                      type: 'left',
                    },
                    on: {
                      click: _vm.handleIconLeftClick,
                    },
                  }),
                  _vm._v(' '),
                  _c('icon-button', {
                    attrs: {
                      type: 'double-right',
                    },
                    on: {
                      click: _vm.handleIconDoubleRightClick,
                    },
                  }),
                  _vm._v(' '),
                  _c('icon-button', {
                    attrs: {
                      type: 'right',
                    },
                    on: {
                      click: _vm.handleIconRightClick,
                    },
                  }),
                  _vm._v(' '),
                  _c(
                    'span',
                    {
                      class: _vm.prefixClass + '-calendar-header-label',
                    },
                    _vm._l(_vm.yearMonth, function (item) {
                      return _c(
                        'button',
                        {
                          key: item.panel,
                          class:
                            _vm.prefixClass +
                            '-btn ' +
                            _vm.prefixClass +
                            '-btn-text ' +
                            _vm.prefixClass +
                            '-btn-current-' +
                            item.panel,
                          attrs: {
                            type: 'button',
                          },
                          on: {
                            click: function click($event) {
                              return _vm.handlePanelChange(item.panel)
                            },
                          },
                        },
                        [_vm._v('\n        ' + _vm._s(item.label) + '\n      ')]
                      )
                    }),
                    0
                  ),
                ],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-content',
                },
                [
                  _c(
                    'table',
                    {
                      class:
                        _vm.prefixClass +
                        '-table ' +
                        _vm.prefixClass +
                        '-table-date',
                    },
                    [
                      _c('thead', [
                        _c(
                          'tr',
                          [
                            _vm.showWeekNumber
                              ? _c('th', {
                                  class:
                                    _vm.prefixClass + '-week-number-header',
                                })
                              : _vm._e(),
                            _vm._v(' '),
                            _vm._l(_vm.days, function (day) {
                              return _c(
                                'th',
                                {
                                  key: day,
                                },
                                [_vm._v(_vm._s(day))]
                              )
                            }),
                          ],
                          2
                        ),
                      ]),
                      _vm._v(' '),
                      _c(
                        'tbody',
                        {
                          on: {
                            click: _vm.handleCellClick,
                          },
                        },
                        _vm._l(_vm.dates, function (row, i) {
                          return _c(
                            'tr',
                            {
                              key: i,
                              class: [
                                _vm.prefixClass + '-date-row',
                                _vm.getRowClasses(row),
                              ],
                            },
                            [
                              _vm.showWeekNumber
                                ? _c(
                                    'td',
                                    {
                                      class: _vm.prefixClass + '-week-number',
                                      attrs: {
                                        'data-row-col': i + ',0',
                                      },
                                    },
                                    [
                                      _vm._v(
                                        '\n            ' +
                                          _vm._s(_vm.getWeekNumber(row[0])) +
                                          '\n          '
                                      ),
                                    ]
                                  )
                                : _vm._e(),
                              _vm._v(' '),
                              _vm._l(row, function (cell, j) {
                                return _c(
                                  'td',
                                  {
                                    key: j,
                                    staticClass: 'cell',
                                    class: _vm.getCellClasses(cell),
                                    attrs: {
                                      'data-row-col': i + ',' + j,
                                      title: _vm.getCellTitle(cell),
                                    },
                                    on: {
                                      mouseenter: function mouseenter($event) {
                                        return _vm.handleMouseEnter(cell)
                                      },
                                      mouseleave: function mouseleave($event) {
                                        return _vm.handleMouseLeave(cell)
                                      },
                                    },
                                  },
                                  [_c('div', [_vm._v(_vm._s(cell.getDate()))])]
                                )
                              }),
                            ],
                            2
                          )
                        }),
                        0
                      ),
                    ]
                  ),
                ]
              ),
            ]
          )
        }

        var __vue_staticRenderFns__$5 = []
        /* style */

        var __vue_inject_styles__$5 = undefined
        /* scoped */

        var __vue_scope_id__$5 = undefined
        /* module identifier */

        var __vue_module_identifier__$5 = undefined
        /* functional template */

        var __vue_is_functional_template__$5 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$5 = normalizeComponent(
          {
            render: __vue_render__$5,
            staticRenderFns: __vue_staticRenderFns__$5,
          },
          __vue_inject_styles__$5,
          __vue_script__$2,
          __vue_scope_id__$5,
          __vue_is_functional_template__$5,
          __vue_module_identifier__$5,
          false,
          undefined,
          undefined,
          undefined
        )

        //
        var script$3 = {
          name: 'TableMonth',
          components: {
            IconButton: __vue_component__$4,
          },
          inject: {
            getLocale: {
              default: function _default() {
                return getLocale
              },
            },
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            calendar: {
              type: Date,
              default: function _default() {
                return new Date()
              },
            },
            getCellClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
          },
          computed: {
            calendarYear: function calendarYear() {
              return this.calendar.getFullYear()
            },
            months: function months() {
              var locale = this.getLocale()
              var monthsLocale =
                locale.months || locale.formatLocale.monthsShort
              var months = monthsLocale.map(function (text, month) {
                return {
                  text: text,
                  month: month,
                }
              })
              return chunk(months, 3)
            },
          },
          methods: {
            getNextCalendar: function getNextCalendar(diffYear) {
              var year = this.calendar.getFullYear()
              var month = this.calendar.getMonth()
              return createDate(year + diffYear, month)
            },
            handleIconDoubleLeftClick: function handleIconDoubleLeftClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(-1),
                'last-year'
              )
            },
            handleIconDoubleRightClick: function handleIconDoubleRightClick() {
              this.$emit('changecalendar', this.getNextCalendar(1), 'next-year')
            },
            handlePanelChange: function handlePanelChange() {
              this.$emit('changepanel', 'year')
            },
            handleClick: function handleClick(evt) {
              var target = evt.target

              if (target.tagName.toUpperCase() === 'DIV') {
                target = target.parentNode
              }

              var month = target.getAttribute('data-month')

              if (month) {
                this.$emit('select', parseInt(month, 10))
              }
            },
          },
        }

        /* script */
        var __vue_script__$3 = script$3
        /* template */

        var __vue_render__$6 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class:
                _vm.prefixClass +
                '-calendar ' +
                _vm.prefixClass +
                '-calendar-panel-month',
            },
            [
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-header',
                },
                [
                  _c('icon-button', {
                    attrs: {
                      type: 'double-left',
                    },
                    on: {
                      click: _vm.handleIconDoubleLeftClick,
                    },
                  }),
                  _vm._v(' '),
                  _c('icon-button', {
                    attrs: {
                      type: 'double-right',
                    },
                    on: {
                      click: _vm.handleIconDoubleRightClick,
                    },
                  }),
                  _vm._v(' '),
                  _c(
                    'span',
                    {
                      class: _vm.prefixClass + '-calendar-header-label',
                    },
                    [
                      _c(
                        'button',
                        {
                          class:
                            _vm.prefixClass +
                            '-btn ' +
                            _vm.prefixClass +
                            '-btn-text',
                          attrs: {
                            type: 'button',
                          },
                          on: {
                            click: _vm.handlePanelChange,
                          },
                        },
                        [
                          _vm._v(
                            '\n        ' + _vm._s(_vm.calendarYear) + '\n      '
                          ),
                        ]
                      ),
                    ]
                  ),
                ],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-content',
                },
                [
                  _c(
                    'table',
                    {
                      class:
                        _vm.prefixClass +
                        '-table ' +
                        _vm.prefixClass +
                        '-table-month',
                      on: {
                        click: _vm.handleClick,
                      },
                    },
                    _vm._l(_vm.months, function (row, i) {
                      return _c(
                        'tr',
                        {
                          key: i,
                        },
                        _vm._l(row, function (cell, j) {
                          return _c(
                            'td',
                            {
                              key: j,
                              staticClass: 'cell',
                              class: _vm.getCellClasses(cell.month),
                              attrs: {
                                'data-month': cell.month,
                              },
                            },
                            [_c('div', [_vm._v(_vm._s(cell.text))])]
                          )
                        }),
                        0
                      )
                    }),
                    0
                  ),
                ]
              ),
            ]
          )
        }

        var __vue_staticRenderFns__$6 = []
        /* style */

        var __vue_inject_styles__$6 = undefined
        /* scoped */

        var __vue_scope_id__$6 = undefined
        /* module identifier */

        var __vue_module_identifier__$6 = undefined
        /* functional template */

        var __vue_is_functional_template__$6 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$6 = normalizeComponent(
          {
            render: __vue_render__$6,
            staticRenderFns: __vue_staticRenderFns__$6,
          },
          __vue_inject_styles__$6,
          __vue_script__$3,
          __vue_scope_id__$6,
          __vue_is_functional_template__$6,
          __vue_module_identifier__$6,
          false,
          undefined,
          undefined,
          undefined
        )

        //
        var script$4 = {
          name: 'TableYear',
          components: {
            IconButton: __vue_component__$4,
          },
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            calendar: {
              type: Date,
              default: function _default() {
                return new Date()
              },
            },
            getCellClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
            getYearPanel: {
              type: Function,
            },
          },
          computed: {
            years: function years() {
              var calendar = new Date(this.calendar)

              if (typeof this.getYearPanel === 'function') {
                return this.getYearPanel(calendar)
              }

              return this.getYears(calendar)
            },
            firstYear: function firstYear() {
              return this.years[0][0]
            },
            lastYear: function lastYear() {
              var last = function last(arr) {
                return arr[arr.length - 1]
              }

              return last(last(this.years))
            },
          },
          methods: {
            getYears: function getYears(calendar) {
              var firstYear = Math.floor(calendar.getFullYear() / 10) * 10
              var years = []

              for (var i = 0; i < 10; i++) {
                years.push(firstYear + i)
              }

              return chunk(years, 2)
            },
            getNextCalendar: function getNextCalendar(diffYear) {
              var year = this.calendar.getFullYear()
              var month = this.calendar.getMonth()
              return createDate(year + diffYear, month)
            },
            handleIconDoubleLeftClick: function handleIconDoubleLeftClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(-10),
                'last-decade'
              )
            },
            handleIconDoubleRightClick: function handleIconDoubleRightClick() {
              this.$emit(
                'changecalendar',
                this.getNextCalendar(10),
                'next-decade'
              )
            },
            handleClick: function handleClick(evt) {
              var target = evt.target

              if (target.tagName.toUpperCase() === 'DIV') {
                target = target.parentNode
              }

              var year = target.getAttribute('data-year')

              if (year) {
                this.$emit('select', parseInt(year, 10))
              }
            },
          },
        }

        /* script */
        var __vue_script__$4 = script$4
        /* template */

        var __vue_render__$7 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class:
                _vm.prefixClass +
                '-calendar ' +
                _vm.prefixClass +
                '-calendar-panel-year',
            },
            [
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-header',
                },
                [
                  _c('icon-button', {
                    attrs: {
                      type: 'double-left',
                    },
                    on: {
                      click: _vm.handleIconDoubleLeftClick,
                    },
                  }),
                  _vm._v(' '),
                  _c('icon-button', {
                    attrs: {
                      type: 'double-right',
                    },
                    on: {
                      click: _vm.handleIconDoubleRightClick,
                    },
                  }),
                  _vm._v(' '),
                  _c(
                    'span',
                    {
                      class: _vm.prefixClass + '-calendar-header-label',
                    },
                    [
                      _c('span', [_vm._v(_vm._s(_vm.firstYear))]),
                      _vm._v(' '),
                      _c('span', {
                        class: _vm.prefixClass + '-calendar-decade-separator',
                      }),
                      _vm._v(' '),
                      _c('span', [_vm._v(_vm._s(_vm.lastYear))]),
                    ]
                  ),
                ],
                1
              ),
              _vm._v(' '),
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-calendar-content',
                },
                [
                  _c(
                    'table',
                    {
                      class:
                        _vm.prefixClass +
                        '-table ' +
                        _vm.prefixClass +
                        '-table-year',
                      on: {
                        click: _vm.handleClick,
                      },
                    },
                    _vm._l(_vm.years, function (row, i) {
                      return _c(
                        'tr',
                        {
                          key: i,
                        },
                        _vm._l(row, function (cell, j) {
                          return _c(
                            'td',
                            {
                              key: j,
                              staticClass: 'cell',
                              class: _vm.getCellClasses(cell),
                              attrs: {
                                'data-year': cell,
                              },
                            },
                            [_c('div', [_vm._v(_vm._s(cell))])]
                          )
                        }),
                        0
                      )
                    }),
                    0
                  ),
                ]
              ),
            ]
          )
        }

        var __vue_staticRenderFns__$7 = []
        /* style */

        var __vue_inject_styles__$7 = undefined
        /* scoped */

        var __vue_scope_id__$7 = undefined
        /* module identifier */

        var __vue_module_identifier__$7 = undefined
        /* functional template */

        var __vue_is_functional_template__$7 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$7 = normalizeComponent(
          {
            render: __vue_render__$7,
            staticRenderFns: __vue_staticRenderFns__$7,
          },
          __vue_inject_styles__$7,
          __vue_script__$4,
          __vue_scope_id__$7,
          __vue_is_functional_template__$7,
          __vue_module_identifier__$7,
          false,
          undefined,
          undefined,
          undefined
        )

        var CalendarPanel = {
          name: 'CalendarPanel',
          inject: {
            prefixClass: {
              default: 'mx',
            },
            dispatchDatePicker: {
              default: function _default() {
                return function () {}
              },
            },
          },
          props: {
            value: {},
            defaultValue: {
              default: function _default() {
                var date = new Date()
                date.setHours(0, 0, 0, 0)
                return date
              },
            },
            defaultPanel: {
              type: String,
            },
            disabledDate: {
              type: Function,
              default: function _default() {
                return false
              },
            },
            type: {
              type: String,
              default: 'date',
            },
            getClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
            showWeekNumber: {
              type: Boolean,
              default: undefined,
            },
            getYearPanel: {
              type: Function,
            },
            titleFormat: {
              type: String,
              default: 'YYYY-MM-DD',
            },
            calendar: Date,
            // update date when select year or month
            partialUpdate: {
              type: Boolean,
              default: false,
            },
          },
          data: function data() {
            var panels = ['date', 'month', 'year']
            var index = Math.max(
              panels.indexOf(this.type),
              panels.indexOf(this.defaultPanel)
            )
            var panel = index !== -1 ? panels[index] : 'date'
            return {
              panel: panel,
              innerCalendar: new Date(),
            }
          },
          computed: {
            innerValue: function innerValue() {
              var value = Array.isArray(this.value) ? this.value : [this.value]
              var map = {
                year: startOfYear,
                month: startOfMonth,
                date: startOfDay,
              }
              var start = map[this.type] || map.date
              return value.filter(isValidDate).map(function (v) {
                return start(v)
              })
            },
            calendarYear: function calendarYear() {
              return this.innerCalendar.getFullYear()
            },
            calendarMonth: function calendarMonth() {
              return this.innerCalendar.getMonth()
            },
          },
          watch: {
            value: {
              immediate: true,
              handler: 'initCalendar',
            },
            calendar: {
              handler: 'initCalendar',
            },
            defaultValue: {
              handler: 'initCalendar',
            },
          },
          methods: {
            initCalendar: function initCalendar() {
              var calendarDate = this.calendar

              if (!isValidDate(calendarDate)) {
                var length = this.innerValue.length
                calendarDate = getValidDate(
                  length > 0 ? this.innerValue[length - 1] : this.defaultValue
                )
              }

              this.innerCalendar = startOfMonth(calendarDate)
            },
            isDisabled: function isDisabled(date) {
              return this.disabledDate(new Date(date), this.innerValue)
            },
            emitDate: function emitDate(date, type) {
              if (!this.isDisabled(date)) {
                this.$emit('select', date, type, this.innerValue) // someone need get the first selected date to set range value. (#429)

                this.dispatchDatePicker('pick', date, type)
              }
            },
            handleCalendarChange: function handleCalendarChange(
              calendar,
              type
            ) {
              var oldCalendar = new Date(this.innerCalendar)
              this.innerCalendar = calendar
              this.$emit('update:calendar', calendar)
              this.dispatchDatePicker(
                'calendar-change',
                calendar,
                oldCalendar,
                type
              )
            },
            handelPanelChange: function handelPanelChange(panel) {
              var oldPanel = this.panel
              this.panel = panel
              this.dispatchDatePicker('panel-change', panel, oldPanel)
            },
            handleSelectYear: function handleSelectYear(year) {
              if (this.type === 'year') {
                var date = this.getYearCellDate(year)
                this.emitDate(date, 'year')
              } else {
                this.handleCalendarChange(
                  createDate(year, this.calendarMonth),
                  'year'
                )
                this.handelPanelChange('month')

                if (this.partialUpdate && this.innerValue.length === 1) {
                  var _date = new Date(this.innerValue[0])

                  _date.setFullYear(year)

                  this.emitDate(_date, 'year')
                }
              }
            },
            handleSelectMonth: function handleSelectMonth(month) {
              if (this.type === 'month') {
                var date = this.getMonthCellDate(month)
                this.emitDate(date, 'month')
              } else {
                this.handleCalendarChange(
                  createDate(this.calendarYear, month),
                  'month'
                )
                this.handelPanelChange('date')

                if (this.partialUpdate && this.innerValue.length === 1) {
                  var _date2 = new Date(this.innerValue[0])

                  _date2.setFullYear(this.calendarYear)

                  this.emitDate(setMonth(_date2, month), 'month')
                }
              }
            },
            handleSelectDate: function handleSelectDate(date) {
              this.emitDate(date, this.type === 'week' ? 'week' : 'date')
            },
            getMonthCellDate: function getMonthCellDate(month) {
              return createDate(this.calendarYear, month)
            },
            getYearCellDate: function getYearCellDate(year) {
              return createDate(year, 0)
            },
            getDateClasses: function getDateClasses(cellDate) {
              var notCurrentMonth = cellDate.getMonth() !== this.calendarMonth
              var classes = []

              if (cellDate.getTime() === new Date().setHours(0, 0, 0, 0)) {
                classes.push('today')
              }

              if (notCurrentMonth) {
                classes.push('not-current-month')
              }

              var state = this.getStateClass(cellDate)

              if (!(state === 'active' && notCurrentMonth)) {
                classes.push(state)
              }

              return classes.concat(
                this.getClasses(cellDate, this.innerValue, classes.join(' '))
              )
            },
            getMonthClasses: function getMonthClasses(month) {
              if (this.type !== 'month') {
                return this.calendarMonth === month ? 'active' : ''
              }

              var classes = []
              var cellDate = this.getMonthCellDate(month)
              classes.push(this.getStateClass(cellDate))
              return classes.concat(
                this.getClasses(cellDate, this.innerValue, classes.join(' '))
              )
            },
            getYearClasses: function getYearClasses(year) {
              if (this.type !== 'year') {
                return this.calendarYear === year ? 'active' : ''
              }

              var classes = []
              var cellDate = this.getYearCellDate(year)
              classes.push(this.getStateClass(cellDate))
              return classes.concat(
                this.getClasses(cellDate, this.innerValue, classes.join(' '))
              )
            },
            getStateClass: function getStateClass(cellDate) {
              if (this.isDisabled(cellDate)) {
                return 'disabled'
              }

              if (
                this.innerValue.some(function (v) {
                  return v.getTime() === cellDate.getTime()
                })
              ) {
                return 'active'
              }

              return ''
            },
            getWeekState: function getWeekState(row) {
              if (this.type !== 'week') return ''
              var start = row[0].getTime()
              var end = row[6].getTime()
              var active = this.innerValue.some(function (v) {
                var time = v.getTime()
                return time >= start && time <= end
              })
              return active ? ''.concat(this.prefixClass, '-active-week') : ''
            },
          },
          render: function render() {
            var h = arguments[0]
            var panel = this.panel,
              innerCalendar = this.innerCalendar

            if (panel === 'year') {
              return h(__vue_component__$7, {
                attrs: {
                  calendar: innerCalendar,
                  getCellClasses: this.getYearClasses,
                  getYearPanel: this.getYearPanel,
                },
                on: {
                  select: this.handleSelectYear,
                  changecalendar: this.handleCalendarChange,
                },
              })
            }

            if (panel === 'month') {
              return h(__vue_component__$6, {
                attrs: {
                  calendar: innerCalendar,
                  getCellClasses: this.getMonthClasses,
                },
                on: {
                  select: this.handleSelectMonth,
                  changepanel: this.handelPanelChange,
                  changecalendar: this.handleCalendarChange,
                },
              })
            }

            return h(__vue_component__$5, {
              class: _defineProperty(
                {},
                ''.concat(this.prefixClass, '-calendar-week-mode'),
                this.type === 'week'
              ),
              attrs: {
                calendar: innerCalendar,
                getCellClasses: this.getDateClasses,
                getRowClasses: this.getWeekState,
                titleFormat: this.titleFormat,
                showWeekNumber:
                  typeof this.showWeekNumber === 'boolean'
                    ? this.showWeekNumber
                    : this.type === 'week',
              },
              on: {
                select: this.handleSelectDate,
                changepanel: this.handelPanelChange,
                changecalendar: this.handleCalendarChange,
              },
            })
          },
        }

        var CalendarRange = {
          name: 'CalendarRange',
          components: {
            CalendarPanel: CalendarPanel,
          },
          provide: function provide() {
            return {
              onDateMouseEnter: this.onDateMouseEnter,
              onDateMouseLeave: this.onDateMouseLeave,
            }
          },
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          props: _objectSpread2({}, CalendarPanel.props),
          data: function data() {
            return {
              innerValue: [],
              calendars: [],
              hoveredValue: null,
            }
          },
          computed: {
            // Minimum difference between start and end calendars
            calendarMinDiff: function calendarMinDiff() {
              var map = {
                date: 1,
                // type:date  min 1 month
                month: 1 * 12,
                // type:month min 1 year
                year: 10 * 12, // type:year  min 10 year
              }
              return map[this.type] || map.date
            },
            calendarMaxDiff: function calendarMaxDiff() {
              return Infinity
            },
            defaultValues: function defaultValues() {
              return Array.isArray(this.defaultValue)
                ? this.defaultValue
                : [this.defaultValue, this.defaultValue]
            },
          },
          watch: {
            value: {
              immediate: true,
              handler: function handler() {
                var _this = this

                this.innerValue = isValidRangeDate(this.value)
                  ? this.value
                  : [new Date(NaN), new Date(NaN)]
                var calendars = this.innerValue.map(function (v, i) {
                  return startOfMonth(getValidDate(v, _this.defaultValues[i]))
                })
                this.updateCalendars(calendars)
              },
            },
          },
          methods: {
            handleSelect: function handleSelect(date, type) {
              var _this$innerValue = _slicedToArray(this.innerValue, 2),
                startValue = _this$innerValue[0],
                endValue = _this$innerValue[1]

              if (isValidDate(startValue) && !isValidDate(endValue)) {
                if (startValue.getTime() > date.getTime()) {
                  this.innerValue = [date, startValue]
                } else {
                  this.innerValue = [startValue, date]
                }

                this.emitDate(this.innerValue, type)
              } else {
                this.innerValue = [date, new Date(NaN)]
              }
            },
            onDateMouseEnter: function onDateMouseEnter(cell) {
              this.hoveredValue = cell
            },
            onDateMouseLeave: function onDateMouseLeave() {
              this.hoveredValue = null
            },
            emitDate: function emitDate(dates, type) {
              this.$emit('select', dates, type)
            },
            updateStartCalendar: function updateStartCalendar(value) {
              this.updateCalendars([value, this.calendars[1]], 1)
            },
            updateEndCalendar: function updateEndCalendar(value) {
              this.updateCalendars([this.calendars[0], value], 0)
            },
            updateCalendars: function updateCalendars(calendars) {
              var adjustIndex =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : 1
              var gap = this.getCalendarGap(calendars)

              if (gap) {
                var calendar = new Date(calendars[adjustIndex])
                calendar.setMonth(
                  calendar.getMonth() + (adjustIndex === 0 ? -gap : gap)
                )
                calendars[adjustIndex] = calendar
              }

              this.calendars = calendars
            },
            getCalendarGap: function getCalendarGap(calendars) {
              var _calendars = _slicedToArray(calendars, 2),
                calendarLeft = _calendars[0],
                calendarRight = _calendars[1]

              var yearDiff =
                calendarRight.getFullYear() - calendarLeft.getFullYear()
              var monthDiff = calendarRight.getMonth() - calendarLeft.getMonth()
              var diff = yearDiff * 12 + monthDiff
              var min = this.calendarMinDiff
              var max = this.calendarMaxDiff

              if (diff < min) {
                return min - diff
              }

              if (diff > max) {
                return max - diff
              }

              return 0
            },
            getRangeClasses: function getRangeClasses(
              cellDate,
              currentDates,
              classnames
            ) {
              var classes = [].concat(
                this.getClasses(cellDate, currentDates, classnames)
              )
              if (/disabled|active/.test(classnames)) return classes

              var inRange = function inRange(data, range) {
                var fn =
                  arguments.length > 2 && arguments[2] !== undefined
                    ? arguments[2]
                    : function (v) {
                        return v.getTime()
                      }
                var value = fn(data)

                var _range$map = range.map(fn),
                  _range$map2 = _slicedToArray(_range$map, 2),
                  min = _range$map2[0],
                  max = _range$map2[1]

                if (min > max) {
                  var _ref = [max, min]
                  min = _ref[0]
                  max = _ref[1]
                }

                return value > min && value < max
              }

              if (
                currentDates.length === 2 &&
                inRange(cellDate, currentDates)
              ) {
                return classes.concat('in-range')
              }

              if (
                currentDates.length === 1 &&
                this.hoveredValue &&
                inRange(cellDate, [currentDates[0], this.hoveredValue])
              ) {
                return classes.concat('hover-in-range')
              }

              return classes
            },
          },
          render: function render() {
            var _this2 = this

            var h = arguments[0]
            var calendarRange = this.calendars.map(function (calendar, index) {
              var props = _objectSpread2({}, _this2.$props, {
                calendar: calendar,
                value: _this2.innerValue,
                defaultValue: _this2.defaultValues[index],
                getClasses: _this2.getRangeClasses,
                // don't update when range is true
                partialUpdate: false,
              })

              var on = {
                select: _this2.handleSelect,
                'update:calendar':
                  index === 0
                    ? _this2.updateStartCalendar
                    : _this2.updateEndCalendar,
              }
              return h('calendar-panel', {
                props: _objectSpread2({}, props),
                on: _objectSpread2({}, on),
              })
            })
            var prefixClass = this.prefixClass
            return h(
              'div',
              {
                class: ''.concat(prefixClass, '-range-wrapper'),
              },
              [calendarRange]
            )
          },
        }

        var scrollBarWidth
        function getScrollbarWidth() {
          if (typeof window === 'undefined') return 0
          if (scrollBarWidth !== undefined) return scrollBarWidth
          var outer = document.createElement('div')
          outer.style.visibility = 'hidden'
          outer.style.overflow = 'scroll'
          outer.style.width = '100px'
          outer.style.position = 'absolute'
          outer.style.top = '-9999px'
          document.body.appendChild(outer)
          var inner = document.createElement('div')
          inner.style.width = '100%'
          outer.appendChild(inner)
          scrollBarWidth = outer.offsetWidth - inner.offsetWidth
          outer.parentNode.removeChild(outer)
          return scrollBarWidth
        }

        //
        var script$5 = {
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          data: function data() {
            return {
              scrollbarWidth: 0,
              thumbTop: '',
              thumbHeight: '',
            }
          },
          created: function created() {
            this.scrollbarWidth = getScrollbarWidth()
            document.addEventListener('mouseup', this.handleDragend)
          },
          beforeDestroy: function beforeDestroy() {
            document.addEventListener('mouseup', this.handleDragend)
          },
          mounted: function mounted() {
            this.$nextTick(this.getThumbSize)
          },
          methods: {
            getThumbSize: function getThumbSize() {
              var wrap = this.$refs.wrap
              if (!wrap) return
              var heightPercentage =
                (wrap.clientHeight * 100) / wrap.scrollHeight
              this.thumbHeight =
                heightPercentage < 100 ? ''.concat(heightPercentage, '%') : ''
            },
            handleScroll: function handleScroll(evt) {
              var el = evt.currentTarget
              var scrollHeight = el.scrollHeight,
                scrollTop = el.scrollTop
              this.thumbTop = ''.concat((scrollTop * 100) / scrollHeight, '%')
            },
            handleDragstart: function handleDragstart(evt) {
              evt.stopImmediatePropagation()
              this._draggable = true
              var offsetTop = this.$refs.thumb.offsetTop
              this._prevY = evt.clientY - offsetTop
              document.addEventListener('mousemove', this.handleDraging)
            },
            handleDraging: function handleDraging(evt) {
              if (!this._draggable) return
              var clientY = evt.clientY
              var wrap = this.$refs.wrap
              var scrollHeight = wrap.scrollHeight,
                clientHeight = wrap.clientHeight
              var offsetY = clientY - this._prevY
              var top = (offsetY * scrollHeight) / clientHeight
              wrap.scrollTop = top
            },
            handleDragend: function handleDragend() {
              if (this._draggable) {
                this._draggable = false
                document.removeEventListener('mousemove', this.handleDraging)
              }
            },
          },
        }

        /* script */
        var __vue_script__$5 = script$5
        /* template */

        var __vue_render__$8 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class: _vm.prefixClass + '-scrollbar',
              style: {
                position: 'relative',
                overflow: 'hidden',
              },
            },
            [
              _c(
                'div',
                {
                  ref: 'wrap',
                  class: _vm.prefixClass + '-scrollbar-wrap',
                  style: {
                    marginRight: '-' + _vm.scrollbarWidth + 'px',
                  },
                  on: {
                    scroll: _vm.handleScroll,
                  },
                },
                [_vm._t('default')],
                2
              ),
              _vm._v(' '),
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-scrollbar-track',
                },
                [
                  _c('div', {
                    ref: 'thumb',
                    class: _vm.prefixClass + '-scrollbar-thumb',
                    style: {
                      height: _vm.thumbHeight,
                      top: _vm.thumbTop,
                    },
                    on: {
                      mousedown: _vm.handleDragstart,
                    },
                  }),
                ]
              ),
            ]
          )
        }

        var __vue_staticRenderFns__$8 = []
        /* style */

        var __vue_inject_styles__$8 = undefined
        /* scoped */

        var __vue_scope_id__$8 = undefined
        /* module identifier */

        var __vue_module_identifier__$8 = undefined
        /* functional template */

        var __vue_is_functional_template__$8 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$8 = normalizeComponent(
          {
            render: __vue_render__$8,
            staticRenderFns: __vue_staticRenderFns__$8,
          },
          __vue_inject_styles__$8,
          __vue_script__$5,
          __vue_scope_id__$8,
          __vue_is_functional_template__$8,
          __vue_module_identifier__$8,
          false,
          undefined,
          undefined,
          undefined
        )

        //

        var padNumber = function padNumber(value) {
          value = parseInt(value, 10)
          return value < 10 ? '0'.concat(value) : ''.concat(value)
        }

        var generateOptions = function generateOptions(length, step, options) {
          if (Array.isArray(options)) {
            return options.filter(function (v) {
              return v >= 0 && v < length
            })
          }

          if (step <= 0) {
            step = 1
          }

          var arr = []

          for (var i = 0; i < length; i += step) {
            arr.push(i)
          }

          return arr
        }

        var scrollTo = function scrollTo(element, to) {
          var duration =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : 0

          // jump to target if duration zero
          if (duration <= 0) {
            requestAnimationFrame(function () {
              element.scrollTop = to
            })
            return
          }

          var difference = to - element.scrollTop
          var tick = (difference / duration) * 10
          requestAnimationFrame(function () {
            var scrollTop = element.scrollTop + tick

            if (scrollTop >= to) {
              element.scrollTop = to
              return
            }

            element.scrollTop = scrollTop
            scrollTo(element, to, duration - 10)
          })
        }

        var script$6 = {
          name: 'ListColumns',
          components: {
            ScrollbarVertical: __vue_component__$8,
          },
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            date: Date,
            scrollDuration: {
              type: Number,
              default: 100,
            },
            getClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
            hourOptions: Array,
            minuteOptions: Array,
            secondOptions: Array,
            showHour: {
              type: Boolean,
              default: true,
            },
            showMinute: {
              type: Boolean,
              default: true,
            },
            showSecond: {
              type: Boolean,
              default: true,
            },
            hourStep: {
              type: Number,
              default: 1,
            },
            minuteStep: {
              type: Number,
              default: 1,
            },
            secondStep: {
              type: Number,
              default: 1,
            },
            use12h: {
              type: Boolean,
              default: false,
            },
          },
          computed: {
            columns: function columns() {
              var cols = []
              if (this.showHour)
                cols.push({
                  type: 'hour',
                  list: this.getHoursList(),
                })
              if (this.showMinute)
                cols.push({
                  type: 'minute',
                  list: this.getMinutesList(),
                })
              if (this.showSecond)
                cols.push({
                  type: 'second',
                  list: this.getSecondsList(),
                })
              if (this.use12h)
                cols.push({
                  type: 'ampm',
                  list: this.getAMPMList(),
                })
              return cols.filter(function (v) {
                return v.list.length > 0
              })
            },
          },
          watch: {
            date: {
              handler: function handler() {
                var _this = this

                this.$nextTick(function () {
                  _this.scrollToSelected(_this.scrollDuration)
                })
              },
            },
          },
          mounted: function mounted() {
            this.scrollToSelected(0)
          },
          methods: {
            getHoursList: function getHoursList() {
              var _this2 = this

              return generateOptions(
                this.use12h ? 12 : 24,
                this.hourStep,
                this.hourOptions
              ).map(function (num) {
                var date = new Date(_this2.date)
                var text = padNumber(num)

                if (_this2.use12h) {
                  if (num === 0) {
                    text = '12'
                  }

                  if (date.getHours() >= 12) {
                    num += 12
                  }
                }

                var value = date.setHours(num)
                return {
                  value: value,
                  text: text,
                }
              })
            },
            getMinutesList: function getMinutesList() {
              var _this3 = this

              return generateOptions(
                60,
                this.minuteStep,
                this.minuteOptions
              ).map(function (num) {
                var value = new Date(_this3.date).setMinutes(num)
                return {
                  value: value,
                  text: padNumber(num),
                }
              })
            },
            getSecondsList: function getSecondsList() {
              var _this4 = this

              return generateOptions(
                60,
                this.secondStep,
                this.secondOptions
              ).map(function (num) {
                var value = new Date(_this4.date).setSeconds(num)
                return {
                  value: value,
                  text: padNumber(num),
                }
              })
            },
            getAMPMList: function getAMPMList() {
              var _this5 = this

              return ['AM', 'PM'].map(function (text, i) {
                var date = new Date(_this5.date)
                var value = date.setHours((date.getHours() % 12) + i * 12)
                return {
                  text: text,
                  value: value,
                }
              })
            },
            scrollToSelected: function scrollToSelected(duration) {
              var elements = this.$el.querySelectorAll('.active')

              for (var i = 0; i < elements.length; i++) {
                var element = elements[i]
                var scrollElement = getScrollParent(element, this.$el)

                if (scrollElement) {
                  var to = element.offsetTop
                  scrollTo(scrollElement, to, duration)
                }
              }
            },
            handleSelect: function handleSelect(evt) {
              var target = evt.target,
                currentTarget = evt.currentTarget
              if (target.tagName.toUpperCase() !== 'LI') return
              var type = currentTarget.getAttribute('data-type')
              var colIndex = parseInt(
                currentTarget.getAttribute('data-index'),
                10
              )
              var cellIndex = parseInt(target.getAttribute('data-index'), 10)
              var value = this.columns[colIndex].list[cellIndex].value
              this.$emit('select', value, type)
            },
          },
        }

        /* script */
        var __vue_script__$6 = script$6
        /* template */

        var __vue_render__$9 = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class: _vm.prefixClass + '-time-columns',
            },
            _vm._l(_vm.columns, function (col, i) {
              return _c(
                'scrollbar-vertical',
                {
                  key: i,
                  class: _vm.prefixClass + '-time-column',
                },
                [
                  _c(
                    'ul',
                    {
                      class: _vm.prefixClass + '-time-list',
                      attrs: {
                        'data-type': col.type,
                        'data-index': i,
                      },
                      on: {
                        click: _vm.handleSelect,
                      },
                    },
                    _vm._l(col.list, function (item, j) {
                      return _c(
                        'li',
                        {
                          key: item.value,
                          class: [
                            _vm.prefixClass + '-time-item',
                            _vm.getClasses(item.value, col.type),
                          ],
                          attrs: {
                            'data-index': j,
                          },
                        },
                        [_vm._v('\n        ' + _vm._s(item.text) + '\n      ')]
                      )
                    }),
                    0
                  ),
                ]
              )
            }),
            1
          )
        }

        var __vue_staticRenderFns__$9 = []
        /* style */

        var __vue_inject_styles__$9 = undefined
        /* scoped */

        var __vue_scope_id__$9 = undefined
        /* module identifier */

        var __vue_module_identifier__$9 = undefined
        /* functional template */

        var __vue_is_functional_template__$9 = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$9 = normalizeComponent(
          {
            render: __vue_render__$9,
            staticRenderFns: __vue_staticRenderFns__$9,
          },
          __vue_inject_styles__$9,
          __vue_script__$6,
          __vue_scope_id__$9,
          __vue_is_functional_template__$9,
          __vue_module_identifier__$9,
          false,
          undefined,
          undefined,
          undefined
        )

        //

        function parseOption() {
          var time =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : ''
          var values = time.split(':')

          if (values.length >= 2) {
            var hours = parseInt(values[0], 10)
            var minutes = parseInt(values[1], 10)
            return {
              hours: hours,
              minutes: minutes,
            }
          }

          return null
        }

        var scrollTo$1 = function scrollTo(element, to) {
          if (element) {
            element.scrollTop = to
          }
        }

        var script$7 = {
          name: 'ListOptions',
          components: {
            ScrollbarVertical: __vue_component__$8,
          },
          inject: {
            getLocale: {
              default: function _default() {
                return getLocale
              },
            },
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            date: Date,
            options: {
              type: [Object, Function],
              default: function _default() {
                return []
              },
            },
            format: {
              type: String,
              default: 'HH:mm:ss',
            },
            getClasses: {
              type: Function,
              default: function _default() {
                return []
              },
            },
          },
          computed: {
            list: function list() {
              var result = []
              var options = this.options

              if (typeof options === 'function') {
                return options() || []
              }

              var start = parseOption(options.start)
              var end = parseOption(options.end)
              var step = parseOption(options.step)
              var fmt = options.format || this.format

              if (start && end && step) {
                var startMinutes = start.minutes + start.hours * 60
                var endMinutes = end.minutes + end.hours * 60
                var stepMinutes = step.minutes + step.hours * 60
                var len = Math.floor((endMinutes - startMinutes) / stepMinutes)

                for (var i = 0; i <= len; i++) {
                  var timeMinutes = startMinutes + i * stepMinutes
                  var hours = Math.floor(timeMinutes / 60)
                  var minutes = timeMinutes % 60
                  var value = new Date(this.date).setHours(hours, minutes, 0)
                  result.push({
                    value: value,
                    text: this.formatDate(value, fmt),
                  })
                }
              }

              return result
            },
          },
          mounted: function mounted() {
            this.scrollToSelected()
          },
          methods: {
            formatDate: function formatDate(date, fmt) {
              return (0, date_format_parse__WEBPACK_IMPORTED_MODULE_0__.format)(
                date,
                fmt,
                {
                  locale: this.getLocale().formatLocale,
                }
              )
            },
            scrollToSelected: function scrollToSelected() {
              var element = this.$el.querySelector('.active')
              if (!element) return
              var scrollElement = getScrollParent(element, this.$el)
              if (!scrollElement) return
              var to = element.offsetTop
              scrollTo$1(scrollElement, to)
            },
            handleSelect: function handleSelect(value) {
              this.$emit('select', value, 'time')
            },
          },
        }

        /* script */
        var __vue_script__$7 = script$7
        /* template */

        var __vue_render__$a = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'scrollbar-vertical',
            _vm._l(_vm.list, function (item) {
              return _c(
                'div',
                {
                  key: item.value,
                  class: [
                    _vm.prefixClass + '-time-option',
                    _vm.getClasses(item.value),
                  ],
                  on: {
                    click: function click($event) {
                      return _vm.handleSelect(item.value)
                    },
                  },
                },
                [_vm._v('\n    ' + _vm._s(item.text) + '\n  ')]
              )
            }),
            0
          )
        }

        var __vue_staticRenderFns__$a = []
        /* style */

        var __vue_inject_styles__$a = undefined
        /* scoped */

        var __vue_scope_id__$a = undefined
        /* module identifier */

        var __vue_module_identifier__$a = undefined
        /* functional template */

        var __vue_is_functional_template__$a = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$a = normalizeComponent(
          {
            render: __vue_render__$a,
            staticRenderFns: __vue_staticRenderFns__$a,
          },
          __vue_inject_styles__$a,
          __vue_script__$7,
          __vue_scope_id__$a,
          __vue_is_functional_template__$a,
          __vue_module_identifier__$a,
          false,
          undefined,
          undefined,
          undefined
        )

        //
        var script$8 = {
          name: 'TimePanel',
          components: {
            ListColumns: __vue_component__$9,
            ListOptions: __vue_component__$a,
          },
          inject: {
            getLocale: {
              default: function _default() {
                return getLocale
              },
            },
            prefixClass: {
              default: 'mx',
            },
          },
          props: {
            value: {},
            defaultValue: {
              default: function _default() {
                var date = new Date()
                date.setHours(0, 0, 0, 0)
                return date
              },
            },
            format: {
              default: 'HH:mm:ss',
            },
            timeTitleFormat: {
              type: String,
              default: 'YYYY-MM-DD',
            },
            showTimeHeader: {
              type: Boolean,
              default: false,
            },
            disabledTime: {
              type: Function,
              default: function _default() {
                return false
              },
            },
            timePickerOptions: {
              type: [Object, Function],
              default: function _default() {
                return null
              },
            },
            hourOptions: Array,
            minuteOptions: Array,
            secondOptions: Array,
            hourStep: {
              type: Number,
              default: 1,
            },
            minuteStep: {
              type: Number,
              default: 1,
            },
            secondStep: {
              type: Number,
              default: 1,
            },
            showHour: {
              type: Boolean,
              default: undefined,
            },
            showMinute: {
              type: Boolean,
              default: undefined,
            },
            showSecond: {
              type: Boolean,
              default: undefined,
            },
            use12h: {
              type: Boolean,
              default: undefined,
            },
            scrollDuration: {
              type: Number,
              default: 100,
            },
          },
          data: function data() {
            return {
              innerValue: getValidDate(this.value, this.defaultValue),
            }
          },
          computed: {
            title: function title() {
              var titleFormat = this.timeTitleFormat
              var date = new Date(this.innerValue)
              return this.formatDate(date, titleFormat)
            },
            innerForamt: function innerForamt() {
              return typeof this.format === 'string' ? this.format : 'HH:mm:ss'
            },
            ShowHourMinuteSecondAMPM: function ShowHourMinuteSecondAMPM() {
              var _this = this

              var fmt = this.innerForamt
              var defaultProps = {
                showHour: /[HhKk]/.test(fmt),
                showMinute: /m/.test(fmt),
                showSecond: /s/.test(fmt),
                use12h: /a/i.test(fmt),
              }
              var obj = {}
              Object.keys(defaultProps).forEach(function (key) {
                obj[key] =
                  typeof _this[key] === 'boolean'
                    ? _this[key]
                    : defaultProps[key]
              })
              return obj
            },
          },
          watch: {
            value: {
              immediate: true,
              handler: function handler() {
                this.innerValue = getValidDate(this.value, this.defaultValue)
              },
            },
          },
          methods: {
            formatDate: function formatDate(date, fmt) {
              return (0, date_format_parse__WEBPACK_IMPORTED_MODULE_0__.format)(
                date,
                fmt,
                {
                  locale: this.getLocale().formatLocale,
                }
              )
            },
            isDisabledTime: function isDisabledTime(value) {
              return this.disabledTime(new Date(value))
            },
            isDisabledHour: function isDisabledHour(date) {
              var value = new Date(date)
              return (
                this.isDisabledTime(value) &&
                this.isDisabledTime(value.setMinutes(0, 0, 0)) &&
                this.isDisabledTime(value.setMinutes(59, 59, 999))
              )
            },
            isDisabledMinute: function isDisabledMinute(date) {
              var value = new Date(date)
              return (
                this.isDisabledTime(value) &&
                this.isDisabledTime(value.setSeconds(0, 0)) &&
                this.isDisabledTime(value.setSeconds(59, 999))
              )
            },
            isDisabled: function isDisabled(date, type) {
              if (type === 'hour') {
                return this.isDisabledHour(date)
              }

              if (type === 'minute') {
                return this.isDisabledMinute(date)
              }

              return this.isDisabledTime(date)
            },
            handleSelect: function handleSelect(value, type) {
              var date = new Date(value)

              if (!this.isDisabled(value, type)) {
                this.innerValue = date

                if (!this.isDisabledTime(date)) {
                  this.$emit('select', date, type)
                }
              }
            },
            handleClickTitle: function handleClickTitle() {
              this.$emit('clicktitle')
            },
            getClasses: function getClasses(value, type) {
              var cellDate = new Date(value)

              if (this.isDisabled(value, type)) {
                return 'disabled'
              }

              if (cellDate.getTime() === this.innerValue.getTime()) {
                return 'active'
              }

              return ''
            },
          },
        }

        /* script */
        var __vue_script__$8 = script$8
        /* template */

        var __vue_render__$b = function __vue_render__() {
          var _vm = this

          var _h = _vm.$createElement

          var _c = _vm._self._c || _h

          return _c(
            'div',
            {
              class: _vm.prefixClass + '-time',
            },
            [
              _vm.showTimeHeader
                ? _c(
                    'div',
                    {
                      class: _vm.prefixClass + '-time-header',
                    },
                    [
                      _c(
                        'button',
                        {
                          class:
                            _vm.prefixClass +
                            '-btn ' +
                            _vm.prefixClass +
                            '-btn-text ' +
                            _vm.prefixClass +
                            '-time-header-title',
                          attrs: {
                            type: 'button',
                          },
                          on: {
                            click: _vm.handleClickTitle,
                          },
                        },
                        [_vm._v('\n      ' + _vm._s(_vm.title) + '\n    ')]
                      ),
                    ]
                  )
                : _vm._e(),
              _vm._v(' '),
              _c(
                'div',
                {
                  class: _vm.prefixClass + '-time-content',
                },
                [
                  _vm.timePickerOptions
                    ? _c('list-options', {
                        attrs: {
                          date: _vm.innerValue,
                          'get-classes': _vm.getClasses,
                          options: _vm.timePickerOptions,
                          format: _vm.innerForamt,
                        },
                        on: {
                          select: _vm.handleSelect,
                        },
                      })
                    : _c(
                        'list-columns',
                        _vm._b(
                          {
                            attrs: {
                              date: _vm.innerValue,
                              'get-classes': _vm.getClasses,
                              'hour-options': _vm.hourOptions,
                              'minute-options': _vm.minuteOptions,
                              'second-options': _vm.secondOptions,
                              'hour-step': _vm.hourStep,
                              'minute-step': _vm.minuteStep,
                              'second-step': _vm.secondStep,
                              'scroll-duration': _vm.scrollDuration,
                            },
                            on: {
                              select: _vm.handleSelect,
                            },
                          },
                          'list-columns',
                          _vm.ShowHourMinuteSecondAMPM,
                          false
                        )
                      ),
                ],
                1
              ),
            ]
          )
        }

        var __vue_staticRenderFns__$b = []
        /* style */

        var __vue_inject_styles__$b = undefined
        /* scoped */

        var __vue_scope_id__$b = undefined
        /* module identifier */

        var __vue_module_identifier__$b = undefined
        /* functional template */

        var __vue_is_functional_template__$b = false
        /* style inject */

        /* style inject SSR */

        /* style inject shadow dom */

        var __vue_component__$b = normalizeComponent(
          {
            render: __vue_render__$b,
            staticRenderFns: __vue_staticRenderFns__$b,
          },
          __vue_inject_styles__$b,
          __vue_script__$8,
          __vue_scope_id__$b,
          __vue_is_functional_template__$b,
          __vue_module_identifier__$b,
          false,
          undefined,
          undefined,
          undefined
        )

        var TimeRange = {
          name: 'TimeRange',
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          props: _objectSpread2({}, __vue_component__$b.props),
          data: function data() {
            return {
              startValue: new Date(NaN),
              endValue: new Date(NaN),
            }
          },
          watch: {
            value: {
              immediate: true,
              handler: function handler() {
                if (isValidRangeDate(this.value)) {
                  var _this$value = _slicedToArray(this.value, 2),
                    startValue = _this$value[0],
                    endValue = _this$value[1]

                  this.startValue = startValue
                  this.endValue = endValue
                } else {
                  this.startValue = new Date(NaN)
                  this.endValue = new Date(NaN)
                }
              },
            },
          },
          methods: {
            emitChange: function emitChange(type, index) {
              var date = [this.startValue, this.endValue]
              this.$emit(
                'select',
                date,
                type === 'time' ? 'time-range' : type,
                index
              )
            },
            handleSelectStart: function handleSelectStart(date, type) {
              this.startValue = date // check the NaN

              if (!(this.endValue.getTime() >= date.getTime())) {
                this.endValue = date
              }

              this.emitChange(type, 0)
            },
            handleSelectEnd: function handleSelectEnd(date, type) {
              // check the NaN
              this.endValue = date

              if (!(this.startValue.getTime() <= date.getTime())) {
                this.startValue = date
              }

              this.emitChange(type, 1)
            },
            disabledStartTime: function disabledStartTime(date) {
              return this.disabledTime(date, 0)
            },
            disabledEndTime: function disabledEndTime(date) {
              return (
                date.getTime() < this.startValue.getTime() ||
                this.disabledTime(date, 1)
              )
            },
          },
          render: function render() {
            var h = arguments[0]
            var defaultValues = Array.isArray(this.defaultValue)
              ? this.defaultValue
              : [this.defaultValue, this.defaultValue]
            var prefixClass = this.prefixClass
            return h(
              'div',
              {
                class: ''.concat(prefixClass, '-range-wrapper'),
              },
              [
                h(__vue_component__$b, {
                  props: _objectSpread2(
                    {},
                    _objectSpread2({}, this.$props, {
                      value: this.startValue,
                      defaultValue: defaultValues[0],
                      disabledTime: this.disabledStartTime,
                    })
                  ),
                  on: _objectSpread2(
                    {},
                    _objectSpread2({}, this.$listeners, {
                      select: this.handleSelectStart,
                    })
                  ),
                }),
                h(__vue_component__$b, {
                  props: _objectSpread2(
                    {},
                    _objectSpread2({}, this.$props, {
                      value: this.endValue,
                      defaultValue: defaultValues[1],
                      disabledTime: this.disabledEndTime,
                    })
                  ),
                  on: _objectSpread2(
                    {},
                    _objectSpread2({}, this.$listeners, {
                      select: this.handleSelectEnd,
                    })
                  ),
                }),
              ]
            )
          },
        }

        var DatetimePanel = {
          name: 'DatetimePanel',
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          emits: ['select', 'update:show-time-panel'],
          props: _objectSpread2(
            {},
            CalendarPanel.props,
            {},
            __vue_component__$b.props,
            {
              showTimePanel: {
                type: Boolean,
                default: undefined,
              },
            }
          ),
          data: function data() {
            return {
              defaultTimeVisible: false,
              currentValue: this.value,
            }
          },
          computed: {
            timeVisible: function timeVisible() {
              return typeof this.showTimePanel === 'boolean'
                ? this.showTimePanel
                : this.defaultTimeVisible
            },
          },
          watch: {
            value: function value(val) {
              this.currentValue = val
            },
          },
          methods: {
            closeTimePanel: function closeTimePanel() {
              this.defaultTimeVisible = false
              this.$emit('update:show-time-panel', false)
            },
            openTimePanel: function openTimePanel() {
              this.defaultTimeVisible = true
              this.$emit('update:show-time-panel', true)
            },
            emitDate: function emitDate(date, type) {
              this.$emit('select', date, type)
            },
            handleSelect: function handleSelect(date, type) {
              if (type === 'date') {
                this.openTimePanel()
              }

              var datetime = assignTime(
                date,
                getValidDate(this.value, this.defaultValue)
              )

              if (this.disabledTime(new Date(datetime))) {
                // set the time of defalutValue;
                datetime = assignTime(date, this.defaultValue)

                if (this.disabledTime(new Date(datetime))) {
                  // if disabled don't emit date
                  this.currentValue = datetime
                  return
                }
              }

              this.emitDate(datetime, type)
            },
          },
          render: function render() {
            var h = arguments[0]
            var calendarProps = {
              props: _objectSpread2(
                {},
                pick(this.$props, Object.keys(CalendarPanel.props)),
                {
                  type: 'date',
                  value: this.currentValue,
                }
              ),
              on: {
                select: this.handleSelect,
              },
            }
            var timeProps = {
              props: _objectSpread2(
                {},
                pick(this.$props, Object.keys(__vue_component__$b.props)),
                {
                  showTimeHeader: true,
                  value: this.currentValue,
                }
              ),
              on: {
                select: this.emitDate,
                clicktitle: this.closeTimePanel,
              },
            }
            var prefixClass = this.prefixClass
            return h('div', [
              h(CalendarPanel, helper([{}, calendarProps])),
              this.timeVisible &&
                h(
                  __vue_component__$b,
                  helper([
                    {
                      class: ''.concat(prefixClass, '-calendar-time'),
                    },
                    timeProps,
                  ])
                ),
            ])
          },
        }

        var DatetimeRange = {
          name: 'DatetimeRange',
          inject: {
            prefixClass: {
              default: 'mx',
            },
          },
          emits: ['select', 'update:show-time-panel'],
          props: _objectSpread2({}, CalendarRange.props, {}, TimeRange.props, {
            showTimePanel: {
              type: Boolean,
              default: undefined,
            },
          }),
          data: function data() {
            return {
              defaultTimeVisible: false,
              currentValue: this.value,
            }
          },
          computed: {
            timeVisible: function timeVisible() {
              return typeof this.showTimePanel === 'boolean'
                ? this.showTimePanel
                : this.defaultTimeVisible
            },
          },
          watch: {
            value: function value(val) {
              this.currentValue = val
            },
          },
          methods: {
            closeTimePanel: function closeTimePanel() {
              this.defaultTimeVisible = false
              this.$emit('update:show-time-panel', false)
            },
            openTimePanel: function openTimePanel() {
              this.defaultTimeVisible = true
              this.$emit('update:show-time-panel', true)
            },
            emitDate: function emitDate(dates, type) {
              this.$emit('select', dates, type)
            },
            handleSelect: function handleSelect(dates, type) {
              var _this = this

              if (type === 'date') {
                this.openTimePanel()
              }

              var defaultValues = Array.isArray(this.defaultValue)
                ? this.defaultValue
                : [this.defaultValue, this.defaultValue]
              var datetimes = dates.map(function (date, i) {
                var time = isValidRangeDate(_this.value)
                  ? _this.value[i]
                  : defaultValues[i]
                return assignTime(date, time)
              })

              if (datetimes[1].getTime() < datetimes[0].getTime()) {
                datetimes = [datetimes[0], datetimes[0]]
              }

              if (datetimes.some(this.disabledTime)) {
                datetimes = dates.map(function (date, i) {
                  return assignTime(date, defaultValues[i])
                })

                if (datetimes.some(this.disabledTime)) {
                  this.currentValue = datetimes
                  return
                }
              }

              this.emitDate(datetimes, type)
            },
          },
          render: function render() {
            var h = arguments[0]
            var calendarProps = {
              props: _objectSpread2(
                {},
                pick(this.$props, Object.keys(CalendarRange.props)),
                {
                  type: 'date',
                  value: this.currentValue,
                }
              ),
              on: {
                select: this.handleSelect,
              },
            }
            var timeProps = {
              props: _objectSpread2(
                {},
                pick(this.$props, Object.keys(TimeRange.props)),
                {
                  value: this.currentValue,
                  showTimeHeader: true,
                }
              ),
              on: {
                select: this.emitDate,
                clicktitle: this.closeTimePanel,
              },
            }
            var prefixClass = this.prefixClass
            return h('div', [
              h(CalendarRange, helper([{}, calendarProps])),
              this.timeVisible &&
                h(
                  TimeRange,
                  helper([
                    {
                      class: ''.concat(prefixClass, '-calendar-time'),
                    },
                    timeProps,
                  ])
                ),
            ])
          },
        }

        var componentMap = {
          default: CalendarPanel,
          time: __vue_component__$b,
          datetime: DatetimePanel,
        }
        var componentRangeMap = {
          default: CalendarRange,
          time: TimeRange,
          datetime: DatetimeRange,
        }
        var DatePicker = {
          name: 'DatePicker',
          provide: function provide() {
            var _this = this

            return {
              // make locale reactive
              getLocale: function getLocale() {
                return _this.locale
              },
              getWeek: this.getWeek,
              prefixClass: this.prefixClass,
              dispatchDatePicker: this.$emit.bind(this),
            }
          },
          props: _objectSpread2({}, DatetimePanel.props, {
            value: {},
            valueType: {
              type: String,
              default: 'date', // date, format, timestamp, or token like 'YYYY-MM-DD'
            },
            type: {
              type: String,
              // ['date', 'datetime', 'time', 'year', 'month', 'week']
              default: 'date',
            },
            format: {
              type: String,
            },
            formatter: {
              type: Object,
            },
            range: {
              type: Boolean,
              default: false,
            },
            multiple: {
              type: Boolean,
              default: false,
            },
            rangeSeparator: {
              type: String,
            },
            lang: {
              type: [String, Object],
            },
            placeholder: {
              type: String,
              default: '',
            },
            editable: {
              type: Boolean,
              default: true,
            },
            disabled: {
              type: Boolean,
              default: false,
            },
            clearable: {
              type: Boolean,
              default: true,
            },
            prefixClass: {
              type: String,
              default: 'mx',
            },
            inputClass: {},
            inputAttr: {
              type: Object,
              default: function _default() {
                return {}
              },
            },
            appendToBody: {
              type: Boolean,
              default: true,
            },
            open: {
              type: Boolean,
              default: undefined,
            },
            popupClass: {},
            popupStyle: {
              type: Object,
              default: function _default() {
                return {}
              },
            },
            inline: {
              type: Boolean,
              default: false,
            },
            confirm: {
              type: Boolean,
              default: false,
            },
            confirmText: {
              type: String,
              default: 'OK',
            },
            renderInputText: {
              type: Function,
            },
            shortcuts: {
              type: Array,
              validator: function validator(value) {
                return (
                  Array.isArray(value) &&
                  value.every(function (v) {
                    return (
                      isObject(v) &&
                      typeof v.text === 'string' &&
                      typeof v.onClick === 'function'
                    )
                  })
                )
              },
              default: function _default() {
                return []
              },
            },
          }),
          data: function data() {
            return {
              // cache the innervalue, wait to confirm
              currentValue: null,
              userInput: null,
              defaultOpen: false,
            }
          },
          computed: {
            popupVisible: function popupVisible() {
              return (
                !this.disabled &&
                (typeof this.open === 'boolean' ? this.open : this.defaultOpen)
              )
            },
            innerRangeSeparator: function innerRangeSeparator() {
              return this.rangeSeparator || (this.multiple ? ',' : ' ~ ')
            },
            innerFormat: function innerFormat() {
              var map = {
                date: 'YYYY-MM-DD',
                datetime: 'YYYY-MM-DD HH:mm:ss',
                year: 'YYYY',
                month: 'YYYY-MM',
                time: 'HH:mm:ss',
                week: 'w',
              }
              return this.format || map[this.type] || map.date
            },
            innerValue: function innerValue() {
              var value = this.value

              if (this.validMultipleType) {
                value = Array.isArray(value) ? value : []
                return value.map(this.value2date)
              }

              if (this.range) {
                value = Array.isArray(value) ? value.slice(0, 2) : [null, null]
                return value.map(this.value2date)
              }

              return this.value2date(value)
            },
            text: function text() {
              var _this2 = this

              if (this.userInput !== null) {
                return this.userInput
              }

              if (typeof this.renderInputText === 'function') {
                return this.renderInputText(this.innerValue)
              }

              if (!this.isValidValue(this.innerValue)) {
                return ''
              }

              if (Array.isArray(this.innerValue)) {
                return this.innerValue
                  .map(function (v) {
                    return _this2.formatDate(v)
                  })
                  .join(this.innerRangeSeparator)
              }

              return this.formatDate(this.innerValue)
            },
            showClearIcon: function showClearIcon() {
              return !this.disabled && this.clearable && this.text
            },
            locale: function locale() {
              if (isObject(this.lang)) {
                return mergeDeep(getLocale(), this.lang)
              }

              return getLocale(this.lang)
            },
            validMultipleType: function validMultipleType() {
              var types = ['date', 'month', 'year']
              return (
                this.multiple && !this.range && types.indexOf(this.type) !== -1
              )
            },
          },
          watch: {
            innerValue: {
              immediate: true,
              handler: function handler(val) {
                this.currentValue = val
              },
            },
          },
          created: function created() {
            if (_typeof(this.format) === 'object') {
              console.warn(
                "[vue2-datepicker]: The prop `format` don't support Object any more. You can use the new prop `formatter` to replace it"
              )
            }
          },
          methods: {
            handleClickOutSide: function handleClickOutSide(evt) {
              var target = evt.target

              if (!this.$el.contains(target)) {
                this.closePopup()
              }
            },
            getFormatter: function getFormatter(key) {
              return (
                (isObject(this.formatter) && this.formatter[key]) ||
                (isObject(this.format) && this.format[key])
              )
            },
            getWeek: function getWeek$1(date, options) {
              if (typeof this.getFormatter('getWeek') === 'function') {
                return this.getFormatter('getWeek')(date, options)
              }

              return (0,
              date_format_parse__WEBPACK_IMPORTED_MODULE_0__.getWeek)(
                date,
                options
              )
            },
            parseDate: function parseDate(value, fmt) {
              fmt = fmt || this.innerFormat

              if (typeof this.getFormatter('parse') === 'function') {
                return this.getFormatter('parse')(value, fmt)
              }

              var backupDate = new Date()
              return (0, date_format_parse__WEBPACK_IMPORTED_MODULE_0__.parse)(
                value,
                fmt,
                {
                  locale: this.locale.formatLocale,
                  backupDate: backupDate,
                }
              )
            },
            formatDate: function formatDate(date, fmt) {
              fmt = fmt || this.innerFormat

              if (typeof this.getFormatter('stringify') === 'function') {
                return this.getFormatter('stringify')(date, fmt)
              }

              return (0, date_format_parse__WEBPACK_IMPORTED_MODULE_0__.format)(
                date,
                fmt,
                {
                  locale: this.locale.formatLocale,
                }
              )
            },
            // transform the outer value to inner date
            value2date: function value2date(value) {
              switch (this.valueType) {
                case 'date':
                  return value instanceof Date
                    ? new Date(value.getTime())
                    : new Date(NaN)

                case 'timestamp':
                  return typeof value === 'number'
                    ? new Date(value)
                    : new Date(NaN)

                case 'format':
                  return typeof value === 'string'
                    ? this.parseDate(value)
                    : new Date(NaN)

                default:
                  return typeof value === 'string'
                    ? this.parseDate(value, this.valueType)
                    : new Date(NaN)
              }
            },
            // transform the inner date to outer value
            date2value: function date2value(date) {
              if (!isValidDate(date)) return null

              switch (this.valueType) {
                case 'date':
                  return date

                case 'timestamp':
                  return date.getTime()

                case 'format':
                  return this.formatDate(date)

                default:
                  return this.formatDate(date, this.valueType)
              }
            },
            emitValue: function emitValue(date, type) {
              // fix IE11/10 trigger input event when input is focused. (placeholder !== '')
              this.userInput = null
              var value = Array.isArray(date)
                ? date.map(this.date2value)
                : this.date2value(date)
              this.$emit('input', value)
              this.$emit('change', value, type)
              this.afterEmitValue(type)
              return value
            },
            afterEmitValue: function afterEmitValue(type) {
              // this.type === 'datetime', click the time should close popup
              if (!type || type === this.type || type === 'time') {
                this.closePopup()
              }
            },
            isValidValue: function isValidValue(value) {
              if (this.validMultipleType) {
                return isValidDates(value)
              }

              if (this.range) {
                return isValidRangeDate(value)
              }

              return isValidDate(value)
            },
            isValidValueAndNotDisabled: function isValidValueAndNotDisabled(
              value
            ) {
              if (!this.isValidValue(value)) {
                return false
              }

              var disabledDate =
                typeof this.disabledDate === 'function'
                  ? this.disabledDate
                  : function () {
                      return false
                    }
              var disabledTime =
                typeof this.disabledTime === 'function'
                  ? this.disabledTime
                  : function () {
                      return false
                    }

              if (!Array.isArray(value)) {
                value = [value]
              }

              return value.every(function (v) {
                return !disabledDate(v) && !disabledTime(v)
              })
            },
            handleMultipleDates: function handleMultipleDates(date, dates) {
              if (this.validMultipleType && dates) {
                var nextDates = dates.filter(function (v) {
                  return v.getTime() !== date.getTime()
                })

                if (nextDates.length === dates.length) {
                  nextDates.push(date)
                }

                return nextDates
              }

              return date
            },
            handleSelectDate: function handleSelectDate(val, type, dates) {
              val = this.handleMultipleDates(val, dates)

              if (this.confirm) {
                this.currentValue = val
              } else {
                this.emitValue(
                  val,
                  this.validMultipleType ? 'multiple-'.concat(type) : type
                )
              }
            },
            clear: function clear() {
              this.emitValue(this.range ? [null, null] : null)
              this.$emit('clear')
            },
            handleClear: function handleClear(evt) {
              evt.stopPropagation()
              this.clear()
            },
            handleConfirmDate: function handleConfirmDate() {
              var value = this.emitValue(this.currentValue)
              this.$emit('confirm', value)
            },
            handleSelectShortcut: function handleSelectShortcut(evt) {
              var index = evt.currentTarget.getAttribute('data-index')
              var item = this.shortcuts[parseInt(index, 10)]

              if (isObject(item) && typeof item.onClick === 'function') {
                var date = item.onClick(this)

                if (date) {
                  this.emitValue(date)
                }
              }
            },
            openPopup: function openPopup(evt) {
              if (this.popupVisible || this.disabled) return
              this.defaultOpen = true
              this.$emit('open', evt)
              this.$emit('update:open', true)
            },
            closePopup: function closePopup() {
              if (!this.popupVisible) return
              this.defaultOpen = false
              this.$emit('close')
              this.$emit('update:open', false)
            },
            blur: function blur() {
              // when use slot input
              if (this.$refs.input) {
                this.$refs.input.blur()
              }
            },
            focus: function focus() {
              if (this.$refs.input) {
                this.$refs.input.focus()
              }
            },
            handleInputChange: function handleInputChange() {
              var _this3 = this

              if (!this.editable || this.userInput === null) return
              var text = this.userInput.trim()
              this.userInput = null

              if (text === '') {
                this.clear()
                return
              }

              var date

              if (this.validMultipleType) {
                date = text.split(this.innerRangeSeparator).map(function (v) {
                  return _this3.parseDate(v.trim())
                })
              } else if (this.range) {
                var arr = text.split(this.innerRangeSeparator)

                if (arr.length !== 2) {
                  // Maybe the separator during the day is the same as the separator for the date
                  // eg: 2019-10-09-2020-01-02
                  arr = text.split(this.innerRangeSeparator.trim())
                }

                date = arr.map(function (v) {
                  return _this3.parseDate(v.trim())
                })
              } else {
                date = this.parseDate(text)
              }

              if (this.isValidValueAndNotDisabled(date)) {
                this.emitValue(date)
                this.blur()
              } else {
                this.$emit('input-error', text)
              }
            },
            handleInputInput: function handleInputInput(evt) {
              // slot input v-model
              this.userInput = typeof evt === 'string' ? evt : evt.target.value
            },
            handleInputKeydown: function handleInputKeydown(evt) {
              var keyCode = evt.keyCode // Tab 9 or Enter 13

              if (keyCode === 9) {
                this.closePopup()
              } else if (keyCode === 13) {
                this.handleInputChange()
              }
            },
            handleInputBlur: function handleInputBlur(evt) {
              // tab close
              this.$emit('blur', evt)
            },
            handleInputFocus: function handleInputFocus(evt) {
              this.openPopup(evt)
              this.$emit('focus', evt)
            },
            hasSlot: function hasSlot(name) {
              return !!(this.$slots[name] || this.$scopedSlots[name])
            },
            renderSlot: function renderSlot(name, fallback, props) {
              var slotFn = this.$scopedSlots[name]

              if (slotFn) {
                return slotFn(props) || fallback
              }

              return this.$slots[name] || fallback
            },
            renderInput: function renderInput() {
              var h = this.$createElement
              var prefixClass = this.prefixClass

              var props = _objectSpread2(
                {
                  name: 'date',
                  type: 'text',
                  autocomplete: 'off',
                  value: this.text,
                  class:
                    this.inputClass || ''.concat(this.prefixClass, '-input'),
                  readonly: !this.editable,
                  disabled: this.disabled,
                  placeholder: this.placeholder,
                },
                this.inputAttr
              )

              var value = props.value,
                className = props.class,
                attrs = _objectWithoutProperties(props, ['value', 'class'])

              var events = {
                keydown: this.handleInputKeydown,
                focus: this.handleInputFocus,
                blur: this.handleInputBlur,
                input: this.handleInputInput,
                change: this.handleInputChange,
              }
              var input = this.renderSlot(
                'input',
                h('input', {
                  domProps: {
                    value: value,
                  },
                  class: className,
                  attrs: _objectSpread2({}, attrs),
                  on: _objectSpread2({}, events),
                  ref: 'input',
                }),
                {
                  props: props,
                  events: events,
                }
              )
              var calendarIcon =
                this.type === 'time'
                  ? h(__vue_component__$2)
                  : h(__vue_component__$1)
              return h(
                'div',
                {
                  class: ''.concat(prefixClass, '-input-wrapper'),
                  on: {
                    mousedown: this.openPopup,
                  },
                },
                [
                  input,
                  this.showClearIcon
                    ? h(
                        'i',
                        {
                          class: ''.concat(prefixClass, '-icon-clear'),
                          on: {
                            mousedown: this.handleClear,
                          },
                        },
                        [this.renderSlot('icon-clear', h(__vue_component__$3))]
                      )
                    : null,
                  h(
                    'i',
                    {
                      class: ''.concat(prefixClass, '-icon-calendar'),
                    },
                    [this.renderSlot('icon-calendar', calendarIcon)]
                  ),
                ]
              )
            },
            renderContent: function renderContent() {
              var h = this.$createElement
              var map = this.range ? componentRangeMap : componentMap
              var Component = map[this.type] || map.default

              var props = _objectSpread2(
                {},
                pick(this.$props, Object.keys(Component.props)),
                {
                  value: this.currentValue,
                }
              )

              var on = _objectSpread2(
                {},
                pick(this.$listeners, Component.emits || []),
                {
                  select: this.handleSelectDate,
                }
              )

              var content = h(
                Component,
                helper([
                  {},
                  {
                    props: props,
                    on: on,
                    ref: 'picker',
                  },
                ])
              )
              return h(
                'div',
                {
                  class: ''.concat(this.prefixClass, '-datepicker-body'),
                },
                [
                  this.renderSlot('content', content, {
                    value: this.currentValue,
                    emit: this.handleSelectDate,
                  }),
                ]
              )
            },
            renderSidebar: function renderSidebar() {
              var _this4 = this

              var h = this.$createElement
              var prefixClass = this.prefixClass
              return h(
                'div',
                {
                  class: ''.concat(prefixClass, '-datepicker-sidebar'),
                },
                [
                  this.renderSlot('sidebar', null, {
                    value: this.currentValue,
                    emit: this.handleSelectDate,
                  }),
                  this.shortcuts.map(function (v, i) {
                    return h(
                      'button',
                      {
                        key: i,
                        attrs: {
                          'data-index': i,
                          type: 'button',
                        },
                        class: ''
                          .concat(prefixClass, '-btn ')
                          .concat(prefixClass, '-btn-text ')
                          .concat(prefixClass, '-btn-shortcut'),
                        on: {
                          click: _this4.handleSelectShortcut,
                        },
                      },
                      [v.text]
                    )
                  }),
                ]
              )
            },
            renderHeader: function renderHeader() {
              var h = this.$createElement
              return h(
                'div',
                {
                  class: ''.concat(this.prefixClass, '-datepicker-header'),
                },
                [
                  this.renderSlot('header', null, {
                    value: this.currentValue,
                    emit: this.handleSelectDate,
                  }),
                ]
              )
            },
            renderFooter: function renderFooter() {
              var h = this.$createElement
              var prefixClass = this.prefixClass
              return h(
                'div',
                {
                  class: ''.concat(prefixClass, '-datepicker-footer'),
                },
                [
                  this.renderSlot('footer', null, {
                    value: this.currentValue,
                    emit: this.handleSelectDate,
                  }),
                  this.confirm
                    ? h(
                        'button',
                        {
                          attrs: {
                            type: 'button',
                          },
                          class: ''
                            .concat(prefixClass, '-btn ')
                            .concat(prefixClass, '-datepicker-btn-confirm'),
                          on: {
                            click: this.handleConfirmDate,
                          },
                        },
                        [this.confirmText]
                      )
                    : null,
                ]
              )
            },
          },
          render: function render() {
            var _class

            var h = arguments[0]
            var prefixClass = this.prefixClass,
              inline = this.inline,
              disabled = this.disabled
            var sidedar =
              this.hasSlot('sidebar') || this.shortcuts.length
                ? this.renderSidebar()
                : null
            var content = h(
              'div',
              {
                class: ''.concat(prefixClass, '-datepicker-content'),
              },
              [
                this.hasSlot('header') ? this.renderHeader() : null,
                this.renderContent(),
                this.hasSlot('footer') || this.confirm
                  ? this.renderFooter()
                  : null,
              ]
            )
            return h(
              'div',
              {
                class:
                  ((_class = {}),
                  _defineProperty(
                    _class,
                    ''.concat(prefixClass, '-datepicker'),
                    true
                  ),
                  _defineProperty(
                    _class,
                    ''.concat(prefixClass, '-datepicker-range'),
                    this.range
                  ),
                  _defineProperty(
                    _class,
                    ''.concat(prefixClass, '-datepicker-inline'),
                    inline
                  ),
                  _defineProperty(_class, 'disabled', disabled),
                  _class),
              },
              [
                !inline ? this.renderInput() : null,
                !inline
                  ? h(
                      __vue_component__,
                      {
                        ref: 'popup',
                        class: this.popupClass,
                        style: this.popupStyle,
                        attrs: {
                          visible: this.popupVisible,
                          appendToBody: this.appendToBody,
                        },
                        on: {
                          clickoutside: this.handleClickOutSide,
                        },
                      },
                      [sidedar, content]
                    )
                  : h(
                      'div',
                      {
                        class: ''.concat(prefixClass, '-datepicker-main'),
                      },
                      [sidedar, content]
                    ),
              ]
            )
          },
        }

        DatePicker.locale = locale

        DatePicker.install = function install(Vue) {
          Vue.component(DatePicker.name, DatePicker)
        }

        if (typeof window !== 'undefined' && window.Vue) {
          DatePicker.install(window.Vue)
        }

        _extends(DatePicker, {
          CalendarPanel: CalendarPanel,
          CalendarRange: CalendarRange,
          TimePanel: __vue_component__$b,
          TimeRange: TimeRange,
          DatetimePanel: DatetimePanel,
          DatetimeRange: DatetimeRange,
        })

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          DatePicker

        /***/
      },

    /***/ './node_modules/dom7/dom7.esm.js':
      /*!***************************************!*\
  !*** ./node_modules/dom7/dom7.esm.js ***!
  \***************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */ $: () => /* binding */ $,
          /* harmony export */ add: () => /* binding */ add,
          /* harmony export */ addClass: () => /* binding */ addClass,
          /* harmony export */ animate: () => /* binding */ animate,
          /* harmony export */ animationEnd: () => /* binding */ animationEnd,
          /* harmony export */ append: () => /* binding */ append,
          /* harmony export */ appendTo: () => /* binding */ appendTo,
          /* harmony export */ attr: () => /* binding */ attr,
          /* harmony export */ blur: () => /* binding */ blur,
          /* harmony export */ change: () => /* binding */ change,
          /* harmony export */ children: () => /* binding */ children,
          /* harmony export */ click: () => /* binding */ click,
          /* harmony export */ closest: () => /* binding */ closest,
          /* harmony export */ css: () => /* binding */ css,
          /* harmony export */ data: () => /* binding */ data,
          /* harmony export */ dataset: () => /* binding */ dataset,
          /* harmony export */ detach: () => /* binding */ detach,
          /* harmony export */ each: () => /* binding */ each,
          /* harmony export */ empty: () => /* binding */ empty,
          /* harmony export */ eq: () => /* binding */ eq,
          /* harmony export */ filter: () => /* binding */ filter,
          /* harmony export */ find: () => /* binding */ find,
          /* harmony export */ focus: () => /* binding */ focus,
          /* harmony export */ focusin: () => /* binding */ focusin,
          /* harmony export */ focusout: () => /* binding */ focusout,
          /* harmony export */ hasClass: () => /* binding */ hasClass,
          /* harmony export */ height: () => /* binding */ height,
          /* harmony export */ hide: () => /* binding */ hide,
          /* harmony export */ html: () => /* binding */ html,
          /* harmony export */ index: () => /* binding */ index,
          /* harmony export */ insertAfter: () => /* binding */ insertAfter,
          /* harmony export */ insertBefore: () => /* binding */ insertBefore,
          /* harmony export */ is: () => /* binding */ is,
          /* harmony export */ keydown: () => /* binding */ keydown,
          /* harmony export */ keypress: () => /* binding */ keypress,
          /* harmony export */ keyup: () => /* binding */ keyup,
          /* harmony export */ mousedown: () => /* binding */ mousedown,
          /* harmony export */ mouseenter: () => /* binding */ mouseenter,
          /* harmony export */ mouseleave: () => /* binding */ mouseleave,
          /* harmony export */ mousemove: () => /* binding */ mousemove,
          /* harmony export */ mouseout: () => /* binding */ mouseout,
          /* harmony export */ mouseover: () => /* binding */ mouseover,
          /* harmony export */ mouseup: () => /* binding */ mouseup,
          /* harmony export */ next: () => /* binding */ next,
          /* harmony export */ nextAll: () => /* binding */ nextAll,
          /* harmony export */ off: () => /* binding */ off,
          /* harmony export */ offset: () => /* binding */ offset,
          /* harmony export */ on: () => /* binding */ on,
          /* harmony export */ once: () => /* binding */ once,
          /* harmony export */ outerHeight: () => /* binding */ outerHeight,
          /* harmony export */ outerWidth: () => /* binding */ outerWidth,
          /* harmony export */ parent: () => /* binding */ parent,
          /* harmony export */ parents: () => /* binding */ parents,
          /* harmony export */ prepend: () => /* binding */ prepend,
          /* harmony export */ prependTo: () => /* binding */ prependTo,
          /* harmony export */ prev: () => /* binding */ prev,
          /* harmony export */ prevAll: () => /* binding */ prevAll,
          /* harmony export */ prop: () => /* binding */ prop,
          /* harmony export */ remove: () => /* binding */ remove,
          /* harmony export */ removeAttr: () => /* binding */ removeAttr,
          /* harmony export */ removeClass: () => /* binding */ removeClass,
          /* harmony export */ removeData: () => /* binding */ removeData,
          /* harmony export */ resize: () => /* binding */ resize,
          /* harmony export */ scroll: () => /* binding */ scroll,
          /* harmony export */ scrollLeft: () => /* binding */ scrollLeft,
          /* harmony export */ scrollTo: () => /* binding */ scrollTo,
          /* harmony export */ scrollTop: () => /* binding */ scrollTop,
          /* harmony export */ show: () => /* binding */ show,
          /* harmony export */ siblings: () => /* binding */ siblings,
          /* harmony export */ stop: () => /* binding */ stop,
          /* harmony export */ styles: () => /* binding */ styles,
          /* harmony export */ submit: () => /* binding */ submit,
          /* harmony export */ text: () => /* binding */ text,
          /* harmony export */ toggleClass: () => /* binding */ toggleClass,
          /* harmony export */ touchend: () => /* binding */ touchend,
          /* harmony export */ touchmove: () => /* binding */ touchmove,
          /* harmony export */ touchstart: () => /* binding */ touchstart,
          /* harmony export */ transform: () => /* binding */ transform,
          /* harmony export */ transition: () => /* binding */ transition,
          /* harmony export */ transitionEnd: () => /* binding */ transitionEnd,
          /* harmony export */ trigger: () => /* binding */ trigger,
          /* harmony export */ val: () => /* binding */ val,
          /* harmony export */ value: () => /* binding */ value,
          /* harmony export */ width: () => /* binding */ width,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /**
         * Dom7 4.0.0
         * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
         * https://framework7.io/docs/dom7.html
         *
         * Copyright 2021, Vladimir Kharlampidi
         *
         * Licensed under MIT
         *
         * Released on: August 25, 2021
         */

        /* eslint-disable no-proto */
        function makeReactive(obj) {
          const proto = obj.__proto__
          Object.defineProperty(obj, '__proto__', {
            get() {
              return proto
            },

            set(value) {
              proto.__proto__ = value
            },
          })
        }

        class Dom7 extends Array {
          constructor(items) {
            super(...(items || []))
            makeReactive(this)
          }
        }

        function arrayFlat(arr = []) {
          const res = []
          arr.forEach((el) => {
            if (Array.isArray(el)) {
              res.push(...arrayFlat(el))
            } else {
              res.push(el)
            }
          })
          return res
        }
        function arrayFilter(arr, callback) {
          return Array.prototype.filter.call(arr, callback)
        }
        function arrayUnique(arr) {
          const uniqueArray = []

          for (let i = 0; i < arr.length; i += 1) {
            if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i])
          }

          return uniqueArray
        }
        function toCamelCase(string) {
          return string
            .toLowerCase()
            .replace(/-(.)/g, (match, group) => group.toUpperCase())
        }

        // eslint-disable-next-line

        function qsa(selector, context) {
          if (typeof selector !== 'string') {
            return [selector]
          }

          const a = []
          const res = context.querySelectorAll(selector)

          for (let i = 0; i < res.length; i += 1) {
            a.push(res[i])
          }

          return a
        }

        function $(selector, context) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          let arr = []

          if (!context && selector instanceof Dom7) {
            return selector
          }

          if (!selector) {
            return new Dom7(arr)
          }

          if (typeof selector === 'string') {
            const html = selector.trim()

            if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
              let toCreate = 'div'
              if (html.indexOf('<li') === 0) toCreate = 'ul'
              if (html.indexOf('<tr') === 0) toCreate = 'tbody'
              if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0)
                toCreate = 'tr'
              if (html.indexOf('<tbody') === 0) toCreate = 'table'
              if (html.indexOf('<option') === 0) toCreate = 'select'
              const tempParent = document.createElement(toCreate)
              tempParent.innerHTML = html

              for (let i = 0; i < tempParent.childNodes.length; i += 1) {
                arr.push(tempParent.childNodes[i])
              }
            } else {
              arr = qsa(selector.trim(), context || document)
            } // arr = qsa(selector, document);
          } else if (
            selector.nodeType ||
            selector === window ||
            selector === document
          ) {
            arr.push(selector)
          } else if (Array.isArray(selector)) {
            if (selector instanceof Dom7) return selector
            arr = selector
          }

          return new Dom7(arrayUnique(arr))
        }

        $.fn = Dom7.prototype

        // eslint-disable-next-line

        function addClass(...classes) {
          const classNames = arrayFlat(classes.map((c) => c.split(' ')))
          this.forEach((el) => {
            el.classList.add(...classNames)
          })
          return this
        }

        function removeClass(...classes) {
          const classNames = arrayFlat(classes.map((c) => c.split(' ')))
          this.forEach((el) => {
            el.classList.remove(...classNames)
          })
          return this
        }

        function toggleClass(...classes) {
          const classNames = arrayFlat(classes.map((c) => c.split(' ')))
          this.forEach((el) => {
            classNames.forEach((className) => {
              el.classList.toggle(className)
            })
          })
        }

        function hasClass(...classes) {
          const classNames = arrayFlat(classes.map((c) => c.split(' ')))
          return (
            arrayFilter(this, (el) => {
              return (
                classNames.filter((className) =>
                  el.classList.contains(className)
                ).length > 0
              )
            }).length > 0
          )
        }

        function attr(attrs, value) {
          if (arguments.length === 1 && typeof attrs === 'string') {
            // Get attr
            if (this[0]) return this[0].getAttribute(attrs)
            return undefined
          } // Set attrs

          for (let i = 0; i < this.length; i += 1) {
            if (arguments.length === 2) {
              // String
              this[i].setAttribute(attrs, value)
            } else {
              // Object
              for (const attrName in attrs) {
                this[i][attrName] = attrs[attrName]
                this[i].setAttribute(attrName, attrs[attrName])
              }
            }
          }

          return this
        }

        function removeAttr(attr) {
          for (let i = 0; i < this.length; i += 1) {
            this[i].removeAttribute(attr)
          }

          return this
        }

        function prop(props, value) {
          if (arguments.length === 1 && typeof props === 'string') {
            // Get prop
            if (this[0]) return this[0][props]
          } else {
            // Set props
            for (let i = 0; i < this.length; i += 1) {
              if (arguments.length === 2) {
                // String
                this[i][props] = value
              } else {
                // Object
                for (const propName in props) {
                  this[i][propName] = props[propName]
                }
              }
            }

            return this
          }

          return this
        }

        function data(key, value) {
          let el

          if (typeof value === 'undefined') {
            el = this[0]
            if (!el) return undefined // Get value

            if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {
              return el.dom7ElementDataStorage[key]
            }

            const dataKey = el.getAttribute(`data-${key}`)

            if (dataKey) {
              return dataKey
            }

            return undefined
          } // Set value

          for (let i = 0; i < this.length; i += 1) {
            el = this[i]
            if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {}
            el.dom7ElementDataStorage[key] = value
          }

          return this
        }

        function removeData(key) {
          for (let i = 0; i < this.length; i += 1) {
            const el = this[i]

            if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {
              el.dom7ElementDataStorage[key] = null
              delete el.dom7ElementDataStorage[key]
            }
          }
        }

        function dataset() {
          const el = this[0]
          if (!el) return undefined
          const dataset = {} // eslint-disable-line

          if (el.dataset) {
            for (const dataKey in el.dataset) {
              dataset[dataKey] = el.dataset[dataKey]
            }
          } else {
            for (let i = 0; i < el.attributes.length; i += 1) {
              const attr = el.attributes[i]

              if (attr.name.indexOf('data-') >= 0) {
                dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value
              }
            }
          }

          for (const key in dataset) {
            if (dataset[key] === 'false') dataset[key] = false
            else if (dataset[key] === 'true') dataset[key] = true
            else if (parseFloat(dataset[key]) === dataset[key] * 1)
              dataset[key] *= 1
          }

          return dataset
        }

        function val(value) {
          if (typeof value === 'undefined') {
            // get value
            const el = this[0]
            if (!el) return undefined

            if (el.multiple && el.nodeName.toLowerCase() === 'select') {
              const values = []

              for (let i = 0; i < el.selectedOptions.length; i += 1) {
                values.push(el.selectedOptions[i].value)
              }

              return values
            }

            return el.value
          } // set value

          for (let i = 0; i < this.length; i += 1) {
            const el = this[i]

            if (
              Array.isArray(value) &&
              el.multiple &&
              el.nodeName.toLowerCase() === 'select'
            ) {
              for (let j = 0; j < el.options.length; j += 1) {
                el.options[j].selected = value.indexOf(el.options[j].value) >= 0
              }
            } else {
              el.value = value
            }
          }

          return this
        }

        function value(value) {
          return this.val(value)
        }

        function transform(transform) {
          for (let i = 0; i < this.length; i += 1) {
            this[i].style.transform = transform
          }

          return this
        }

        function transition(duration) {
          for (let i = 0; i < this.length; i += 1) {
            this[i].style.transitionDuration =
              typeof duration !== 'string' ? `${duration}ms` : duration
          }

          return this
        }

        function on(...args) {
          let [eventType, targetSelector, listener, capture] = args

          if (typeof args[1] === 'function') {
            ;[eventType, listener, capture] = args
            targetSelector = undefined
          }

          if (!capture) capture = false

          function handleLiveEvent(e) {
            const target = e.target
            if (!target) return
            const eventData = e.target.dom7EventData || []

            if (eventData.indexOf(e) < 0) {
              eventData.unshift(e)
            }

            if ($(target).is(targetSelector)) listener.apply(target, eventData)
            else {
              const parents = $(target).parents() // eslint-disable-line

              for (let k = 0; k < parents.length; k += 1) {
                if ($(parents[k]).is(targetSelector))
                  listener.apply(parents[k], eventData)
              }
            }
          }

          function handleEvent(e) {
            const eventData = e && e.target ? e.target.dom7EventData || [] : []

            if (eventData.indexOf(e) < 0) {
              eventData.unshift(e)
            }

            listener.apply(this, eventData)
          }

          const events = eventType.split(' ')
          let j

          for (let i = 0; i < this.length; i += 1) {
            const el = this[i]

            if (!targetSelector) {
              for (j = 0; j < events.length; j += 1) {
                const event = events[j]
                if (!el.dom7Listeners) el.dom7Listeners = {}
                if (!el.dom7Listeners[event]) el.dom7Listeners[event] = []
                el.dom7Listeners[event].push({
                  listener,
                  proxyListener: handleEvent,
                })
                el.addEventListener(event, handleEvent, capture)
              }
            } else {
              // Live events
              for (j = 0; j < events.length; j += 1) {
                const event = events[j]
                if (!el.dom7LiveListeners) el.dom7LiveListeners = {}
                if (!el.dom7LiveListeners[event])
                  el.dom7LiveListeners[event] = []
                el.dom7LiveListeners[event].push({
                  listener,
                  proxyListener: handleLiveEvent,
                })
                el.addEventListener(event, handleLiveEvent, capture)
              }
            }
          }

          return this
        }

        function off(...args) {
          let [eventType, targetSelector, listener, capture] = args

          if (typeof args[1] === 'function') {
            ;[eventType, listener, capture] = args
            targetSelector = undefined
          }

          if (!capture) capture = false
          const events = eventType.split(' ')

          for (let i = 0; i < events.length; i += 1) {
            const event = events[i]

            for (let j = 0; j < this.length; j += 1) {
              const el = this[j]
              let handlers

              if (!targetSelector && el.dom7Listeners) {
                handlers = el.dom7Listeners[event]
              } else if (targetSelector && el.dom7LiveListeners) {
                handlers = el.dom7LiveListeners[event]
              }

              if (handlers && handlers.length) {
                for (let k = handlers.length - 1; k >= 0; k -= 1) {
                  const handler = handlers[k]

                  if (listener && handler.listener === listener) {
                    el.removeEventListener(
                      event,
                      handler.proxyListener,
                      capture
                    )
                    handlers.splice(k, 1)
                  } else if (
                    listener &&
                    handler.listener &&
                    handler.listener.dom7proxy &&
                    handler.listener.dom7proxy === listener
                  ) {
                    el.removeEventListener(
                      event,
                      handler.proxyListener,
                      capture
                    )
                    handlers.splice(k, 1)
                  } else if (!listener) {
                    el.removeEventListener(
                      event,
                      handler.proxyListener,
                      capture
                    )
                    handlers.splice(k, 1)
                  }
                }
              }
            }
          }

          return this
        }

        function once(...args) {
          const dom = this
          let [eventName, targetSelector, listener, capture] = args

          if (typeof args[1] === 'function') {
            ;[eventName, listener, capture] = args
            targetSelector = undefined
          }

          function onceHandler(...eventArgs) {
            listener.apply(this, eventArgs)
            dom.off(eventName, targetSelector, onceHandler, capture)

            if (onceHandler.dom7proxy) {
              delete onceHandler.dom7proxy
            }
          }

          onceHandler.dom7proxy = listener
          return dom.on(eventName, targetSelector, onceHandler, capture)
        }

        function trigger(...args) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const events = args[0].split(' ')
          const eventData = args[1]

          for (let i = 0; i < events.length; i += 1) {
            const event = events[i]

            for (let j = 0; j < this.length; j += 1) {
              const el = this[j]

              if (window.CustomEvent) {
                const evt = new window.CustomEvent(event, {
                  detail: eventData,
                  bubbles: true,
                  cancelable: true,
                })
                el.dom7EventData = args.filter(
                  (data, dataIndex) => dataIndex > 0
                )
                el.dispatchEvent(evt)
                el.dom7EventData = []
                delete el.dom7EventData
              }
            }
          }

          return this
        }

        function transitionEnd(callback) {
          const dom = this

          function fireCallBack(e) {
            if (e.target !== this) return
            callback.call(this, e)
            dom.off('transitionend', fireCallBack)
          }

          if (callback) {
            dom.on('transitionend', fireCallBack)
          }

          return this
        }

        function animationEnd(callback) {
          const dom = this

          function fireCallBack(e) {
            if (e.target !== this) return
            callback.call(this, e)
            dom.off('animationend', fireCallBack)
          }

          if (callback) {
            dom.on('animationend', fireCallBack)
          }

          return this
        }

        function width() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

          if (this[0] === window) {
            return window.innerWidth
          }

          if (this.length > 0) {
            return parseFloat(this.css('width'))
          }

          return null
        }

        function outerWidth(includeMargins) {
          if (this.length > 0) {
            if (includeMargins) {
              const styles = this.styles()
              return (
                this[0].offsetWidth +
                parseFloat(styles.getPropertyValue('margin-right')) +
                parseFloat(styles.getPropertyValue('margin-left'))
              )
            }

            return this[0].offsetWidth
          }

          return null
        }

        function height() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

          if (this[0] === window) {
            return window.innerHeight
          }

          if (this.length > 0) {
            return parseFloat(this.css('height'))
          }

          return null
        }

        function outerHeight(includeMargins) {
          if (this.length > 0) {
            if (includeMargins) {
              const styles = this.styles()
              return (
                this[0].offsetHeight +
                parseFloat(styles.getPropertyValue('margin-top')) +
                parseFloat(styles.getPropertyValue('margin-bottom'))
              )
            }

            return this[0].offsetHeight
          }

          return null
        }

        function offset() {
          if (this.length > 0) {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            const document = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
            const el = this[0]
            const box = el.getBoundingClientRect()
            const body = document.body
            const clientTop = el.clientTop || body.clientTop || 0
            const clientLeft = el.clientLeft || body.clientLeft || 0
            const scrollTop = el === window ? window.scrollY : el.scrollTop
            const scrollLeft = el === window ? window.scrollX : el.scrollLeft
            return {
              top: box.top + scrollTop - clientTop,
              left: box.left + scrollLeft - clientLeft,
            }
          }

          return null
        }

        function hide() {
          for (let i = 0; i < this.length; i += 1) {
            this[i].style.display = 'none'
          }

          return this
        }

        function show() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

          for (let i = 0; i < this.length; i += 1) {
            const el = this[i]

            if (el.style.display === 'none') {
              el.style.display = ''
            }

            if (
              window.getComputedStyle(el, null).getPropertyValue('display') ===
              'none'
            ) {
              // Still not visible
              el.style.display = 'block'
            }
          }

          return this
        }

        function styles() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          if (this[0]) return window.getComputedStyle(this[0], null)
          return {}
        }

        function css(props, value) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let i

          if (arguments.length === 1) {
            if (typeof props === 'string') {
              // .css('width')
              if (this[0])
                return window
                  .getComputedStyle(this[0], null)
                  .getPropertyValue(props)
            } else {
              // .css({ width: '100px' })
              for (i = 0; i < this.length; i += 1) {
                for (const prop in props) {
                  this[i].style[prop] = props[prop]
                }
              }

              return this
            }
          }

          if (arguments.length === 2 && typeof props === 'string') {
            // .css('width', '100px')
            for (i = 0; i < this.length; i += 1) {
              this[i].style[props] = value
            }

            return this
          }

          return this
        }

        function each(callback) {
          if (!callback) return this
          this.forEach((el, index) => {
            callback.apply(el, [el, index])
          })
          return this
        }

        function filter(callback) {
          const result = arrayFilter(this, callback)
          return $(result)
        }

        function html(html) {
          if (typeof html === 'undefined') {
            return this[0] ? this[0].innerHTML : null
          }

          for (let i = 0; i < this.length; i += 1) {
            this[i].innerHTML = html
          }

          return this
        }

        function text(text) {
          if (typeof text === 'undefined') {
            return this[0] ? this[0].textContent.trim() : null
          }

          for (let i = 0; i < this.length; i += 1) {
            this[i].textContent = text
          }

          return this
        }

        function is(selector) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const el = this[0]
          let compareWith
          let i
          if (!el || typeof selector === 'undefined') return false

          if (typeof selector === 'string') {
            if (el.matches) return el.matches(selector)
            if (el.webkitMatchesSelector)
              return el.webkitMatchesSelector(selector)
            if (el.msMatchesSelector) return el.msMatchesSelector(selector)
            compareWith = $(selector)

            for (i = 0; i < compareWith.length; i += 1) {
              if (compareWith[i] === el) return true
            }

            return false
          }

          if (selector === document) {
            return el === document
          }

          if (selector === window) {
            return el === window
          }

          if (selector.nodeType || selector instanceof Dom7) {
            compareWith = selector.nodeType ? [selector] : selector

            for (i = 0; i < compareWith.length; i += 1) {
              if (compareWith[i] === el) return true
            }

            return false
          }

          return false
        }

        function index() {
          let child = this[0]
          let i

          if (child) {
            i = 0 // eslint-disable-next-line

            while ((child = child.previousSibling) !== null) {
              if (child.nodeType === 1) i += 1
            }

            return i
          }

          return undefined
        }

        function eq(index) {
          if (typeof index === 'undefined') return this
          const length = this.length

          if (index > length - 1) {
            return $([])
          }

          if (index < 0) {
            const returnIndex = length + index
            if (returnIndex < 0) return $([])
            return $([this[returnIndex]])
          }

          return $([this[index]])
        }

        function append(...els) {
          let newChild
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()

          for (let k = 0; k < els.length; k += 1) {
            newChild = els[k]

            for (let i = 0; i < this.length; i += 1) {
              if (typeof newChild === 'string') {
                const tempDiv = document.createElement('div')
                tempDiv.innerHTML = newChild

                while (tempDiv.firstChild) {
                  this[i].appendChild(tempDiv.firstChild)
                }
              } else if (newChild instanceof Dom7) {
                for (let j = 0; j < newChild.length; j += 1) {
                  this[i].appendChild(newChild[j])
                }
              } else {
                this[i].appendChild(newChild)
              }
            }
          }

          return this
        }

        function appendTo(parent) {
          $(parent).append(this)
          return this
        }

        function prepend(newChild) {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          let i
          let j

          for (i = 0; i < this.length; i += 1) {
            if (typeof newChild === 'string') {
              const tempDiv = document.createElement('div')
              tempDiv.innerHTML = newChild

              for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
                this[i].insertBefore(
                  tempDiv.childNodes[j],
                  this[i].childNodes[0]
                )
              }
            } else if (newChild instanceof Dom7) {
              for (j = 0; j < newChild.length; j += 1) {
                this[i].insertBefore(newChild[j], this[i].childNodes[0])
              }
            } else {
              this[i].insertBefore(newChild, this[i].childNodes[0])
            }
          }

          return this
        }

        function prependTo(parent) {
          $(parent).prepend(this)
          return this
        }

        function insertBefore(selector) {
          const before = $(selector)

          for (let i = 0; i < this.length; i += 1) {
            if (before.length === 1) {
              before[0].parentNode.insertBefore(this[i], before[0])
            } else if (before.length > 1) {
              for (let j = 0; j < before.length; j += 1) {
                before[j].parentNode.insertBefore(
                  this[i].cloneNode(true),
                  before[j]
                )
              }
            }
          }
        }

        function insertAfter(selector) {
          const after = $(selector)

          for (let i = 0; i < this.length; i += 1) {
            if (after.length === 1) {
              after[0].parentNode.insertBefore(this[i], after[0].nextSibling)
            } else if (after.length > 1) {
              for (let j = 0; j < after.length; j += 1) {
                after[j].parentNode.insertBefore(
                  this[i].cloneNode(true),
                  after[j].nextSibling
                )
              }
            }
          }
        }

        function next(selector) {
          if (this.length > 0) {
            if (selector) {
              if (
                this[0].nextElementSibling &&
                $(this[0].nextElementSibling).is(selector)
              ) {
                return $([this[0].nextElementSibling])
              }

              return $([])
            }

            if (this[0].nextElementSibling)
              return $([this[0].nextElementSibling])
            return $([])
          }

          return $([])
        }

        function nextAll(selector) {
          const nextEls = []
          let el = this[0]
          if (!el) return $([])

          while (el.nextElementSibling) {
            const next = el.nextElementSibling // eslint-disable-line

            if (selector) {
              if ($(next).is(selector)) nextEls.push(next)
            } else nextEls.push(next)

            el = next
          }

          return $(nextEls)
        }

        function prev(selector) {
          if (this.length > 0) {
            const el = this[0]

            if (selector) {
              if (
                el.previousElementSibling &&
                $(el.previousElementSibling).is(selector)
              ) {
                return $([el.previousElementSibling])
              }

              return $([])
            }

            if (el.previousElementSibling) return $([el.previousElementSibling])
            return $([])
          }

          return $([])
        }

        function prevAll(selector) {
          const prevEls = []
          let el = this[0]
          if (!el) return $([])

          while (el.previousElementSibling) {
            const prev = el.previousElementSibling // eslint-disable-line

            if (selector) {
              if ($(prev).is(selector)) prevEls.push(prev)
            } else prevEls.push(prev)

            el = prev
          }

          return $(prevEls)
        }

        function siblings(selector) {
          return this.nextAll(selector).add(this.prevAll(selector))
        }

        function parent(selector) {
          const parents = [] // eslint-disable-line

          for (let i = 0; i < this.length; i += 1) {
            if (this[i].parentNode !== null) {
              if (selector) {
                if ($(this[i].parentNode).is(selector))
                  parents.push(this[i].parentNode)
              } else {
                parents.push(this[i].parentNode)
              }
            }
          }

          return $(parents)
        }

        function parents(selector) {
          const parents = [] // eslint-disable-line

          for (let i = 0; i < this.length; i += 1) {
            let parent = this[i].parentNode // eslint-disable-line

            while (parent) {
              if (selector) {
                if ($(parent).is(selector)) parents.push(parent)
              } else {
                parents.push(parent)
              }

              parent = parent.parentNode
            }
          }

          return $(parents)
        }

        function closest(selector) {
          let closest = this // eslint-disable-line

          if (typeof selector === 'undefined') {
            return $([])
          }

          if (!closest.is(selector)) {
            closest = closest.parents(selector).eq(0)
          }

          return closest
        }

        function find(selector) {
          const foundElements = []

          for (let i = 0; i < this.length; i += 1) {
            const found = this[i].querySelectorAll(selector)

            for (let j = 0; j < found.length; j += 1) {
              foundElements.push(found[j])
            }
          }

          return $(foundElements)
        }

        function children(selector) {
          const children = [] // eslint-disable-line

          for (let i = 0; i < this.length; i += 1) {
            const childNodes = this[i].children

            for (let j = 0; j < childNodes.length; j += 1) {
              if (!selector || $(childNodes[j]).is(selector)) {
                children.push(childNodes[j])
              }
            }
          }

          return $(children)
        }

        function remove() {
          for (let i = 0; i < this.length; i += 1) {
            if (this[i].parentNode) this[i].parentNode.removeChild(this[i])
          }

          return this
        }

        function detach() {
          return this.remove()
        }

        function add(...els) {
          const dom = this
          let i
          let j

          for (i = 0; i < els.length; i += 1) {
            const toAdd = $(els[i])

            for (j = 0; j < toAdd.length; j += 1) {
              dom.push(toAdd[j])
            }
          }

          return dom
        }

        function empty() {
          for (let i = 0; i < this.length; i += 1) {
            const el = this[i]

            if (el.nodeType === 1) {
              for (let j = 0; j < el.childNodes.length; j += 1) {
                if (el.childNodes[j].parentNode) {
                  el.childNodes[j].parentNode.removeChild(el.childNodes[j])
                }
              }

              el.textContent = ''
            }
          }

          return this
        }

        // eslint-disable-next-line

        function scrollTo(...args) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let [left, top, duration, easing, callback] = args

          if (args.length === 4 && typeof easing === 'function') {
            callback = easing
            ;[left, top, duration, callback, easing] = args
          }

          if (typeof easing === 'undefined') easing = 'swing'
          return this.each(function animate() {
            const el = this
            let currentTop
            let currentLeft
            let maxTop
            let maxLeft
            let newTop
            let newLeft
            let scrollTop // eslint-disable-line

            let scrollLeft // eslint-disable-line

            let animateTop = top > 0 || top === 0
            let animateLeft = left > 0 || left === 0

            if (typeof easing === 'undefined') {
              easing = 'swing'
            }

            if (animateTop) {
              currentTop = el.scrollTop

              if (!duration) {
                el.scrollTop = top
              }
            }

            if (animateLeft) {
              currentLeft = el.scrollLeft

              if (!duration) {
                el.scrollLeft = left
              }
            }

            if (!duration) return

            if (animateTop) {
              maxTop = el.scrollHeight - el.offsetHeight
              newTop = Math.max(Math.min(top, maxTop), 0)
            }

            if (animateLeft) {
              maxLeft = el.scrollWidth - el.offsetWidth
              newLeft = Math.max(Math.min(left, maxLeft), 0)
            }

            let startTime = null
            if (animateTop && newTop === currentTop) animateTop = false
            if (animateLeft && newLeft === currentLeft) animateLeft = false

            function render(time = new Date().getTime()) {
              if (startTime === null) {
                startTime = time
              }

              const progress = Math.max(
                Math.min((time - startTime) / duration, 1),
                0
              )
              const easeProgress =
                easing === 'linear'
                  ? progress
                  : 0.5 - Math.cos(progress * Math.PI) / 2
              let done
              if (animateTop)
                scrollTop = currentTop + easeProgress * (newTop - currentTop)
              if (animateLeft)
                scrollLeft =
                  currentLeft + easeProgress * (newLeft - currentLeft)

              if (animateTop && newTop > currentTop && scrollTop >= newTop) {
                el.scrollTop = newTop
                done = true
              }

              if (animateTop && newTop < currentTop && scrollTop <= newTop) {
                el.scrollTop = newTop
                done = true
              }

              if (
                animateLeft &&
                newLeft > currentLeft &&
                scrollLeft >= newLeft
              ) {
                el.scrollLeft = newLeft
                done = true
              }

              if (
                animateLeft &&
                newLeft < currentLeft &&
                scrollLeft <= newLeft
              ) {
                el.scrollLeft = newLeft
                done = true
              }

              if (done) {
                if (callback) callback()
                return
              }

              if (animateTop) el.scrollTop = scrollTop
              if (animateLeft) el.scrollLeft = scrollLeft
              window.requestAnimationFrame(render)
            }

            window.requestAnimationFrame(render)
          })
        } // scrollTop(top, duration, easing, callback) {

        function scrollTop(...args) {
          let [top, duration, easing, callback] = args

          if (args.length === 3 && typeof easing === 'function') {
            ;[top, duration, callback, easing] = args
          }

          const dom = this

          if (typeof top === 'undefined') {
            if (dom.length > 0) return dom[0].scrollTop
            return null
          }

          return dom.scrollTo(undefined, top, duration, easing, callback)
        }

        function scrollLeft(...args) {
          let [left, duration, easing, callback] = args

          if (args.length === 3 && typeof easing === 'function') {
            ;[left, duration, callback, easing] = args
          }

          const dom = this

          if (typeof left === 'undefined') {
            if (dom.length > 0) return dom[0].scrollLeft
            return null
          }

          return dom.scrollTo(left, undefined, duration, easing, callback)
        }

        // eslint-disable-next-line

        function animate(initialProps, initialParams) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const els = this
          const a = {
            props: Object.assign({}, initialProps),
            params: Object.assign(
              {
                duration: 300,
                easing: 'swing', // or 'linear'

                /* Callbacks
      begin(elements)
      complete(elements)
      progress(elements, complete, remaining, start, tweenValue)
      */
              },
              initialParams
            ),
            elements: els,
            animating: false,
            que: [],

            easingProgress(easing, progress) {
              if (easing === 'swing') {
                return 0.5 - Math.cos(progress * Math.PI) / 2
              }

              if (typeof easing === 'function') {
                return easing(progress)
              }

              return progress
            },

            stop() {
              if (a.frameId) {
                window.cancelAnimationFrame(a.frameId)
              }

              a.animating = false
              a.elements.each((el) => {
                const element = el
                delete element.dom7AnimateInstance
              })
              a.que = []
            },

            done(complete) {
              a.animating = false
              a.elements.each((el) => {
                const element = el
                delete element.dom7AnimateInstance
              })
              if (complete) complete(els)

              if (a.que.length > 0) {
                const que = a.que.shift()
                a.animate(que[0], que[1])
              }
            },

            animate(props, params) {
              if (a.animating) {
                a.que.push([props, params])
                return a
              }

              const elements = [] // Define & Cache Initials & Units

              a.elements.each((el, index) => {
                let initialFullValue
                let initialValue
                let unit
                let finalValue
                let finalFullValue
                if (!el.dom7AnimateInstance)
                  a.elements[index].dom7AnimateInstance = a
                elements[index] = {
                  container: el,
                }
                Object.keys(props).forEach((prop) => {
                  initialFullValue = window
                    .getComputedStyle(el, null)
                    .getPropertyValue(prop)
                    .replace(',', '.')
                  initialValue = parseFloat(initialFullValue)
                  unit = initialFullValue.replace(initialValue, '')
                  finalValue = parseFloat(props[prop])
                  finalFullValue = props[prop] + unit
                  elements[index][prop] = {
                    initialFullValue,
                    initialValue,
                    unit,
                    finalValue,
                    finalFullValue,
                    currentValue: initialValue,
                  }
                })
              })
              let startTime = null
              let time
              let elementsDone = 0
              let propsDone = 0
              let done
              let began = false
              a.animating = true

              function render() {
                time = new Date().getTime()
                let progress
                let easeProgress // let el;

                if (!began) {
                  began = true
                  if (params.begin) params.begin(els)
                }

                if (startTime === null) {
                  startTime = time
                }

                if (params.progress) {
                  // eslint-disable-next-line
                  params.progress(
                    els,
                    Math.max(
                      Math.min((time - startTime) / params.duration, 1),
                      0
                    ),
                    startTime + params.duration - time < 0
                      ? 0
                      : startTime + params.duration - time,
                    startTime
                  )
                }

                elements.forEach((element) => {
                  const el = element
                  if (done || el.done) return
                  Object.keys(props).forEach((prop) => {
                    if (done || el.done) return
                    progress = Math.max(
                      Math.min((time - startTime) / params.duration, 1),
                      0
                    )
                    easeProgress = a.easingProgress(params.easing, progress)
                    const { initialValue, finalValue, unit } = el[prop]
                    el[prop].currentValue =
                      initialValue + easeProgress * (finalValue - initialValue)
                    const currentValue = el[prop].currentValue

                    if (
                      (finalValue > initialValue &&
                        currentValue >= finalValue) ||
                      (finalValue < initialValue && currentValue <= finalValue)
                    ) {
                      el.container.style[prop] = finalValue + unit
                      propsDone += 1

                      if (propsDone === Object.keys(props).length) {
                        el.done = true
                        elementsDone += 1
                      }

                      if (elementsDone === elements.length) {
                        done = true
                      }
                    }

                    if (done) {
                      a.done(params.complete)
                      return
                    }

                    el.container.style[prop] = currentValue + unit
                  })
                })
                if (done) return // Then call

                a.frameId = window.requestAnimationFrame(render)
              }

              a.frameId = window.requestAnimationFrame(render)
              return a
            },
          }

          if (a.elements.length === 0) {
            return els
          }

          let animateInstance

          for (let i = 0; i < a.elements.length; i += 1) {
            if (a.elements[i].dom7AnimateInstance) {
              animateInstance = a.elements[i].dom7AnimateInstance
            } else a.elements[i].dom7AnimateInstance = a
          }

          if (!animateInstance) {
            animateInstance = a
          }

          if (initialProps === 'stop') {
            animateInstance.stop()
          } else {
            animateInstance.animate(a.props, a.params)
          }

          return els
        }

        function stop() {
          const els = this

          for (let i = 0; i < els.length; i += 1) {
            if (els[i].dom7AnimateInstance) {
              els[i].dom7AnimateInstance.stop()
            }
          }
        }

        const noTrigger = 'resize scroll'.split(' ')

        function shortcut(name) {
          function eventHandler(...args) {
            if (typeof args[0] === 'undefined') {
              for (let i = 0; i < this.length; i += 1) {
                if (noTrigger.indexOf(name) < 0) {
                  if (name in this[i]) this[i][name]()
                  else {
                    $(this[i]).trigger(name)
                  }
                }
              }

              return this
            }

            return this.on(name, ...args)
          }

          return eventHandler
        }

        const click = shortcut('click')
        const blur = shortcut('blur')
        const focus = shortcut('focus')
        const focusin = shortcut('focusin')
        const focusout = shortcut('focusout')
        const keyup = shortcut('keyup')
        const keydown = shortcut('keydown')
        const keypress = shortcut('keypress')
        const submit = shortcut('submit')
        const change = shortcut('change')
        const mousedown = shortcut('mousedown')
        const mousemove = shortcut('mousemove')
        const mouseup = shortcut('mouseup')
        const mouseenter = shortcut('mouseenter')
        const mouseleave = shortcut('mouseleave')
        const mouseout = shortcut('mouseout')
        const mouseover = shortcut('mouseover')
        const touchstart = shortcut('touchstart')
        const touchend = shortcut('touchend')
        const touchmove = shortcut('touchmove')
        const resize = shortcut('resize')
        const scroll = shortcut('scroll')

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = $

        /***/
      },

    /***/ './node_modules/ssr-window/ssr-window.esm.js':
      /*!***************************************************!*\
  !*** ./node_modules/ssr-window/ssr-window.esm.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ extend: () => /* binding */ extend,
          /* harmony export */ getDocument: () => /* binding */ getDocument,
          /* harmony export */ getWindow: () => /* binding */ getWindow,
          /* harmony export */ ssrDocument: () => /* binding */ ssrDocument,
          /* harmony export */ ssrWindow: () => /* binding */ ssrWindow,
          /* harmony export */
        })
        /**
         * SSR Window 4.0.0
         * Better handling for window object in SSR environment
         * https://github.com/nolimits4web/ssr-window
         *
         * Copyright 2021, Vladimir Kharlampidi
         *
         * Licensed under MIT
         *
         * Released on: August 25, 2021
         */
        /* eslint-disable no-param-reassign */
        function isObject(obj) {
          return (
            obj !== null &&
            typeof obj === 'object' &&
            'constructor' in obj &&
            obj.constructor === Object
          )
        }
        function extend(target = {}, src = {}) {
          Object.keys(src).forEach((key) => {
            if (typeof target[key] === 'undefined') target[key] = src[key]
            else if (
              isObject(src[key]) &&
              isObject(target[key]) &&
              Object.keys(src[key]).length > 0
            ) {
              extend(target[key], src[key])
            }
          })
        }

        const ssrDocument = {
          body: {},
          addEventListener() {},
          removeEventListener() {},
          activeElement: {
            blur() {},
            nodeName: '',
          },
          querySelector() {
            return null
          },
          querySelectorAll() {
            return []
          },
          getElementById() {
            return null
          },
          createEvent() {
            return {
              initEvent() {},
            }
          },
          createElement() {
            return {
              children: [],
              childNodes: [],
              style: {},
              setAttribute() {},
              getElementsByTagName() {
                return []
              },
            }
          },
          createElementNS() {
            return {}
          },
          importNode() {
            return null
          },
          location: {
            hash: '',
            host: '',
            hostname: '',
            href: '',
            origin: '',
            pathname: '',
            protocol: '',
            search: '',
          },
        }
        function getDocument() {
          const doc = typeof document !== 'undefined' ? document : {}
          extend(doc, ssrDocument)
          return doc
        }

        const ssrWindow = {
          document: ssrDocument,
          navigator: {
            userAgent: '',
          },
          location: {
            hash: '',
            host: '',
            hostname: '',
            href: '',
            origin: '',
            pathname: '',
            protocol: '',
            search: '',
          },
          history: {
            replaceState() {},
            pushState() {},
            go() {},
            back() {},
          },
          CustomEvent: function CustomEvent() {
            return this
          },
          addEventListener() {},
          removeEventListener() {},
          getComputedStyle() {
            return {
              getPropertyValue() {
                return ''
              },
            }
          },
          Image() {},
          Date() {},
          screen: {},
          setTimeout() {},
          clearTimeout() {},
          matchMedia() {
            return {}
          },
          requestAnimationFrame(callback) {
            if (typeof setTimeout === 'undefined') {
              callback()
              return null
            }
            return setTimeout(callback, 0)
          },
          cancelAnimationFrame(id) {
            if (typeof setTimeout === 'undefined') {
              return
            }
            clearTimeout(id)
          },
        }
        function getWindow() {
          const win = typeof window !== 'undefined' ? window : {}
          extend(win, ssrWindow)
          return win
        }

        /***/
      },

    /***/ './node_modules/swiper/core/breakpoints/getBreakpoint.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/breakpoints/getBreakpoint.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ getBreakpoint,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function getBreakpoint(breakpoints, base = 'window', containerEl) {
          if (!breakpoints || (base === 'container' && !containerEl))
            return undefined
          let breakpoint = false
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const currentHeight =
            base === 'window' ? window.innerHeight : containerEl.clientHeight
          const points = Object.keys(breakpoints).map((point) => {
            if (typeof point === 'string' && point.indexOf('@') === 0) {
              const minRatio = parseFloat(point.substr(1))
              const value = currentHeight * minRatio
              return {
                value,
                point,
              }
            }

            return {
              value: point,
              point,
            }
          })
          points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10))

          for (let i = 0; i < points.length; i += 1) {
            const { point, value } = points[i]

            if (base === 'window') {
              if (window.matchMedia(`(min-width: ${value}px)`).matches) {
                breakpoint = point
              }
            } else if (value <= containerEl.clientWidth) {
              breakpoint = point
            }
          }

          return breakpoint || 'max'
        }

        /***/
      },

    /***/ './node_modules/swiper/core/breakpoints/index.js':
      /*!*******************************************************!*\
  !*** ./node_modules/swiper/core/breakpoints/index.js ***!
  \*******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _setBreakpoint_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./setBreakpoint.js */ './node_modules/swiper/core/breakpoints/setBreakpoint.js'
          )
        /* harmony import */ var _getBreakpoint_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./getBreakpoint.js */ './node_modules/swiper/core/breakpoints/getBreakpoint.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          setBreakpoint:
            _setBreakpoint_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          getBreakpoint:
            _getBreakpoint_js__WEBPACK_IMPORTED_MODULE_1__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/breakpoints/setBreakpoint.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/breakpoints/setBreakpoint.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ setBreakpoint,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        const isGridEnabled = (swiper, params) => {
          return swiper.grid && params.grid && params.grid.rows > 1
        }

        function setBreakpoint() {
          const swiper = this
          const {
            activeIndex,
            initialized,
            loopedSlides = 0,
            params,
            $el,
          } = swiper
          const breakpoints = params.breakpoints
          if (
            !breakpoints ||
            (breakpoints && Object.keys(breakpoints).length === 0)
          )
            return // Get breakpoint for window width and update parameters

          const breakpoint = swiper.getBreakpoint(
            breakpoints,
            swiper.params.breakpointsBase,
            swiper.el
          )
          if (!breakpoint || swiper.currentBreakpoint === breakpoint) return
          const breakpointOnlyParams =
            breakpoint in breakpoints ? breakpoints[breakpoint] : undefined
          const breakpointParams = breakpointOnlyParams || swiper.originalParams
          const wasMultiRow = isGridEnabled(swiper, params)
          const isMultiRow = isGridEnabled(swiper, breakpointParams)
          const wasEnabled = params.enabled

          if (wasMultiRow && !isMultiRow) {
            $el.removeClass(
              `${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`
            )
            swiper.emitContainerClasses()
          } else if (!wasMultiRow && isMultiRow) {
            $el.addClass(`${params.containerModifierClass}grid`)

            if (
              (breakpointParams.grid.fill &&
                breakpointParams.grid.fill === 'column') ||
              (!breakpointParams.grid.fill && params.grid.fill === 'column')
            ) {
              $el.addClass(`${params.containerModifierClass}grid-column`)
            }

            swiper.emitContainerClasses()
          }

          const directionChanged =
            breakpointParams.direction &&
            breakpointParams.direction !== params.direction
          const needsReLoop =
            params.loop &&
            (breakpointParams.slidesPerView !== params.slidesPerView ||
              directionChanged)

          if (directionChanged && initialized) {
            swiper.changeDirection()
          }

          ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.extend)(
            swiper.params,
            breakpointParams
          )
          const isEnabled = swiper.params.enabled
          Object.assign(swiper, {
            allowTouchMove: swiper.params.allowTouchMove,
            allowSlideNext: swiper.params.allowSlideNext,
            allowSlidePrev: swiper.params.allowSlidePrev,
          })

          if (wasEnabled && !isEnabled) {
            swiper.disable()
          } else if (!wasEnabled && isEnabled) {
            swiper.enable()
          }

          swiper.currentBreakpoint = breakpoint
          swiper.emit('_beforeBreakpoint', breakpointParams)

          if (needsReLoop && initialized) {
            swiper.loopDestroy()
            swiper.loopCreate()
            swiper.updateSlides()
            swiper.slideTo(
              activeIndex - loopedSlides + swiper.loopedSlides,
              0,
              false
            )
          }

          swiper.emit('breakpoint', breakpointParams)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/check-overflow/index.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/core/check-overflow/index.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        function checkOverflow() {
          const swiper = this
          const { isLocked: wasLocked, params } = swiper
          const { slidesOffsetBefore } = params

          if (slidesOffsetBefore) {
            const lastSlideIndex = swiper.slides.length - 1
            const lastSlideRightEdge =
              swiper.slidesGrid[lastSlideIndex] +
              swiper.slidesSizesGrid[lastSlideIndex] +
              slidesOffsetBefore * 2
            swiper.isLocked = swiper.size > lastSlideRightEdge
          } else {
            swiper.isLocked = swiper.snapGrid.length === 1
          }

          if (params.allowSlideNext === true) {
            swiper.allowSlideNext = !swiper.isLocked
          }

          if (params.allowSlidePrev === true) {
            swiper.allowSlidePrev = !swiper.isLocked
          }

          if (wasLocked && wasLocked !== swiper.isLocked) {
            swiper.isEnd = false
          }

          if (wasLocked !== swiper.isLocked) {
            swiper.emit(swiper.isLocked ? 'lock' : 'unlock')
          }
        }

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          checkOverflow,
        }

        /***/
      },

    /***/ './node_modules/swiper/core/classes/addClasses.js':
      /*!********************************************************!*\
  !*** ./node_modules/swiper/core/classes/addClasses.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ addClasses,
          /* harmony export */
        })
        function prepareClasses(entries, prefix) {
          const resultClasses = []
          entries.forEach((item) => {
            if (typeof item === 'object') {
              Object.keys(item).forEach((classNames) => {
                if (item[classNames]) {
                  resultClasses.push(prefix + classNames)
                }
              })
            } else if (typeof item === 'string') {
              resultClasses.push(prefix + item)
            }
          })
          return resultClasses
        }

        function addClasses() {
          const swiper = this
          const {
    classNames,
    params,
    rtl,
    $el,
    device,
    support
  } = swiper; // prettier-ignore

          const suffixes = prepareClasses(
            [
              'initialized',
              params.direction,
              {
                'pointer-events': !support.touch,
              },
              {
                'free-mode': swiper.params.freeMode && params.freeMode.enabled,
              },
              {
                autoheight: params.autoHeight,
              },
              {
                rtl: rtl,
              },
              {
                grid: params.grid && params.grid.rows > 1,
              },
              {
                'grid-column':
                  params.grid &&
                  params.grid.rows > 1 &&
                  params.grid.fill === 'column',
              },
              {
                android: device.android,
              },
              {
                ios: device.ios,
              },
              {
                'css-mode': params.cssMode,
              },
              {
                centered: params.cssMode && params.centeredSlides,
              },
            ],
            params.containerModifierClass
          )
          classNames.push(...suffixes)
          $el.addClass([...classNames].join(' '))
          swiper.emitContainerClasses()
        }

        /***/
      },

    /***/ './node_modules/swiper/core/classes/index.js':
      /*!***************************************************!*\
  !*** ./node_modules/swiper/core/classes/index.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _addClasses_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./addClasses.js */ './node_modules/swiper/core/classes/addClasses.js'
          )
        /* harmony import */ var _removeClasses_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./removeClasses.js */ './node_modules/swiper/core/classes/removeClasses.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          addClasses: _addClasses_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          removeClasses:
            _removeClasses_js__WEBPACK_IMPORTED_MODULE_1__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/classes/removeClasses.js':
      /*!***********************************************************!*\
  !*** ./node_modules/swiper/core/classes/removeClasses.js ***!
  \***********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ removeClasses,
          /* harmony export */
        })
        function removeClasses() {
          const swiper = this
          const { $el, classNames } = swiper
          $el.removeClass(classNames.join(' '))
          swiper.emitContainerClasses()
        }

        /***/
      },

    /***/ './node_modules/swiper/core/core.js':
      /*!******************************************!*\
  !*** ./node_modules/swiper/core/core.js ***!
  \******************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* harmony import */ var _shared_get_support_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ../shared/get-support.js */ './node_modules/swiper/shared/get-support.js'
          )
        /* harmony import */ var _shared_get_device_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ../shared/get-device.js */ './node_modules/swiper/shared/get-device.js'
          )
        /* harmony import */ var _shared_get_browser_js__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ../shared/get-browser.js */ './node_modules/swiper/shared/get-browser.js'
          )
        /* harmony import */ var _modules_resize_resize_js__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./modules/resize/resize.js */ './node_modules/swiper/core/modules/resize/resize.js'
          )
        /* harmony import */ var _modules_observer_observer_js__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! ./modules/observer/observer.js */ './node_modules/swiper/core/modules/observer/observer.js'
          )
        /* harmony import */ var _events_emitter_js__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ./events-emitter.js */ './node_modules/swiper/core/events-emitter.js'
          )
        /* harmony import */ var _update_index_js__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ./update/index.js */ './node_modules/swiper/core/update/index.js'
          )
        /* harmony import */ var _translate_index_js__WEBPACK_IMPORTED_MODULE_10__ =
          __webpack_require__(
            /*! ./translate/index.js */ './node_modules/swiper/core/translate/index.js'
          )
        /* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_11__ =
          __webpack_require__(
            /*! ./transition/index.js */ './node_modules/swiper/core/transition/index.js'
          )
        /* harmony import */ var _slide_index_js__WEBPACK_IMPORTED_MODULE_12__ =
          __webpack_require__(
            /*! ./slide/index.js */ './node_modules/swiper/core/slide/index.js'
          )
        /* harmony import */ var _loop_index_js__WEBPACK_IMPORTED_MODULE_13__ =
          __webpack_require__(
            /*! ./loop/index.js */ './node_modules/swiper/core/loop/index.js'
          )
        /* harmony import */ var _grab_cursor_index_js__WEBPACK_IMPORTED_MODULE_14__ =
          __webpack_require__(
            /*! ./grab-cursor/index.js */ './node_modules/swiper/core/grab-cursor/index.js'
          )
        /* harmony import */ var _events_index_js__WEBPACK_IMPORTED_MODULE_15__ =
          __webpack_require__(
            /*! ./events/index.js */ './node_modules/swiper/core/events/index.js'
          )
        /* harmony import */ var _breakpoints_index_js__WEBPACK_IMPORTED_MODULE_16__ =
          __webpack_require__(
            /*! ./breakpoints/index.js */ './node_modules/swiper/core/breakpoints/index.js'
          )
        /* harmony import */ var _classes_index_js__WEBPACK_IMPORTED_MODULE_17__ =
          __webpack_require__(
            /*! ./classes/index.js */ './node_modules/swiper/core/classes/index.js'
          )
        /* harmony import */ var _images_index_js__WEBPACK_IMPORTED_MODULE_18__ =
          __webpack_require__(
            /*! ./images/index.js */ './node_modules/swiper/core/images/index.js'
          )
        /* harmony import */ var _check_overflow_index_js__WEBPACK_IMPORTED_MODULE_19__ =
          __webpack_require__(
            /*! ./check-overflow/index.js */ './node_modules/swiper/core/check-overflow/index.js'
          )
        /* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_20__ =
          __webpack_require__(
            /*! ./defaults.js */ './node_modules/swiper/core/defaults.js'
          )
        /* harmony import */ var _moduleExtendParams_js__WEBPACK_IMPORTED_MODULE_21__ =
          __webpack_require__(
            /*! ./moduleExtendParams.js */ './node_modules/swiper/core/moduleExtendParams.js'
          )
        /* eslint no-param-reassign: "off" */

        const prototypes = {
          eventsEmitter:
            _events_emitter_js__WEBPACK_IMPORTED_MODULE_8__['default'],
          update: _update_index_js__WEBPACK_IMPORTED_MODULE_9__['default'],
          translate:
            _translate_index_js__WEBPACK_IMPORTED_MODULE_10__['default'],
          transition:
            _transition_index_js__WEBPACK_IMPORTED_MODULE_11__['default'],
          slide: _slide_index_js__WEBPACK_IMPORTED_MODULE_12__['default'],
          loop: _loop_index_js__WEBPACK_IMPORTED_MODULE_13__['default'],
          grabCursor:
            _grab_cursor_index_js__WEBPACK_IMPORTED_MODULE_14__['default'],
          events: _events_index_js__WEBPACK_IMPORTED_MODULE_15__['default'],
          breakpoints:
            _breakpoints_index_js__WEBPACK_IMPORTED_MODULE_16__['default'],
          checkOverflow:
            _check_overflow_index_js__WEBPACK_IMPORTED_MODULE_19__['default'],
          classes: _classes_index_js__WEBPACK_IMPORTED_MODULE_17__['default'],
          images: _images_index_js__WEBPACK_IMPORTED_MODULE_18__['default'],
        }
        const extendedDefaults = {}

        class Swiper {
          constructor(...args) {
            let el
            let params

            if (
              args.length === 1 &&
              args[0].constructor &&
              Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object'
            ) {
              params = args[0]
            } else {
              ;[el, params] = args
            }

            if (!params) params = {}
            params = (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
              {},
              params
            )
            if (el && !params.el) params.el = el

            if (
              params.el &&
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                params.el
              ).length > 1
            ) {
              const swipers = []
              ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                params.el
              ).each((containerEl) => {
                const newParams = (0,
                _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
                  {},
                  params,
                  {
                    el: containerEl,
                  }
                )
                swipers.push(new Swiper(newParams))
              })
              return swipers
            } // Swiper Instance

            const swiper = this
            swiper.__swiper__ = true
            swiper.support = (0,
            _shared_get_support_js__WEBPACK_IMPORTED_MODULE_3__.getSupport)()
            swiper.device = (0,
            _shared_get_device_js__WEBPACK_IMPORTED_MODULE_4__.getDevice)({
              userAgent: params.userAgent,
            })
            swiper.browser = (0,
            _shared_get_browser_js__WEBPACK_IMPORTED_MODULE_5__.getBrowser)()
            swiper.eventsListeners = {}
            swiper.eventsAnyListeners = []
            swiper.modules = [...swiper.__modules__]

            if (params.modules && Array.isArray(params.modules)) {
              swiper.modules.push(...params.modules)
            }

            const allModulesParams = {}
            swiper.modules.forEach((mod) => {
              mod({
                swiper,
                extendParams: (0,
                _moduleExtendParams_js__WEBPACK_IMPORTED_MODULE_21__[
                  'default'
                ])(params, allModulesParams),
                on: swiper.on.bind(swiper),
                once: swiper.once.bind(swiper),
                off: swiper.off.bind(swiper),
                emit: swiper.emit.bind(swiper),
              })
            }) // Extend defaults with modules params

            const swiperParams = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
              {},
              _defaults_js__WEBPACK_IMPORTED_MODULE_20__['default'],
              allModulesParams
            ) // Extend defaults with passed params

            swiper.params = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
              {},
              swiperParams,
              extendedDefaults,
              params
            )
            swiper.originalParams = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
              {},
              swiper.params
            )
            swiper.passedParams = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)({}, params) // add event listeners

            if (swiper.params && swiper.params.on) {
              Object.keys(swiper.params.on).forEach((eventName) => {
                swiper.on(eventName, swiper.params.on[eventName])
              })
            }

            if (swiper.params && swiper.params.onAny) {
              swiper.onAny(swiper.params.onAny)
            } // Save Dom lib

            swiper.$ = _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'] // Extend Swiper

            Object.assign(swiper, {
              enabled: swiper.params.enabled,
              el,
              // Classes
              classNames: [],
              // Slides
              slides: (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(),
              slidesGrid: [],
              snapGrid: [],
              slidesSizesGrid: [],

              // isDirection
              isHorizontal() {
                return swiper.params.direction === 'horizontal'
              },

              isVertical() {
                return swiper.params.direction === 'vertical'
              },

              // Indexes
              activeIndex: 0,
              realIndex: 0,
              //
              isBeginning: true,
              isEnd: false,
              // Props
              translate: 0,
              previousTranslate: 0,
              progress: 0,
              velocity: 0,
              animating: false,
              // Locks
              allowSlideNext: swiper.params.allowSlideNext,
              allowSlidePrev: swiper.params.allowSlidePrev,
              // Touch Events
              touchEvents: (function touchEvents() {
                const touch = [
                  'touchstart',
                  'touchmove',
                  'touchend',
                  'touchcancel',
                ]
                const desktop = ['pointerdown', 'pointermove', 'pointerup']
                swiper.touchEventsTouch = {
                  start: touch[0],
                  move: touch[1],
                  end: touch[2],
                  cancel: touch[3],
                }
                swiper.touchEventsDesktop = {
                  start: desktop[0],
                  move: desktop[1],
                  end: desktop[2],
                }
                return swiper.support.touch || !swiper.params.simulateTouch
                  ? swiper.touchEventsTouch
                  : swiper.touchEventsDesktop
              })(),
              touchEventsData: {
                isTouched: undefined,
                isMoved: undefined,
                allowTouchCallbacks: undefined,
                touchStartTime: undefined,
                isScrolling: undefined,
                currentTranslate: undefined,
                startTranslate: undefined,
                allowThresholdMove: undefined,
                // Form elements to match
                focusableElements: swiper.params.focusableElements,
                // Last click time
                lastClickTime: (0,
                _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)(),
                clickTimeout: undefined,
                // Velocities
                velocities: [],
                allowMomentumBounce: undefined,
                isTouchEvent: undefined,
                startMoving: undefined,
              },
              // Clicks
              allowClick: true,
              // Touches
              allowTouchMove: swiper.params.allowTouchMove,
              touches: {
                startX: 0,
                startY: 0,
                currentX: 0,
                currentY: 0,
                diff: 0,
              },
              // Images
              imagesToLoad: [],
              imagesLoaded: 0,
            })
            swiper.emit('_swiper') // Init

            if (swiper.params.init) {
              swiper.init()
            } // Return app instance

            return swiper
          }

          enable() {
            const swiper = this
            if (swiper.enabled) return
            swiper.enabled = true

            if (swiper.params.grabCursor) {
              swiper.setGrabCursor()
            }

            swiper.emit('enable')
          }

          disable() {
            const swiper = this
            if (!swiper.enabled) return
            swiper.enabled = false

            if (swiper.params.grabCursor) {
              swiper.unsetGrabCursor()
            }

            swiper.emit('disable')
          }

          setProgress(progress, speed) {
            const swiper = this
            progress = Math.min(Math.max(progress, 0), 1)
            const min = swiper.minTranslate()
            const max = swiper.maxTranslate()
            const current = (max - min) * progress + min
            swiper.translateTo(
              current,
              typeof speed === 'undefined' ? 0 : speed
            )
            swiper.updateActiveIndex()
            swiper.updateSlidesClasses()
          }

          emitContainerClasses() {
            const swiper = this
            if (!swiper.params._emitClasses || !swiper.el) return
            const cls = swiper.el.className.split(' ').filter((className) => {
              return (
                className.indexOf('swiper') === 0 ||
                className.indexOf(swiper.params.containerModifierClass) === 0
              )
            })
            swiper.emit('_containerClasses', cls.join(' '))
          }

          getSlideClasses(slideEl) {
            const swiper = this
            return slideEl.className
              .split(' ')
              .filter((className) => {
                return (
                  className.indexOf('swiper-slide') === 0 ||
                  className.indexOf(swiper.params.slideClass) === 0
                )
              })
              .join(' ')
          }

          emitSlidesClasses() {
            const swiper = this
            if (!swiper.params._emitClasses || !swiper.el) return
            const updates = []
            swiper.slides.each((slideEl) => {
              const classNames = swiper.getSlideClasses(slideEl)
              updates.push({
                slideEl,
                classNames,
              })
              swiper.emit('_slideClass', slideEl, classNames)
            })
            swiper.emit('_slideClasses', updates)
          }

          slidesPerViewDynamic(view = 'current', exact = false) {
            const swiper = this
            const {
              params,
              slides,
              slidesGrid,
              slidesSizesGrid,
              size: swiperSize,
              activeIndex,
            } = swiper
            let spv = 1

            if (params.centeredSlides) {
              let slideSize = slides[activeIndex].swiperSlideSize
              let breakLoop

              for (let i = activeIndex + 1; i < slides.length; i += 1) {
                if (slides[i] && !breakLoop) {
                  slideSize += slides[i].swiperSlideSize
                  spv += 1
                  if (slideSize > swiperSize) breakLoop = true
                }
              }

              for (let i = activeIndex - 1; i >= 0; i -= 1) {
                if (slides[i] && !breakLoop) {
                  slideSize += slides[i].swiperSlideSize
                  spv += 1
                  if (slideSize > swiperSize) breakLoop = true
                }
              }
            } else {
              // eslint-disable-next-line
              if (view === 'current') {
                for (let i = activeIndex + 1; i < slides.length; i += 1) {
                  const slideInView = exact
                    ? slidesGrid[i] +
                        slidesSizesGrid[i] -
                        slidesGrid[activeIndex] <
                      swiperSize
                    : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize

                  if (slideInView) {
                    spv += 1
                  }
                }
              } else {
                // previous
                for (let i = activeIndex - 1; i >= 0; i -= 1) {
                  const slideInView =
                    slidesGrid[activeIndex] - slidesGrid[i] < swiperSize

                  if (slideInView) {
                    spv += 1
                  }
                }
              }
            }

            return spv
          }

          update() {
            const swiper = this
            if (!swiper || swiper.destroyed) return
            const { snapGrid, params } = swiper // Breakpoints

            if (params.breakpoints) {
              swiper.setBreakpoint()
            }

            swiper.updateSize()
            swiper.updateSlides()
            swiper.updateProgress()
            swiper.updateSlidesClasses()

            function setTranslate() {
              const translateValue = swiper.rtlTranslate
                ? swiper.translate * -1
                : swiper.translate
              const newTranslate = Math.min(
                Math.max(translateValue, swiper.maxTranslate()),
                swiper.minTranslate()
              )
              swiper.setTranslate(newTranslate)
              swiper.updateActiveIndex()
              swiper.updateSlidesClasses()
            }

            let translated

            if (swiper.params.freeMode && swiper.params.freeMode.enabled) {
              setTranslate()

              if (swiper.params.autoHeight) {
                swiper.updateAutoHeight()
              }
            } else {
              if (
                (swiper.params.slidesPerView === 'auto' ||
                  swiper.params.slidesPerView > 1) &&
                swiper.isEnd &&
                !swiper.params.centeredSlides
              ) {
                translated = swiper.slideTo(
                  swiper.slides.length - 1,
                  0,
                  false,
                  true
                )
              } else {
                translated = swiper.slideTo(swiper.activeIndex, 0, false, true)
              }

              if (!translated) {
                setTranslate()
              }
            }

            if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
              swiper.checkOverflow()
            }

            swiper.emit('update')
          }

          changeDirection(newDirection, needUpdate = true) {
            const swiper = this
            const currentDirection = swiper.params.direction

            if (!newDirection) {
              // eslint-disable-next-line
              newDirection =
                currentDirection === 'horizontal' ? 'vertical' : 'horizontal'
            }

            if (
              newDirection === currentDirection ||
              (newDirection !== 'horizontal' && newDirection !== 'vertical')
            ) {
              return swiper
            }

            swiper.$el
              .removeClass(
                `${swiper.params.containerModifierClass}${currentDirection}`
              )
              .addClass(
                `${swiper.params.containerModifierClass}${newDirection}`
              )
            swiper.emitContainerClasses()
            swiper.params.direction = newDirection
            swiper.slides.each((slideEl) => {
              if (newDirection === 'vertical') {
                slideEl.style.width = ''
              } else {
                slideEl.style.height = ''
              }
            })
            swiper.emit('changeDirection')
            if (needUpdate) swiper.update()
            return swiper
          }

          mount(el) {
            const swiper = this
            if (swiper.mounted) return true // Find el

            const $el = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
              el || swiper.params.el
            )
            el = $el[0]

            if (!el) {
              return false
            }

            el.swiper = swiper

            const getWrapperSelector = () => {
              return `.${(swiper.params.wrapperClass || '')
                .trim()
                .split(' ')
                .join('.')}`
            }

            const getWrapper = () => {
              if (el && el.shadowRoot && el.shadowRoot.querySelector) {
                const res = (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  el.shadowRoot.querySelector(getWrapperSelector())
                ) // Children needs to return slot items

                res.children = (options) => $el.children(options)

                return res
              }

              return $el.children(getWrapperSelector())
            } // Find Wrapper

            let $wrapperEl = getWrapper()

            if ($wrapperEl.length === 0 && swiper.params.createElements) {
              const document = (0,
              ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
              const wrapper = document.createElement('div')
              $wrapperEl = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(wrapper)
              wrapper.className = swiper.params.wrapperClass
              $el.append(wrapper)
              $el.children(`.${swiper.params.slideClass}`).each((slideEl) => {
                $wrapperEl.append(slideEl)
              })
            }

            Object.assign(swiper, {
              $el,
              el,
              $wrapperEl,
              wrapperEl: $wrapperEl[0],
              mounted: true,
              // RTL
              rtl:
                el.dir.toLowerCase() === 'rtl' ||
                $el.css('direction') === 'rtl',
              rtlTranslate:
                swiper.params.direction === 'horizontal' &&
                (el.dir.toLowerCase() === 'rtl' ||
                  $el.css('direction') === 'rtl'),
              wrongRTL: $wrapperEl.css('display') === '-webkit-box',
            })
            return true
          }

          init(el) {
            const swiper = this
            if (swiper.initialized) return swiper
            const mounted = swiper.mount(el)
            if (mounted === false) return swiper
            swiper.emit('beforeInit') // Set breakpoint

            if (swiper.params.breakpoints) {
              swiper.setBreakpoint()
            } // Add Classes

            swiper.addClasses() // Create loop

            if (swiper.params.loop) {
              swiper.loopCreate()
            } // Update size

            swiper.updateSize() // Update slides

            swiper.updateSlides()

            if (swiper.params.watchOverflow) {
              swiper.checkOverflow()
            } // Set Grab Cursor

            if (swiper.params.grabCursor && swiper.enabled) {
              swiper.setGrabCursor()
            }

            if (swiper.params.preloadImages) {
              swiper.preloadImages()
            } // Slide To Initial Slide

            if (swiper.params.loop) {
              swiper.slideTo(
                swiper.params.initialSlide + swiper.loopedSlides,
                0,
                swiper.params.runCallbacksOnInit,
                false,
                true
              )
            } else {
              swiper.slideTo(
                swiper.params.initialSlide,
                0,
                swiper.params.runCallbacksOnInit,
                false,
                true
              )
            } // Attach events

            swiper.attachEvents() // Init Flag

            swiper.initialized = true // Emit

            swiper.emit('init')
            swiper.emit('afterInit')
            return swiper
          }

          destroy(deleteInstance = true, cleanStyles = true) {
            const swiper = this
            const { params, $el, $wrapperEl, slides } = swiper

            if (typeof swiper.params === 'undefined' || swiper.destroyed) {
              return null
            }

            swiper.emit('beforeDestroy') // Init Flag

            swiper.initialized = false // Detach events

            swiper.detachEvents() // Destroy loop

            if (params.loop) {
              swiper.loopDestroy()
            } // Cleanup styles

            if (cleanStyles) {
              swiper.removeClasses()
              $el.removeAttr('style')
              $wrapperEl.removeAttr('style')

              if (slides && slides.length) {
                slides
                  .removeClass(
                    [
                      params.slideVisibleClass,
                      params.slideActiveClass,
                      params.slideNextClass,
                      params.slidePrevClass,
                    ].join(' ')
                  )
                  .removeAttr('style')
                  .removeAttr('data-swiper-slide-index')
              }
            }

            swiper.emit('destroy') // Detach emitter events

            Object.keys(swiper.eventsListeners).forEach((eventName) => {
              swiper.off(eventName)
            })

            if (deleteInstance !== false) {
              swiper.$el[0].swiper = null
              ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.deleteProps)(
                swiper
              )
            }

            swiper.destroyed = true
            return null
          }

          static extendDefaults(newDefaults) {
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.extend)(
              extendedDefaults,
              newDefaults
            )
          }

          static get extendedDefaults() {
            return extendedDefaults
          }

          static get defaults() {
            return _defaults_js__WEBPACK_IMPORTED_MODULE_20__['default']
          }

          static installModule(mod) {
            if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = []
            const modules = Swiper.prototype.__modules__

            if (typeof mod === 'function' && modules.indexOf(mod) < 0) {
              modules.push(mod)
            }
          }

          static use(module) {
            if (Array.isArray(module)) {
              module.forEach((m) => Swiper.installModule(m))
              return Swiper
            }

            Swiper.installModule(module)
            return Swiper
          }
        }

        Object.keys(prototypes).forEach((prototypeGroup) => {
          Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {
            Swiper.prototype[protoMethod] =
              prototypes[prototypeGroup][protoMethod]
          })
        })
        Swiper.use([
          _modules_resize_resize_js__WEBPACK_IMPORTED_MODULE_6__['default'],
          _modules_observer_observer_js__WEBPACK_IMPORTED_MODULE_7__['default'],
        ])
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = Swiper

        /***/
      },

    /***/ './node_modules/swiper/core/defaults.js':
      /*!**********************************************!*\
  !*** ./node_modules/swiper/core/defaults.js ***!
  \**********************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          init: true,
          direction: 'horizontal',
          touchEventsTarget: 'wrapper',
          initialSlide: 0,
          speed: 300,
          cssMode: false,
          updateOnWindowResize: true,
          resizeObserver: true,
          nested: false,
          createElements: false,
          enabled: true,
          focusableElements:
            'input, select, option, textarea, button, video, label',
          // Overrides
          width: null,
          height: null,
          //
          preventInteractionOnTransition: false,
          // ssr
          userAgent: null,
          url: null,
          // To support iOS's swipe-to-go-back gesture (when being used in-app).
          edgeSwipeDetection: false,
          edgeSwipeThreshold: 20,
          // Autoheight
          autoHeight: false,
          // Set wrapper width
          setWrapperSize: false,
          // Virtual Translate
          virtualTranslate: false,
          // Effects
          effect: 'slide',
          // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
          // Breakpoints
          breakpoints: undefined,
          breakpointsBase: 'window',
          // Slides grid
          spaceBetween: 0,
          slidesPerView: 1,
          slidesPerGroup: 1,
          slidesPerGroupSkip: 0,
          slidesPerGroupAuto: false,
          centeredSlides: false,
          centeredSlidesBounds: false,
          slidesOffsetBefore: 0,
          // in px
          slidesOffsetAfter: 0,
          // in px
          normalizeSlideIndex: true,
          centerInsufficientSlides: false,
          // Disable swiper and hide navigation when container not overflow
          watchOverflow: true,
          // Round length
          roundLengths: false,
          // Touches
          touchRatio: 1,
          touchAngle: 45,
          simulateTouch: true,
          shortSwipes: true,
          longSwipes: true,
          longSwipesRatio: 0.5,
          longSwipesMs: 300,
          followFinger: true,
          allowTouchMove: true,
          threshold: 0,
          touchMoveStopPropagation: false,
          touchStartPreventDefault: true,
          touchStartForcePreventDefault: false,
          touchReleaseOnEdges: false,
          // Unique Navigation Elements
          uniqueNavElements: true,
          // Resistance
          resistance: true,
          resistanceRatio: 0.85,
          // Progress
          watchSlidesProgress: false,
          // Cursor
          grabCursor: false,
          // Clicks
          preventClicks: true,
          preventClicksPropagation: true,
          slideToClickedSlide: false,
          // Images
          preloadImages: true,
          updateOnImagesReady: true,
          // loop
          loop: false,
          loopAdditionalSlides: 0,
          loopedSlides: null,
          loopFillGroupWithBlank: false,
          loopPreventsSlide: true,
          // Swiping/no swiping
          allowSlidePrev: true,
          allowSlideNext: true,
          swipeHandler: null,
          // '.swipe-handler',
          noSwiping: true,
          noSwipingClass: 'swiper-no-swiping',
          noSwipingSelector: null,
          // Passive Listeners
          passiveListeners: true,
          // NS
          containerModifierClass: 'swiper-',
          // NEW
          slideClass: 'swiper-slide',
          slideBlankClass: 'swiper-slide-invisible-blank',
          slideActiveClass: 'swiper-slide-active',
          slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
          slideVisibleClass: 'swiper-slide-visible',
          slideDuplicateClass: 'swiper-slide-duplicate',
          slideNextClass: 'swiper-slide-next',
          slideDuplicateNextClass: 'swiper-slide-duplicate-next',
          slidePrevClass: 'swiper-slide-prev',
          slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
          wrapperClass: 'swiper-wrapper',
          // Callbacks
          runCallbacksOnInit: true,
          // Internals
          _emitClasses: false,
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events-emitter.js':
      /*!****************************************************!*\
  !*** ./node_modules/swiper/core/events-emitter.js ***!
  \****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* eslint-disable no-underscore-dangle */
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          on(events, handler, priority) {
            const self = this
            if (typeof handler !== 'function') return self
            const method = priority ? 'unshift' : 'push'
            events.split(' ').forEach((event) => {
              if (!self.eventsListeners[event]) self.eventsListeners[event] = []
              self.eventsListeners[event][method](handler)
            })
            return self
          },

          once(events, handler, priority) {
            const self = this
            if (typeof handler !== 'function') return self

            function onceHandler(...args) {
              self.off(events, onceHandler)

              if (onceHandler.__emitterProxy) {
                delete onceHandler.__emitterProxy
              }

              handler.apply(self, args)
            }

            onceHandler.__emitterProxy = handler
            return self.on(events, onceHandler, priority)
          },

          onAny(handler, priority) {
            const self = this
            if (typeof handler !== 'function') return self
            const method = priority ? 'unshift' : 'push'

            if (self.eventsAnyListeners.indexOf(handler) < 0) {
              self.eventsAnyListeners[method](handler)
            }

            return self
          },

          offAny(handler) {
            const self = this
            if (!self.eventsAnyListeners) return self
            const index = self.eventsAnyListeners.indexOf(handler)

            if (index >= 0) {
              self.eventsAnyListeners.splice(index, 1)
            }

            return self
          },

          off(events, handler) {
            const self = this
            if (!self.eventsListeners) return self
            events.split(' ').forEach((event) => {
              if (typeof handler === 'undefined') {
                self.eventsListeners[event] = []
              } else if (self.eventsListeners[event]) {
                self.eventsListeners[event].forEach((eventHandler, index) => {
                  if (
                    eventHandler === handler ||
                    (eventHandler.__emitterProxy &&
                      eventHandler.__emitterProxy === handler)
                  ) {
                    self.eventsListeners[event].splice(index, 1)
                  }
                })
              }
            })
            return self
          },

          emit(...args) {
            const self = this
            if (!self.eventsListeners) return self
            let events
            let data
            let context

            if (typeof args[0] === 'string' || Array.isArray(args[0])) {
              events = args[0]
              data = args.slice(1, args.length)
              context = self
            } else {
              events = args[0].events
              data = args[0].data
              context = args[0].context || self
            }

            data.unshift(context)
            const eventsArray = Array.isArray(events)
              ? events
              : events.split(' ')
            eventsArray.forEach((event) => {
              if (self.eventsAnyListeners && self.eventsAnyListeners.length) {
                self.eventsAnyListeners.forEach((eventHandler) => {
                  eventHandler.apply(context, [event, ...data])
                })
              }

              if (self.eventsListeners && self.eventsListeners[event]) {
                self.eventsListeners[event].forEach((eventHandler) => {
                  eventHandler.apply(context, data)
                })
              }
            })
            return self
          },
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/index.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/core/events/index.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _onTouchStart_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./onTouchStart.js */ './node_modules/swiper/core/events/onTouchStart.js'
          )
        /* harmony import */ var _onTouchMove_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./onTouchMove.js */ './node_modules/swiper/core/events/onTouchMove.js'
          )
        /* harmony import */ var _onTouchEnd_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./onTouchEnd.js */ './node_modules/swiper/core/events/onTouchEnd.js'
          )
        /* harmony import */ var _onResize_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./onResize.js */ './node_modules/swiper/core/events/onResize.js'
          )
        /* harmony import */ var _onClick_js__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ./onClick.js */ './node_modules/swiper/core/events/onClick.js'
          )
        /* harmony import */ var _onScroll_js__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./onScroll.js */ './node_modules/swiper/core/events/onScroll.js'
          )

        let dummyEventAttached = false

        function dummyEventListener() {}

        const events = (swiper, method) => {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const { params, touchEvents, el, wrapperEl, device, support } = swiper
          const capture = !!params.nested
          const domMethod =
            method === 'on' ? 'addEventListener' : 'removeEventListener'
          const swiperMethod = method // Touch Events

          if (!support.touch) {
            el[domMethod](touchEvents.start, swiper.onTouchStart, false)
            document[domMethod](touchEvents.move, swiper.onTouchMove, capture)
            document[domMethod](touchEvents.end, swiper.onTouchEnd, false)
          } else {
            const passiveListener =
              touchEvents.start === 'touchstart' &&
              support.passiveListener &&
              params.passiveListeners
                ? {
                    passive: true,
                    capture: false,
                  }
                : false
            el[domMethod](
              touchEvents.start,
              swiper.onTouchStart,
              passiveListener
            )
            el[domMethod](
              touchEvents.move,
              swiper.onTouchMove,
              support.passiveListener
                ? {
                    passive: false,
                    capture,
                  }
                : capture
            )
            el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener)

            if (touchEvents.cancel) {
              el[domMethod](
                touchEvents.cancel,
                swiper.onTouchEnd,
                passiveListener
              )
            }
          } // Prevent Links Clicks

          if (params.preventClicks || params.preventClicksPropagation) {
            el[domMethod]('click', swiper.onClick, true)
          }

          if (params.cssMode) {
            wrapperEl[domMethod]('scroll', swiper.onScroll)
          } // Resize handler

          if (params.updateOnWindowResize) {
            swiper[swiperMethod](
              device.ios || device.android
                ? 'resize orientationchange observerUpdate'
                : 'resize observerUpdate',
              _onResize_js__WEBPACK_IMPORTED_MODULE_4__['default'],
              true
            )
          } else {
            swiper[swiperMethod](
              'observerUpdate',
              _onResize_js__WEBPACK_IMPORTED_MODULE_4__['default'],
              true
            )
          }
        }

        function attachEvents() {
          const swiper = this
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const { params, support } = swiper
          swiper.onTouchStart =
            _onTouchStart_js__WEBPACK_IMPORTED_MODULE_1__['default'].bind(
              swiper
            )
          swiper.onTouchMove =
            _onTouchMove_js__WEBPACK_IMPORTED_MODULE_2__['default'].bind(swiper)
          swiper.onTouchEnd =
            _onTouchEnd_js__WEBPACK_IMPORTED_MODULE_3__['default'].bind(swiper)

          if (params.cssMode) {
            swiper.onScroll =
              _onScroll_js__WEBPACK_IMPORTED_MODULE_6__['default'].bind(swiper)
          }

          swiper.onClick =
            _onClick_js__WEBPACK_IMPORTED_MODULE_5__['default'].bind(swiper)

          if (support.touch && !dummyEventAttached) {
            document.addEventListener('touchstart', dummyEventListener)
            dummyEventAttached = true
          }

          events(swiper, 'on')
        }

        function detachEvents() {
          const swiper = this
          events(swiper, 'off')
        }

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          attachEvents,
          detachEvents,
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onClick.js':
      /*!****************************************************!*\
  !*** ./node_modules/swiper/core/events/onClick.js ***!
  \****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onClick,
          /* harmony export */
        })
        function onClick(e) {
          const swiper = this
          if (!swiper.enabled) return

          if (!swiper.allowClick) {
            if (swiper.params.preventClicks) e.preventDefault()

            if (swiper.params.preventClicksPropagation && swiper.animating) {
              e.stopPropagation()
              e.stopImmediatePropagation()
            }
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onResize.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/events/onResize.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onResize,
          /* harmony export */
        })
        function onResize() {
          const swiper = this
          const { params, el } = swiper
          if (el && el.offsetWidth === 0) return // Breakpoints

          if (params.breakpoints) {
            swiper.setBreakpoint()
          } // Save locks

          const { allowSlideNext, allowSlidePrev, snapGrid } = swiper // Disable locks on resize

          swiper.allowSlideNext = true
          swiper.allowSlidePrev = true
          swiper.updateSize()
          swiper.updateSlides()
          swiper.updateSlidesClasses()

          if (
            (params.slidesPerView === 'auto' || params.slidesPerView > 1) &&
            swiper.isEnd &&
            !swiper.isBeginning &&
            !swiper.params.centeredSlides
          ) {
            swiper.slideTo(swiper.slides.length - 1, 0, false, true)
          } else {
            swiper.slideTo(swiper.activeIndex, 0, false, true)
          }

          if (
            swiper.autoplay &&
            swiper.autoplay.running &&
            swiper.autoplay.paused
          ) {
            swiper.autoplay.run()
          } // Return locks after resize

          swiper.allowSlidePrev = allowSlidePrev
          swiper.allowSlideNext = allowSlideNext

          if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
            swiper.checkOverflow()
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onScroll.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/events/onScroll.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onScroll,
          /* harmony export */
        })
        function onScroll() {
          const swiper = this
          const { wrapperEl, rtlTranslate, enabled } = swiper
          if (!enabled) return
          swiper.previousTranslate = swiper.translate

          if (swiper.isHorizontal()) {
            swiper.translate = -wrapperEl.scrollLeft
          } else {
            swiper.translate = -wrapperEl.scrollTop
          } // eslint-disable-next-line

          if (swiper.translate === -0) swiper.translate = 0
          swiper.updateActiveIndex()
          swiper.updateSlidesClasses()
          let newProgress
          const translatesDiff = swiper.maxTranslate() - swiper.minTranslate()

          if (translatesDiff === 0) {
            newProgress = 0
          } else {
            newProgress =
              (swiper.translate - swiper.minTranslate()) / translatesDiff
          }

          if (newProgress !== swiper.progress) {
            swiper.updateProgress(
              rtlTranslate ? -swiper.translate : swiper.translate
            )
          }

          swiper.emit('setTranslate', swiper.translate, false)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onTouchEnd.js':
      /*!*******************************************************!*\
  !*** ./node_modules/swiper/core/events/onTouchEnd.js ***!
  \*******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onTouchEnd,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function onTouchEnd(event) {
          const swiper = this
          const data = swiper.touchEventsData
          const {
            params,
            touches,
            rtlTranslate: rtl,
            slidesGrid,
            enabled,
          } = swiper
          if (!enabled) return
          let e = event
          if (e.originalEvent) e = e.originalEvent

          if (data.allowTouchCallbacks) {
            swiper.emit('touchEnd', e)
          }

          data.allowTouchCallbacks = false

          if (!data.isTouched) {
            if (data.isMoved && params.grabCursor) {
              swiper.setGrabCursor(false)
            }

            data.isMoved = false
            data.startMoving = false
            return
          } // Return Grab Cursor

          if (
            params.grabCursor &&
            data.isMoved &&
            data.isTouched &&
            (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)
          ) {
            swiper.setGrabCursor(false)
          } // Time diff

          const touchEndTime = (0,
          _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.now)()
          const timeDiff = touchEndTime - data.touchStartTime // Tap, doubleTap, Click

          if (swiper.allowClick) {
            swiper.updateClickedSlide(e)
            swiper.emit('tap click', e)

            if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
              swiper.emit('doubleTap doubleClick', e)
            }
          }

          data.lastClickTime = (0,
          _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.now)()
          ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {
            if (!swiper.destroyed) swiper.allowClick = true
          })

          if (
            !data.isTouched ||
            !data.isMoved ||
            !swiper.swipeDirection ||
            touches.diff === 0 ||
            data.currentTranslate === data.startTranslate
          ) {
            data.isTouched = false
            data.isMoved = false
            data.startMoving = false
            return
          }

          data.isTouched = false
          data.isMoved = false
          data.startMoving = false
          let currentPos

          if (params.followFinger) {
            currentPos = rtl ? swiper.translate : -swiper.translate
          } else {
            currentPos = -data.currentTranslate
          }

          if (params.cssMode) {
            return
          }

          if (swiper.params.freeMode && params.freeMode.enabled) {
            swiper.freeMode.onTouchEnd({
              currentPos,
            })
            return
          } // Find current slide

          let stopIndex = 0
          let groupSize = swiper.slidesSizesGrid[0]

          for (
            let i = 0;
            i < slidesGrid.length;
            i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup
          ) {
            const increment =
              i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup

            if (typeof slidesGrid[i + increment] !== 'undefined') {
              if (
                currentPos >= slidesGrid[i] &&
                currentPos < slidesGrid[i + increment]
              ) {
                stopIndex = i
                groupSize = slidesGrid[i + increment] - slidesGrid[i]
              }
            } else if (currentPos >= slidesGrid[i]) {
              stopIndex = i
              groupSize =
                slidesGrid[slidesGrid.length - 1] -
                slidesGrid[slidesGrid.length - 2]
            }
          } // Find current slide size

          const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize
          const increment =
            stopIndex < params.slidesPerGroupSkip - 1
              ? 1
              : params.slidesPerGroup

          if (timeDiff > params.longSwipesMs) {
            // Long touches
            if (!params.longSwipes) {
              swiper.slideTo(swiper.activeIndex)
              return
            }

            if (swiper.swipeDirection === 'next') {
              if (ratio >= params.longSwipesRatio)
                swiper.slideTo(stopIndex + increment)
              else swiper.slideTo(stopIndex)
            }

            if (swiper.swipeDirection === 'prev') {
              if (ratio > 1 - params.longSwipesRatio)
                swiper.slideTo(stopIndex + increment)
              else swiper.slideTo(stopIndex)
            }
          } else {
            // Short swipes
            if (!params.shortSwipes) {
              swiper.slideTo(swiper.activeIndex)
              return
            }

            const isNavButtonTarget =
              swiper.navigation &&
              (e.target === swiper.navigation.nextEl ||
                e.target === swiper.navigation.prevEl)

            if (!isNavButtonTarget) {
              if (swiper.swipeDirection === 'next') {
                swiper.slideTo(stopIndex + increment)
              }

              if (swiper.swipeDirection === 'prev') {
                swiper.slideTo(stopIndex)
              }
            } else if (e.target === swiper.navigation.nextEl) {
              swiper.slideTo(stopIndex + increment)
            } else {
              swiper.slideTo(stopIndex)
            }
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onTouchMove.js':
      /*!********************************************************!*\
  !*** ./node_modules/swiper/core/events/onTouchMove.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onTouchMove,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function onTouchMove(event) {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const swiper = this
          const data = swiper.touchEventsData
          const { params, touches, rtlTranslate: rtl, enabled } = swiper
          if (!enabled) return
          let e = event
          if (e.originalEvent) e = e.originalEvent

          if (!data.isTouched) {
            if (data.startMoving && data.isScrolling) {
              swiper.emit('touchMoveOpposite', e)
            }

            return
          }

          if (data.isTouchEvent && e.type !== 'touchmove') return
          const targetTouch =
            e.type === 'touchmove' &&
            e.targetTouches &&
            (e.targetTouches[0] || e.changedTouches[0])
          const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX
          const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY

          if (e.preventedByNestedSwiper) {
            touches.startX = pageX
            touches.startY = pageY
            return
          }

          if (!swiper.allowTouchMove) {
            // isMoved = true;
            swiper.allowClick = false

            if (data.isTouched) {
              Object.assign(touches, {
                startX: pageX,
                startY: pageY,
                currentX: pageX,
                currentY: pageY,
              })
              data.touchStartTime = (0,
              _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)()
            }

            return
          }

          if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
            if (swiper.isVertical()) {
              // Vertical
              if (
                (pageY < touches.startY &&
                  swiper.translate <= swiper.maxTranslate()) ||
                (pageY > touches.startY &&
                  swiper.translate >= swiper.minTranslate())
              ) {
                data.isTouched = false
                data.isMoved = false
                return
              }
            } else if (
              (pageX < touches.startX &&
                swiper.translate <= swiper.maxTranslate()) ||
              (pageX > touches.startX &&
                swiper.translate >= swiper.minTranslate())
            ) {
              return
            }
          }

          if (data.isTouchEvent && document.activeElement) {
            if (
              e.target === document.activeElement &&
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                e.target
              ).is(data.focusableElements)
            ) {
              data.isMoved = true
              swiper.allowClick = false
              return
            }
          }

          if (data.allowTouchCallbacks) {
            swiper.emit('touchMove', e)
          }

          if (e.targetTouches && e.targetTouches.length > 1) return
          touches.currentX = pageX
          touches.currentY = pageY
          const diffX = touches.currentX - touches.startX
          const diffY = touches.currentY - touches.startY
          if (
            swiper.params.threshold &&
            Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold
          )
            return

          if (typeof data.isScrolling === 'undefined') {
            let touchAngle

            if (
              (swiper.isHorizontal() && touches.currentY === touches.startY) ||
              (swiper.isVertical() && touches.currentX === touches.startX)
            ) {
              data.isScrolling = false
            } else {
              // eslint-disable-next-line
              if (diffX * diffX + diffY * diffY >= 25) {
                touchAngle =
                  (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI
                data.isScrolling = swiper.isHorizontal()
                  ? touchAngle > params.touchAngle
                  : 90 - touchAngle > params.touchAngle
              }
            }
          }

          if (data.isScrolling) {
            swiper.emit('touchMoveOpposite', e)
          }

          if (typeof data.startMoving === 'undefined') {
            if (
              touches.currentX !== touches.startX ||
              touches.currentY !== touches.startY
            ) {
              data.startMoving = true
            }
          }

          if (data.isScrolling) {
            data.isTouched = false
            return
          }

          if (!data.startMoving) {
            return
          }

          swiper.allowClick = false

          if (!params.cssMode && e.cancelable) {
            e.preventDefault()
          }

          if (params.touchMoveStopPropagation && !params.nested) {
            e.stopPropagation()
          }

          if (!data.isMoved) {
            if (params.loop && !params.cssMode) {
              swiper.loopFix()
            }

            data.startTranslate = swiper.getTranslate()
            swiper.setTransition(0)

            if (swiper.animating) {
              swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend')
            }

            data.allowMomentumBounce = false // Grab Cursor

            if (
              params.grabCursor &&
              (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)
            ) {
              swiper.setGrabCursor(true)
            }

            swiper.emit('sliderFirstMove', e)
          }

          swiper.emit('sliderMove', e)
          data.isMoved = true
          let diff = swiper.isHorizontal() ? diffX : diffY
          touches.diff = diff
          diff *= params.touchRatio
          if (rtl) diff = -diff
          swiper.swipeDirection = diff > 0 ? 'prev' : 'next'
          data.currentTranslate = diff + data.startTranslate
          let disableParentSwiper = true
          let resistanceRatio = params.resistanceRatio

          if (params.touchReleaseOnEdges) {
            resistanceRatio = 0
          }

          if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
            disableParentSwiper = false
            if (params.resistance)
              data.currentTranslate =
                swiper.minTranslate() -
                1 +
                (-swiper.minTranslate() + data.startTranslate + diff) **
                  resistanceRatio
          } else if (
            diff < 0 &&
            data.currentTranslate < swiper.maxTranslate()
          ) {
            disableParentSwiper = false
            if (params.resistance)
              data.currentTranslate =
                swiper.maxTranslate() +
                1 -
                (swiper.maxTranslate() - data.startTranslate - diff) **
                  resistanceRatio
          }

          if (disableParentSwiper) {
            e.preventedByNestedSwiper = true
          } // Directions locks

          if (
            !swiper.allowSlideNext &&
            swiper.swipeDirection === 'next' &&
            data.currentTranslate < data.startTranslate
          ) {
            data.currentTranslate = data.startTranslate
          }

          if (
            !swiper.allowSlidePrev &&
            swiper.swipeDirection === 'prev' &&
            data.currentTranslate > data.startTranslate
          ) {
            data.currentTranslate = data.startTranslate
          }

          if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {
            data.currentTranslate = data.startTranslate
          } // Threshold

          if (params.threshold > 0) {
            if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
              if (!data.allowThresholdMove) {
                data.allowThresholdMove = true
                touches.startX = touches.currentX
                touches.startY = touches.currentY
                data.currentTranslate = data.startTranslate
                touches.diff = swiper.isHorizontal()
                  ? touches.currentX - touches.startX
                  : touches.currentY - touches.startY
                return
              }
            } else {
              data.currentTranslate = data.startTranslate
              return
            }
          }

          if (!params.followFinger || params.cssMode) return // Update active index in free mode

          if (
            (params.freeMode && params.freeMode.enabled && swiper.freeMode) ||
            params.watchSlidesProgress
          ) {
            swiper.updateActiveIndex()
            swiper.updateSlidesClasses()
          }

          if (
            swiper.params.freeMode &&
            params.freeMode.enabled &&
            swiper.freeMode
          ) {
            swiper.freeMode.onTouchMove()
          } // Update progress

          swiper.updateProgress(data.currentTranslate) // Update translate

          swiper.setTranslate(data.currentTranslate)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/events/onTouchStart.js':
      /*!*********************************************************!*\
  !*** ./node_modules/swiper/core/events/onTouchStart.js ***!
  \*********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ onTouchStart,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd

        function closestElement(selector, base = this) {
          function __closestFrom(el) {
            if (
              !el ||
              el ===
                (0, ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)() ||
              el === (0, ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            )
              return null
            if (el.assignedSlot) el = el.assignedSlot
            const found = el.closest(selector)
            return found || __closestFrom(el.getRootNode().host)
          }

          return __closestFrom(base)
        }

        function onTouchStart(event) {
          const swiper = this
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const data = swiper.touchEventsData
          const { params, touches, enabled } = swiper
          if (!enabled) return

          if (swiper.animating && params.preventInteractionOnTransition) {
            return
          }

          if (!swiper.animating && params.cssMode && params.loop) {
            swiper.loopFix()
          }

          let e = event
          if (e.originalEvent) e = e.originalEvent
          let $targetEl = (0,
          _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(e.target)

          if (params.touchEventsTarget === 'wrapper') {
            if (!$targetEl.closest(swiper.wrapperEl).length) return
          }

          data.isTouchEvent = e.type === 'touchstart'
          if (!data.isTouchEvent && 'which' in e && e.which === 3) return
          if (!data.isTouchEvent && 'button' in e && e.button > 0) return
          if (data.isTouched && data.isMoved) return // change target el for shadow root component

          const swipingClassHasValue =
            !!params.noSwipingClass && params.noSwipingClass !== ''

          if (
            swipingClassHasValue &&
            e.target &&
            e.target.shadowRoot &&
            event.path &&
            event.path[0]
          ) {
            $targetEl = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
              event.path[0]
            )
          }

          const noSwipingSelector = params.noSwipingSelector
            ? params.noSwipingSelector
            : `.${params.noSwipingClass}`
          const isTargetShadow = !!(e.target && e.target.shadowRoot) // use closestElement for shadow root element to get the actual closest for nested shadow root element

          if (
            params.noSwiping &&
            (isTargetShadow
              ? closestElement(noSwipingSelector, e.target)
              : $targetEl.closest(noSwipingSelector)[0])
          ) {
            swiper.allowClick = true
            return
          }

          if (params.swipeHandler) {
            if (!$targetEl.closest(params.swipeHandler)[0]) return
          }

          touches.currentX =
            e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX
          touches.currentY =
            e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY
          const startX = touches.currentX
          const startY = touches.currentY // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore

          const edgeSwipeDetection =
            params.edgeSwipeDetection || params.iOSEdgeSwipeDetection
          const edgeSwipeThreshold =
            params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold

          if (
            edgeSwipeDetection &&
            (startX <= edgeSwipeThreshold ||
              startX >= window.innerWidth - edgeSwipeThreshold)
          ) {
            if (edgeSwipeDetection === 'prevent') {
              event.preventDefault()
            } else {
              return
            }
          }

          Object.assign(data, {
            isTouched: true,
            isMoved: false,
            allowTouchCallbacks: true,
            isScrolling: undefined,
            startMoving: undefined,
          })
          touches.startX = startX
          touches.startY = startY
          data.touchStartTime = (0,
          _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)()
          swiper.allowClick = true
          swiper.updateSize()
          swiper.swipeDirection = undefined
          if (params.threshold > 0) data.allowThresholdMove = false

          if (e.type !== 'touchstart') {
            let preventDefault = true
            if ($targetEl.is(data.focusableElements)) preventDefault = false

            if (
              document.activeElement &&
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                document.activeElement
              ).is(data.focusableElements) &&
              document.activeElement !== $targetEl[0]
            ) {
              document.activeElement.blur()
            }

            const shouldPreventDefault =
              preventDefault &&
              swiper.allowTouchMove &&
              params.touchStartPreventDefault

            if (
              (params.touchStartForcePreventDefault || shouldPreventDefault) &&
              !$targetEl[0].isContentEditable
            ) {
              e.preventDefault()
            }
          }

          swiper.emit('touchStart', e)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/grab-cursor/index.js':
      /*!*******************************************************!*\
  !*** ./node_modules/swiper/core/grab-cursor/index.js ***!
  \*******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _setGrabCursor_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./setGrabCursor.js */ './node_modules/swiper/core/grab-cursor/setGrabCursor.js'
          )
        /* harmony import */ var _unsetGrabCursor_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./unsetGrabCursor.js */ './node_modules/swiper/core/grab-cursor/unsetGrabCursor.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          setGrabCursor:
            _setGrabCursor_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          unsetGrabCursor:
            _unsetGrabCursor_js__WEBPACK_IMPORTED_MODULE_1__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/grab-cursor/setGrabCursor.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/grab-cursor/setGrabCursor.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ setGrabCursor,
          /* harmony export */
        })
        function setGrabCursor(moving) {
          const swiper = this
          if (
            swiper.support.touch ||
            !swiper.params.simulateTouch ||
            (swiper.params.watchOverflow && swiper.isLocked) ||
            swiper.params.cssMode
          )
            return
          const el =
            swiper.params.touchEventsTarget === 'container'
              ? swiper.el
              : swiper.wrapperEl
          el.style.cursor = 'move'
          el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab'
          el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab'
          el.style.cursor = moving ? 'grabbing' : 'grab'
        }

        /***/
      },

    /***/ './node_modules/swiper/core/grab-cursor/unsetGrabCursor.js':
      /*!*****************************************************************!*\
  !*** ./node_modules/swiper/core/grab-cursor/unsetGrabCursor.js ***!
  \*****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ unsetGrabCursor,
          /* harmony export */
        })
        function unsetGrabCursor() {
          const swiper = this

          if (
            swiper.support.touch ||
            (swiper.params.watchOverflow && swiper.isLocked) ||
            swiper.params.cssMode
          ) {
            return
          }

          swiper[
            swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'
          ].style.cursor = ''
        }

        /***/
      },

    /***/ './node_modules/swiper/core/images/index.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/core/images/index.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _loadImage_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./loadImage.js */ './node_modules/swiper/core/images/loadImage.js'
          )
        /* harmony import */ var _preloadImages_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./preloadImages.js */ './node_modules/swiper/core/images/preloadImages.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          loadImage: _loadImage_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          preloadImages:
            _preloadImages_js__WEBPACK_IMPORTED_MODULE_1__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/images/loadImage.js':
      /*!******************************************************!*\
  !*** ./node_modules/swiper/core/images/loadImage.js ***!
  \******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ loadImage,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function loadImage(
          imageEl,
          src,
          srcset,
          sizes,
          checkForComplete,
          callback
        ) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let image

          function onReady() {
            if (callback) callback()
          }

          const isPicture = (0,
          _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
            imageEl
          ).parent('picture')[0]

          if (!isPicture && (!imageEl.complete || !checkForComplete)) {
            if (src) {
              image = new window.Image()
              image.onload = onReady
              image.onerror = onReady

              if (sizes) {
                image.sizes = sizes
              }

              if (srcset) {
                image.srcset = srcset
              }

              if (src) {
                image.src = src
              }
            } else {
              onReady()
            }
          } else {
            // image already loaded...
            onReady()
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/images/preloadImages.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/core/images/preloadImages.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ preloadImages,
          /* harmony export */
        })
        function preloadImages() {
          const swiper = this
          swiper.imagesToLoad = swiper.$el.find('img')

          function onReady() {
            if (
              typeof swiper === 'undefined' ||
              swiper === null ||
              !swiper ||
              swiper.destroyed
            )
              return
            if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1

            if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
              if (swiper.params.updateOnImagesReady) swiper.update()
              swiper.emit('imagesReady')
            }
          }

          for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {
            const imageEl = swiper.imagesToLoad[i]
            swiper.loadImage(
              imageEl,
              imageEl.currentSrc || imageEl.getAttribute('src'),
              imageEl.srcset || imageEl.getAttribute('srcset'),
              imageEl.sizes || imageEl.getAttribute('sizes'),
              true,
              onReady
            )
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/loop/index.js':
      /*!************************************************!*\
  !*** ./node_modules/swiper/core/loop/index.js ***!
  \************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _loopCreate_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./loopCreate.js */ './node_modules/swiper/core/loop/loopCreate.js'
          )
        /* harmony import */ var _loopFix_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./loopFix.js */ './node_modules/swiper/core/loop/loopFix.js'
          )
        /* harmony import */ var _loopDestroy_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./loopDestroy.js */ './node_modules/swiper/core/loop/loopDestroy.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          loopCreate: _loopCreate_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          loopFix: _loopFix_js__WEBPACK_IMPORTED_MODULE_1__['default'],
          loopDestroy: _loopDestroy_js__WEBPACK_IMPORTED_MODULE_2__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/loop/loopCreate.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/loop/loopCreate.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ loopCreate,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function loopCreate() {
          const swiper = this
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const { params, $wrapperEl } = swiper // Remove duplicated slides

          $wrapperEl
            .children(`.${params.slideClass}.${params.slideDuplicateClass}`)
            .remove()
          let slides = $wrapperEl.children(`.${params.slideClass}`)

          if (params.loopFillGroupWithBlank) {
            const blankSlidesNum =
              params.slidesPerGroup - (slides.length % params.slidesPerGroup)

            if (blankSlidesNum !== params.slidesPerGroup) {
              for (let i = 0; i < blankSlidesNum; i += 1) {
                const blankNode = (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  document.createElement('div')
                ).addClass(`${params.slideClass} ${params.slideBlankClass}`)
                $wrapperEl.append(blankNode)
              }

              slides = $wrapperEl.children(`.${params.slideClass}`)
            }
          }

          if (params.slidesPerView === 'auto' && !params.loopedSlides)
            params.loopedSlides = slides.length
          swiper.loopedSlides = Math.ceil(
            parseFloat(params.loopedSlides || params.slidesPerView, 10)
          )
          swiper.loopedSlides += params.loopAdditionalSlides

          if (swiper.loopedSlides > slides.length) {
            swiper.loopedSlides = slides.length
          }

          const prependSlides = []
          const appendSlides = []
          slides.each((el, index) => {
            const slide = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(el)

            if (index < swiper.loopedSlides) {
              appendSlides.push(el)
            }

            if (
              index < slides.length &&
              index >= slides.length - swiper.loopedSlides
            ) {
              prependSlides.push(el)
            }

            slide.attr('data-swiper-slide-index', index)
          })

          for (let i = 0; i < appendSlides.length; i += 1) {
            $wrapperEl.append(
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                appendSlides[i].cloneNode(true)
              ).addClass(params.slideDuplicateClass)
            )
          }

          for (let i = prependSlides.length - 1; i >= 0; i -= 1) {
            $wrapperEl.prepend(
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                prependSlides[i].cloneNode(true)
              ).addClass(params.slideDuplicateClass)
            )
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/loop/loopDestroy.js':
      /*!******************************************************!*\
  !*** ./node_modules/swiper/core/loop/loopDestroy.js ***!
  \******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ loopDestroy,
          /* harmony export */
        })
        function loopDestroy() {
          const swiper = this
          const { $wrapperEl, params, slides } = swiper
          $wrapperEl
            .children(
              `.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`
            )
            .remove()
          slides.removeAttr('data-swiper-slide-index')
        }

        /***/
      },

    /***/ './node_modules/swiper/core/loop/loopFix.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/core/loop/loopFix.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ loopFix,
          /* harmony export */
        })
        function loopFix() {
          const swiper = this
          swiper.emit('beforeLoopFix')
          const {
            activeIndex,
            slides,
            loopedSlides,
            allowSlidePrev,
            allowSlideNext,
            snapGrid,
            rtlTranslate: rtl,
          } = swiper
          let newIndex
          swiper.allowSlidePrev = true
          swiper.allowSlideNext = true
          const snapTranslate = -snapGrid[activeIndex]
          const diff = snapTranslate - swiper.getTranslate() // Fix For Negative Oversliding

          if (activeIndex < loopedSlides) {
            newIndex = slides.length - loopedSlides * 3 + activeIndex
            newIndex += loopedSlides
            const slideChanged = swiper.slideTo(newIndex, 0, false, true)

            if (slideChanged && diff !== 0) {
              swiper.setTranslate(
                (rtl ? -swiper.translate : swiper.translate) - diff
              )
            }
          } else if (activeIndex >= slides.length - loopedSlides) {
            // Fix For Positive Oversliding
            newIndex = -slides.length + activeIndex + loopedSlides
            newIndex += loopedSlides
            const slideChanged = swiper.slideTo(newIndex, 0, false, true)

            if (slideChanged && diff !== 0) {
              swiper.setTranslate(
                (rtl ? -swiper.translate : swiper.translate) - diff
              )
            }
          }

          swiper.allowSlidePrev = allowSlidePrev
          swiper.allowSlideNext = allowSlideNext
          swiper.emit('loopFix')
        }

        /***/
      },

    /***/ './node_modules/swiper/core/moduleExtendParams.js':
      /*!********************************************************!*\
  !*** ./node_modules/swiper/core/moduleExtendParams.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ moduleExtendParams,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function moduleExtendParams(params, allModulesParams) {
          return function extendParams(obj = {}) {
            const moduleParamName = Object.keys(obj)[0]
            const moduleParams = obj[moduleParamName]

            if (typeof moduleParams !== 'object' || moduleParams === null) {
              ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.extend)(
                allModulesParams,
                obj
              )
              return
            }

            if (
              ['navigation', 'pagination', 'scrollbar'].indexOf(
                moduleParamName
              ) >= 0 &&
              params[moduleParamName] === true
            ) {
              params[moduleParamName] = {
                auto: true,
              }
            }

            if (!(moduleParamName in params && 'enabled' in moduleParams)) {
              ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.extend)(
                allModulesParams,
                obj
              )
              return
            }

            if (params[moduleParamName] === true) {
              params[moduleParamName] = {
                enabled: true,
              }
            }

            if (
              typeof params[moduleParamName] === 'object' &&
              !('enabled' in params[moduleParamName])
            ) {
              params[moduleParamName].enabled = true
            }

            if (!params[moduleParamName])
              params[moduleParamName] = {
                enabled: false,
              }
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.extend)(
              allModulesParams,
              obj
            )
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/modules/observer/observer.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/modules/observer/observer.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Observer,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function Observer({ swiper, extendParams, on, emit }) {
          const observers = []
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

          const attach = (target, options = {}) => {
            const ObserverFunc =
              window.MutationObserver || window.WebkitMutationObserver
            const observer = new ObserverFunc((mutations) => {
              // The observerUpdate event should only be triggered
              // once despite the number of mutations.  Additional
              // triggers are redundant and are very costly
              if (mutations.length === 1) {
                emit('observerUpdate', mutations[0])
                return
              }

              const observerUpdate = function observerUpdate() {
                emit('observerUpdate', mutations[0])
              }

              if (window.requestAnimationFrame) {
                window.requestAnimationFrame(observerUpdate)
              } else {
                window.setTimeout(observerUpdate, 0)
              }
            })
            observer.observe(target, {
              attributes:
                typeof options.attributes === 'undefined'
                  ? true
                  : options.attributes,
              childList:
                typeof options.childList === 'undefined'
                  ? true
                  : options.childList,
              characterData:
                typeof options.characterData === 'undefined'
                  ? true
                  : options.characterData,
            })
            observers.push(observer)
          }

          const init = () => {
            if (!swiper.params.observer) return

            if (swiper.params.observeParents) {
              const containerParents = swiper.$el.parents()

              for (let i = 0; i < containerParents.length; i += 1) {
                attach(containerParents[i])
              }
            } // Observe container

            attach(swiper.$el[0], {
              childList: swiper.params.observeSlideChildren,
            }) // Observe wrapper

            attach(swiper.$wrapperEl[0], {
              attributes: false,
            })
          }

          const destroy = () => {
            observers.forEach((observer) => {
              observer.disconnect()
            })
            observers.splice(0, observers.length)
          }

          extendParams({
            observer: false,
            observeParents: false,
            observeSlideChildren: false,
          })
          on('init', init)
          on('destroy', destroy)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/modules/resize/resize.js':
      /*!***********************************************************!*\
  !*** ./node_modules/swiper/core/modules/resize/resize.js ***!
  \***********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Resize,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function Resize({ swiper, on, emit }) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let observer = null

          const resizeHandler = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized) return
            emit('beforeResize')
            emit('resize')
          }

          const createObserver = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized) return
            observer = new ResizeObserver((entries) => {
              const { width, height } = swiper
              let newWidth = width
              let newHeight = height
              entries.forEach(({ contentBoxSize, contentRect, target }) => {
                if (target && target !== swiper.el) return
                newWidth = contentRect
                  ? contentRect.width
                  : (contentBoxSize[0] || contentBoxSize).inlineSize
                newHeight = contentRect
                  ? contentRect.height
                  : (contentBoxSize[0] || contentBoxSize).blockSize
              })

              if (newWidth !== width || newHeight !== height) {
                resizeHandler()
              }
            })
            observer.observe(swiper.el)
          }

          const removeObserver = () => {
            if (observer && observer.unobserve && swiper.el) {
              observer.unobserve(swiper.el)
              observer = null
            }
          }

          const orientationChangeHandler = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized) return
            emit('orientationchange')
          }

          on('init', () => {
            if (
              swiper.params.resizeObserver &&
              typeof window.ResizeObserver !== 'undefined'
            ) {
              createObserver()
              return
            }

            window.addEventListener('resize', resizeHandler)
            window.addEventListener(
              'orientationchange',
              orientationChangeHandler
            )
          })
          on('destroy', () => {
            removeObserver()
            window.removeEventListener('resize', resizeHandler)
            window.removeEventListener(
              'orientationchange',
              orientationChangeHandler
            )
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/index.js':
      /*!*************************************************!*\
  !*** ./node_modules/swiper/core/slide/index.js ***!
  \*************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _slideTo_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./slideTo.js */ './node_modules/swiper/core/slide/slideTo.js'
          )
        /* harmony import */ var _slideToLoop_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./slideToLoop.js */ './node_modules/swiper/core/slide/slideToLoop.js'
          )
        /* harmony import */ var _slideNext_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./slideNext.js */ './node_modules/swiper/core/slide/slideNext.js'
          )
        /* harmony import */ var _slidePrev_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./slidePrev.js */ './node_modules/swiper/core/slide/slidePrev.js'
          )
        /* harmony import */ var _slideReset_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./slideReset.js */ './node_modules/swiper/core/slide/slideReset.js'
          )
        /* harmony import */ var _slideToClosest_js__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ./slideToClosest.js */ './node_modules/swiper/core/slide/slideToClosest.js'
          )
        /* harmony import */ var _slideToClickedSlide_js__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./slideToClickedSlide.js */ './node_modules/swiper/core/slide/slideToClickedSlide.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          slideTo: _slideTo_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          slideToLoop: _slideToLoop_js__WEBPACK_IMPORTED_MODULE_1__['default'],
          slideNext: _slideNext_js__WEBPACK_IMPORTED_MODULE_2__['default'],
          slidePrev: _slidePrev_js__WEBPACK_IMPORTED_MODULE_3__['default'],
          slideReset: _slideReset_js__WEBPACK_IMPORTED_MODULE_4__['default'],
          slideToClosest:
            _slideToClosest_js__WEBPACK_IMPORTED_MODULE_5__['default'],
          slideToClickedSlide:
            _slideToClickedSlide_js__WEBPACK_IMPORTED_MODULE_6__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideNext.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideNext.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideNext,
          /* harmony export */
        })
        /* eslint no-unused-vars: "off" */
        function slideNext(
          speed = this.params.speed,
          runCallbacks = true,
          internal
        ) {
          const swiper = this
          const { animating, enabled, params } = swiper
          if (!enabled) return swiper
          let perGroup = params.slidesPerGroup

          if (
            params.slidesPerView === 'auto' &&
            params.slidesPerGroup === 1 &&
            params.slidesPerGroupAuto
          ) {
            perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1)
          }

          const increment =
            swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup

          if (params.loop) {
            if (animating && params.loopPreventsSlide) return false
            swiper.loopFix() // eslint-disable-next-line

            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft
          }

          return swiper.slideTo(
            swiper.activeIndex + increment,
            speed,
            runCallbacks,
            internal
          )
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slidePrev.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/slide/slidePrev.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slidePrev,
          /* harmony export */
        })
        /* eslint no-unused-vars: "off" */
        function slidePrev(
          speed = this.params.speed,
          runCallbacks = true,
          internal
        ) {
          const swiper = this
          const {
            params,
            animating,
            snapGrid,
            slidesGrid,
            rtlTranslate,
            enabled,
          } = swiper
          if (!enabled) return swiper

          if (params.loop) {
            if (animating && params.loopPreventsSlide) return false
            swiper.loopFix() // eslint-disable-next-line

            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft
          }

          const translate = rtlTranslate ? swiper.translate : -swiper.translate

          function normalize(val) {
            if (val < 0) return -Math.floor(Math.abs(val))
            return Math.floor(val)
          }

          const normalizedTranslate = normalize(translate)
          const normalizedSnapGrid = snapGrid.map((val) => normalize(val))
          let prevSnap =
            snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1]

          if (typeof prevSnap === 'undefined' && params.cssMode) {
            let prevSnapIndex
            snapGrid.forEach((snap, snapIndex) => {
              if (normalizedTranslate >= snap) {
                // prevSnap = snap;
                prevSnapIndex = snapIndex
              }
            })

            if (typeof prevSnapIndex !== 'undefined') {
              prevSnap =
                snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex]
            }
          }

          let prevIndex = 0

          if (typeof prevSnap !== 'undefined') {
            prevIndex = slidesGrid.indexOf(prevSnap)
            if (prevIndex < 0) prevIndex = swiper.activeIndex - 1

            if (
              params.slidesPerView === 'auto' &&
              params.slidesPerGroup === 1 &&
              params.slidesPerGroupAuto
            ) {
              prevIndex =
                prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1
              prevIndex = Math.max(prevIndex, 0)
            }
          }

          return swiper.slideTo(prevIndex, speed, runCallbacks, internal)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideReset.js':
      /*!******************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideReset.js ***!
  \******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideReset,
          /* harmony export */
        })
        /* eslint no-unused-vars: "off" */
        function slideReset(
          speed = this.params.speed,
          runCallbacks = true,
          internal
        ) {
          const swiper = this
          return swiper.slideTo(
            swiper.activeIndex,
            speed,
            runCallbacks,
            internal
          )
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideTo.js':
      /*!***************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideTo.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideTo,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function slideTo(
          index = 0,
          speed = this.params.speed,
          runCallbacks = true,
          internal,
          initial
        ) {
          if (typeof index !== 'number' && typeof index !== 'string') {
            throw new Error(
              `The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`
            )
          }

          if (typeof index === 'string') {
            /**
             * The `index` argument converted from `string` to `number`.
             * @type {number}
             */
            const indexAsNumber = parseInt(index, 10)
            /**
             * Determines whether the `index` argument is a valid `number`
             * after being converted from the `string` type.
             * @type {boolean}
             */

            const isValidNumber = isFinite(indexAsNumber)

            if (!isValidNumber) {
              throw new Error(
                `The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`
              )
            } // Knowing that the converted `index` is a valid number,
            // we can update the original argument's value.

            index = indexAsNumber
          }

          const swiper = this
          let slideIndex = index
          if (slideIndex < 0) slideIndex = 0
          const {
            params,
            snapGrid,
            slidesGrid,
            previousIndex,
            activeIndex,
            rtlTranslate: rtl,
            wrapperEl,
            enabled,
          } = swiper

          if (
            (swiper.animating && params.preventInteractionOnTransition) ||
            (!enabled && !internal && !initial)
          ) {
            return false
          }

          const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex)
          let snapIndex =
            skip +
            Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup)
          if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1

          if (
            (activeIndex || params.initialSlide || 0) ===
              (previousIndex || 0) &&
            runCallbacks
          ) {
            swiper.emit('beforeSlideChangeStart')
          }

          const translate = -snapGrid[snapIndex] // Update progress

          swiper.updateProgress(translate) // Normalize slideIndex

          if (params.normalizeSlideIndex) {
            for (let i = 0; i < slidesGrid.length; i += 1) {
              const normalizedTranslate = -Math.floor(translate * 100)
              const normalizedGrid = Math.floor(slidesGrid[i] * 100)
              const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100)

              if (typeof slidesGrid[i + 1] !== 'undefined') {
                if (
                  normalizedTranslate >= normalizedGrid &&
                  normalizedTranslate <
                    normalizedGridNext -
                      (normalizedGridNext - normalizedGrid) / 2
                ) {
                  slideIndex = i
                } else if (
                  normalizedTranslate >= normalizedGrid &&
                  normalizedTranslate < normalizedGridNext
                ) {
                  slideIndex = i + 1
                }
              } else if (normalizedTranslate >= normalizedGrid) {
                slideIndex = i
              }
            }
          } // Directions locks

          if (swiper.initialized && slideIndex !== activeIndex) {
            if (
              !swiper.allowSlideNext &&
              translate < swiper.translate &&
              translate < swiper.minTranslate()
            ) {
              return false
            }

            if (
              !swiper.allowSlidePrev &&
              translate > swiper.translate &&
              translate > swiper.maxTranslate()
            ) {
              if ((activeIndex || 0) !== slideIndex) return false
            }
          }

          let direction
          if (slideIndex > activeIndex) direction = 'next'
          else if (slideIndex < activeIndex) direction = 'prev'
          else direction = 'reset' // Update Index

          if (
            (rtl && -translate === swiper.translate) ||
            (!rtl && translate === swiper.translate)
          ) {
            swiper.updateActiveIndex(slideIndex) // Update Height

            if (params.autoHeight) {
              swiper.updateAutoHeight()
            }

            swiper.updateSlidesClasses()

            if (params.effect !== 'slide') {
              swiper.setTranslate(translate)
            }

            if (direction !== 'reset') {
              swiper.transitionStart(runCallbacks, direction)
              swiper.transitionEnd(runCallbacks, direction)
            }

            return false
          }

          if (params.cssMode) {
            const isH = swiper.isHorizontal()
            const t = rtl ? translate : -translate

            if (speed === 0) {
              const isVirtual = swiper.virtual && swiper.params.virtual.enabled

              if (isVirtual) {
                swiper.wrapperEl.style.scrollSnapType = 'none'
              }

              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t

              if (isVirtual) {
                requestAnimationFrame(() => {
                  swiper.wrapperEl.style.scrollSnapType = ''
                })
              }
            } else {
              if (!swiper.support.smoothScroll) {
                ;(0,
                _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.animateCSSModeScroll)(
                  {
                    swiper,
                    targetPosition: t,
                    side: isH ? 'left' : 'top',
                  }
                )
                return true
              }

              wrapperEl.scrollTo({
                [isH ? 'left' : 'top']: t,
                behavior: 'smooth',
              })
            }

            return true
          }

          if (speed === 0) {
            swiper.setTransition(0)
            swiper.setTranslate(translate)
            swiper.updateActiveIndex(slideIndex)
            swiper.updateSlidesClasses()
            swiper.emit('beforeTransitionStart', speed, internal)
            swiper.transitionStart(runCallbacks, direction)
            swiper.transitionEnd(runCallbacks, direction)
          } else {
            swiper.setTransition(speed)
            swiper.setTranslate(translate)
            swiper.updateActiveIndex(slideIndex)
            swiper.updateSlidesClasses()
            swiper.emit('beforeTransitionStart', speed, internal)
            swiper.transitionStart(runCallbacks, direction)

            if (!swiper.animating) {
              swiper.animating = true

              if (!swiper.onSlideToWrapperTransitionEnd) {
                swiper.onSlideToWrapperTransitionEnd = function transitionEnd(
                  e
                ) {
                  if (!swiper || swiper.destroyed) return
                  if (e.target !== this) return
                  swiper.$wrapperEl[0].removeEventListener(
                    'transitionend',
                    swiper.onSlideToWrapperTransitionEnd
                  )
                  swiper.$wrapperEl[0].removeEventListener(
                    'webkitTransitionEnd',
                    swiper.onSlideToWrapperTransitionEnd
                  )
                  swiper.onSlideToWrapperTransitionEnd = null
                  delete swiper.onSlideToWrapperTransitionEnd
                  swiper.transitionEnd(runCallbacks, direction)
                }
              }

              swiper.$wrapperEl[0].addEventListener(
                'transitionend',
                swiper.onSlideToWrapperTransitionEnd
              )
              swiper.$wrapperEl[0].addEventListener(
                'webkitTransitionEnd',
                swiper.onSlideToWrapperTransitionEnd
              )
            }
          }

          return true
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideToClickedSlide.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideToClickedSlide.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideToClickedSlide,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function slideToClickedSlide() {
          const swiper = this
          const { params, $wrapperEl } = swiper
          const slidesPerView =
            params.slidesPerView === 'auto'
              ? swiper.slidesPerViewDynamic()
              : params.slidesPerView
          let slideToIndex = swiper.clickedIndex
          let realIndex

          if (params.loop) {
            if (swiper.animating) return
            realIndex = parseInt(
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                swiper.clickedSlide
              ).attr('data-swiper-slide-index'),
              10
            )

            if (params.centeredSlides) {
              if (
                slideToIndex < swiper.loopedSlides - slidesPerView / 2 ||
                slideToIndex >
                  swiper.slides.length - swiper.loopedSlides + slidesPerView / 2
              ) {
                swiper.loopFix()
                slideToIndex = $wrapperEl
                  .children(
                    `.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`
                  )
                  .eq(0)
                  .index()
                ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(
                  () => {
                    swiper.slideTo(slideToIndex)
                  }
                )
              } else {
                swiper.slideTo(slideToIndex)
              }
            } else if (slideToIndex > swiper.slides.length - slidesPerView) {
              swiper.loopFix()
              slideToIndex = $wrapperEl
                .children(
                  `.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`
                )
                .eq(0)
                .index()
              ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(
                () => {
                  swiper.slideTo(slideToIndex)
                }
              )
            } else {
              swiper.slideTo(slideToIndex)
            }
          } else {
            swiper.slideTo(slideToIndex)
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideToClosest.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideToClosest.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideToClosest,
          /* harmony export */
        })
        /* eslint no-unused-vars: "off" */
        function slideToClosest(
          speed = this.params.speed,
          runCallbacks = true,
          internal,
          threshold = 0.5
        ) {
          const swiper = this
          let index = swiper.activeIndex
          const skip = Math.min(swiper.params.slidesPerGroupSkip, index)
          const snapIndex =
            skip + Math.floor((index - skip) / swiper.params.slidesPerGroup)
          const translate = swiper.rtlTranslate
            ? swiper.translate
            : -swiper.translate

          if (translate >= swiper.snapGrid[snapIndex]) {
            // The current translate is on or after the current snap index, so the choice
            // is between the current index and the one after it.
            const currentSnap = swiper.snapGrid[snapIndex]
            const nextSnap = swiper.snapGrid[snapIndex + 1]

            if (
              translate - currentSnap >
              (nextSnap - currentSnap) * threshold
            ) {
              index += swiper.params.slidesPerGroup
            }
          } else {
            // The current translate is before the current snap index, so the choice
            // is between the current index and the one before it.
            const prevSnap = swiper.snapGrid[snapIndex - 1]
            const currentSnap = swiper.snapGrid[snapIndex]

            if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {
              index -= swiper.params.slidesPerGroup
            }
          }

          index = Math.max(index, 0)
          index = Math.min(index, swiper.slidesGrid.length - 1)
          return swiper.slideTo(index, speed, runCallbacks, internal)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/slide/slideToLoop.js':
      /*!*******************************************************!*\
  !*** ./node_modules/swiper/core/slide/slideToLoop.js ***!
  \*******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ slideToLoop,
          /* harmony export */
        })
        function slideToLoop(
          index = 0,
          speed = this.params.speed,
          runCallbacks = true,
          internal
        ) {
          const swiper = this
          let newIndex = index

          if (swiper.params.loop) {
            newIndex += swiper.loopedSlides
          }

          return swiper.slideTo(newIndex, speed, runCallbacks, internal)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/transition/index.js':
      /*!******************************************************!*\
  !*** ./node_modules/swiper/core/transition/index.js ***!
  \******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _setTransition_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./setTransition.js */ './node_modules/swiper/core/transition/setTransition.js'
          )
        /* harmony import */ var _transitionStart_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./transitionStart.js */ './node_modules/swiper/core/transition/transitionStart.js'
          )
        /* harmony import */ var _transitionEnd_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./transitionEnd.js */ './node_modules/swiper/core/transition/transitionEnd.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          setTransition:
            _setTransition_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          transitionStart:
            _transitionStart_js__WEBPACK_IMPORTED_MODULE_1__['default'],
          transitionEnd:
            _transitionEnd_js__WEBPACK_IMPORTED_MODULE_2__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/transition/setTransition.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/core/transition/setTransition.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ setTransition,
          /* harmony export */
        })
        function setTransition(duration, byController) {
          const swiper = this

          if (!swiper.params.cssMode) {
            swiper.$wrapperEl.transition(duration)
          }

          swiper.emit('setTransition', duration, byController)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/transition/transitionEmit.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/transition/transitionEmit.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ transitionEmit,
          /* harmony export */
        })
        function transitionEmit({ swiper, runCallbacks, direction, step }) {
          const { activeIndex, previousIndex } = swiper
          let dir = direction

          if (!dir) {
            if (activeIndex > previousIndex) dir = 'next'
            else if (activeIndex < previousIndex) dir = 'prev'
            else dir = 'reset'
          }

          swiper.emit(`transition${step}`)

          if (runCallbacks && activeIndex !== previousIndex) {
            if (dir === 'reset') {
              swiper.emit(`slideResetTransition${step}`)
              return
            }

            swiper.emit(`slideChangeTransition${step}`)

            if (dir === 'next') {
              swiper.emit(`slideNextTransition${step}`)
            } else {
              swiper.emit(`slidePrevTransition${step}`)
            }
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/transition/transitionEnd.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/core/transition/transitionEnd.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ transitionEnd,
          /* harmony export */
        })
        /* harmony import */ var _transitionEmit_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./transitionEmit.js */ './node_modules/swiper/core/transition/transitionEmit.js'
          )

        function transitionEnd(runCallbacks = true, direction) {
          const swiper = this
          const { params } = swiper
          swiper.animating = false
          if (params.cssMode) return
          swiper.setTransition(0)
          ;(0, _transitionEmit_js__WEBPACK_IMPORTED_MODULE_0__['default'])({
            swiper,
            runCallbacks,
            direction,
            step: 'End',
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/core/transition/transitionStart.js':
      /*!****************************************************************!*\
  !*** ./node_modules/swiper/core/transition/transitionStart.js ***!
  \****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ transitionStart,
          /* harmony export */
        })
        /* harmony import */ var _transitionEmit_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./transitionEmit.js */ './node_modules/swiper/core/transition/transitionEmit.js'
          )

        function transitionStart(runCallbacks = true, direction) {
          const swiper = this
          const { params } = swiper
          if (params.cssMode) return

          if (params.autoHeight) {
            swiper.updateAutoHeight()
          }

          ;(0, _transitionEmit_js__WEBPACK_IMPORTED_MODULE_0__['default'])({
            swiper,
            runCallbacks,
            direction,
            step: 'Start',
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/getTranslate.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/core/translate/getTranslate.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ getSwiperTranslate,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {
          const swiper = this
          const { params, rtlTranslate: rtl, translate, $wrapperEl } = swiper

          if (params.virtualTranslate) {
            return rtl ? -translate : translate
          }

          if (params.cssMode) {
            return translate
          }

          let currentTranslate = (0,
          _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.getTranslate)(
            $wrapperEl[0],
            axis
          )
          if (rtl) currentTranslate = -currentTranslate
          return currentTranslate || 0
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/index.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/core/translate/index.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _getTranslate_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./getTranslate.js */ './node_modules/swiper/core/translate/getTranslate.js'
          )
        /* harmony import */ var _setTranslate_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./setTranslate.js */ './node_modules/swiper/core/translate/setTranslate.js'
          )
        /* harmony import */ var _minTranslate_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./minTranslate.js */ './node_modules/swiper/core/translate/minTranslate.js'
          )
        /* harmony import */ var _maxTranslate_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./maxTranslate.js */ './node_modules/swiper/core/translate/maxTranslate.js'
          )
        /* harmony import */ var _translateTo_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./translateTo.js */ './node_modules/swiper/core/translate/translateTo.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          getTranslate:
            _getTranslate_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          setTranslate:
            _setTranslate_js__WEBPACK_IMPORTED_MODULE_1__['default'],
          minTranslate:
            _minTranslate_js__WEBPACK_IMPORTED_MODULE_2__['default'],
          maxTranslate:
            _maxTranslate_js__WEBPACK_IMPORTED_MODULE_3__['default'],
          translateTo: _translateTo_js__WEBPACK_IMPORTED_MODULE_4__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/maxTranslate.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/core/translate/maxTranslate.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ maxTranslate,
          /* harmony export */
        })
        function maxTranslate() {
          return -this.snapGrid[this.snapGrid.length - 1]
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/minTranslate.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/core/translate/minTranslate.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ minTranslate,
          /* harmony export */
        })
        function minTranslate() {
          return -this.snapGrid[0]
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/setTranslate.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/core/translate/setTranslate.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ setTranslate,
          /* harmony export */
        })
        function setTranslate(translate, byController) {
          const swiper = this
          const {
            rtlTranslate: rtl,
            params,
            $wrapperEl,
            wrapperEl,
            progress,
          } = swiper
          let x = 0
          let y = 0
          const z = 0

          if (swiper.isHorizontal()) {
            x = rtl ? -translate : translate
          } else {
            y = translate
          }

          if (params.roundLengths) {
            x = Math.floor(x)
            y = Math.floor(y)
          }

          if (params.cssMode) {
            wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] =
              swiper.isHorizontal() ? -x : -y
          } else if (!params.virtualTranslate) {
            $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`)
          }

          swiper.previousTranslate = swiper.translate
          swiper.translate = swiper.isHorizontal() ? x : y // Check if we need to update progress

          let newProgress
          const translatesDiff = swiper.maxTranslate() - swiper.minTranslate()

          if (translatesDiff === 0) {
            newProgress = 0
          } else {
            newProgress = (translate - swiper.minTranslate()) / translatesDiff
          }

          if (newProgress !== progress) {
            swiper.updateProgress(translate)
          }

          swiper.emit('setTranslate', swiper.translate, byController)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/translate/translateTo.js':
      /*!***********************************************************!*\
  !*** ./node_modules/swiper/core/translate/translateTo.js ***!
  \***********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ translateTo,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function translateTo(
          translate = 0,
          speed = this.params.speed,
          runCallbacks = true,
          translateBounds = true,
          internal
        ) {
          const swiper = this
          const { params, wrapperEl } = swiper

          if (swiper.animating && params.preventInteractionOnTransition) {
            return false
          }

          const minTranslate = swiper.minTranslate()
          const maxTranslate = swiper.maxTranslate()
          let newTranslate
          if (translateBounds && translate > minTranslate)
            newTranslate = minTranslate
          else if (translateBounds && translate < maxTranslate)
            newTranslate = maxTranslate
          else newTranslate = translate // Update progress

          swiper.updateProgress(newTranslate)

          if (params.cssMode) {
            const isH = swiper.isHorizontal()

            if (speed === 0) {
              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate
            } else {
              if (!swiper.support.smoothScroll) {
                ;(0,
                _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.animateCSSModeScroll)(
                  {
                    swiper,
                    targetPosition: -newTranslate,
                    side: isH ? 'left' : 'top',
                  }
                )
                return true
              }

              wrapperEl.scrollTo({
                [isH ? 'left' : 'top']: -newTranslate,
                behavior: 'smooth',
              })
            }

            return true
          }

          if (speed === 0) {
            swiper.setTransition(0)
            swiper.setTranslate(newTranslate)

            if (runCallbacks) {
              swiper.emit('beforeTransitionStart', speed, internal)
              swiper.emit('transitionEnd')
            }
          } else {
            swiper.setTransition(speed)
            swiper.setTranslate(newTranslate)

            if (runCallbacks) {
              swiper.emit('beforeTransitionStart', speed, internal)
              swiper.emit('transitionStart')
            }

            if (!swiper.animating) {
              swiper.animating = true

              if (!swiper.onTranslateToWrapperTransitionEnd) {
                swiper.onTranslateToWrapperTransitionEnd =
                  function transitionEnd(e) {
                    if (!swiper || swiper.destroyed) return
                    if (e.target !== this) return
                    swiper.$wrapperEl[0].removeEventListener(
                      'transitionend',
                      swiper.onTranslateToWrapperTransitionEnd
                    )
                    swiper.$wrapperEl[0].removeEventListener(
                      'webkitTransitionEnd',
                      swiper.onTranslateToWrapperTransitionEnd
                    )
                    swiper.onTranslateToWrapperTransitionEnd = null
                    delete swiper.onTranslateToWrapperTransitionEnd

                    if (runCallbacks) {
                      swiper.emit('transitionEnd')
                    }
                  }
              }

              swiper.$wrapperEl[0].addEventListener(
                'transitionend',
                swiper.onTranslateToWrapperTransitionEnd
              )
              swiper.$wrapperEl[0].addEventListener(
                'webkitTransitionEnd',
                swiper.onTranslateToWrapperTransitionEnd
              )
            }
          }

          return true
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/index.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/core/update/index.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var _updateSize_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./updateSize.js */ './node_modules/swiper/core/update/updateSize.js'
          )
        /* harmony import */ var _updateSlides_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./updateSlides.js */ './node_modules/swiper/core/update/updateSlides.js'
          )
        /* harmony import */ var _updateAutoHeight_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./updateAutoHeight.js */ './node_modules/swiper/core/update/updateAutoHeight.js'
          )
        /* harmony import */ var _updateSlidesOffset_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./updateSlidesOffset.js */ './node_modules/swiper/core/update/updateSlidesOffset.js'
          )
        /* harmony import */ var _updateSlidesProgress_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./updateSlidesProgress.js */ './node_modules/swiper/core/update/updateSlidesProgress.js'
          )
        /* harmony import */ var _updateProgress_js__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ./updateProgress.js */ './node_modules/swiper/core/update/updateProgress.js'
          )
        /* harmony import */ var _updateSlidesClasses_js__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./updateSlidesClasses.js */ './node_modules/swiper/core/update/updateSlidesClasses.js'
          )
        /* harmony import */ var _updateActiveIndex_js__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! ./updateActiveIndex.js */ './node_modules/swiper/core/update/updateActiveIndex.js'
          )
        /* harmony import */ var _updateClickedSlide_js__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ./updateClickedSlide.js */ './node_modules/swiper/core/update/updateClickedSlide.js'
          )

        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = {
          updateSize: _updateSize_js__WEBPACK_IMPORTED_MODULE_0__['default'],
          updateSlides:
            _updateSlides_js__WEBPACK_IMPORTED_MODULE_1__['default'],
          updateAutoHeight:
            _updateAutoHeight_js__WEBPACK_IMPORTED_MODULE_2__['default'],
          updateSlidesOffset:
            _updateSlidesOffset_js__WEBPACK_IMPORTED_MODULE_3__['default'],
          updateSlidesProgress:
            _updateSlidesProgress_js__WEBPACK_IMPORTED_MODULE_4__['default'],
          updateProgress:
            _updateProgress_js__WEBPACK_IMPORTED_MODULE_5__['default'],
          updateSlidesClasses:
            _updateSlidesClasses_js__WEBPACK_IMPORTED_MODULE_6__['default'],
          updateActiveIndex:
            _updateActiveIndex_js__WEBPACK_IMPORTED_MODULE_7__['default'],
          updateClickedSlide:
            _updateClickedSlide_js__WEBPACK_IMPORTED_MODULE_8__['default'],
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateActiveIndex.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateActiveIndex.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateActiveIndex,
          /* harmony export */
        })
        function updateActiveIndex(newActiveIndex) {
          const swiper = this
          const translate = swiper.rtlTranslate
            ? swiper.translate
            : -swiper.translate
          const {
            slidesGrid,
            snapGrid,
            params,
            activeIndex: previousIndex,
            realIndex: previousRealIndex,
            snapIndex: previousSnapIndex,
          } = swiper
          let activeIndex = newActiveIndex
          let snapIndex

          if (typeof activeIndex === 'undefined') {
            for (let i = 0; i < slidesGrid.length; i += 1) {
              if (typeof slidesGrid[i + 1] !== 'undefined') {
                if (
                  translate >= slidesGrid[i] &&
                  translate <
                    slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2
                ) {
                  activeIndex = i
                } else if (
                  translate >= slidesGrid[i] &&
                  translate < slidesGrid[i + 1]
                ) {
                  activeIndex = i + 1
                }
              } else if (translate >= slidesGrid[i]) {
                activeIndex = i
              }
            } // Normalize slideIndex

            if (params.normalizeSlideIndex) {
              if (activeIndex < 0 || typeof activeIndex === 'undefined')
                activeIndex = 0
            }
          }

          if (snapGrid.indexOf(translate) >= 0) {
            snapIndex = snapGrid.indexOf(translate)
          } else {
            const skip = Math.min(params.slidesPerGroupSkip, activeIndex)
            snapIndex =
              skip + Math.floor((activeIndex - skip) / params.slidesPerGroup)
          }

          if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1

          if (activeIndex === previousIndex) {
            if (snapIndex !== previousSnapIndex) {
              swiper.snapIndex = snapIndex
              swiper.emit('snapIndexChange')
            }

            return
          } // Get real index

          const realIndex = parseInt(
            swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') ||
              activeIndex,
            10
          )
          Object.assign(swiper, {
            snapIndex,
            realIndex,
            previousIndex,
            activeIndex,
          })
          swiper.emit('activeIndexChange')
          swiper.emit('snapIndexChange')

          if (previousRealIndex !== realIndex) {
            swiper.emit('realIndexChange')
          }

          if (swiper.initialized || swiper.params.runCallbacksOnInit) {
            swiper.emit('slideChange')
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateAutoHeight.js':
      /*!*************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateAutoHeight.js ***!
  \*************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateAutoHeight,
          /* harmony export */
        })
        function updateAutoHeight(speed) {
          const swiper = this
          const activeSlides = []
          const isVirtual = swiper.virtual && swiper.params.virtual.enabled
          let newHeight = 0
          let i

          if (typeof speed === 'number') {
            swiper.setTransition(speed)
          } else if (speed === true) {
            swiper.setTransition(swiper.params.speed)
          }

          const getSlideByIndex = (index) => {
            if (isVirtual) {
              return swiper.slides.filter(
                (el) =>
                  parseInt(el.getAttribute('data-swiper-slide-index'), 10) ===
                  index
              )[0]
            }

            return swiper.slides.eq(index)[0]
          } // Find slides currently in view

          if (
            swiper.params.slidesPerView !== 'auto' &&
            swiper.params.slidesPerView > 1
          ) {
            if (swiper.params.centeredSlides) {
              swiper.visibleSlides.each((slide) => {
                activeSlides.push(slide)
              })
            } else {
              for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
                const index = swiper.activeIndex + i
                if (index > swiper.slides.length && !isVirtual) break
                activeSlides.push(getSlideByIndex(index))
              }
            }
          } else {
            activeSlides.push(getSlideByIndex(swiper.activeIndex))
          } // Find new height from highest slide in view

          for (i = 0; i < activeSlides.length; i += 1) {
            if (typeof activeSlides[i] !== 'undefined') {
              const height = activeSlides[i].offsetHeight
              newHeight = height > newHeight ? height : newHeight
            }
          } // Update Height

          if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateClickedSlide.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateClickedSlide.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateClickedSlide,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function updateClickedSlide(e) {
          const swiper = this
          const params = swiper.params
          const slide = (0,
          _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
            e.target
          ).closest(`.${params.slideClass}`)[0]
          let slideFound = false
          let slideIndex

          if (slide) {
            for (let i = 0; i < swiper.slides.length; i += 1) {
              if (swiper.slides[i] === slide) {
                slideFound = true
                slideIndex = i
                break
              }
            }
          }

          if (slide && slideFound) {
            swiper.clickedSlide = slide

            if (swiper.virtual && swiper.params.virtual.enabled) {
              swiper.clickedIndex = parseInt(
                (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  slide
                ).attr('data-swiper-slide-index'),
                10
              )
            } else {
              swiper.clickedIndex = slideIndex
            }
          } else {
            swiper.clickedSlide = undefined
            swiper.clickedIndex = undefined
            return
          }

          if (
            params.slideToClickedSlide &&
            swiper.clickedIndex !== undefined &&
            swiper.clickedIndex !== swiper.activeIndex
          ) {
            swiper.slideToClickedSlide()
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateProgress.js':
      /*!***********************************************************!*\
  !*** ./node_modules/swiper/core/update/updateProgress.js ***!
  \***********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateProgress,
          /* harmony export */
        })
        function updateProgress(translate) {
          const swiper = this

          if (typeof translate === 'undefined') {
            const multiplier = swiper.rtlTranslate ? -1 : 1 // eslint-disable-next-line

            translate =
              (swiper && swiper.translate && swiper.translate * multiplier) || 0
          }

          const params = swiper.params
          const translatesDiff = swiper.maxTranslate() - swiper.minTranslate()
          let { progress, isBeginning, isEnd } = swiper
          const wasBeginning = isBeginning
          const wasEnd = isEnd

          if (translatesDiff === 0) {
            progress = 0
            isBeginning = true
            isEnd = true
          } else {
            progress = (translate - swiper.minTranslate()) / translatesDiff
            isBeginning = progress <= 0
            isEnd = progress >= 1
          }

          Object.assign(swiper, {
            progress,
            isBeginning,
            isEnd,
          })
          if (
            params.watchSlidesProgress ||
            (params.centeredSlides && params.autoHeight)
          )
            swiper.updateSlidesProgress(translate)

          if (isBeginning && !wasBeginning) {
            swiper.emit('reachBeginning toEdge')
          }

          if (isEnd && !wasEnd) {
            swiper.emit('reachEnd toEdge')
          }

          if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {
            swiper.emit('fromEdge')
          }

          swiper.emit('progress', progress)
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateSize.js':
      /*!*******************************************************!*\
  !*** ./node_modules/swiper/core/update/updateSize.js ***!
  \*******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateSize,
          /* harmony export */
        })
        function updateSize() {
          const swiper = this
          let width
          let height
          const $el = swiper.$el

          if (
            typeof swiper.params.width !== 'undefined' &&
            swiper.params.width !== null
          ) {
            width = swiper.params.width
          } else {
            width = $el[0].clientWidth
          }

          if (
            typeof swiper.params.height !== 'undefined' &&
            swiper.params.height !== null
          ) {
            height = swiper.params.height
          } else {
            height = $el[0].clientHeight
          }

          if (
            (width === 0 && swiper.isHorizontal()) ||
            (height === 0 && swiper.isVertical())
          ) {
            return
          } // Subtract paddings

          width =
            width -
            parseInt($el.css('padding-left') || 0, 10) -
            parseInt($el.css('padding-right') || 0, 10)
          height =
            height -
            parseInt($el.css('padding-top') || 0, 10) -
            parseInt($el.css('padding-bottom') || 0, 10)
          if (Number.isNaN(width)) width = 0
          if (Number.isNaN(height)) height = 0
          Object.assign(swiper, {
            width,
            height,
            size: swiper.isHorizontal() ? width : height,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateSlides.js':
      /*!*********************************************************!*\
  !*** ./node_modules/swiper/core/update/updateSlides.js ***!
  \*********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateSlides,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function updateSlides() {
          const swiper = this

          function getDirectionLabel(property) {
            if (swiper.isHorizontal()) {
      return property;
    } // prettier-ignore

            return {
              width: 'height',
              'margin-top': 'margin-left',
              'margin-bottom ': 'margin-right',
              'margin-left': 'margin-top',
              'margin-right': 'margin-bottom',
              'padding-left': 'padding-top',
              'padding-right': 'padding-bottom',
              marginRight: 'marginBottom',
            }[property]
          }

          function getDirectionPropertyValue(node, label) {
            return parseFloat(
              node.getPropertyValue(getDirectionLabel(label)) || 0
            )
          }

          const params = swiper.params
          const {
            $wrapperEl,
            size: swiperSize,
            rtlTranslate: rtl,
            wrongRTL,
          } = swiper
          const isVirtual = swiper.virtual && params.virtual.enabled
          const previousSlidesLength = isVirtual
            ? swiper.virtual.slides.length
            : swiper.slides.length
          const slides = $wrapperEl.children(`.${swiper.params.slideClass}`)
          const slidesLength = isVirtual
            ? swiper.virtual.slides.length
            : slides.length
          let snapGrid = []
          const slidesGrid = []
          const slidesSizesGrid = []
          let offsetBefore = params.slidesOffsetBefore

          if (typeof offsetBefore === 'function') {
            offsetBefore = params.slidesOffsetBefore.call(swiper)
          }

          let offsetAfter = params.slidesOffsetAfter

          if (typeof offsetAfter === 'function') {
            offsetAfter = params.slidesOffsetAfter.call(swiper)
          }

          const previousSnapGridLength = swiper.snapGrid.length
          const previousSlidesGridLength = swiper.slidesGrid.length
          let spaceBetween = params.spaceBetween
          let slidePosition = -offsetBefore
          let prevSlideSize = 0
          let index = 0

          if (typeof swiperSize === 'undefined') {
            return
          }

          if (
            typeof spaceBetween === 'string' &&
            spaceBetween.indexOf('%') >= 0
          ) {
            spaceBetween =
              (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize
          }

          swiper.virtualSize = -spaceBetween // reset margins

          if (rtl)
            slides.css({
              marginLeft: '',
              marginBottom: '',
              marginTop: '',
            })
          else
            slides.css({
              marginRight: '',
              marginBottom: '',
              marginTop: '',
            }) // reset cssMode offsets

          if (params.centeredSlides && params.cssMode) {
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.setCSSProperty)(
              swiper.wrapperEl,
              '--swiper-centered-offset-before',
              ''
            )
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.setCSSProperty)(
              swiper.wrapperEl,
              '--swiper-centered-offset-after',
              ''
            )
          }

          const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid

          if (gridEnabled) {
            swiper.grid.initSlides(slidesLength)
          } // Calc slides

          let slideSize
          const shouldResetSlideSize =
            params.slidesPerView === 'auto' &&
            params.breakpoints &&
            Object.keys(params.breakpoints).filter((key) => {
              return (
                typeof params.breakpoints[key].slidesPerView !== 'undefined'
              )
            }).length > 0

          for (let i = 0; i < slidesLength; i += 1) {
            slideSize = 0
            const slide = slides.eq(i)

            if (gridEnabled) {
              swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel)
            }

            if (slide.css('display') === 'none') continue // eslint-disable-line

            if (params.slidesPerView === 'auto') {
              if (shouldResetSlideSize) {
                slides[i].style[getDirectionLabel('width')] = ``
              }

              const slideStyles = getComputedStyle(slide[0])
              const currentTransform = slide[0].style.transform
              const currentWebKitTransform = slide[0].style.webkitTransform

              if (currentTransform) {
                slide[0].style.transform = 'none'
              }

              if (currentWebKitTransform) {
                slide[0].style.webkitTransform = 'none'
              }

              if (params.roundLengths) {
                slideSize = swiper.isHorizontal()
                  ? slide.outerWidth(true)
                  : slide.outerHeight(true)
              } else {
                // eslint-disable-next-line
                const width = getDirectionPropertyValue(slideStyles, 'width')
                const paddingLeft = getDirectionPropertyValue(
                  slideStyles,
                  'padding-left'
                )
                const paddingRight = getDirectionPropertyValue(
                  slideStyles,
                  'padding-right'
                )
                const marginLeft = getDirectionPropertyValue(
                  slideStyles,
                  'margin-left'
                )
                const marginRight = getDirectionPropertyValue(
                  slideStyles,
                  'margin-right'
                )
                const boxSizing = slideStyles.getPropertyValue('box-sizing')

                if (boxSizing && boxSizing === 'border-box') {
                  slideSize = width + marginLeft + marginRight
                } else {
                  const { clientWidth, offsetWidth } = slide[0]
                  slideSize =
                    width +
                    paddingLeft +
                    paddingRight +
                    marginLeft +
                    marginRight +
                    (offsetWidth - clientWidth)
                }
              }

              if (currentTransform) {
                slide[0].style.transform = currentTransform
              }

              if (currentWebKitTransform) {
                slide[0].style.webkitTransform = currentWebKitTransform
              }

              if (params.roundLengths) slideSize = Math.floor(slideSize)
            } else {
              slideSize =
                (swiperSize - (params.slidesPerView - 1) * spaceBetween) /
                params.slidesPerView
              if (params.roundLengths) slideSize = Math.floor(slideSize)

              if (slides[i]) {
                slides[i].style[getDirectionLabel('width')] = `${slideSize}px`
              }
            }

            if (slides[i]) {
              slides[i].swiperSlideSize = slideSize
            }

            slidesSizesGrid.push(slideSize)

            if (params.centeredSlides) {
              slidePosition =
                slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween
              if (prevSlideSize === 0 && i !== 0)
                slidePosition = slidePosition - swiperSize / 2 - spaceBetween
              if (i === 0)
                slidePosition = slidePosition - swiperSize / 2 - spaceBetween
              if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0
              if (params.roundLengths) slidePosition = Math.floor(slidePosition)
              if (index % params.slidesPerGroup === 0)
                snapGrid.push(slidePosition)
              slidesGrid.push(slidePosition)
            } else {
              if (params.roundLengths) slidePosition = Math.floor(slidePosition)
              if (
                (index - Math.min(swiper.params.slidesPerGroupSkip, index)) %
                  swiper.params.slidesPerGroup ===
                0
              )
                snapGrid.push(slidePosition)
              slidesGrid.push(slidePosition)
              slidePosition = slidePosition + slideSize + spaceBetween
            }

            swiper.virtualSize += slideSize + spaceBetween
            prevSlideSize = slideSize
            index += 1
          }

          swiper.virtualSize =
            Math.max(swiper.virtualSize, swiperSize) + offsetAfter

          if (
            rtl &&
            wrongRTL &&
            (params.effect === 'slide' || params.effect === 'coverflow')
          ) {
            $wrapperEl.css({
              width: `${swiper.virtualSize + params.spaceBetween}px`,
            })
          }

          if (params.setWrapperSize) {
            $wrapperEl.css({
              [getDirectionLabel('width')]: `${
                swiper.virtualSize + params.spaceBetween
              }px`,
            })
          }

          if (gridEnabled) {
            swiper.grid.updateWrapperSize(
              slideSize,
              snapGrid,
              getDirectionLabel
            )
          } // Remove last grid elements depending on width

          if (!params.centeredSlides) {
            const newSlidesGrid = []

            for (let i = 0; i < snapGrid.length; i += 1) {
              let slidesGridItem = snapGrid[i]
              if (params.roundLengths)
                slidesGridItem = Math.floor(slidesGridItem)

              if (snapGrid[i] <= swiper.virtualSize - swiperSize) {
                newSlidesGrid.push(slidesGridItem)
              }
            }

            snapGrid = newSlidesGrid

            if (
              Math.floor(swiper.virtualSize - swiperSize) -
                Math.floor(snapGrid[snapGrid.length - 1]) >
              1
            ) {
              snapGrid.push(swiper.virtualSize - swiperSize)
            }
          }

          if (snapGrid.length === 0) snapGrid = [0]

          if (params.spaceBetween !== 0) {
            const key =
              swiper.isHorizontal() && rtl
                ? 'marginLeft'
                : getDirectionLabel('marginRight')
            slides
              .filter((_, slideIndex) => {
                if (!params.cssMode) return true

                if (slideIndex === slides.length - 1) {
                  return false
                }

                return true
              })
              .css({
                [key]: `${spaceBetween}px`,
              })
          }

          if (params.centeredSlides && params.centeredSlidesBounds) {
            let allSlidesSize = 0
            slidesSizesGrid.forEach((slideSizeValue) => {
              allSlidesSize +=
                slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0)
            })
            allSlidesSize -= params.spaceBetween
            const maxSnap = allSlidesSize - swiperSize
            snapGrid = snapGrid.map((snap) => {
              if (snap < 0) return -offsetBefore
              if (snap > maxSnap) return maxSnap + offsetAfter
              return snap
            })
          }

          if (params.centerInsufficientSlides) {
            let allSlidesSize = 0
            slidesSizesGrid.forEach((slideSizeValue) => {
              allSlidesSize +=
                slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0)
            })
            allSlidesSize -= params.spaceBetween

            if (allSlidesSize < swiperSize) {
              const allSlidesOffset = (swiperSize - allSlidesSize) / 2
              snapGrid.forEach((snap, snapIndex) => {
                snapGrid[snapIndex] = snap - allSlidesOffset
              })
              slidesGrid.forEach((snap, snapIndex) => {
                slidesGrid[snapIndex] = snap + allSlidesOffset
              })
            }
          }

          Object.assign(swiper, {
            slides,
            snapGrid,
            slidesGrid,
            slidesSizesGrid,
          })

          if (
            params.centeredSlides &&
            params.cssMode &&
            !params.centeredSlidesBounds
          ) {
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.setCSSProperty)(
              swiper.wrapperEl,
              '--swiper-centered-offset-before',
              `${-snapGrid[0]}px`
            )
            ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.setCSSProperty)(
              swiper.wrapperEl,
              '--swiper-centered-offset-after',
              `${
                swiper.size / 2 -
                slidesSizesGrid[slidesSizesGrid.length - 1] / 2
              }px`
            )
            const addToSnapGrid = -swiper.snapGrid[0]
            const addToSlidesGrid = -swiper.slidesGrid[0]
            swiper.snapGrid = swiper.snapGrid.map((v) => v + addToSnapGrid)
            swiper.slidesGrid = swiper.slidesGrid.map(
              (v) => v + addToSlidesGrid
            )
          }

          if (slidesLength !== previousSlidesLength) {
            swiper.emit('slidesLengthChange')
          }

          if (snapGrid.length !== previousSnapGridLength) {
            if (swiper.params.watchOverflow) swiper.checkOverflow()
            swiper.emit('snapGridLengthChange')
          }

          if (slidesGrid.length !== previousSlidesGridLength) {
            swiper.emit('slidesGridLengthChange')
          }

          if (params.watchSlidesProgress) {
            swiper.updateSlidesOffset()
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateSlidesClasses.js':
      /*!****************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateSlidesClasses.js ***!
  \****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateSlidesClasses,
          /* harmony export */
        })
        function updateSlidesClasses() {
          const swiper = this
          const { slides, params, $wrapperEl, activeIndex, realIndex } = swiper
          const isVirtual = swiper.virtual && params.virtual.enabled
          slides.removeClass(
            `${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`
          )
          let activeSlide

          if (isVirtual) {
            activeSlide = swiper.$wrapperEl.find(
              `.${params.slideClass}[data-swiper-slide-index="${activeIndex}"]`
            )
          } else {
            activeSlide = slides.eq(activeIndex)
          } // Active classes

          activeSlide.addClass(params.slideActiveClass)

          if (params.loop) {
            // Duplicate to all looped slides
            if (activeSlide.hasClass(params.slideDuplicateClass)) {
              $wrapperEl
                .children(
                  `.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${realIndex}"]`
                )
                .addClass(params.slideDuplicateActiveClass)
            } else {
              $wrapperEl
                .children(
                  `.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${realIndex}"]`
                )
                .addClass(params.slideDuplicateActiveClass)
            }
          } // Next Slide

          let nextSlide = activeSlide
            .nextAll(`.${params.slideClass}`)
            .eq(0)
            .addClass(params.slideNextClass)

          if (params.loop && nextSlide.length === 0) {
            nextSlide = slides.eq(0)
            nextSlide.addClass(params.slideNextClass)
          } // Prev Slide

          let prevSlide = activeSlide
            .prevAll(`.${params.slideClass}`)
            .eq(0)
            .addClass(params.slidePrevClass)

          if (params.loop && prevSlide.length === 0) {
            prevSlide = slides.eq(-1)
            prevSlide.addClass(params.slidePrevClass)
          }

          if (params.loop) {
            // Duplicate to all looped slides
            if (nextSlide.hasClass(params.slideDuplicateClass)) {
              $wrapperEl
                .children(
                  `.${params.slideClass}:not(.${
                    params.slideDuplicateClass
                  })[data-swiper-slide-index="${nextSlide.attr(
                    'data-swiper-slide-index'
                  )}"]`
                )
                .addClass(params.slideDuplicateNextClass)
            } else {
              $wrapperEl
                .children(
                  `.${params.slideClass}.${
                    params.slideDuplicateClass
                  }[data-swiper-slide-index="${nextSlide.attr(
                    'data-swiper-slide-index'
                  )}"]`
                )
                .addClass(params.slideDuplicateNextClass)
            }

            if (prevSlide.hasClass(params.slideDuplicateClass)) {
              $wrapperEl
                .children(
                  `.${params.slideClass}:not(.${
                    params.slideDuplicateClass
                  })[data-swiper-slide-index="${prevSlide.attr(
                    'data-swiper-slide-index'
                  )}"]`
                )
                .addClass(params.slideDuplicatePrevClass)
            } else {
              $wrapperEl
                .children(
                  `.${params.slideClass}.${
                    params.slideDuplicateClass
                  }[data-swiper-slide-index="${prevSlide.attr(
                    'data-swiper-slide-index'
                  )}"]`
                )
                .addClass(params.slideDuplicatePrevClass)
            }
          }

          swiper.emitSlidesClasses()
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateSlidesOffset.js':
      /*!***************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateSlidesOffset.js ***!
  \***************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ updateSlidesOffset,
          /* harmony export */
        })
        function updateSlidesOffset() {
          const swiper = this
          const slides = swiper.slides

          for (let i = 0; i < slides.length; i += 1) {
            slides[i].swiperSlideOffset = swiper.isHorizontal()
              ? slides[i].offsetLeft
              : slides[i].offsetTop
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/core/update/updateSlidesProgress.js':
      /*!*****************************************************************!*\
  !*** ./node_modules/swiper/core/update/updateSlidesProgress.js ***!
  \*****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () =>
            /* binding */ updateSlidesProgress,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function updateSlidesProgress(
          translate = (this && this.translate) || 0
        ) {
          const swiper = this
          const params = swiper.params
          const { slides, rtlTranslate: rtl } = swiper
          if (slides.length === 0) return
          if (typeof slides[0].swiperSlideOffset === 'undefined')
            swiper.updateSlidesOffset()
          let offsetCenter = -translate
          if (rtl) offsetCenter = translate // Visible Slides

          slides.removeClass(params.slideVisibleClass)
          swiper.visibleSlidesIndexes = []
          swiper.visibleSlides = []

          for (let i = 0; i < slides.length; i += 1) {
            const slide = slides[i]
            let slideOffset = slide.swiperSlideOffset

            if (params.cssMode && params.centeredSlides) {
              slideOffset -= slides[0].swiperSlideOffset
            }

            const slideProgress =
              (offsetCenter +
                (params.centeredSlides ? swiper.minTranslate() : 0) -
                slideOffset) /
              (slide.swiperSlideSize + params.spaceBetween)
            const slideBefore = -(offsetCenter - slideOffset)
            const slideAfter = slideBefore + swiper.slidesSizesGrid[i]
            const isVisible =
              (slideBefore >= 0 && slideBefore < swiper.size - 1) ||
              (slideAfter > 1 && slideAfter <= swiper.size) ||
              (slideBefore <= 0 && slideAfter >= swiper.size)

            if (isVisible) {
              swiper.visibleSlides.push(slide)
              swiper.visibleSlidesIndexes.push(i)
              slides.eq(i).addClass(params.slideVisibleClass)
            }

            slide.progress = rtl ? -slideProgress : slideProgress
          }

          swiper.visibleSlides = (0,
          _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
            swiper.visibleSlides
          )
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/a11y/a11y.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/modules/a11y/a11y.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ A11y,
          /* harmony export */
        })
        /* harmony import */ var _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/classes-to-selector.js */ './node_modules/swiper/shared/classes-to-selector.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function A11y({ swiper, extendParams, on }) {
          extendParams({
            a11y: {
              enabled: true,
              notificationClass: 'swiper-notification',
              prevSlideMessage: 'Previous slide',
              nextSlideMessage: 'Next slide',
              firstSlideMessage: 'This is the first slide',
              lastSlideMessage: 'This is the last slide',
              paginationBulletMessage: 'Go to slide {{index}}',
              slideLabelMessage: '{{index}} / {{slidesLength}}',
              containerMessage: null,
              containerRoleDescriptionMessage: null,
              itemRoleDescriptionMessage: null,
              slideRole: 'group',
            },
          })
          let liveRegion = null

          function notify(message) {
            const notification = liveRegion
            if (notification.length === 0) return
            notification.html('')
            notification.html(message)
          }

          function getRandomNumber(size = 16) {
            const randomChar = () => Math.round(16 * Math.random()).toString(16)

            return 'x'.repeat(size).replace(/x/g, randomChar)
          }

          function makeElFocusable($el) {
            $el.attr('tabIndex', '0')
          }

          function makeElNotFocusable($el) {
            $el.attr('tabIndex', '-1')
          }

          function addElRole($el, role) {
            $el.attr('role', role)
          }

          function addElRoleDescription($el, description) {
            $el.attr('aria-roledescription', description)
          }

          function addElControls($el, controls) {
            $el.attr('aria-controls', controls)
          }

          function addElLabel($el, label) {
            $el.attr('aria-label', label)
          }

          function addElId($el, id) {
            $el.attr('id', id)
          }

          function addElLive($el, live) {
            $el.attr('aria-live', live)
          }

          function disableEl($el) {
            $el.attr('aria-disabled', true)
          }

          function enableEl($el) {
            $el.attr('aria-disabled', false)
          }

          function onEnterOrSpaceKey(e) {
            if (e.keyCode !== 13 && e.keyCode !== 32) return
            const params = swiper.params.a11y
            const $targetEl = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(e.target)

            if (
              swiper.navigation &&
              swiper.navigation.$nextEl &&
              $targetEl.is(swiper.navigation.$nextEl)
            ) {
              if (!(swiper.isEnd && !swiper.params.loop)) {
                swiper.slideNext()
              }

              if (swiper.isEnd) {
                notify(params.lastSlideMessage)
              } else {
                notify(params.nextSlideMessage)
              }
            }

            if (
              swiper.navigation &&
              swiper.navigation.$prevEl &&
              $targetEl.is(swiper.navigation.$prevEl)
            ) {
              if (!(swiper.isBeginning && !swiper.params.loop)) {
                swiper.slidePrev()
              }

              if (swiper.isBeginning) {
                notify(params.firstSlideMessage)
              } else {
                notify(params.prevSlideMessage)
              }
            }

            if (
              swiper.pagination &&
              $targetEl.is(
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_0__[
                  'default'
                ])(swiper.params.pagination.bulletClass)
              )
            ) {
              $targetEl[0].click()
            }
          }

          function updateNavigation() {
            if (swiper.params.loop || !swiper.navigation) return
            const { $nextEl, $prevEl } = swiper.navigation

            if ($prevEl && $prevEl.length > 0) {
              if (swiper.isBeginning) {
                disableEl($prevEl)
                makeElNotFocusable($prevEl)
              } else {
                enableEl($prevEl)
                makeElFocusable($prevEl)
              }
            }

            if ($nextEl && $nextEl.length > 0) {
              if (swiper.isEnd) {
                disableEl($nextEl)
                makeElNotFocusable($nextEl)
              } else {
                enableEl($nextEl)
                makeElFocusable($nextEl)
              }
            }
          }

          function hasPagination() {
            return (
              swiper.pagination &&
              swiper.params.pagination.clickable &&
              swiper.pagination.bullets &&
              swiper.pagination.bullets.length
            )
          }

          function updatePagination() {
            const params = swiper.params.a11y

            if (hasPagination()) {
              swiper.pagination.bullets.each((bulletEl) => {
                const $bulletEl = (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  bulletEl
                )
                makeElFocusable($bulletEl)

                if (!swiper.params.pagination.renderBullet) {
                  addElRole($bulletEl, 'button')
                  addElLabel(
                    $bulletEl,
                    params.paginationBulletMessage.replace(
                      /\{\{index\}\}/,
                      $bulletEl.index() + 1
                    )
                  )
                }
              })
            }
          }

          const initNavEl = ($el, wrapperId, message) => {
            makeElFocusable($el)

            if ($el[0].tagName !== 'BUTTON') {
              addElRole($el, 'button')
              $el.on('keydown', onEnterOrSpaceKey)
            }

            addElLabel($el, message)
            addElControls($el, wrapperId)
          }

          function init() {
            const params = swiper.params.a11y
            swiper.$el.append(liveRegion) // Container

            const $containerEl = swiper.$el

            if (params.containerRoleDescriptionMessage) {
              addElRoleDescription(
                $containerEl,
                params.containerRoleDescriptionMessage
              )
            }

            if (params.containerMessage) {
              addElLabel($containerEl, params.containerMessage)
            } // Wrapper

            const $wrapperEl = swiper.$wrapperEl
            const wrapperId =
              $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`
            const live =
              swiper.params.autoplay && swiper.params.autoplay.enabled
                ? 'off'
                : 'polite'
            addElId($wrapperEl, wrapperId)
            addElLive($wrapperEl, live) // Slide

            if (params.itemRoleDescriptionMessage) {
              addElRoleDescription(
                (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  swiper.slides
                ),
                params.itemRoleDescriptionMessage
              )
            }

            addElRole(
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                swiper.slides
              ),
              params.slideRole
            )
            const slidesLength = swiper.params.loop
              ? swiper.slides.filter(
                  (el) =>
                    !el.classList.contains(swiper.params.slideDuplicateClass)
                ).length
              : swiper.slides.length
            swiper.slides.each((slideEl, index) => {
              const $slideEl = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(slideEl)
              const slideIndex = swiper.params.loop
                ? parseInt($slideEl.attr('data-swiper-slide-index'), 10)
                : index
              const ariaLabelMessage = params.slideLabelMessage
                .replace(/\{\{index\}\}/, slideIndex + 1)
                .replace(/\{\{slidesLength\}\}/, slidesLength)
              addElLabel($slideEl, ariaLabelMessage)
            }) // Navigation

            let $nextEl
            let $prevEl

            if (swiper.navigation && swiper.navigation.$nextEl) {
              $nextEl = swiper.navigation.$nextEl
            }

            if (swiper.navigation && swiper.navigation.$prevEl) {
              $prevEl = swiper.navigation.$prevEl
            }

            if ($nextEl && $nextEl.length) {
              initNavEl($nextEl, wrapperId, params.nextSlideMessage)
            }

            if ($prevEl && $prevEl.length) {
              initNavEl($prevEl, wrapperId, params.prevSlideMessage)
            } // Pagination

            if (hasPagination()) {
              swiper.pagination.$el.on(
                'keydown',
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_0__[
                  'default'
                ])(swiper.params.pagination.bulletClass),
                onEnterOrSpaceKey
              )
            }
          }

          function destroy() {
            if (liveRegion && liveRegion.length > 0) liveRegion.remove()
            let $nextEl
            let $prevEl

            if (swiper.navigation && swiper.navigation.$nextEl) {
              $nextEl = swiper.navigation.$nextEl
            }

            if (swiper.navigation && swiper.navigation.$prevEl) {
              $prevEl = swiper.navigation.$prevEl
            }

            if ($nextEl) {
              $nextEl.off('keydown', onEnterOrSpaceKey)
            }

            if ($prevEl) {
              $prevEl.off('keydown', onEnterOrSpaceKey)
            } // Pagination

            if (hasPagination()) {
              swiper.pagination.$el.off(
                'keydown',
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_0__[
                  'default'
                ])(swiper.params.pagination.bulletClass),
                onEnterOrSpaceKey
              )
            }
          }

          on('beforeInit', () => {
            liveRegion = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
              `<span class="${swiper.params.a11y.notificationClass}" aria-live="assertive" aria-atomic="true"></span>`
            )
          })
          on('afterInit', () => {
            if (!swiper.params.a11y.enabled) return
            init()
            updateNavigation()
          })
          on('toEdge', () => {
            if (!swiper.params.a11y.enabled) return
            updateNavigation()
          })
          on('fromEdge', () => {
            if (!swiper.params.a11y.enabled) return
            updateNavigation()
          })
          on('paginationUpdate', () => {
            if (!swiper.params.a11y.enabled) return
            updatePagination()
          })
          on('destroy', () => {
            if (!swiper.params.a11y.enabled) return
            destroy()
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/autoplay/autoplay.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/modules/autoplay/autoplay.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Autoplay,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* eslint no-underscore-dangle: "off" */

        /* eslint no-use-before-define: "off" */

        function Autoplay({ swiper, extendParams, on, emit }) {
          let timeout
          swiper.autoplay = {
            running: false,
            paused: false,
          }
          extendParams({
            autoplay: {
              enabled: false,
              delay: 3000,
              waitForTransition: true,
              disableOnInteraction: true,
              stopOnLastSlide: false,
              reverseDirection: false,
              pauseOnMouseEnter: false,
            },
          })

          function run() {
            const $activeSlideEl = swiper.slides.eq(swiper.activeIndex)
            let delay = swiper.params.autoplay.delay

            if ($activeSlideEl.attr('data-swiper-autoplay')) {
              delay =
                $activeSlideEl.attr('data-swiper-autoplay') ||
                swiper.params.autoplay.delay
            }

            clearTimeout(timeout)
            timeout = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__.nextTick)(() => {
              let autoplayResult

              if (swiper.params.autoplay.reverseDirection) {
                if (swiper.params.loop) {
                  swiper.loopFix()
                  autoplayResult = swiper.slidePrev(
                    swiper.params.speed,
                    true,
                    true
                  )
                  emit('autoplay')
                } else if (!swiper.isBeginning) {
                  autoplayResult = swiper.slidePrev(
                    swiper.params.speed,
                    true,
                    true
                  )
                  emit('autoplay')
                } else if (!swiper.params.autoplay.stopOnLastSlide) {
                  autoplayResult = swiper.slideTo(
                    swiper.slides.length - 1,
                    swiper.params.speed,
                    true,
                    true
                  )
                  emit('autoplay')
                } else {
                  stop()
                }
              } else if (swiper.params.loop) {
                swiper.loopFix()
                autoplayResult = swiper.slideNext(
                  swiper.params.speed,
                  true,
                  true
                )
                emit('autoplay')
              } else if (!swiper.isEnd) {
                autoplayResult = swiper.slideNext(
                  swiper.params.speed,
                  true,
                  true
                )
                emit('autoplay')
              } else if (!swiper.params.autoplay.stopOnLastSlide) {
                autoplayResult = swiper.slideTo(
                  0,
                  swiper.params.speed,
                  true,
                  true
                )
                emit('autoplay')
              } else {
                stop()
              }

              if (swiper.params.cssMode && swiper.autoplay.running) run()
              else if (autoplayResult === false) {
                run()
              }
            }, delay)
          }

          function start() {
            if (typeof timeout !== 'undefined') return false
            if (swiper.autoplay.running) return false
            swiper.autoplay.running = true
            emit('autoplayStart')
            run()
            return true
          }

          function stop() {
            if (!swiper.autoplay.running) return false
            if (typeof timeout === 'undefined') return false

            if (timeout) {
              clearTimeout(timeout)
              timeout = undefined
            }

            swiper.autoplay.running = false
            emit('autoplayStop')
            return true
          }

          function pause(speed) {
            if (!swiper.autoplay.running) return
            if (swiper.autoplay.paused) return
            if (timeout) clearTimeout(timeout)
            swiper.autoplay.paused = true

            if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
              swiper.autoplay.paused = false
              run()
            } else {
              ;['transitionend', 'webkitTransitionEnd'].forEach((event) => {
                swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd)
              })
            }
          }

          function onVisibilityChange() {
            const document = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()

            if (
              document.visibilityState === 'hidden' &&
              swiper.autoplay.running
            ) {
              pause()
            }

            if (
              document.visibilityState === 'visible' &&
              swiper.autoplay.paused
            ) {
              run()
              swiper.autoplay.paused = false
            }
          }

          function onTransitionEnd(e) {
            if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return
            if (e.target !== swiper.$wrapperEl[0]) return
            ;['transitionend', 'webkitTransitionEnd'].forEach((event) => {
              swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd)
            })
            swiper.autoplay.paused = false

            if (!swiper.autoplay.running) {
              stop()
            } else {
              run()
            }
          }

          function onMouseEnter() {
            if (swiper.params.autoplay.disableOnInteraction) {
              stop()
            } else {
              pause()
            }

            ;['transitionend', 'webkitTransitionEnd'].forEach((event) => {
              swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd)
            })
          }

          function onMouseLeave() {
            if (swiper.params.autoplay.disableOnInteraction) {
              return
            }

            swiper.autoplay.paused = false
            run()
          }

          function attachMouseEvents() {
            if (swiper.params.autoplay.pauseOnMouseEnter) {
              swiper.$el.on('mouseenter', onMouseEnter)
              swiper.$el.on('mouseleave', onMouseLeave)
            }
          }

          function detachMouseEvents() {
            swiper.$el.off('mouseenter', onMouseEnter)
            swiper.$el.off('mouseleave', onMouseLeave)
          }

          on('init', () => {
            if (swiper.params.autoplay.enabled) {
              start()
              const document = (0,
              ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
              document.addEventListener('visibilitychange', onVisibilityChange)
              attachMouseEvents()
            }
          })
          on('beforeTransitionStart', (_s, speed, internal) => {
            if (swiper.autoplay.running) {
              if (internal || !swiper.params.autoplay.disableOnInteraction) {
                swiper.autoplay.pause(speed)
              } else {
                stop()
              }
            }
          })
          on('sliderFirstMove', () => {
            if (swiper.autoplay.running) {
              if (swiper.params.autoplay.disableOnInteraction) {
                stop()
              } else {
                pause()
              }
            }
          })
          on('touchEnd', () => {
            if (
              swiper.params.cssMode &&
              swiper.autoplay.paused &&
              !swiper.params.autoplay.disableOnInteraction
            ) {
              run()
            }
          })
          on('destroy', () => {
            detachMouseEvents()

            if (swiper.autoplay.running) {
              stop()
            }

            const document = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
            document.removeEventListener('visibilitychange', onVisibilityChange)
          })
          Object.assign(swiper.autoplay, {
            pause,
            run,
            start,
            stop,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/controller/controller.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/modules/controller/controller.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Controller,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* eslint no-bitwise: ["error", { "allow": [">>"] }] */

        function Controller({ swiper, extendParams, on }) {
          extendParams({
            controller: {
              control: undefined,
              inverse: false,
              by: 'slide', // or 'container'
            },
          })
          swiper.controller = {
            control: undefined,
          }

          function LinearSpline(x, y) {
            const binarySearch = (function search() {
              let maxIndex
              let minIndex
              let guess
              return (array, val) => {
                minIndex = -1
                maxIndex = array.length

                while (maxIndex - minIndex > 1) {
                  guess = (maxIndex + minIndex) >> 1

                  if (array[guess] <= val) {
                    minIndex = guess
                  } else {
                    maxIndex = guess
                  }
                }

                return maxIndex
              }
            })()

            this.x = x
            this.y = y
            this.lastIndex = x.length - 1 // Given an x value (x2), return the expected y2 value:
            // (x1,y1) is the known point before given value,
            // (x3,y3) is the known point after given value.

            let i1
            let i3

            this.interpolate = function interpolate(x2) {
              if (!x2) return 0 // Get the indexes of x1 and x3 (the array indexes before and after given x2):

              i3 = binarySearch(this.x, x2)
              i1 = i3 - 1 // We have our indexes i1 & i3, so we can calculate already:
              // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1

              return (
                ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) /
                  (this.x[i3] - this.x[i1]) +
                this.y[i1]
              )
            }

            return this
          } // xxx: for now i will just save one spline function to to

          function getInterpolateFunction(c) {
            if (!swiper.controller.spline) {
              swiper.controller.spline = swiper.params.loop
                ? new LinearSpline(swiper.slidesGrid, c.slidesGrid)
                : new LinearSpline(swiper.snapGrid, c.snapGrid)
            }
          }

          function setTranslate(_t, byController) {
            const controlled = swiper.controller.control
            let multiplier
            let controlledTranslate
            const Swiper = swiper.constructor

            function setControlledTranslate(c) {
              // this will create an Interpolate function based on the snapGrids
              // x is the Grid of the scrolled scroller and y will be the controlled scroller
              // it makes sense to create this only once and recall it for the interpolation
              // the function does a lot of value caching for performance
              const translate = swiper.rtlTranslate
                ? -swiper.translate
                : swiper.translate

              if (swiper.params.controller.by === 'slide') {
                getInterpolateFunction(c) // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                // but it did not work out

                controlledTranslate = -swiper.controller.spline.interpolate(
                  -translate
                )
              }

              if (
                !controlledTranslate ||
                swiper.params.controller.by === 'container'
              ) {
                multiplier =
                  (c.maxTranslate() - c.minTranslate()) /
                  (swiper.maxTranslate() - swiper.minTranslate())
                controlledTranslate =
                  (translate - swiper.minTranslate()) * multiplier +
                  c.minTranslate()
              }

              if (swiper.params.controller.inverse) {
                controlledTranslate = c.maxTranslate() - controlledTranslate
              }

              c.updateProgress(controlledTranslate)
              c.setTranslate(controlledTranslate, swiper)
              c.updateActiveIndex()
              c.updateSlidesClasses()
            }

            if (Array.isArray(controlled)) {
              for (let i = 0; i < controlled.length; i += 1) {
                if (
                  controlled[i] !== byController &&
                  controlled[i] instanceof Swiper
                ) {
                  setControlledTranslate(controlled[i])
                }
              }
            } else if (
              controlled instanceof Swiper &&
              byController !== controlled
            ) {
              setControlledTranslate(controlled)
            }
          }

          function setTransition(duration, byController) {
            const Swiper = swiper.constructor
            const controlled = swiper.controller.control
            let i

            function setControlledTransition(c) {
              c.setTransition(duration, swiper)

              if (duration !== 0) {
                c.transitionStart()

                if (c.params.autoHeight) {
                  ;(0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.nextTick)(
                    () => {
                      c.updateAutoHeight()
                    }
                  )
                }

                c.$wrapperEl.transitionEnd(() => {
                  if (!controlled) return

                  if (
                    c.params.loop &&
                    swiper.params.controller.by === 'slide'
                  ) {
                    c.loopFix()
                  }

                  c.transitionEnd()
                })
              }
            }

            if (Array.isArray(controlled)) {
              for (i = 0; i < controlled.length; i += 1) {
                if (
                  controlled[i] !== byController &&
                  controlled[i] instanceof Swiper
                ) {
                  setControlledTransition(controlled[i])
                }
              }
            } else if (
              controlled instanceof Swiper &&
              byController !== controlled
            ) {
              setControlledTransition(controlled)
            }
          }

          function removeSpline() {
            if (!swiper.controller.control) return

            if (swiper.controller.spline) {
              swiper.controller.spline = undefined
              delete swiper.controller.spline
            }
          }

          on('beforeInit', () => {
            swiper.controller.control = swiper.params.controller.control
          })
          on('update', () => {
            removeSpline()
          })
          on('resize', () => {
            removeSpline()
          })
          on('observerUpdate', () => {
            removeSpline()
          })
          on('setTranslate', (_s, translate, byController) => {
            if (!swiper.controller.control) return
            swiper.controller.setTranslate(translate, byController)
          })
          on('setTransition', (_s, duration, byController) => {
            if (!swiper.controller.control) return
            swiper.controller.setTransition(duration, byController)
          })
          Object.assign(swiper.controller, {
            setTranslate,
            setTransition,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-cards/effect-cards.js':
      /*!******************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-cards/effect-cards.js ***!
  \******************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectCards,
          /* harmony export */
        })
        /* harmony import */ var _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/create-shadow.js */ './node_modules/swiper/shared/create-shadow.js'
          )
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )
        /* harmony import */ var _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/effect-target.js */ './node_modules/swiper/shared/effect-target.js'
          )
        /* harmony import */ var _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ../../shared/effect-virtual-transition-end.js */ './node_modules/swiper/shared/effect-virtual-transition-end.js'
          )

        function EffectCards({ swiper, extendParams, on }) {
          extendParams({
            cardsEffect: {
              slideShadows: true,
              transformEl: null,
            },
          })

          const setTranslate = () => {
            const { slides, activeIndex } = swiper
            const params = swiper.params.cardsEffect
            const { startTranslate, isTouched } = swiper.touchEventsData
            const currentTranslate = swiper.translate

            for (let i = 0; i < slides.length; i += 1) {
              const $slideEl = slides.eq(i)
              const slideProgress = $slideEl[0].progress
              const progress = Math.min(Math.max(slideProgress, -4), 4)
              let offset = $slideEl[0].swiperSlideOffset

              if (swiper.params.centeredSlides && !swiper.params.cssMode) {
                swiper.$wrapperEl.transform(
                  `translateX(${swiper.minTranslate()}px)`
                )
              }

              if (swiper.params.centeredSlides && swiper.params.cssMode) {
                offset -= slides[0].swiperSlideOffset
              }

              let tX = swiper.params.cssMode
                ? -offset - swiper.translate
                : -offset
              let tY = 0
              const tZ = -100 * Math.abs(progress)
              let scale = 1
              let rotate = -2 * progress
              let tXAdd = 8 - Math.abs(progress) * 0.75
              const isSwipeToNext =
                (i === activeIndex || i === activeIndex - 1) &&
                progress > 0 &&
                progress < 1 &&
                (isTouched || swiper.params.cssMode) &&
                currentTranslate < startTranslate
              const isSwipeToPrev =
                (i === activeIndex || i === activeIndex + 1) &&
                progress < 0 &&
                progress > -1 &&
                (isTouched || swiper.params.cssMode) &&
                currentTranslate > startTranslate

              if (isSwipeToNext || isSwipeToPrev) {
                const subProgress =
                  (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5
                rotate += -28 * progress * subProgress
                scale += -0.5 * subProgress
                tXAdd += 96 * subProgress
                tY = `${-25 * subProgress * Math.abs(progress)}%`
              }

              if (progress < 0) {
                // next
                tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`
              } else if (progress > 0) {
                // prev
                tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`
              } else {
                tX = `${tX}px`
              }

              if (!swiper.isHorizontal()) {
                const prevY = tY
                tY = tX
                tX = prevY
              }

              const scaleString =
                progress < 0
                  ? `${1 + (1 - scale) * progress}`
                  : `${1 - (1 - scale) * progress}`
              const transform = `
        translate3d(${tX}, ${tY}, ${tZ}px)
        rotateZ(${rotate}deg)
        scale(${scaleString})
      `

              if (params.slideShadows) {
                // Set shadows
                let $shadowEl = $slideEl.find('.swiper-slide-shadow')

                if ($shadowEl.length === 0) {
                  $shadowEl = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(params, $slideEl)
                }

                if ($shadowEl.length)
                  $shadowEl[0].style.opacity = Math.min(
                    Math.max((Math.abs(progress) - 0.5) / 0.5, 0),
                    1
                  )
              }

              $slideEl[0].style.zIndex =
                -Math.abs(Math.round(slideProgress)) + slides.length
              const $targetEl = (0,
              _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__['default'])(
                params,
                $slideEl
              )
              $targetEl.transform(transform)
            }
          }

          const setTransition = (duration) => {
            const { transformEl } = swiper.params.cardsEffect
            const $transitionElements = transformEl
              ? swiper.slides.find(transformEl)
              : swiper.slides
            $transitionElements
              .transition(duration)
              .find('.swiper-slide-shadow')
              .transition(duration)
            ;(0,
            _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__[
              'default'
            ])({
              swiper,
              duration,
              transformEl,
            })
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__['default'])({
            effect: 'cards',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
              watchSlidesProgress: true,
              virtualTranslate: !swiper.params.cssMode,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-coverflow/effect-coverflow.js':
      /*!**************************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-coverflow/effect-coverflow.js ***!
  \**************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectCoverflow,
          /* harmony export */
        })
        /* harmony import */ var _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/create-shadow.js */ './node_modules/swiper/shared/create-shadow.js'
          )
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )
        /* harmony import */ var _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/effect-target.js */ './node_modules/swiper/shared/effect-target.js'
          )

        function EffectCoverflow({ swiper, extendParams, on }) {
          extendParams({
            coverflowEffect: {
              rotate: 50,
              stretch: 0,
              depth: 100,
              scale: 1,
              modifier: 1,
              slideShadows: true,
              transformEl: null,
            },
          })

          const setTranslate = () => {
            const {
              width: swiperWidth,
              height: swiperHeight,
              slides,
              slidesSizesGrid,
            } = swiper
            const params = swiper.params.coverflowEffect
            const isHorizontal = swiper.isHorizontal()
            const transform = swiper.translate
            const center = isHorizontal
              ? -transform + swiperWidth / 2
              : -transform + swiperHeight / 2
            const rotate = isHorizontal ? params.rotate : -params.rotate
            const translate = params.depth // Each slide offset from center

            for (let i = 0, length = slides.length; i < length; i += 1) {
              const $slideEl = slides.eq(i)
              const slideSize = slidesSizesGrid[i]
              const slideOffset = $slideEl[0].swiperSlideOffset
              const offsetMultiplier =
                ((center - slideOffset - slideSize / 2) / slideSize) *
                params.modifier
              let rotateY = isHorizontal ? rotate * offsetMultiplier : 0
              let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier // var rotateZ = 0

              let translateZ = -translate * Math.abs(offsetMultiplier)
              let stretch = params.stretch // Allow percentage to make a relative stretch for responsive sliders

              if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {
                stretch = (parseFloat(params.stretch) / 100) * slideSize
              }

              let translateY = isHorizontal ? 0 : stretch * offsetMultiplier
              let translateX = isHorizontal ? stretch * offsetMultiplier : 0
              let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier) // Fix for ultra small values

              if (Math.abs(translateX) < 0.001) translateX = 0
              if (Math.abs(translateY) < 0.001) translateY = 0
              if (Math.abs(translateZ) < 0.001) translateZ = 0
              if (Math.abs(rotateY) < 0.001) rotateY = 0
              if (Math.abs(rotateX) < 0.001) rotateX = 0
              if (Math.abs(scale) < 0.001) scale = 0
              const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`
              const $targetEl = (0,
              _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__['default'])(
                params,
                $slideEl
              )
              $targetEl.transform(slideTransform)
              $slideEl[0].style.zIndex =
                -Math.abs(Math.round(offsetMultiplier)) + 1

              if (params.slideShadows) {
                // Set shadows
                let $shadowBeforeEl = isHorizontal
                  ? $slideEl.find('.swiper-slide-shadow-left')
                  : $slideEl.find('.swiper-slide-shadow-top')
                let $shadowAfterEl = isHorizontal
                  ? $slideEl.find('.swiper-slide-shadow-right')
                  : $slideEl.find('.swiper-slide-shadow-bottom')

                if ($shadowBeforeEl.length === 0) {
                  $shadowBeforeEl = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(params, $slideEl, isHorizontal ? 'left' : 'top')
                }

                if ($shadowAfterEl.length === 0) {
                  $shadowAfterEl = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(params, $slideEl, isHorizontal ? 'right' : 'bottom')
                }

                if ($shadowBeforeEl.length)
                  $shadowBeforeEl[0].style.opacity =
                    offsetMultiplier > 0 ? offsetMultiplier : 0
                if ($shadowAfterEl.length)
                  $shadowAfterEl[0].style.opacity =
                    -offsetMultiplier > 0 ? -offsetMultiplier : 0
              }
            }
          }

          const setTransition = (duration) => {
            const { transformEl } = swiper.params.coverflowEffect
            const $transitionElements = transformEl
              ? swiper.slides.find(transformEl)
              : swiper.slides
            $transitionElements
              .transition(duration)
              .find(
                '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
              )
              .transition(duration)
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__['default'])({
            effect: 'coverflow',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
              watchSlidesProgress: true,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-creative/effect-creative.js':
      /*!************************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-creative/effect-creative.js ***!
  \************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectCreative,
          /* harmony export */
        })
        /* harmony import */ var _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/create-shadow.js */ './node_modules/swiper/shared/create-shadow.js'
          )
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )
        /* harmony import */ var _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/effect-target.js */ './node_modules/swiper/shared/effect-target.js'
          )
        /* harmony import */ var _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ../../shared/effect-virtual-transition-end.js */ './node_modules/swiper/shared/effect-virtual-transition-end.js'
          )

        function EffectCreative({ swiper, extendParams, on }) {
          extendParams({
            creativeEffect: {
              transformEl: null,
              limitProgress: 1,
              shadowPerProgress: false,
              progressMultiplier: 1,
              perspective: true,
              prev: {
                translate: [0, 0, 0],
                rotate: [0, 0, 0],
                opacity: 1,
                scale: 1,
              },
              next: {
                translate: [0, 0, 0],
                rotate: [0, 0, 0],
                opacity: 1,
                scale: 1,
              },
            },
          })

          const getTranslateValue = (value) => {
            if (typeof value === 'string') return value
            return `${value}px`
          }

          const setTranslate = () => {
            const { slides } = swiper
            const params = swiper.params.creativeEffect
            const { progressMultiplier: multiplier } = params

            for (let i = 0; i < slides.length; i += 1) {
              const $slideEl = slides.eq(i)
              const slideProgress = $slideEl[0].progress
              const progress = Math.min(
                Math.max($slideEl[0].progress, -params.limitProgress),
                params.limitProgress
              )
              const offset = $slideEl[0].swiperSlideOffset
              const t = [
                swiper.params.cssMode ? -offset - swiper.translate : -offset,
                0,
                0,
              ]
              const r = [0, 0, 0]
              let custom = false

              if (!swiper.isHorizontal()) {
                t[1] = t[0]
                t[0] = 0
              }

              let data = {
                translate: [0, 0, 0],
                rotate: [0, 0, 0],
                scale: 1,
                opacity: 1,
              }

              if (progress < 0) {
                data = params.next
                custom = true
              } else if (progress > 0) {
                data = params.prev
                custom = true
              } // set translate

              t.forEach((value, index) => {
                t[index] = `calc(${value}px + (${getTranslateValue(
                  data.translate[index]
                )} * ${Math.abs(progress * multiplier)}))`
              }) // set rotates

              r.forEach((value, index) => {
                r[index] = data.rotate[index] * Math.abs(progress * multiplier)
              })
              $slideEl[0].style.zIndex =
                -Math.abs(Math.round(slideProgress)) + slides.length
              const translateString = t.join(', ')
              const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`
              const scaleString =
                progress < 0
                  ? `scale(${1 + (1 - data.scale) * progress * multiplier})`
                  : `scale(${1 - (1 - data.scale) * progress * multiplier})`
              const opacityString =
                progress < 0
                  ? 1 + (1 - data.opacity) * progress * multiplier
                  : 1 - (1 - data.opacity) * progress * multiplier
              const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}` // Set shadows

              if ((custom && data.shadow) || !custom) {
                let $shadowEl = $slideEl.children('.swiper-slide-shadow')

                if ($shadowEl.length === 0 && data.shadow) {
                  $shadowEl = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(params, $slideEl)
                }

                if ($shadowEl.length) {
                  const shadowOpacity = params.shadowPerProgress
                    ? progress * (1 / params.limitProgress)
                    : progress
                  $shadowEl[0].style.opacity = Math.min(
                    Math.max(Math.abs(shadowOpacity), 0),
                    1
                  )
                }
              }

              const $targetEl = (0,
              _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__['default'])(
                params,
                $slideEl
              )
              $targetEl.transform(transform).css({
                opacity: opacityString,
              })

              if (data.origin) {
                $targetEl.css('transform-origin', data.origin)
              }
            }
          }

          const setTransition = (duration) => {
            const { transformEl } = swiper.params.creativeEffect
            const $transitionElements = transformEl
              ? swiper.slides.find(transformEl)
              : swiper.slides
            $transitionElements
              .transition(duration)
              .find('.swiper-slide-shadow')
              .transition(duration)
            ;(0,
            _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__[
              'default'
            ])({
              swiper,
              duration,
              transformEl,
              allSlides: true,
            })
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__['default'])({
            effect: 'creative',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => swiper.params.creativeEffect.perspective,
            overwriteParams: () => ({
              watchSlidesProgress: true,
              virtualTranslate: !swiper.params.cssMode,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-cube/effect-cube.js':
      /*!****************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-cube/effect-cube.js ***!
  \****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectCube,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )

        function EffectCube({ swiper, extendParams, on }) {
          extendParams({
            cubeEffect: {
              slideShadows: true,
              shadow: true,
              shadowOffset: 20,
              shadowScale: 0.94,
            },
          })

          const setTranslate = () => {
            const {
              $el,
              $wrapperEl,
              slides,
              width: swiperWidth,
              height: swiperHeight,
              rtlTranslate: rtl,
              size: swiperSize,
              browser,
            } = swiper
            const params = swiper.params.cubeEffect
            const isHorizontal = swiper.isHorizontal()
            const isVirtual = swiper.virtual && swiper.params.virtual.enabled
            let wrapperRotate = 0
            let $cubeShadowEl

            if (params.shadow) {
              if (isHorizontal) {
                $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow')

                if ($cubeShadowEl.length === 0) {
                  $cubeShadowEl = (0,
                  _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                    '<div class="swiper-cube-shadow"></div>'
                  )
                  $wrapperEl.append($cubeShadowEl)
                }

                $cubeShadowEl.css({
                  height: `${swiperWidth}px`,
                })
              } else {
                $cubeShadowEl = $el.find('.swiper-cube-shadow')

                if ($cubeShadowEl.length === 0) {
                  $cubeShadowEl = (0,
                  _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                    '<div class="swiper-cube-shadow"></div>'
                  )
                  $el.append($cubeShadowEl)
                }
              }
            }

            for (let i = 0; i < slides.length; i += 1) {
              const $slideEl = slides.eq(i)
              let slideIndex = i

              if (isVirtual) {
                slideIndex = parseInt(
                  $slideEl.attr('data-swiper-slide-index'),
                  10
                )
              }

              let slideAngle = slideIndex * 90
              let round = Math.floor(slideAngle / 360)

              if (rtl) {
                slideAngle = -slideAngle
                round = Math.floor(-slideAngle / 360)
              }

              const progress = Math.max(Math.min($slideEl[0].progress, 1), -1)
              let tx = 0
              let ty = 0
              let tz = 0

              if (slideIndex % 4 === 0) {
                tx = -round * 4 * swiperSize
                tz = 0
              } else if ((slideIndex - 1) % 4 === 0) {
                tx = 0
                tz = -round * 4 * swiperSize
              } else if ((slideIndex - 2) % 4 === 0) {
                tx = swiperSize + round * 4 * swiperSize
                tz = swiperSize
              } else if ((slideIndex - 3) % 4 === 0) {
                tx = -swiperSize
                tz = 3 * swiperSize + swiperSize * 4 * round
              }

              if (rtl) {
                tx = -tx
              }

              if (!isHorizontal) {
                ty = tx
                tx = 0
              }

              const transform = `rotateX(${
                isHorizontal ? 0 : -slideAngle
              }deg) rotateY(${
                isHorizontal ? slideAngle : 0
              }deg) translate3d(${tx}px, ${ty}px, ${tz}px)`

              if (progress <= 1 && progress > -1) {
                wrapperRotate = slideIndex * 90 + progress * 90
                if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90
              }

              $slideEl.transform(transform)

              if (params.slideShadows) {
                // Set shadows
                let shadowBefore = isHorizontal
                  ? $slideEl.find('.swiper-slide-shadow-left')
                  : $slideEl.find('.swiper-slide-shadow-top')
                let shadowAfter = isHorizontal
                  ? $slideEl.find('.swiper-slide-shadow-right')
                  : $slideEl.find('.swiper-slide-shadow-bottom')

                if (shadowBefore.length === 0) {
                  shadowBefore = (0,
                  _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                    `<div class="swiper-slide-shadow-${
                      isHorizontal ? 'left' : 'top'
                    }"></div>`
                  )
                  $slideEl.append(shadowBefore)
                }

                if (shadowAfter.length === 0) {
                  shadowAfter = (0,
                  _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                    `<div class="swiper-slide-shadow-${
                      isHorizontal ? 'right' : 'bottom'
                    }"></div>`
                  )
                  $slideEl.append(shadowAfter)
                }

                if (shadowBefore.length)
                  shadowBefore[0].style.opacity = Math.max(-progress, 0)
                if (shadowAfter.length)
                  shadowAfter[0].style.opacity = Math.max(progress, 0)
              }
            }

            $wrapperEl.css({
              '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,
              'transform-origin': `50% 50% -${swiperSize / 2}px`,
            })

            if (params.shadow) {
              if (isHorizontal) {
                $cubeShadowEl.transform(
                  `translate3d(0px, ${
                    swiperWidth / 2 + params.shadowOffset
                  }px, ${
                    -swiperWidth / 2
                  }px) rotateX(90deg) rotateZ(0deg) scale(${
                    params.shadowScale
                  })`
                )
              } else {
                const shadowAngle =
                  Math.abs(wrapperRotate) -
                  Math.floor(Math.abs(wrapperRotate) / 90) * 90
                const multiplier =
                  1.5 -
                  (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2 +
                    Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)
                const scale1 = params.shadowScale
                const scale2 = params.shadowScale / multiplier
                const offset = params.shadowOffset
                $cubeShadowEl.transform(
                  `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${
                    swiperHeight / 2 + offset
                  }px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`
                )
              }
            }

            const zFactor =
              browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0
            $wrapperEl.transform(
              `translate3d(0px,0,${zFactor}px) rotateX(${
                swiper.isHorizontal() ? 0 : wrapperRotate
              }deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`
            )
          }

          const setTransition = (duration) => {
            const { $el, slides } = swiper
            slides
              .transition(duration)
              .find(
                '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
              )
              .transition(duration)

            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
              $el.find('.swiper-cube-shadow').transition(duration)
            }
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__['default'])({
            effect: 'cube',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
              slidesPerView: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: true,
              resistanceRatio: 0,
              spaceBetween: 0,
              centeredSlides: false,
              virtualTranslate: true,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-fade/effect-fade.js':
      /*!****************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-fade/effect-fade.js ***!
  \****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectFade,
          /* harmony export */
        })
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )
        /* harmony import */ var _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-target.js */ './node_modules/swiper/shared/effect-target.js'
          )
        /* harmony import */ var _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/effect-virtual-transition-end.js */ './node_modules/swiper/shared/effect-virtual-transition-end.js'
          )

        function EffectFade({ swiper, extendParams, on }) {
          extendParams({
            fadeEffect: {
              crossFade: false,
              transformEl: null,
            },
          })

          const setTranslate = () => {
            const { slides } = swiper
            const params = swiper.params.fadeEffect

            for (let i = 0; i < slides.length; i += 1) {
              const $slideEl = swiper.slides.eq(i)
              const offset = $slideEl[0].swiperSlideOffset
              let tx = -offset
              if (!swiper.params.virtualTranslate) tx -= swiper.translate
              let ty = 0

              if (!swiper.isHorizontal()) {
                ty = tx
                tx = 0
              }

              const slideOpacity = swiper.params.fadeEffect.crossFade
                ? Math.max(1 - Math.abs($slideEl[0].progress), 0)
                : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0)
              const $targetEl = (0,
              _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                params,
                $slideEl
              )
              $targetEl
                .css({
                  opacity: slideOpacity,
                })
                .transform(`translate3d(${tx}px, ${ty}px, 0px)`)
            }
          }

          const setTransition = (duration) => {
            const { transformEl } = swiper.params.fadeEffect
            const $transitionElements = transformEl
              ? swiper.slides.find(transformEl)
              : swiper.slides
            $transitionElements.transition(duration)
            ;(0,
            _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_2__[
              'default'
            ])({
              swiper,
              duration,
              transformEl,
              allSlides: true,
            })
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_0__['default'])({
            effect: 'fade',
            swiper,
            on,
            setTranslate,
            setTransition,
            overwriteParams: () => ({
              slidesPerView: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: true,
              spaceBetween: 0,
              virtualTranslate: !swiper.params.cssMode,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/effect-flip/effect-flip.js':
      /*!****************************************************************!*\
  !*** ./node_modules/swiper/modules/effect-flip/effect-flip.js ***!
  \****************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ EffectFlip,
          /* harmony export */
        })
        /* harmony import */ var _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/create-shadow.js */ './node_modules/swiper/shared/create-shadow.js'
          )
        /* harmony import */ var _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/effect-init.js */ './node_modules/swiper/shared/effect-init.js'
          )
        /* harmony import */ var _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/effect-target.js */ './node_modules/swiper/shared/effect-target.js'
          )
        /* harmony import */ var _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ../../shared/effect-virtual-transition-end.js */ './node_modules/swiper/shared/effect-virtual-transition-end.js'
          )

        function EffectFlip({ swiper, extendParams, on }) {
          extendParams({
            flipEffect: {
              slideShadows: true,
              limitRotation: true,
              transformEl: null,
            },
          })

          const setTranslate = () => {
            const { slides, rtlTranslate: rtl } = swiper
            const params = swiper.params.flipEffect

            for (let i = 0; i < slides.length; i += 1) {
              const $slideEl = slides.eq(i)
              let progress = $slideEl[0].progress

              if (swiper.params.flipEffect.limitRotation) {
                progress = Math.max(Math.min($slideEl[0].progress, 1), -1)
              }

              const offset = $slideEl[0].swiperSlideOffset
              const rotate = -180 * progress
              let rotateY = rotate
              let rotateX = 0
              let tx = swiper.params.cssMode
                ? -offset - swiper.translate
                : -offset
              let ty = 0

              if (!swiper.isHorizontal()) {
                ty = tx
                tx = 0
                rotateX = -rotateY
                rotateY = 0
              } else if (rtl) {
                rotateY = -rotateY
              }

              $slideEl[0].style.zIndex =
                -Math.abs(Math.round(progress)) + slides.length

              if (params.slideShadows) {
                // Set shadows
                let shadowBefore = swiper.isHorizontal()
                  ? $slideEl.find('.swiper-slide-shadow-left')
                  : $slideEl.find('.swiper-slide-shadow-top')
                let shadowAfter = swiper.isHorizontal()
                  ? $slideEl.find('.swiper-slide-shadow-right')
                  : $slideEl.find('.swiper-slide-shadow-bottom')

                if (shadowBefore.length === 0) {
                  shadowBefore = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top')
                }

                if (shadowAfter.length === 0) {
                  shadowAfter = (0,
                  _shared_create_shadow_js__WEBPACK_IMPORTED_MODULE_0__[
                    'default'
                  ])(
                    params,
                    $slideEl,
                    swiper.isHorizontal() ? 'right' : 'bottom'
                  )
                }

                if (shadowBefore.length)
                  shadowBefore[0].style.opacity = Math.max(-progress, 0)
                if (shadowAfter.length)
                  shadowAfter[0].style.opacity = Math.max(progress, 0)
              }

              const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`
              const $targetEl = (0,
              _shared_effect_target_js__WEBPACK_IMPORTED_MODULE_2__['default'])(
                params,
                $slideEl
              )
              $targetEl.transform(transform)
            }
          }

          const setTransition = (duration) => {
            const { transformEl } = swiper.params.flipEffect
            const $transitionElements = transformEl
              ? swiper.slides.find(transformEl)
              : swiper.slides
            $transitionElements
              .transition(duration)
              .find(
                '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left'
              )
              .transition(duration)
            ;(0,
            _shared_effect_virtual_transition_end_js__WEBPACK_IMPORTED_MODULE_3__[
              'default'
            ])({
              swiper,
              duration,
              transformEl,
            })
          }

          ;(0, _shared_effect_init_js__WEBPACK_IMPORTED_MODULE_1__['default'])({
            effect: 'flip',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
              slidesPerView: 1,
              slidesPerGroup: 1,
              watchSlidesProgress: true,
              spaceBetween: 0,
              virtualTranslate: !swiper.params.cssMode,
            }),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/free-mode/free-mode.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/modules/free-mode/free-mode.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ freeMode,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function freeMode({ swiper, extendParams, emit, once }) {
          extendParams({
            freeMode: {
              enabled: false,
              momentum: true,
              momentumRatio: 1,
              momentumBounce: true,
              momentumBounceRatio: 1,
              momentumVelocityRatio: 1,
              sticky: false,
              minimumVelocity: 0.02,
            },
          })

          function onTouchMove() {
            const { touchEventsData: data, touches } = swiper // Velocity

            if (data.velocities.length === 0) {
              data.velocities.push({
                position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
                time: data.touchStartTime,
              })
            }

            data.velocities.push({
              position:
                touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
              time: (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.now)(),
            })
          }

          function onTouchEnd({ currentPos }) {
            const {
              params,
              $wrapperEl,
              rtlTranslate: rtl,
              snapGrid,
              touchEventsData: data,
            } = swiper // Time diff

            const touchEndTime = (0,
            _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.now)()
            const timeDiff = touchEndTime - data.touchStartTime

            if (currentPos < -swiper.minTranslate()) {
              swiper.slideTo(swiper.activeIndex)
              return
            }

            if (currentPos > -swiper.maxTranslate()) {
              if (swiper.slides.length < snapGrid.length) {
                swiper.slideTo(snapGrid.length - 1)
              } else {
                swiper.slideTo(swiper.slides.length - 1)
              }

              return
            }

            if (params.freeMode.momentum) {
              if (data.velocities.length > 1) {
                const lastMoveEvent = data.velocities.pop()
                const velocityEvent = data.velocities.pop()
                const distance = lastMoveEvent.position - velocityEvent.position
                const time = lastMoveEvent.time - velocityEvent.time
                swiper.velocity = distance / time
                swiper.velocity /= 2

                if (
                  Math.abs(swiper.velocity) < params.freeMode.minimumVelocity
                ) {
                  swiper.velocity = 0
                } // this implies that the user stopped moving a finger then released.
                // There would be no events with distance zero, so the last event is stale.

                if (
                  time > 150 ||
                  (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.now)() -
                    lastMoveEvent.time >
                    300
                ) {
                  swiper.velocity = 0
                }
              } else {
                swiper.velocity = 0
              }

              swiper.velocity *= params.freeMode.momentumVelocityRatio
              data.velocities.length = 0
              let momentumDuration = 1000 * params.freeMode.momentumRatio
              const momentumDistance = swiper.velocity * momentumDuration
              let newPosition = swiper.translate + momentumDistance
              if (rtl) newPosition = -newPosition
              let doBounce = false
              let afterBouncePosition
              const bounceAmount =
                Math.abs(swiper.velocity) *
                20 *
                params.freeMode.momentumBounceRatio
              let needsLoopFix

              if (newPosition < swiper.maxTranslate()) {
                if (params.freeMode.momentumBounce) {
                  if (newPosition + swiper.maxTranslate() < -bounceAmount) {
                    newPosition = swiper.maxTranslate() - bounceAmount
                  }

                  afterBouncePosition = swiper.maxTranslate()
                  doBounce = true
                  data.allowMomentumBounce = true
                } else {
                  newPosition = swiper.maxTranslate()
                }

                if (params.loop && params.centeredSlides) needsLoopFix = true
              } else if (newPosition > swiper.minTranslate()) {
                if (params.freeMode.momentumBounce) {
                  if (newPosition - swiper.minTranslate() > bounceAmount) {
                    newPosition = swiper.minTranslate() + bounceAmount
                  }

                  afterBouncePosition = swiper.minTranslate()
                  doBounce = true
                  data.allowMomentumBounce = true
                } else {
                  newPosition = swiper.minTranslate()
                }

                if (params.loop && params.centeredSlides) needsLoopFix = true
              } else if (params.freeMode.sticky) {
                let nextSlide

                for (let j = 0; j < snapGrid.length; j += 1) {
                  if (snapGrid[j] > -newPosition) {
                    nextSlide = j
                    break
                  }
                }

                if (
                  Math.abs(snapGrid[nextSlide] - newPosition) <
                    Math.abs(snapGrid[nextSlide - 1] - newPosition) ||
                  swiper.swipeDirection === 'next'
                ) {
                  newPosition = snapGrid[nextSlide]
                } else {
                  newPosition = snapGrid[nextSlide - 1]
                }

                newPosition = -newPosition
              }

              if (needsLoopFix) {
                once('transitionEnd', () => {
                  swiper.loopFix()
                })
              } // Fix duration

              if (swiper.velocity !== 0) {
                if (rtl) {
                  momentumDuration = Math.abs(
                    (-newPosition - swiper.translate) / swiper.velocity
                  )
                } else {
                  momentumDuration = Math.abs(
                    (newPosition - swiper.translate) / swiper.velocity
                  )
                }

                if (params.freeMode.sticky) {
                  // If freeMode.sticky is active and the user ends a swipe with a slow-velocity
                  // event, then durations can be 20+ seconds to slide one (or zero!) slides.
                  // It's easy to see this when simulating touch with mouse events. To fix this,
                  // limit single-slide swipes to the default slide duration. This also has the
                  // nice side effect of matching slide speed if the user stopped moving before
                  // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.
                  // For faster swipes, also apply limits (albeit higher ones).
                  const moveDistance = Math.abs(
                    (rtl ? -newPosition : newPosition) - swiper.translate
                  )
                  const currentSlideSize =
                    swiper.slidesSizesGrid[swiper.activeIndex]

                  if (moveDistance < currentSlideSize) {
                    momentumDuration = params.speed
                  } else if (moveDistance < 2 * currentSlideSize) {
                    momentumDuration = params.speed * 1.5
                  } else {
                    momentumDuration = params.speed * 2.5
                  }
                }
              } else if (params.freeMode.sticky) {
                swiper.slideToClosest()
                return
              }

              if (params.freeMode.momentumBounce && doBounce) {
                swiper.updateProgress(afterBouncePosition)
                swiper.setTransition(momentumDuration)
                swiper.setTranslate(newPosition)
                swiper.transitionStart(true, swiper.swipeDirection)
                swiper.animating = true
                $wrapperEl.transitionEnd(() => {
                  if (!swiper || swiper.destroyed || !data.allowMomentumBounce)
                    return
                  emit('momentumBounce')
                  swiper.setTransition(params.speed)
                  setTimeout(() => {
                    swiper.setTranslate(afterBouncePosition)
                    $wrapperEl.transitionEnd(() => {
                      if (!swiper || swiper.destroyed) return
                      swiper.transitionEnd()
                    })
                  }, 0)
                })
              } else if (swiper.velocity) {
                emit('_freeModeNoMomentumRelease')
                swiper.updateProgress(newPosition)
                swiper.setTransition(momentumDuration)
                swiper.setTranslate(newPosition)
                swiper.transitionStart(true, swiper.swipeDirection)

                if (!swiper.animating) {
                  swiper.animating = true
                  $wrapperEl.transitionEnd(() => {
                    if (!swiper || swiper.destroyed) return
                    swiper.transitionEnd()
                  })
                }
              } else {
                swiper.updateProgress(newPosition)
              }

              swiper.updateActiveIndex()
              swiper.updateSlidesClasses()
            } else if (params.freeMode.sticky) {
              swiper.slideToClosest()
              return
            } else if (params.freeMode) {
              emit('_freeModeNoMomentumRelease')
            }

            if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {
              swiper.updateProgress()
              swiper.updateActiveIndex()
              swiper.updateSlidesClasses()
            }
          }

          Object.assign(swiper, {
            freeMode: {
              onTouchMove,
              onTouchEnd,
            },
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/grid/grid.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/modules/grid/grid.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Grid,
          /* harmony export */
        })
        function Grid({ swiper, extendParams }) {
          extendParams({
            grid: {
              rows: 1,
              fill: 'column',
            },
          })
          let slidesNumberEvenToRows
          let slidesPerRow
          let numFullColumns

          const initSlides = (slidesLength) => {
            const { slidesPerView } = swiper.params
            const { rows, fill } = swiper.params.grid
            slidesPerRow = slidesNumberEvenToRows / rows
            numFullColumns = Math.floor(slidesLength / rows)

            if (Math.floor(slidesLength / rows) === slidesLength / rows) {
              slidesNumberEvenToRows = slidesLength
            } else {
              slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows
            }

            if (slidesPerView !== 'auto' && fill === 'row') {
              slidesNumberEvenToRows = Math.max(
                slidesNumberEvenToRows,
                slidesPerView * rows
              )
            }
          }

          const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {
            const { slidesPerGroup, spaceBetween } = swiper.params
            const { rows, fill } = swiper.params.grid // Set slides order

            let newSlideOrderIndex
            let column
            let row

            if (fill === 'row' && slidesPerGroup > 1) {
              const groupIndex = Math.floor(i / (slidesPerGroup * rows))
              const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex
              const columnsInGroup =
                groupIndex === 0
                  ? slidesPerGroup
                  : Math.min(
                      Math.ceil(
                        (slidesLength - groupIndex * rows * slidesPerGroup) /
                          rows
                      ),
                      slidesPerGroup
                    )
              row = Math.floor(slideIndexInGroup / columnsInGroup)
              column =
                slideIndexInGroup -
                row * columnsInGroup +
                groupIndex * slidesPerGroup
              newSlideOrderIndex =
                column + (row * slidesNumberEvenToRows) / rows
              slide.css({
                '-webkit-order': newSlideOrderIndex,
                order: newSlideOrderIndex,
              })
            } else if (fill === 'column') {
              column = Math.floor(i / rows)
              row = i - column * rows

              if (
                column > numFullColumns ||
                (column === numFullColumns && row === rows - 1)
              ) {
                row += 1

                if (row >= rows) {
                  row = 0
                  column += 1
                }
              }
            } else {
              row = Math.floor(i / slidesPerRow)
              column = i - row * slidesPerRow
            }

            slide.css(
              getDirectionLabel('margin-top'),
              row !== 0 ? spaceBetween && `${spaceBetween}px` : ''
            )
          }

          const updateWrapperSize = (
            slideSize,
            snapGrid,
            getDirectionLabel
          ) => {
            const { spaceBetween, centeredSlides, roundLengths } = swiper.params
            const { rows } = swiper.params.grid
            swiper.virtualSize =
              (slideSize + spaceBetween) * slidesNumberEvenToRows
            swiper.virtualSize =
              Math.ceil(swiper.virtualSize / rows) - spaceBetween
            swiper.$wrapperEl.css({
              [getDirectionLabel('width')]: `${
                swiper.virtualSize + spaceBetween
              }px`,
            })

            if (centeredSlides) {
              snapGrid.splice(0, snapGrid.length)
              const newSlidesGrid = []

              for (let i = 0; i < snapGrid.length; i += 1) {
                let slidesGridItem = snapGrid[i]
                if (roundLengths) slidesGridItem = Math.floor(slidesGridItem)
                if (snapGrid[i] < swiper.virtualSize + snapGrid[0])
                  newSlidesGrid.push(slidesGridItem)
              }

              snapGrid.push(...newSlidesGrid)
            }
          }

          swiper.grid = {
            initSlides,
            updateSlide,
            updateWrapperSize,
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/hash-navigation/hash-navigation.js':
      /*!************************************************************************!*\
  !*** ./node_modules/swiper/modules/hash-navigation/hash-navigation.js ***!
  \************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ HashNavigation,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function HashNavigation({ swiper, extendParams, emit, on }) {
          let initialized = false
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          extendParams({
            hashNavigation: {
              enabled: false,
              replaceState: false,
              watchState: false,
            },
          })

          const onHashChange = () => {
            emit('hashChange')
            const newHash = document.location.hash.replace('#', '')
            const activeSlideHash = swiper.slides
              .eq(swiper.activeIndex)
              .attr('data-hash')

            if (newHash !== activeSlideHash) {
              const newIndex = swiper.$wrapperEl
                .children(
                  `.${swiper.params.slideClass}[data-hash="${newHash}"]`
                )
                .index()
              if (typeof newIndex === 'undefined') return
              swiper.slideTo(newIndex)
            }
          }

          const setHash = () => {
            if (!initialized || !swiper.params.hashNavigation.enabled) return

            if (
              swiper.params.hashNavigation.replaceState &&
              window.history &&
              window.history.replaceState
            ) {
              window.history.replaceState(
                null,
                null,
                `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` ||
                  ''
              )
              emit('hashSet')
            } else {
              const slide = swiper.slides.eq(swiper.activeIndex)
              const hash = slide.attr('data-hash') || slide.attr('data-history')
              document.location.hash = hash || ''
              emit('hashSet')
            }
          }

          const init = () => {
            if (
              !swiper.params.hashNavigation.enabled ||
              (swiper.params.history && swiper.params.history.enabled)
            )
              return
            initialized = true
            const hash = document.location.hash.replace('#', '')

            if (hash) {
              const speed = 0

              for (
                let i = 0, length = swiper.slides.length;
                i < length;
                i += 1
              ) {
                const slide = swiper.slides.eq(i)
                const slideHash =
                  slide.attr('data-hash') || slide.attr('data-history')

                if (
                  slideHash === hash &&
                  !slide.hasClass(swiper.params.slideDuplicateClass)
                ) {
                  const index = slide.index()
                  swiper.slideTo(
                    index,
                    speed,
                    swiper.params.runCallbacksOnInit,
                    true
                  )
                }
              }
            }

            if (swiper.params.hashNavigation.watchState) {
              ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                window
              ).on('hashchange', onHashChange)
            }
          }

          const destroy = () => {
            if (swiper.params.hashNavigation.watchState) {
              ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                window
              ).off('hashchange', onHashChange)
            }
          }

          on('init', () => {
            if (swiper.params.hashNavigation.enabled) {
              init()
            }
          })
          on('destroy', () => {
            if (swiper.params.hashNavigation.enabled) {
              destroy()
            }
          })
          on('transitionEnd _freeModeNoMomentumRelease', () => {
            if (initialized) {
              setHash()
            }
          })
          on('slideChange', () => {
            if (initialized && swiper.params.cssMode) {
              setHash()
            }
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/history/history.js':
      /*!********************************************************!*\
  !*** ./node_modules/swiper/modules/history/history.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ History,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function History({ swiper, extendParams, on }) {
          extendParams({
            history: {
              enabled: false,
              root: '',
              replaceState: false,
              key: 'slides',
            },
          })
          let initialized = false
          let paths = {}

          const slugify = (text) => {
            return text
              .toString()
              .replace(/\s+/g, '-')
              .replace(/[^\w-]+/g, '')
              .replace(/--+/g, '-')
              .replace(/^-+/, '')
              .replace(/-+$/, '')
          }

          const getPathValues = (urlOverride) => {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            let location

            if (urlOverride) {
              location = new URL(urlOverride)
            } else {
              location = window.location
            }

            const pathArray = location.pathname
              .slice(1)
              .split('/')
              .filter((part) => part !== '')
            const total = pathArray.length
            const key = pathArray[total - 2]
            const value = pathArray[total - 1]
            return {
              key,
              value,
            }
          }

          const setHistory = (key, index) => {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            if (!initialized || !swiper.params.history.enabled) return
            let location

            if (swiper.params.url) {
              location = new URL(swiper.params.url)
            } else {
              location = window.location
            }

            const slide = swiper.slides.eq(index)
            let value = slugify(slide.attr('data-history'))

            if (swiper.params.history.root.length > 0) {
              let root = swiper.params.history.root
              if (root[root.length - 1] === '/')
                root = root.slice(0, root.length - 1)
              value = `${root}/${key}/${value}`
            } else if (!location.pathname.includes(key)) {
              value = `${key}/${value}`
            }

            const currentState = window.history.state

            if (currentState && currentState.value === value) {
              return
            }

            if (swiper.params.history.replaceState) {
              window.history.replaceState(
                {
                  value,
                },
                null,
                value
              )
            } else {
              window.history.pushState(
                {
                  value,
                },
                null,
                value
              )
            }
          }

          const scrollToSlide = (speed, value, runCallbacks) => {
            if (value) {
              for (
                let i = 0, length = swiper.slides.length;
                i < length;
                i += 1
              ) {
                const slide = swiper.slides.eq(i)
                const slideHistory = slugify(slide.attr('data-history'))

                if (
                  slideHistory === value &&
                  !slide.hasClass(swiper.params.slideDuplicateClass)
                ) {
                  const index = slide.index()
                  swiper.slideTo(index, speed, runCallbacks)
                }
              }
            } else {
              swiper.slideTo(0, speed, runCallbacks)
            }
          }

          const setHistoryPopState = () => {
            paths = getPathValues(swiper.params.url)
            scrollToSlide(swiper.params.speed, swiper.paths.value, false)
          }

          const init = () => {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            if (!swiper.params.history) return

            if (!window.history || !window.history.pushState) {
              swiper.params.history.enabled = false
              swiper.params.hashNavigation.enabled = true
              return
            }

            initialized = true
            paths = getPathValues(swiper.params.url)
            if (!paths.key && !paths.value) return
            scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit)

            if (!swiper.params.history.replaceState) {
              window.addEventListener('popstate', setHistoryPopState)
            }
          }

          const destroy = () => {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

            if (!swiper.params.history.replaceState) {
              window.removeEventListener('popstate', setHistoryPopState)
            }
          }

          on('init', () => {
            if (swiper.params.history.enabled) {
              init()
            }
          })
          on('destroy', () => {
            if (swiper.params.history.enabled) {
              destroy()
            }
          })
          on('transitionEnd _freeModeNoMomentumRelease', () => {
            if (initialized) {
              setHistory(swiper.params.history.key, swiper.activeIndex)
            }
          })
          on('slideChange', () => {
            if (initialized && swiper.params.cssMode) {
              setHistory(swiper.params.history.key, swiper.activeIndex)
            }
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/keyboard/keyboard.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/modules/keyboard/keyboard.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Keyboard,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* eslint-disable consistent-return */

        function Keyboard({ swiper, extendParams, on, emit }) {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          swiper.keyboard = {
            enabled: false,
          }
          extendParams({
            keyboard: {
              enabled: false,
              onlyInViewport: true,
              pageUpDown: true,
            },
          })

          function handle(event) {
            if (!swiper.enabled) return
            const { rtlTranslate: rtl } = swiper
            let e = event
            if (e.originalEvent) e = e.originalEvent // jquery fix

            const kc = e.keyCode || e.charCode
            const pageUpDown = swiper.params.keyboard.pageUpDown
            const isPageUp = pageUpDown && kc === 33
            const isPageDown = pageUpDown && kc === 34
            const isArrowLeft = kc === 37
            const isArrowRight = kc === 39
            const isArrowUp = kc === 38
            const isArrowDown = kc === 40 // Directions locks

            if (
              !swiper.allowSlideNext &&
              ((swiper.isHorizontal() && isArrowRight) ||
                (swiper.isVertical() && isArrowDown) ||
                isPageDown)
            ) {
              return false
            }

            if (
              !swiper.allowSlidePrev &&
              ((swiper.isHorizontal() && isArrowLeft) ||
                (swiper.isVertical() && isArrowUp) ||
                isPageUp)
            ) {
              return false
            }

            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
              return undefined
            }

            if (
              document.activeElement &&
              document.activeElement.nodeName &&
              (document.activeElement.nodeName.toLowerCase() === 'input' ||
                document.activeElement.nodeName.toLowerCase() === 'textarea')
            ) {
              return undefined
            }

            if (
              swiper.params.keyboard.onlyInViewport &&
              (isPageUp ||
                isPageDown ||
                isArrowLeft ||
                isArrowRight ||
                isArrowUp ||
                isArrowDown)
            ) {
              let inView = false // Check that swiper should be inside of visible area of window

              if (
                swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 &&
                swiper.$el.parents(`.${swiper.params.slideActiveClass}`)
                  .length === 0
              ) {
                return undefined
              }

              const $el = swiper.$el
              const swiperWidth = $el[0].clientWidth
              const swiperHeight = $el[0].clientHeight
              const windowWidth = window.innerWidth
              const windowHeight = window.innerHeight
              const swiperOffset = swiper.$el.offset()
              if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft
              const swiperCoord = [
                [swiperOffset.left, swiperOffset.top],
                [swiperOffset.left + swiperWidth, swiperOffset.top],
                [swiperOffset.left, swiperOffset.top + swiperHeight],
                [
                  swiperOffset.left + swiperWidth,
                  swiperOffset.top + swiperHeight,
                ],
              ]

              for (let i = 0; i < swiperCoord.length; i += 1) {
                const point = swiperCoord[i]

                if (
                  point[0] >= 0 &&
                  point[0] <= windowWidth &&
                  point[1] >= 0 &&
                  point[1] <= windowHeight
                ) {
                  if (point[0] === 0 && point[1] === 0) continue // eslint-disable-line

                  inView = true
                }
              }

              if (!inView) return undefined
            }

            if (swiper.isHorizontal()) {
              if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {
                if (e.preventDefault) e.preventDefault()
                else e.returnValue = false
              }

              if (
                ((isPageDown || isArrowRight) && !rtl) ||
                ((isPageUp || isArrowLeft) && rtl)
              )
                swiper.slideNext()
              if (
                ((isPageUp || isArrowLeft) && !rtl) ||
                ((isPageDown || isArrowRight) && rtl)
              )
                swiper.slidePrev()
            } else {
              if (isPageUp || isPageDown || isArrowUp || isArrowDown) {
                if (e.preventDefault) e.preventDefault()
                else e.returnValue = false
              }

              if (isPageDown || isArrowDown) swiper.slideNext()
              if (isPageUp || isArrowUp) swiper.slidePrev()
            }

            emit('keyPress', kc)
            return undefined
          }

          function enable() {
            if (swiper.keyboard.enabled) return
            ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
              document
            ).on('keydown', handle)
            swiper.keyboard.enabled = true
          }

          function disable() {
            if (!swiper.keyboard.enabled) return
            ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
              document
            ).off('keydown', handle)
            swiper.keyboard.enabled = false
          }

          on('init', () => {
            if (swiper.params.keyboard.enabled) {
              enable()
            }
          })
          on('destroy', () => {
            if (swiper.keyboard.enabled) {
              disable()
            }
          })
          Object.assign(swiper.keyboard, {
            enable,
            disable,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/lazy/lazy.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/modules/lazy/lazy.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Lazy,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function Lazy({ swiper, extendParams, on, emit }) {
          extendParams({
            lazy: {
              checkInView: false,
              enabled: false,
              loadPrevNext: false,
              loadPrevNextAmount: 1,
              loadOnTransitionStart: false,
              scrollingElement: '',
              elementClass: 'swiper-lazy',
              loadingClass: 'swiper-lazy-loading',
              loadedClass: 'swiper-lazy-loaded',
              preloaderClass: 'swiper-lazy-preloader',
            },
          })
          swiper.lazy = {}
          let scrollHandlerAttached = false
          let initialImageLoaded = false

          function loadInSlide(index, loadInDuplicate = true) {
            const params = swiper.params.lazy
            if (typeof index === 'undefined') return
            if (swiper.slides.length === 0) return
            const isVirtual = swiper.virtual && swiper.params.virtual.enabled
            const $slideEl = isVirtual
              ? swiper.$wrapperEl.children(
                  `.${swiper.params.slideClass}[data-swiper-slide-index="${index}"]`
                )
              : swiper.slides.eq(index)
            const $images = $slideEl.find(
              `.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`
            )

            if (
              $slideEl.hasClass(params.elementClass) &&
              !$slideEl.hasClass(params.loadedClass) &&
              !$slideEl.hasClass(params.loadingClass)
            ) {
              $images.push($slideEl[0])
            }

            if ($images.length === 0) return
            $images.each((imageEl) => {
              const $imageEl = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(imageEl)
              $imageEl.addClass(params.loadingClass)
              const background = $imageEl.attr('data-background')
              const src = $imageEl.attr('data-src')
              const srcset = $imageEl.attr('data-srcset')
              const sizes = $imageEl.attr('data-sizes')
              const $pictureEl = $imageEl.parent('picture')
              swiper.loadImage(
                $imageEl[0],
                src || background,
                srcset,
                sizes,
                false,
                () => {
                  if (
                    typeof swiper === 'undefined' ||
                    swiper === null ||
                    !swiper ||
                    (swiper && !swiper.params) ||
                    swiper.destroyed
                  )
                    return

                  if (background) {
                    $imageEl.css('background-image', `url("${background}")`)
                    $imageEl.removeAttr('data-background')
                  } else {
                    if (srcset) {
                      $imageEl.attr('srcset', srcset)
                      $imageEl.removeAttr('data-srcset')
                    }

                    if (sizes) {
                      $imageEl.attr('sizes', sizes)
                      $imageEl.removeAttr('data-sizes')
                    }

                    if ($pictureEl.length) {
                      $pictureEl.children('source').each((sourceEl) => {
                        const $source = (0,
                        _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                          sourceEl
                        )

                        if ($source.attr('data-srcset')) {
                          $source.attr('srcset', $source.attr('data-srcset'))
                          $source.removeAttr('data-srcset')
                        }
                      })
                    }

                    if (src) {
                      $imageEl.attr('src', src)
                      $imageEl.removeAttr('data-src')
                    }
                  }

                  $imageEl
                    .addClass(params.loadedClass)
                    .removeClass(params.loadingClass)
                  $slideEl.find(`.${params.preloaderClass}`).remove()

                  if (swiper.params.loop && loadInDuplicate) {
                    const slideOriginalIndex = $slideEl.attr(
                      'data-swiper-slide-index'
                    )

                    if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                      const originalSlide = swiper.$wrapperEl.children(
                        `[data-swiper-slide-index="${slideOriginalIndex}"]:not(.${swiper.params.slideDuplicateClass})`
                      )
                      loadInSlide(originalSlide.index(), false)
                    } else {
                      const duplicatedSlide = swiper.$wrapperEl.children(
                        `.${swiper.params.slideDuplicateClass}[data-swiper-slide-index="${slideOriginalIndex}"]`
                      )
                      loadInSlide(duplicatedSlide.index(), false)
                    }
                  }

                  emit('lazyImageReady', $slideEl[0], $imageEl[0])

                  if (swiper.params.autoHeight) {
                    swiper.updateAutoHeight()
                  }
                }
              )
              emit('lazyImageLoad', $slideEl[0], $imageEl[0])
            })
          }

          function load() {
            const {
              $wrapperEl,
              params: swiperParams,
              slides,
              activeIndex,
            } = swiper
            const isVirtual = swiper.virtual && swiperParams.virtual.enabled
            const params = swiperParams.lazy
            let slidesPerView = swiperParams.slidesPerView

            if (slidesPerView === 'auto') {
              slidesPerView = 0
            }

            function slideExist(index) {
              if (isVirtual) {
                if (
                  $wrapperEl.children(
                    `.${swiperParams.slideClass}[data-swiper-slide-index="${index}"]`
                  ).length
                ) {
                  return true
                }
              } else if (slides[index]) return true

              return false
            }

            function slideIndex(slideEl) {
              if (isVirtual) {
                return (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  slideEl
                ).attr('data-swiper-slide-index')
              }

              return (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                slideEl
              ).index()
            }

            if (!initialImageLoaded) initialImageLoaded = true

            if (swiper.params.watchSlidesProgress) {
              $wrapperEl
                .children(`.${swiperParams.slideVisibleClass}`)
                .each((slideEl) => {
                  const index = isVirtual
                    ? (0,
                      _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                        slideEl
                      ).attr('data-swiper-slide-index')
                    : (0,
                      _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                        slideEl
                      ).index()
                  loadInSlide(index)
                })
            } else if (slidesPerView > 1) {
              for (
                let i = activeIndex;
                i < activeIndex + slidesPerView;
                i += 1
              ) {
                if (slideExist(i)) loadInSlide(i)
              }
            } else {
              loadInSlide(activeIndex)
            }

            if (params.loadPrevNext) {
              if (
                slidesPerView > 1 ||
                (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)
              ) {
                const amount = params.loadPrevNextAmount
                const spv = slidesPerView
                const maxIndex = Math.min(
                  activeIndex + spv + Math.max(amount, spv),
                  slides.length
                )
                const minIndex = Math.max(
                  activeIndex - Math.max(spv, amount),
                  0
                ) // Next Slides

                for (
                  let i = activeIndex + slidesPerView;
                  i < maxIndex;
                  i += 1
                ) {
                  if (slideExist(i)) loadInSlide(i)
                } // Prev Slides

                for (let i = minIndex; i < activeIndex; i += 1) {
                  if (slideExist(i)) loadInSlide(i)
                }
              } else {
                const nextSlide = $wrapperEl.children(
                  `.${swiperParams.slideNextClass}`
                )
                if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide))
                const prevSlide = $wrapperEl.children(
                  `.${swiperParams.slidePrevClass}`
                )
                if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide))
              }
            }
          }

          function checkInViewOnLoad() {
            const window = (0,
            ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
            if (!swiper || swiper.destroyed) return
            const $scrollElement = swiper.params.lazy.scrollingElement
              ? (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  swiper.params.lazy.scrollingElement
                )
              : (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  window
                )
            const isWindow = $scrollElement[0] === window
            const scrollElementWidth = isWindow
              ? window.innerWidth
              : $scrollElement[0].offsetWidth
            const scrollElementHeight = isWindow
              ? window.innerHeight
              : $scrollElement[0].offsetHeight
            const swiperOffset = swiper.$el.offset()
            const { rtlTranslate: rtl } = swiper
            let inView = false
            if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft
            const swiperCoord = [
              [swiperOffset.left, swiperOffset.top],
              [swiperOffset.left + swiper.width, swiperOffset.top],
              [swiperOffset.left, swiperOffset.top + swiper.height],
              [
                swiperOffset.left + swiper.width,
                swiperOffset.top + swiper.height,
              ],
            ]

            for (let i = 0; i < swiperCoord.length; i += 1) {
              const point = swiperCoord[i]

              if (
                point[0] >= 0 &&
                point[0] <= scrollElementWidth &&
                point[1] >= 0 &&
                point[1] <= scrollElementHeight
              ) {
                if (point[0] === 0 && point[1] === 0) continue // eslint-disable-line

                inView = true
              }
            }

            const passiveListener =
              swiper.touchEvents.start === 'touchstart' &&
              swiper.support.passiveListener &&
              swiper.params.passiveListeners
                ? {
                    passive: true,
                    capture: false,
                  }
                : false

            if (inView) {
              load()
              $scrollElement.off('scroll', checkInViewOnLoad, passiveListener)
            } else if (!scrollHandlerAttached) {
              scrollHandlerAttached = true
              $scrollElement.on('scroll', checkInViewOnLoad, passiveListener)
            }
          }

          on('beforeInit', () => {
            if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
              swiper.params.preloadImages = false
            }
          })
          on('init', () => {
            if (swiper.params.lazy.enabled) {
              if (swiper.params.lazy.checkInView) {
                checkInViewOnLoad()
              } else {
                load()
              }
            }
          })
          on('scroll', () => {
            if (
              swiper.params.freeMode &&
              swiper.params.freeMode.enabled &&
              !swiper.params.freeMode.sticky
            ) {
              load()
            }
          })
          on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {
            if (swiper.params.lazy.enabled) {
              if (swiper.params.lazy.checkInView) {
                checkInViewOnLoad()
              } else {
                load()
              }
            }
          })
          on('transitionStart', () => {
            if (swiper.params.lazy.enabled) {
              if (
                swiper.params.lazy.loadOnTransitionStart ||
                (!swiper.params.lazy.loadOnTransitionStart &&
                  !initialImageLoaded)
              ) {
                if (swiper.params.lazy.checkInView) {
                  checkInViewOnLoad()
                } else {
                  load()
                }
              }
            }
          })
          on('transitionEnd', () => {
            if (
              swiper.params.lazy.enabled &&
              !swiper.params.lazy.loadOnTransitionStart
            ) {
              if (swiper.params.lazy.checkInView) {
                checkInViewOnLoad()
              } else {
                load()
              }
            }
          })
          on('slideChange', () => {
            const {
              lazy,
              cssMode,
              watchSlidesProgress,
              touchReleaseOnEdges,
              resistanceRatio,
            } = swiper.params

            if (
              lazy.enabled &&
              (cssMode ||
                (watchSlidesProgress &&
                  (touchReleaseOnEdges || resistanceRatio === 0)))
            ) {
              load()
            }
          })
          Object.assign(swiper.lazy, {
            load,
            loadInSlide,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/manipulation.js':
      /*!******************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/manipulation.js ***!
  \******************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Manipulation,
          /* harmony export */
        })
        /* harmony import */ var _methods_appendSlide_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./methods/appendSlide.js */ './node_modules/swiper/modules/manipulation/methods/appendSlide.js'
          )
        /* harmony import */ var _methods_prependSlide_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./methods/prependSlide.js */ './node_modules/swiper/modules/manipulation/methods/prependSlide.js'
          )
        /* harmony import */ var _methods_addSlide_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./methods/addSlide.js */ './node_modules/swiper/modules/manipulation/methods/addSlide.js'
          )
        /* harmony import */ var _methods_removeSlide_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./methods/removeSlide.js */ './node_modules/swiper/modules/manipulation/methods/removeSlide.js'
          )
        /* harmony import */ var _methods_removeAllSlides_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./methods/removeAllSlides.js */ './node_modules/swiper/modules/manipulation/methods/removeAllSlides.js'
          )

        function Manipulation({ swiper }) {
          Object.assign(swiper, {
            appendSlide:
              _methods_appendSlide_js__WEBPACK_IMPORTED_MODULE_0__[
                'default'
              ].bind(swiper),
            prependSlide:
              _methods_prependSlide_js__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ].bind(swiper),
            addSlide:
              _methods_addSlide_js__WEBPACK_IMPORTED_MODULE_2__['default'].bind(
                swiper
              ),
            removeSlide:
              _methods_removeSlide_js__WEBPACK_IMPORTED_MODULE_3__[
                'default'
              ].bind(swiper),
            removeAllSlides:
              _methods_removeAllSlides_js__WEBPACK_IMPORTED_MODULE_4__[
                'default'
              ].bind(swiper),
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/methods/addSlide.js':
      /*!**********************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/methods/addSlide.js ***!
  \**********************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ addSlide,
          /* harmony export */
        })
        function addSlide(index, slides) {
          const swiper = this
          const { $wrapperEl, params, activeIndex } = swiper
          let activeIndexBuffer = activeIndex

          if (params.loop) {
            activeIndexBuffer -= swiper.loopedSlides
            swiper.loopDestroy()
            swiper.slides = $wrapperEl.children(`.${params.slideClass}`)
          }

          const baseLength = swiper.slides.length

          if (index <= 0) {
            swiper.prependSlide(slides)
            return
          }

          if (index >= baseLength) {
            swiper.appendSlide(slides)
            return
          }

          let newActiveIndex =
            activeIndexBuffer > index
              ? activeIndexBuffer + 1
              : activeIndexBuffer
          const slidesBuffer = []

          for (let i = baseLength - 1; i >= index; i -= 1) {
            const currentSlide = swiper.slides.eq(i)
            currentSlide.remove()
            slidesBuffer.unshift(currentSlide)
          }

          if (typeof slides === 'object' && 'length' in slides) {
            for (let i = 0; i < slides.length; i += 1) {
              if (slides[i]) $wrapperEl.append(slides[i])
            }

            newActiveIndex =
              activeIndexBuffer > index
                ? activeIndexBuffer + slides.length
                : activeIndexBuffer
          } else {
            $wrapperEl.append(slides)
          }

          for (let i = 0; i < slidesBuffer.length; i += 1) {
            $wrapperEl.append(slidesBuffer[i])
          }

          if (params.loop) {
            swiper.loopCreate()
          }

          if (!params.observer) {
            swiper.update()
          }

          if (params.loop) {
            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false)
          } else {
            swiper.slideTo(newActiveIndex, 0, false)
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/methods/appendSlide.js':
      /*!*************************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/methods/appendSlide.js ***!
  \*************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ appendSlide,
          /* harmony export */
        })
        function appendSlide(slides) {
          const swiper = this
          const { $wrapperEl, params } = swiper

          if (params.loop) {
            swiper.loopDestroy()
          }

          if (typeof slides === 'object' && 'length' in slides) {
            for (let i = 0; i < slides.length; i += 1) {
              if (slides[i]) $wrapperEl.append(slides[i])
            }
          } else {
            $wrapperEl.append(slides)
          }

          if (params.loop) {
            swiper.loopCreate()
          }

          if (!params.observer) {
            swiper.update()
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/methods/prependSlide.js':
      /*!**************************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/methods/prependSlide.js ***!
  \**************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ prependSlide,
          /* harmony export */
        })
        function prependSlide(slides) {
          const swiper = this
          const { params, $wrapperEl, activeIndex } = swiper

          if (params.loop) {
            swiper.loopDestroy()
          }

          let newActiveIndex = activeIndex + 1

          if (typeof slides === 'object' && 'length' in slides) {
            for (let i = 0; i < slides.length; i += 1) {
              if (slides[i]) $wrapperEl.prepend(slides[i])
            }

            newActiveIndex = activeIndex + slides.length
          } else {
            $wrapperEl.prepend(slides)
          }

          if (params.loop) {
            swiper.loopCreate()
          }

          if (!params.observer) {
            swiper.update()
          }

          swiper.slideTo(newActiveIndex, 0, false)
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/methods/removeAllSlides.js':
      /*!*****************************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/methods/removeAllSlides.js ***!
  \*****************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ removeAllSlides,
          /* harmony export */
        })
        function removeAllSlides() {
          const swiper = this
          const slidesIndexes = []

          for (let i = 0; i < swiper.slides.length; i += 1) {
            slidesIndexes.push(i)
          }

          swiper.removeSlide(slidesIndexes)
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/manipulation/methods/removeSlide.js':
      /*!*************************************************************************!*\
  !*** ./node_modules/swiper/modules/manipulation/methods/removeSlide.js ***!
  \*************************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ removeSlide,
          /* harmony export */
        })
        function removeSlide(slidesIndexes) {
          const swiper = this
          const { params, $wrapperEl, activeIndex } = swiper
          let activeIndexBuffer = activeIndex

          if (params.loop) {
            activeIndexBuffer -= swiper.loopedSlides
            swiper.loopDestroy()
            swiper.slides = $wrapperEl.children(`.${params.slideClass}`)
          }

          let newActiveIndex = activeIndexBuffer
          let indexToRemove

          if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {
            for (let i = 0; i < slidesIndexes.length; i += 1) {
              indexToRemove = slidesIndexes[i]
              if (swiper.slides[indexToRemove])
                swiper.slides.eq(indexToRemove).remove()
              if (indexToRemove < newActiveIndex) newActiveIndex -= 1
            }

            newActiveIndex = Math.max(newActiveIndex, 0)
          } else {
            indexToRemove = slidesIndexes
            if (swiper.slides[indexToRemove])
              swiper.slides.eq(indexToRemove).remove()
            if (indexToRemove < newActiveIndex) newActiveIndex -= 1
            newActiveIndex = Math.max(newActiveIndex, 0)
          }

          if (params.loop) {
            swiper.loopCreate()
          }

          if (!params.observer) {
            swiper.update()
          }

          if (params.loop) {
            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false)
          } else {
            swiper.slideTo(newActiveIndex, 0, false)
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/mousewheel/mousewheel.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/modules/mousewheel/mousewheel.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Mousewheel,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* eslint-disable consistent-return */

        function Mousewheel({ swiper, extendParams, on, emit }) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          extendParams({
            mousewheel: {
              enabled: false,
              releaseOnEdges: false,
              invert: false,
              forceToAxis: false,
              sensitivity: 1,
              eventsTarget: 'container',
              thresholdDelta: null,
              thresholdTime: null,
            },
          })
          swiper.mousewheel = {
            enabled: false,
          }
          let timeout
          let lastScrollTime = (0,
          _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)()
          let lastEventBeforeSnap
          const recentWheelEvents = []

          function normalize(e) {
            // Reasonable defaults
            const PIXEL_STEP = 10
            const LINE_HEIGHT = 40
            const PAGE_HEIGHT = 800
            let sX = 0
            let sY = 0 // spinX, spinY

            let pX = 0
            let pY = 0 // pixelX, pixelY
            // Legacy

            if ('detail' in e) {
              sY = e.detail
            }

            if ('wheelDelta' in e) {
              sY = -e.wheelDelta / 120
            }

            if ('wheelDeltaY' in e) {
              sY = -e.wheelDeltaY / 120
            }

            if ('wheelDeltaX' in e) {
              sX = -e.wheelDeltaX / 120
            } // side scrolling on FF with DOMMouseScroll

            if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {
              sX = sY
              sY = 0
            }

            pX = sX * PIXEL_STEP
            pY = sY * PIXEL_STEP

            if ('deltaY' in e) {
              pY = e.deltaY
            }

            if ('deltaX' in e) {
              pX = e.deltaX
            }

            if (e.shiftKey && !pX) {
              // if user scrolls with shift he wants horizontal scroll
              pX = pY
              pY = 0
            }

            if ((pX || pY) && e.deltaMode) {
              if (e.deltaMode === 1) {
                // delta in LINE units
                pX *= LINE_HEIGHT
                pY *= LINE_HEIGHT
              } else {
                // delta in PAGE units
                pX *= PAGE_HEIGHT
                pY *= PAGE_HEIGHT
              }
            } // Fall-back if spin cannot be determined

            if (pX && !sX) {
              sX = pX < 1 ? -1 : 1
            }

            if (pY && !sY) {
              sY = pY < 1 ? -1 : 1
            }

            return {
              spinX: sX,
              spinY: sY,
              pixelX: pX,
              pixelY: pY,
            }
          }

          function handleMouseEnter() {
            if (!swiper.enabled) return
            swiper.mouseEntered = true
          }

          function handleMouseLeave() {
            if (!swiper.enabled) return
            swiper.mouseEntered = false
          }

          function animateSlider(newEvent) {
            if (
              swiper.params.mousewheel.thresholdDelta &&
              newEvent.delta < swiper.params.mousewheel.thresholdDelta
            ) {
              // Prevent if delta of wheel scroll delta is below configured threshold
              return false
            }

            if (
              swiper.params.mousewheel.thresholdTime &&
              (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)() -
                lastScrollTime <
                swiper.params.mousewheel.thresholdTime
            ) {
              // Prevent if time between scrolls is below configured threshold
              return false
            } // If the movement is NOT big enough and
            // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):
            //   Don't go any further (avoid insignificant scroll movement).

            if (
              newEvent.delta >= 6 &&
              (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)() -
                lastScrollTime <
                60
            ) {
              // Return false as a default
              return true
            } // If user is scrolling towards the end:
            //   If the slider hasn't hit the latest slide or
            //   if the slider is a loop and
            //   if the slider isn't moving right now:
            //     Go to next slide and
            //     emit a scroll event.
            // Else (the user is scrolling towards the beginning) and
            // if the slider hasn't hit the first slide or
            // if the slider is a loop and
            // if the slider isn't moving right now:
            //   Go to prev slide and
            //   emit a scroll event.

            if (newEvent.direction < 0) {
              if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
                swiper.slideNext()
                emit('scroll', newEvent.raw)
              }
            } else if (
              (!swiper.isBeginning || swiper.params.loop) &&
              !swiper.animating
            ) {
              swiper.slidePrev()
              emit('scroll', newEvent.raw)
            } // If you got here is because an animation has been triggered so store the current time

            lastScrollTime = new window.Date().getTime() // Return false as a default

            return false
          }

          function releaseScroll(newEvent) {
            const params = swiper.params.mousewheel

            if (newEvent.direction < 0) {
              if (
                swiper.isEnd &&
                !swiper.params.loop &&
                params.releaseOnEdges
              ) {
                // Return true to animate scroll on edges
                return true
              }
            } else if (
              swiper.isBeginning &&
              !swiper.params.loop &&
              params.releaseOnEdges
            ) {
              // Return true to animate scroll on edges
              return true
            }

            return false
          }

          function handle(event) {
            let e = event
            let disableParentSwiper = true
            if (!swiper.enabled) return
            const params = swiper.params.mousewheel

            if (swiper.params.cssMode) {
              e.preventDefault()
            }

            let target = swiper.$el

            if (swiper.params.mousewheel.eventsTarget !== 'container') {
              target = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                swiper.params.mousewheel.eventsTarget
              )
            }

            if (
              !swiper.mouseEntered &&
              !target[0].contains(e.target) &&
              !params.releaseOnEdges
            )
              return true
            if (e.originalEvent) e = e.originalEvent // jquery fix

            let delta = 0
            const rtlFactor = swiper.rtlTranslate ? -1 : 1
            const data = normalize(e)

            if (params.forceToAxis) {
              if (swiper.isHorizontal()) {
                if (Math.abs(data.pixelX) > Math.abs(data.pixelY))
                  delta = -data.pixelX * rtlFactor
                else return true
              } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX))
                delta = -data.pixelY
              else return true
            } else {
              delta =
                Math.abs(data.pixelX) > Math.abs(data.pixelY)
                  ? -data.pixelX * rtlFactor
                  : -data.pixelY
            }

            if (delta === 0) return true
            if (params.invert) delta = -delta // Get the scroll positions

            let positions = swiper.getTranslate() + delta * params.sensitivity
            if (positions >= swiper.minTranslate())
              positions = swiper.minTranslate()
            if (positions <= swiper.maxTranslate())
              positions = swiper.maxTranslate() // When loop is true:
            //     the disableParentSwiper will be true.
            // When loop is false:
            //     if the scroll positions is not on edge,
            //     then the disableParentSwiper will be true.
            //     if the scroll on edge positions,
            //     then the disableParentSwiper will be false.

            disableParentSwiper = swiper.params.loop
              ? true
              : !(
                  positions === swiper.minTranslate() ||
                  positions === swiper.maxTranslate()
                )
            if (disableParentSwiper && swiper.params.nested) e.stopPropagation()

            if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {
              // Register the new event in a variable which stores the relevant data
              const newEvent = {
                time: (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)(),
                delta: Math.abs(delta),
                direction: Math.sign(delta),
                raw: event,
              } // Keep the most recent events

              if (recentWheelEvents.length >= 2) {
                recentWheelEvents.shift() // only store the last N events
              }

              const prevEvent = recentWheelEvents.length
                ? recentWheelEvents[recentWheelEvents.length - 1]
                : undefined
              recentWheelEvents.push(newEvent) // If there is at least one previous recorded event:
              //   If direction has changed or
              //   if the scroll is quicker than the previous one:
              //     Animate the slider.
              // Else (this is the first time the wheel is moved):
              //     Animate the slider.

              if (prevEvent) {
                if (
                  newEvent.direction !== prevEvent.direction ||
                  newEvent.delta > prevEvent.delta ||
                  newEvent.time > prevEvent.time + 150
                ) {
                  animateSlider(newEvent)
                }
              } else {
                animateSlider(newEvent)
              } // If it's time to release the scroll:
              //   Return now so you don't hit the preventDefault.

              if (releaseScroll(newEvent)) {
                return true
              }
            } else {
              // Freemode or scrollContainer:
              // If we recently snapped after a momentum scroll, then ignore wheel events
              // to give time for the deceleration to finish. Stop ignoring after 500 msecs
              // or if it's a new scroll (larger delta or inverse sign as last event before
              // an end-of-momentum snap).
              const newEvent = {
                time: (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.now)(),
                delta: Math.abs(delta),
                direction: Math.sign(delta),
              }
              const ignoreWheelEvents =
                lastEventBeforeSnap &&
                newEvent.time < lastEventBeforeSnap.time + 500 &&
                newEvent.delta <= lastEventBeforeSnap.delta &&
                newEvent.direction === lastEventBeforeSnap.direction

              if (!ignoreWheelEvents) {
                lastEventBeforeSnap = undefined

                if (swiper.params.loop) {
                  swiper.loopFix()
                }

                let position =
                  swiper.getTranslate() + delta * params.sensitivity
                const wasBeginning = swiper.isBeginning
                const wasEnd = swiper.isEnd
                if (position >= swiper.minTranslate())
                  position = swiper.minTranslate()
                if (position <= swiper.maxTranslate())
                  position = swiper.maxTranslate()
                swiper.setTransition(0)
                swiper.setTranslate(position)
                swiper.updateProgress()
                swiper.updateActiveIndex()
                swiper.updateSlidesClasses()

                if (
                  (!wasBeginning && swiper.isBeginning) ||
                  (!wasEnd && swiper.isEnd)
                ) {
                  swiper.updateSlidesClasses()
                }

                if (swiper.params.freeMode.sticky) {
                  // When wheel scrolling starts with sticky (aka snap) enabled, then detect
                  // the end of a momentum scroll by storing recent (N=15?) wheel events.
                  // 1. do all N events have decreasing or same (absolute value) delta?
                  // 2. did all N events arrive in the last M (M=500?) msecs?
                  // 3. does the earliest event have an (absolute value) delta that's
                  //    at least P (P=1?) larger than the most recent event's delta?
                  // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?
                  // If 1-4 are "yes" then we're near the end of a momentum scroll deceleration.
                  // Snap immediately and ignore remaining wheel events in this scroll.
                  // See comment above for "remaining wheel events in this scroll" determination.
                  // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.
                  clearTimeout(timeout)
                  timeout = undefined

                  if (recentWheelEvents.length >= 15) {
                    recentWheelEvents.shift() // only store the last N events
                  }

                  const prevEvent = recentWheelEvents.length
                    ? recentWheelEvents[recentWheelEvents.length - 1]
                    : undefined
                  const firstEvent = recentWheelEvents[0]
                  recentWheelEvents.push(newEvent)

                  if (
                    prevEvent &&
                    (newEvent.delta > prevEvent.delta ||
                      newEvent.direction !== prevEvent.direction)
                  ) {
                    // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.
                    recentWheelEvents.splice(0)
                  } else if (
                    recentWheelEvents.length >= 15 &&
                    newEvent.time - firstEvent.time < 500 &&
                    firstEvent.delta - newEvent.delta >= 1 &&
                    newEvent.delta <= 6
                  ) {
                    // We're at the end of the deceleration of a momentum scroll, so there's no need
                    // to wait for more events. Snap ASAP on the next tick.
                    // Also, because there's some remaining momentum we'll bias the snap in the
                    // direction of the ongoing scroll because it's better UX for the scroll to snap
                    // in the same direction as the scroll instead of reversing to snap.  Therefore,
                    // if it's already scrolled more than 20% in the current direction, keep going.
                    const snapToThreshold = delta > 0 ? 0.8 : 0.2
                    lastEventBeforeSnap = newEvent
                    recentWheelEvents.splice(0)
                    timeout = (0,
                    _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.nextTick)(
                      () => {
                        swiper.slideToClosest(
                          swiper.params.speed,
                          true,
                          undefined,
                          snapToThreshold
                        )
                      },
                      0
                    ) // no delay; move on next tick
                  }

                  if (!timeout) {
                    // if we get here, then we haven't detected the end of a momentum scroll, so
                    // we'll consider a scroll "complete" when there haven't been any wheel events
                    // for 500ms.
                    timeout = (0,
                    _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.nextTick)(
                      () => {
                        const snapToThreshold = 0.5
                        lastEventBeforeSnap = newEvent
                        recentWheelEvents.splice(0)
                        swiper.slideToClosest(
                          swiper.params.speed,
                          true,
                          undefined,
                          snapToThreshold
                        )
                      },
                      500
                    )
                  }
                } // Emit event

                if (!ignoreWheelEvents) emit('scroll', e) // Stop autoplay

                if (
                  swiper.params.autoplay &&
                  swiper.params.autoplayDisableOnInteraction
                )
                  swiper.autoplay.stop() // Return page scroll on edge positions

                if (
                  position === swiper.minTranslate() ||
                  position === swiper.maxTranslate()
                )
                  return true
              }
            }

            if (e.preventDefault) e.preventDefault()
            else e.returnValue = false
            return false
          }

          function events(method) {
            let target = swiper.$el

            if (swiper.params.mousewheel.eventsTarget !== 'container') {
              target = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                swiper.params.mousewheel.eventsTarget
              )
            }

            target[method]('mouseenter', handleMouseEnter)
            target[method]('mouseleave', handleMouseLeave)
            target[method]('wheel', handle)
          }

          function enable() {
            if (swiper.params.cssMode) {
              swiper.wrapperEl.removeEventListener('wheel', handle)
              return true
            }

            if (swiper.mousewheel.enabled) return false
            events('on')
            swiper.mousewheel.enabled = true
            return true
          }

          function disable() {
            if (swiper.params.cssMode) {
              swiper.wrapperEl.addEventListener(event, handle)
              return true
            }

            if (!swiper.mousewheel.enabled) return false
            events('off')
            swiper.mousewheel.enabled = false
            return true
          }

          on('init', () => {
            if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {
              disable()
            }

            if (swiper.params.mousewheel.enabled) enable()
          })
          on('destroy', () => {
            if (swiper.params.cssMode) {
              enable()
            }

            if (swiper.mousewheel.enabled) disable()
          })
          Object.assign(swiper.mousewheel, {
            enable,
            disable,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/navigation/navigation.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/modules/navigation/navigation.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Navigation,
          /* harmony export */
        })
        /* harmony import */ var _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/create-element-if-not-defined.js */ './node_modules/swiper/shared/create-element-if-not-defined.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function Navigation({ swiper, extendParams, on, emit }) {
          extendParams({
            navigation: {
              nextEl: null,
              prevEl: null,
              hideOnClick: false,
              disabledClass: 'swiper-button-disabled',
              hiddenClass: 'swiper-button-hidden',
              lockClass: 'swiper-button-lock',
            },
          })
          swiper.navigation = {
            nextEl: null,
            $nextEl: null,
            prevEl: null,
            $prevEl: null,
          }

          function getEl(el) {
            let $el

            if (el) {
              $el = (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                el
              )

              if (
                swiper.params.uniqueNavElements &&
                typeof el === 'string' &&
                $el.length > 1 &&
                swiper.$el.find(el).length === 1
              ) {
                $el = swiper.$el.find(el)
              }
            }

            return $el
          }

          function toggleEl($el, disabled) {
            const params = swiper.params.navigation

            if ($el && $el.length > 0) {
              $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass)
              if ($el[0] && $el[0].tagName === 'BUTTON')
                $el[0].disabled = disabled

              if (swiper.params.watchOverflow && swiper.enabled) {
                $el[swiper.isLocked ? 'addClass' : 'removeClass'](
                  params.lockClass
                )
              }
            }
          }

          function update() {
            // Update Navigation Buttons
            if (swiper.params.loop) return
            const { $nextEl, $prevEl } = swiper.navigation
            toggleEl($prevEl, swiper.isBeginning)
            toggleEl($nextEl, swiper.isEnd)
          }

          function onPrevClick(e) {
            e.preventDefault()
            if (swiper.isBeginning && !swiper.params.loop) return
            swiper.slidePrev()
          }

          function onNextClick(e) {
            e.preventDefault()
            if (swiper.isEnd && !swiper.params.loop) return
            swiper.slideNext()
          }

          function init() {
            const params = swiper.params.navigation
            swiper.params.navigation = (0,
            _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_0__[
              'default'
            ])(
              swiper,
              swiper.originalParams.navigation,
              swiper.params.navigation,
              {
                nextEl: 'swiper-button-next',
                prevEl: 'swiper-button-prev',
              }
            )
            if (!(params.nextEl || params.prevEl)) return
            const $nextEl = getEl(params.nextEl)
            const $prevEl = getEl(params.prevEl)

            if ($nextEl && $nextEl.length > 0) {
              $nextEl.on('click', onNextClick)
            }

            if ($prevEl && $prevEl.length > 0) {
              $prevEl.on('click', onPrevClick)
            }

            Object.assign(swiper.navigation, {
              $nextEl,
              nextEl: $nextEl && $nextEl[0],
              $prevEl,
              prevEl: $prevEl && $prevEl[0],
            })

            if (!swiper.enabled) {
              if ($nextEl) $nextEl.addClass(params.lockClass)
              if ($prevEl) $prevEl.addClass(params.lockClass)
            }
          }

          function destroy() {
            const { $nextEl, $prevEl } = swiper.navigation

            if ($nextEl && $nextEl.length) {
              $nextEl.off('click', onNextClick)
              $nextEl.removeClass(swiper.params.navigation.disabledClass)
            }

            if ($prevEl && $prevEl.length) {
              $prevEl.off('click', onPrevClick)
              $prevEl.removeClass(swiper.params.navigation.disabledClass)
            }
          }

          on('init', () => {
            init()
            update()
          })
          on('toEdge fromEdge lock unlock', () => {
            update()
          })
          on('destroy', () => {
            destroy()
          })
          on('enable disable', () => {
            const { $nextEl, $prevEl } = swiper.navigation

            if ($nextEl) {
              $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](
                swiper.params.navigation.lockClass
              )
            }

            if ($prevEl) {
              $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](
                swiper.params.navigation.lockClass
              )
            }
          })
          on('click', (_s, e) => {
            const { $nextEl, $prevEl } = swiper.navigation
            const targetEl = e.target

            if (
              swiper.params.navigation.hideOnClick &&
              !(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                targetEl
              ).is($prevEl) &&
              !(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                targetEl
              ).is($nextEl)
            ) {
              if (
                swiper.pagination &&
                swiper.params.pagination &&
                swiper.params.pagination.clickable &&
                (swiper.pagination.el === targetEl ||
                  swiper.pagination.el.contains(targetEl))
              )
                return
              let isHidden

              if ($nextEl) {
                isHidden = $nextEl.hasClass(
                  swiper.params.navigation.hiddenClass
                )
              } else if ($prevEl) {
                isHidden = $prevEl.hasClass(
                  swiper.params.navigation.hiddenClass
                )
              }

              if (isHidden === true) {
                emit('navigationShow')
              } else {
                emit('navigationHide')
              }

              if ($nextEl) {
                $nextEl.toggleClass(swiper.params.navigation.hiddenClass)
              }

              if ($prevEl) {
                $prevEl.toggleClass(swiper.params.navigation.hiddenClass)
              }
            }
          })
          Object.assign(swiper.navigation, {
            update,
            init,
            destroy,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/pagination/pagination.js':
      /*!**************************************************************!*\
  !*** ./node_modules/swiper/modules/pagination/pagination.js ***!
  \**************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Pagination,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/classes-to-selector.js */ './node_modules/swiper/shared/classes-to-selector.js'
          )
        /* harmony import */ var _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/create-element-if-not-defined.js */ './node_modules/swiper/shared/create-element-if-not-defined.js'
          )

        function Pagination({ swiper, extendParams, on, emit }) {
          const pfx = 'swiper-pagination'
          extendParams({
            pagination: {
              el: null,
              bulletElement: 'span',
              clickable: false,
              hideOnClick: false,
              renderBullet: null,
              renderProgressbar: null,
              renderFraction: null,
              renderCustom: null,
              progressbarOpposite: false,
              type: 'bullets',
              // 'bullets' or 'progressbar' or 'fraction' or 'custom'
              dynamicBullets: false,
              dynamicMainBullets: 1,
              formatFractionCurrent: (number) => number,
              formatFractionTotal: (number) => number,
              bulletClass: `${pfx}-bullet`,
              bulletActiveClass: `${pfx}-bullet-active`,
              modifierClass: `${pfx}-`,
              currentClass: `${pfx}-current`,
              totalClass: `${pfx}-total`,
              hiddenClass: `${pfx}-hidden`,
              progressbarFillClass: `${pfx}-progressbar-fill`,
              progressbarOppositeClass: `${pfx}-progressbar-opposite`,
              clickableClass: `${pfx}-clickable`,
              lockClass: `${pfx}-lock`,
              horizontalClass: `${pfx}-horizontal`,
              verticalClass: `${pfx}-vertical`,
            },
          })
          swiper.pagination = {
            el: null,
            $el: null,
            bullets: [],
          }
          let bulletSize
          let dynamicBulletIndex = 0

          function isPaginationDisabled() {
            return (
              !swiper.params.pagination.el ||
              !swiper.pagination.el ||
              !swiper.pagination.$el ||
              swiper.pagination.$el.length === 0
            )
          }

          function setSideBullets($bulletEl, position) {
            const { bulletActiveClass } = swiper.params.pagination
            $bulletEl[position]()
              .addClass(`${bulletActiveClass}-${position}`)
              [position]()
              .addClass(`${bulletActiveClass}-${position}-${position}`)
          }

          function update() {
            // Render || Update Pagination bullets/items
            const rtl = swiper.rtl
            const params = swiper.params.pagination
            if (isPaginationDisabled()) return
            const slidesLength =
              swiper.virtual && swiper.params.virtual.enabled
                ? swiper.virtual.slides.length
                : swiper.slides.length
            const $el = swiper.pagination.$el // Current/Total

            let current
            const total = swiper.params.loop
              ? Math.ceil(
                  (slidesLength - swiper.loopedSlides * 2) /
                    swiper.params.slidesPerGroup
                )
              : swiper.snapGrid.length

            if (swiper.params.loop) {
              current = Math.ceil(
                (swiper.activeIndex - swiper.loopedSlides) /
                  swiper.params.slidesPerGroup
              )

              if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
                current -= slidesLength - swiper.loopedSlides * 2
              }

              if (current > total - 1) current -= total
              if (current < 0 && swiper.params.paginationType !== 'bullets')
                current = total + current
            } else if (typeof swiper.snapIndex !== 'undefined') {
              current = swiper.snapIndex
            } else {
              current = swiper.activeIndex || 0
            } // Types

            if (
              params.type === 'bullets' &&
              swiper.pagination.bullets &&
              swiper.pagination.bullets.length > 0
            ) {
              const bullets = swiper.pagination.bullets
              let firstIndex
              let lastIndex
              let midIndex

              if (params.dynamicBullets) {
                bulletSize = bullets
                  .eq(0)
                  [swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true)
                $el.css(
                  swiper.isHorizontal() ? 'width' : 'height',
                  `${bulletSize * (params.dynamicMainBullets + 4)}px`
                )

                if (
                  params.dynamicMainBullets > 1 &&
                  swiper.previousIndex !== undefined
                ) {
                  dynamicBulletIndex += current - swiper.previousIndex

                  if (dynamicBulletIndex > params.dynamicMainBullets - 1) {
                    dynamicBulletIndex = params.dynamicMainBullets - 1
                  } else if (dynamicBulletIndex < 0) {
                    dynamicBulletIndex = 0
                  }
                }

                firstIndex = current - dynamicBulletIndex
                lastIndex =
                  firstIndex +
                  (Math.min(bullets.length, params.dynamicMainBullets) - 1)
                midIndex = (lastIndex + firstIndex) / 2
              }

              bullets.removeClass(
                ['', '-next', '-next-next', '-prev', '-prev-prev', '-main']
                  .map((suffix) => `${params.bulletActiveClass}${suffix}`)
                  .join(' ')
              )

              if ($el.length > 1) {
                bullets.each((bullet) => {
                  const $bullet = (0,
                  _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                    bullet
                  )
                  const bulletIndex = $bullet.index()

                  if (bulletIndex === current) {
                    $bullet.addClass(params.bulletActiveClass)
                  }

                  if (params.dynamicBullets) {
                    if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                      $bullet.addClass(`${params.bulletActiveClass}-main`)
                    }

                    if (bulletIndex === firstIndex) {
                      setSideBullets($bullet, 'prev')
                    }

                    if (bulletIndex === lastIndex) {
                      setSideBullets($bullet, 'next')
                    }
                  }
                })
              } else {
                const $bullet = bullets.eq(current)
                const bulletIndex = $bullet.index()
                $bullet.addClass(params.bulletActiveClass)

                if (params.dynamicBullets) {
                  const $firstDisplayedBullet = bullets.eq(firstIndex)
                  const $lastDisplayedBullet = bullets.eq(lastIndex)

                  for (let i = firstIndex; i <= lastIndex; i += 1) {
                    bullets.eq(i).addClass(`${params.bulletActiveClass}-main`)
                  }

                  if (swiper.params.loop) {
                    if (
                      bulletIndex >=
                      bullets.length - params.dynamicMainBullets
                    ) {
                      for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {
                        bullets
                          .eq(bullets.length - i)
                          .addClass(`${params.bulletActiveClass}-main`)
                      }

                      bullets
                        .eq(bullets.length - params.dynamicMainBullets - 1)
                        .addClass(`${params.bulletActiveClass}-prev`)
                    } else {
                      setSideBullets($firstDisplayedBullet, 'prev')
                      setSideBullets($lastDisplayedBullet, 'next')
                    }
                  } else {
                    setSideBullets($firstDisplayedBullet, 'prev')
                    setSideBullets($lastDisplayedBullet, 'next')
                  }
                }
              }

              if (params.dynamicBullets) {
                const dynamicBulletsLength = Math.min(
                  bullets.length,
                  params.dynamicMainBullets + 4
                )
                const bulletsOffset =
                  (bulletSize * dynamicBulletsLength - bulletSize) / 2 -
                  midIndex * bulletSize
                const offsetProp = rtl ? 'right' : 'left'
                bullets.css(
                  swiper.isHorizontal() ? offsetProp : 'top',
                  `${bulletsOffset}px`
                )
              }
            }

            if (params.type === 'fraction') {
              $el
                .find(
                  (0,
                  _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                    'default'
                  ])(params.currentClass)
                )
                .text(params.formatFractionCurrent(current + 1))
              $el
                .find(
                  (0,
                  _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                    'default'
                  ])(params.totalClass)
                )
                .text(params.formatFractionTotal(total))
            }

            if (params.type === 'progressbar') {
              let progressbarDirection

              if (params.progressbarOpposite) {
                progressbarDirection = swiper.isHorizontal()
                  ? 'vertical'
                  : 'horizontal'
              } else {
                progressbarDirection = swiper.isHorizontal()
                  ? 'horizontal'
                  : 'vertical'
              }

              const scale = (current + 1) / total
              let scaleX = 1
              let scaleY = 1

              if (progressbarDirection === 'horizontal') {
                scaleX = scale
              } else {
                scaleY = scale
              }

              $el
                .find(
                  (0,
                  _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                    'default'
                  ])(params.progressbarFillClass)
                )
                .transform(
                  `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`
                )
                .transition(swiper.params.speed)
            }

            if (params.type === 'custom' && params.renderCustom) {
              $el.html(params.renderCustom(swiper, current + 1, total))
              emit('paginationRender', $el[0])
            } else {
              emit('paginationUpdate', $el[0])
            }

            if (swiper.params.watchOverflow && swiper.enabled) {
              $el[swiper.isLocked ? 'addClass' : 'removeClass'](
                params.lockClass
              )
            }
          }

          function render() {
            // Render Container
            const params = swiper.params.pagination
            if (isPaginationDisabled()) return
            const slidesLength =
              swiper.virtual && swiper.params.virtual.enabled
                ? swiper.virtual.slides.length
                : swiper.slides.length
            const $el = swiper.pagination.$el
            let paginationHTML = ''

            if (params.type === 'bullets') {
              let numberOfBullets = swiper.params.loop
                ? Math.ceil(
                    (slidesLength - swiper.loopedSlides * 2) /
                      swiper.params.slidesPerGroup
                  )
                : swiper.snapGrid.length

              if (
                swiper.params.freeMode &&
                swiper.params.freeMode.enabled &&
                !swiper.params.loop &&
                numberOfBullets > slidesLength
              ) {
                numberOfBullets = slidesLength
              }

              for (let i = 0; i < numberOfBullets; i += 1) {
                if (params.renderBullet) {
                  paginationHTML += params.renderBullet.call(
                    swiper,
                    i,
                    params.bulletClass
                  )
                } else {
                  paginationHTML += `<${params.bulletElement} class="${params.bulletClass}"></${params.bulletElement}>`
                }
              }

              $el.html(paginationHTML)
              swiper.pagination.bullets = $el.find(
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ])(params.bulletClass)
              )
            }

            if (params.type === 'fraction') {
              if (params.renderFraction) {
                paginationHTML = params.renderFraction.call(
                  swiper,
                  params.currentClass,
                  params.totalClass
                )
              } else {
                paginationHTML =
                  `<span class="${params.currentClass}"></span>` +
                  ' / ' +
                  `<span class="${params.totalClass}"></span>`
              }

              $el.html(paginationHTML)
            }

            if (params.type === 'progressbar') {
              if (params.renderProgressbar) {
                paginationHTML = params.renderProgressbar.call(
                  swiper,
                  params.progressbarFillClass
                )
              } else {
                paginationHTML = `<span class="${params.progressbarFillClass}"></span>`
              }

              $el.html(paginationHTML)
            }

            if (params.type !== 'custom') {
              emit('paginationRender', swiper.pagination.$el[0])
            }
          }

          function init() {
            swiper.params.pagination = (0,
            _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_2__[
              'default'
            ])(
              swiper,
              swiper.originalParams.pagination,
              swiper.params.pagination,
              {
                el: 'swiper-pagination',
              }
            )
            const params = swiper.params.pagination
            if (!params.el) return
            let $el = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(params.el)
            if ($el.length === 0) return

            if (
              swiper.params.uniqueNavElements &&
              typeof params.el === 'string' &&
              $el.length > 1
            ) {
              $el = swiper.$el.find(params.el) // check if it belongs to another nested Swiper

              if ($el.length > 1) {
                $el = $el.filter((el) => {
                  if (
                    (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                      el
                    ).parents('.swiper')[0] !== swiper.el
                  )
                    return false
                  return true
                })
              }
            }

            if (params.type === 'bullets' && params.clickable) {
              $el.addClass(params.clickableClass)
            }

            $el.addClass(params.modifierClass + params.type)
            $el.addClass(params.modifierClass + swiper.params.direction)

            if (params.type === 'bullets' && params.dynamicBullets) {
              $el.addClass(`${params.modifierClass}${params.type}-dynamic`)
              dynamicBulletIndex = 0

              if (params.dynamicMainBullets < 1) {
                params.dynamicMainBullets = 1
              }
            }

            if (params.type === 'progressbar' && params.progressbarOpposite) {
              $el.addClass(params.progressbarOppositeClass)
            }

            if (params.clickable) {
              $el.on(
                'click',
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ])(params.bulletClass),
                function onClick(e) {
                  e.preventDefault()
                  let index =
                    (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                      this
                    ).index() * swiper.params.slidesPerGroup
                  if (swiper.params.loop) index += swiper.loopedSlides
                  swiper.slideTo(index)
                }
              )
            }

            Object.assign(swiper.pagination, {
              $el,
              el: $el[0],
            })

            if (!swiper.enabled) {
              $el.addClass(params.lockClass)
            }
          }

          function destroy() {
            const params = swiper.params.pagination
            if (isPaginationDisabled()) return
            const $el = swiper.pagination.$el
            $el.removeClass(params.hiddenClass)
            $el.removeClass(params.modifierClass + params.type)
            $el.removeClass(params.modifierClass + swiper.params.direction)
            if (
              swiper.pagination.bullets &&
              swiper.pagination.bullets.removeClass
            )
              swiper.pagination.bullets.removeClass(params.bulletActiveClass)

            if (params.clickable) {
              $el.off(
                'click',
                (0,
                _shared_classes_to_selector_js__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ])(params.bulletClass)
              )
            }
          }

          on('init', () => {
            init()
            render()
            update()
          })
          on('activeIndexChange', () => {
            if (swiper.params.loop) {
              update()
            } else if (typeof swiper.snapIndex === 'undefined') {
              update()
            }
          })
          on('snapIndexChange', () => {
            if (!swiper.params.loop) {
              update()
            }
          })
          on('slidesLengthChange', () => {
            if (swiper.params.loop) {
              render()
              update()
            }
          })
          on('snapGridLengthChange', () => {
            if (!swiper.params.loop) {
              render()
              update()
            }
          })
          on('destroy', () => {
            destroy()
          })
          on('enable disable', () => {
            const { $el } = swiper.pagination

            if ($el) {
              $el[swiper.enabled ? 'removeClass' : 'addClass'](
                swiper.params.pagination.lockClass
              )
            }
          })
          on('lock unlock', () => {
            update()
          })
          on('click', (_s, e) => {
            const targetEl = e.target
            const { $el } = swiper.pagination

            if (
              swiper.params.pagination.el &&
              swiper.params.pagination.hideOnClick &&
              $el.length > 0 &&
              !(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                targetEl
              ).hasClass(swiper.params.pagination.bulletClass)
            ) {
              if (
                swiper.navigation &&
                ((swiper.navigation.nextEl &&
                  targetEl === swiper.navigation.nextEl) ||
                  (swiper.navigation.prevEl &&
                    targetEl === swiper.navigation.prevEl))
              )
                return
              const isHidden = $el.hasClass(
                swiper.params.pagination.hiddenClass
              )

              if (isHidden === true) {
                emit('paginationShow')
              } else {
                emit('paginationHide')
              }

              $el.toggleClass(swiper.params.pagination.hiddenClass)
            }
          })
          Object.assign(swiper.pagination, {
            render,
            update,
            init,
            destroy,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/parallax/parallax.js':
      /*!**********************************************************!*\
  !*** ./node_modules/swiper/modules/parallax/parallax.js ***!
  \**********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Parallax,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function Parallax({ swiper, extendParams, on }) {
          extendParams({
            parallax: {
              enabled: false,
            },
          })

          const setTransform = (el, progress) => {
            const { rtl } = swiper
            const $el = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(el)
            const rtlFactor = rtl ? -1 : 1
            const p = $el.attr('data-swiper-parallax') || '0'
            let x = $el.attr('data-swiper-parallax-x')
            let y = $el.attr('data-swiper-parallax-y')
            const scale = $el.attr('data-swiper-parallax-scale')
            const opacity = $el.attr('data-swiper-parallax-opacity')

            if (x || y) {
              x = x || '0'
              y = y || '0'
            } else if (swiper.isHorizontal()) {
              x = p
              y = '0'
            } else {
              y = p
              x = '0'
            }

            if (x.indexOf('%') >= 0) {
              x = `${parseInt(x, 10) * progress * rtlFactor}%`
            } else {
              x = `${x * progress * rtlFactor}px`
            }

            if (y.indexOf('%') >= 0) {
              y = `${parseInt(y, 10) * progress}%`
            } else {
              y = `${y * progress}px`
            }

            if (typeof opacity !== 'undefined' && opacity !== null) {
              const currentOpacity =
                opacity - (opacity - 1) * (1 - Math.abs(progress))
              $el[0].style.opacity = currentOpacity
            }

            if (typeof scale === 'undefined' || scale === null) {
              $el.transform(`translate3d(${x}, ${y}, 0px)`)
            } else {
              const currentScale =
                scale - (scale - 1) * (1 - Math.abs(progress))
              $el.transform(
                `translate3d(${x}, ${y}, 0px) scale(${currentScale})`
              )
            }
          }

          const setTranslate = () => {
            const { $el, slides, progress, snapGrid } = swiper
            $el
              .children(
                '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
              )
              .each((el) => {
                setTransform(el, progress)
              })
            slides.each((slideEl, slideIndex) => {
              let slideProgress = slideEl.progress

              if (
                swiper.params.slidesPerGroup > 1 &&
                swiper.params.slidesPerView !== 'auto'
              ) {
                slideProgress +=
                  Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1)
              }

              slideProgress = Math.min(Math.max(slideProgress, -1), 1)
              ;(0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                slideEl
              )
                .find(
                  '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
                )
                .each((el) => {
                  setTransform(el, slideProgress)
                })
            })
          }

          const setTransition = (duration = swiper.params.speed) => {
            const { $el } = swiper
            $el
              .find(
                '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]'
              )
              .each((parallaxEl) => {
                const $parallaxEl = (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  parallaxEl
                )
                let parallaxDuration =
                  parseInt(
                    $parallaxEl.attr('data-swiper-parallax-duration'),
                    10
                  ) || duration
                if (duration === 0) parallaxDuration = 0
                $parallaxEl.transition(parallaxDuration)
              })
          }

          on('beforeInit', () => {
            if (!swiper.params.parallax.enabled) return
            swiper.params.watchSlidesProgress = true
            swiper.originalParams.watchSlidesProgress = true
          })
          on('init', () => {
            if (!swiper.params.parallax.enabled) return
            setTranslate()
          })
          on('setTranslate', () => {
            if (!swiper.params.parallax.enabled) return
            setTranslate()
          })
          on('setTransition', (_swiper, duration) => {
            if (!swiper.params.parallax.enabled) return
            setTransition(duration)
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/scrollbar/scrollbar.js':
      /*!************************************************************!*\
  !*** ./node_modules/swiper/modules/scrollbar/scrollbar.js ***!
  \************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Scrollbar,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* harmony import */ var _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ../../shared/create-element-if-not-defined.js */ './node_modules/swiper/shared/create-element-if-not-defined.js'
          )

        function Scrollbar({ swiper, extendParams, on, emit }) {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          let isTouched = false
          let timeout = null
          let dragTimeout = null
          let dragStartPos
          let dragSize
          let trackSize
          let divider
          extendParams({
            scrollbar: {
              el: null,
              dragSize: 'auto',
              hide: false,
              draggable: false,
              snapOnRelease: true,
              lockClass: 'swiper-scrollbar-lock',
              dragClass: 'swiper-scrollbar-drag',
            },
          })
          swiper.scrollbar = {
            el: null,
            dragEl: null,
            $el: null,
            $dragEl: null,
          }

          function setTranslate() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return
            const { scrollbar, rtlTranslate: rtl, progress } = swiper
            const { $dragEl, $el } = scrollbar
            const params = swiper.params.scrollbar
            let newSize = dragSize
            let newPos = (trackSize - dragSize) * progress

            if (rtl) {
              newPos = -newPos

              if (newPos > 0) {
                newSize = dragSize - newPos
                newPos = 0
              } else if (-newPos + dragSize > trackSize) {
                newSize = trackSize + newPos
              }
            } else if (newPos < 0) {
              newSize = dragSize + newPos
              newPos = 0
            } else if (newPos + dragSize > trackSize) {
              newSize = trackSize - newPos
            }

            if (swiper.isHorizontal()) {
              $dragEl.transform(`translate3d(${newPos}px, 0, 0)`)
              $dragEl[0].style.width = `${newSize}px`
            } else {
              $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`)
              $dragEl[0].style.height = `${newSize}px`
            }

            if (params.hide) {
              clearTimeout(timeout)
              $el[0].style.opacity = 1
              timeout = setTimeout(() => {
                $el[0].style.opacity = 0
                $el.transition(400)
              }, 1000)
            }
          }

          function setTransition(duration) {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return
            swiper.scrollbar.$dragEl.transition(duration)
          }

          function updateSize() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return
            const { scrollbar } = swiper
            const { $dragEl, $el } = scrollbar
            $dragEl[0].style.width = ''
            $dragEl[0].style.height = ''
            trackSize = swiper.isHorizontal()
              ? $el[0].offsetWidth
              : $el[0].offsetHeight
            divider =
              swiper.size /
              (swiper.virtualSize +
                swiper.params.slidesOffsetBefore -
                (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0))

            if (swiper.params.scrollbar.dragSize === 'auto') {
              dragSize = trackSize * divider
            } else {
              dragSize = parseInt(swiper.params.scrollbar.dragSize, 10)
            }

            if (swiper.isHorizontal()) {
              $dragEl[0].style.width = `${dragSize}px`
            } else {
              $dragEl[0].style.height = `${dragSize}px`
            }

            if (divider >= 1) {
              $el[0].style.display = 'none'
            } else {
              $el[0].style.display = ''
            }

            if (swiper.params.scrollbar.hide) {
              $el[0].style.opacity = 0
            }

            if (swiper.params.watchOverflow && swiper.enabled) {
              scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](
                swiper.params.scrollbar.lockClass
              )
            }
          }

          function getPointerPosition(e) {
            if (swiper.isHorizontal()) {
              return e.type === 'touchstart' || e.type === 'touchmove'
                ? e.targetTouches[0].clientX
                : e.clientX
            }

            return e.type === 'touchstart' || e.type === 'touchmove'
              ? e.targetTouches[0].clientY
              : e.clientY
          }

          function setDragPosition(e) {
            const { scrollbar, rtlTranslate: rtl } = swiper
            const { $el } = scrollbar
            let positionRatio
            positionRatio =
              (getPointerPosition(e) -
                $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] -
                (dragStartPos !== null ? dragStartPos : dragSize / 2)) /
              (trackSize - dragSize)
            positionRatio = Math.max(Math.min(positionRatio, 1), 0)

            if (rtl) {
              positionRatio = 1 - positionRatio
            }

            const position =
              swiper.minTranslate() +
              (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio
            swiper.updateProgress(position)
            swiper.setTranslate(position)
            swiper.updateActiveIndex()
            swiper.updateSlidesClasses()
          }

          function onDragStart(e) {
            const params = swiper.params.scrollbar
            const { scrollbar, $wrapperEl } = swiper
            const { $el, $dragEl } = scrollbar
            isTouched = true
            dragStartPos =
              e.target === $dragEl[0] || e.target === $dragEl
                ? getPointerPosition(e) -
                  e.target.getBoundingClientRect()[
                    swiper.isHorizontal() ? 'left' : 'top'
                  ]
                : null
            e.preventDefault()
            e.stopPropagation()
            $wrapperEl.transition(100)
            $dragEl.transition(100)
            setDragPosition(e)
            clearTimeout(dragTimeout)
            $el.transition(0)

            if (params.hide) {
              $el.css('opacity', 1)
            }

            if (swiper.params.cssMode) {
              swiper.$wrapperEl.css('scroll-snap-type', 'none')
            }

            emit('scrollbarDragStart', e)
          }

          function onDragMove(e) {
            const { scrollbar, $wrapperEl } = swiper
            const { $el, $dragEl } = scrollbar
            if (!isTouched) return
            if (e.preventDefault) e.preventDefault()
            else e.returnValue = false
            setDragPosition(e)
            $wrapperEl.transition(0)
            $el.transition(0)
            $dragEl.transition(0)
            emit('scrollbarDragMove', e)
          }

          function onDragEnd(e) {
            const params = swiper.params.scrollbar
            const { scrollbar, $wrapperEl } = swiper
            const { $el } = scrollbar
            if (!isTouched) return
            isTouched = false

            if (swiper.params.cssMode) {
              swiper.$wrapperEl.css('scroll-snap-type', '')
              $wrapperEl.transition('')
            }

            if (params.hide) {
              clearTimeout(dragTimeout)
              dragTimeout = (0,
              _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.nextTick)(() => {
                $el.css('opacity', 0)
                $el.transition(400)
              }, 1000)
            }

            emit('scrollbarDragEnd', e)

            if (params.snapOnRelease) {
              swiper.slideToClosest()
            }
          }

          function events(method) {
            const {
              scrollbar,
              touchEventsTouch,
              touchEventsDesktop,
              params,
              support,
            } = swiper
            const $el = scrollbar.$el
            const target = $el[0]
            const activeListener =
              support.passiveListener && params.passiveListeners
                ? {
                    passive: false,
                    capture: false,
                  }
                : false
            const passiveListener =
              support.passiveListener && params.passiveListeners
                ? {
                    passive: true,
                    capture: false,
                  }
                : false
            if (!target) return
            const eventMethod =
              method === 'on' ? 'addEventListener' : 'removeEventListener'

            if (!support.touch) {
              target[eventMethod](
                touchEventsDesktop.start,
                onDragStart,
                activeListener
              )
              document[eventMethod](
                touchEventsDesktop.move,
                onDragMove,
                activeListener
              )
              document[eventMethod](
                touchEventsDesktop.end,
                onDragEnd,
                passiveListener
              )
            } else {
              target[eventMethod](
                touchEventsTouch.start,
                onDragStart,
                activeListener
              )
              target[eventMethod](
                touchEventsTouch.move,
                onDragMove,
                activeListener
              )
              target[eventMethod](
                touchEventsTouch.end,
                onDragEnd,
                passiveListener
              )
            }
          }

          function enableDraggable() {
            if (!swiper.params.scrollbar.el) return
            events('on')
          }

          function disableDraggable() {
            if (!swiper.params.scrollbar.el) return
            events('off')
          }

          function init() {
            const { scrollbar, $el: $swiperEl } = swiper
            swiper.params.scrollbar = (0,
            _shared_create_element_if_not_defined_js__WEBPACK_IMPORTED_MODULE_3__[
              'default'
            ])(
              swiper,
              swiper.originalParams.scrollbar,
              swiper.params.scrollbar,
              {
                el: 'swiper-scrollbar',
              }
            )
            const params = swiper.params.scrollbar
            if (!params.el) return
            let $el = (0,
            _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(params.el)

            if (
              swiper.params.uniqueNavElements &&
              typeof params.el === 'string' &&
              $el.length > 1 &&
              $swiperEl.find(params.el).length === 1
            ) {
              $el = $swiperEl.find(params.el)
            }

            let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`)

            if ($dragEl.length === 0) {
              $dragEl = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                `<div class="${swiper.params.scrollbar.dragClass}"></div>`
              )
              $el.append($dragEl)
            }

            Object.assign(scrollbar, {
              $el,
              el: $el[0],
              $dragEl,
              dragEl: $dragEl[0],
            })

            if (params.draggable) {
              enableDraggable()
            }

            if ($el) {
              $el[swiper.enabled ? 'removeClass' : 'addClass'](
                swiper.params.scrollbar.lockClass
              )
            }
          }

          function destroy() {
            disableDraggable()
          }

          on('init', () => {
            init()
            updateSize()
            setTranslate()
          })
          on('update resize observerUpdate lock unlock', () => {
            updateSize()
          })
          on('setTranslate', () => {
            setTranslate()
          })
          on('setTransition', (_s, duration) => {
            setTransition(duration)
          })
          on('enable disable', () => {
            const { $el } = swiper.scrollbar

            if ($el) {
              $el[swiper.enabled ? 'removeClass' : 'addClass'](
                swiper.params.scrollbar.lockClass
              )
            }
          })
          on('destroy', () => {
            destroy()
          })
          Object.assign(swiper.scrollbar, {
            updateSize,
            setTranslate,
            init,
            destroy,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/thumbs/thumbs.js':
      /*!******************************************************!*\
  !*** ./node_modules/swiper/modules/thumbs/thumbs.js ***!
  \******************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Thumb,
          /* harmony export */
        })
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function Thumb({ swiper, extendParams, on }) {
          extendParams({
            thumbs: {
              swiper: null,
              multipleActiveThumbs: true,
              autoScrollOffset: 0,
              slideThumbActiveClass: 'swiper-slide-thumb-active',
              thumbsContainerClass: 'swiper-thumbs',
            },
          })
          let initialized = false
          let swiperCreated = false
          swiper.thumbs = {
            swiper: null,
          }

          function onThumbClick() {
            const thumbsSwiper = swiper.thumbs.swiper
            if (!thumbsSwiper) return
            const clickedIndex = thumbsSwiper.clickedIndex
            const clickedSlide = thumbsSwiper.clickedSlide
            if (
              clickedSlide &&
              (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                clickedSlide
              ).hasClass(swiper.params.thumbs.slideThumbActiveClass)
            )
              return
            if (typeof clickedIndex === 'undefined' || clickedIndex === null)
              return
            let slideToIndex

            if (thumbsSwiper.params.loop) {
              slideToIndex = parseInt(
                (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  thumbsSwiper.clickedSlide
                ).attr('data-swiper-slide-index'),
                10
              )
            } else {
              slideToIndex = clickedIndex
            }

            if (swiper.params.loop) {
              let currentIndex = swiper.activeIndex

              if (
                swiper.slides
                  .eq(currentIndex)
                  .hasClass(swiper.params.slideDuplicateClass)
              ) {
                swiper.loopFix() // eslint-disable-next-line

                swiper._clientLeft = swiper.$wrapperEl[0].clientLeft
                currentIndex = swiper.activeIndex
              }

              const prevIndex = swiper.slides
                .eq(currentIndex)
                .prevAll(`[data-swiper-slide-index="${slideToIndex}"]`)
                .eq(0)
                .index()
              const nextIndex = swiper.slides
                .eq(currentIndex)
                .nextAll(`[data-swiper-slide-index="${slideToIndex}"]`)
                .eq(0)
                .index()
              if (typeof prevIndex === 'undefined') slideToIndex = nextIndex
              else if (typeof nextIndex === 'undefined')
                slideToIndex = prevIndex
              else if (nextIndex - currentIndex < currentIndex - prevIndex)
                slideToIndex = nextIndex
              else slideToIndex = prevIndex
            }

            swiper.slideTo(slideToIndex)
          }

          function init() {
            const { thumbs: thumbsParams } = swiper.params
            if (initialized) return false
            initialized = true
            const SwiperClass = swiper.constructor

            if (thumbsParams.swiper instanceof SwiperClass) {
              swiper.thumbs.swiper = thumbsParams.swiper
              Object.assign(swiper.thumbs.swiper.originalParams, {
                watchSlidesProgress: true,
                slideToClickedSlide: false,
              })
              Object.assign(swiper.thumbs.swiper.params, {
                watchSlidesProgress: true,
                slideToClickedSlide: false,
              })
            } else if (
              (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(
                thumbsParams.swiper
              )
            ) {
              const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper)
              Object.assign(thumbsSwiperParams, {
                watchSlidesProgress: true,
                slideToClickedSlide: false,
              })
              swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams)
              swiperCreated = true
            }

            swiper.thumbs.swiper.$el.addClass(
              swiper.params.thumbs.thumbsContainerClass
            )
            swiper.thumbs.swiper.on('tap', onThumbClick)
            return true
          }

          function update(initial) {
            const thumbsSwiper = swiper.thumbs.swiper
            if (!thumbsSwiper) return
            const slidesPerView =
              thumbsSwiper.params.slidesPerView === 'auto'
                ? thumbsSwiper.slidesPerViewDynamic()
                : thumbsSwiper.params.slidesPerView
            const autoScrollOffset = swiper.params.thumbs.autoScrollOffset
            const useOffset = autoScrollOffset && !thumbsSwiper.params.loop

            if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
              let currentThumbsIndex = thumbsSwiper.activeIndex
              let newThumbsIndex
              let direction

              if (thumbsSwiper.params.loop) {
                if (
                  thumbsSwiper.slides
                    .eq(currentThumbsIndex)
                    .hasClass(thumbsSwiper.params.slideDuplicateClass)
                ) {
                  thumbsSwiper.loopFix() // eslint-disable-next-line

                  thumbsSwiper._clientLeft =
                    thumbsSwiper.$wrapperEl[0].clientLeft
                  currentThumbsIndex = thumbsSwiper.activeIndex
                } // Find actual thumbs index to slide to

                const prevThumbsIndex = thumbsSwiper.slides
                  .eq(currentThumbsIndex)
                  .prevAll(`[data-swiper-slide-index="${swiper.realIndex}"]`)
                  .eq(0)
                  .index()
                const nextThumbsIndex = thumbsSwiper.slides
                  .eq(currentThumbsIndex)
                  .nextAll(`[data-swiper-slide-index="${swiper.realIndex}"]`)
                  .eq(0)
                  .index()

                if (typeof prevThumbsIndex === 'undefined') {
                  newThumbsIndex = nextThumbsIndex
                } else if (typeof nextThumbsIndex === 'undefined') {
                  newThumbsIndex = prevThumbsIndex
                } else if (
                  nextThumbsIndex - currentThumbsIndex ===
                  currentThumbsIndex - prevThumbsIndex
                ) {
                  newThumbsIndex =
                    thumbsSwiper.params.slidesPerGroup > 1
                      ? nextThumbsIndex
                      : currentThumbsIndex
                } else if (
                  nextThumbsIndex - currentThumbsIndex <
                  currentThumbsIndex - prevThumbsIndex
                ) {
                  newThumbsIndex = nextThumbsIndex
                } else {
                  newThumbsIndex = prevThumbsIndex
                }

                direction =
                  swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev'
              } else {
                newThumbsIndex = swiper.realIndex
                direction =
                  newThumbsIndex > swiper.previousIndex ? 'next' : 'prev'
              }

              if (useOffset) {
                newThumbsIndex +=
                  direction === 'next'
                    ? autoScrollOffset
                    : -1 * autoScrollOffset
              }

              if (
                thumbsSwiper.visibleSlidesIndexes &&
                thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0
              ) {
                if (thumbsSwiper.params.centeredSlides) {
                  if (newThumbsIndex > currentThumbsIndex) {
                    newThumbsIndex =
                      newThumbsIndex - Math.floor(slidesPerView / 2) + 1
                  } else {
                    newThumbsIndex =
                      newThumbsIndex + Math.floor(slidesPerView / 2) - 1
                  }
                } else if (
                  newThumbsIndex > currentThumbsIndex &&
                  thumbsSwiper.params.slidesPerGroup === 1
                ) {
                  // newThumbsIndex = newThumbsIndex - slidesPerView + 1;
                }

                thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined)
              }
            } // Activate thumbs

            let thumbsToActivate = 1
            const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass

            if (
              swiper.params.slidesPerView > 1 &&
              !swiper.params.centeredSlides
            ) {
              thumbsToActivate = swiper.params.slidesPerView
            }

            if (!swiper.params.thumbs.multipleActiveThumbs) {
              thumbsToActivate = 1
            }

            thumbsToActivate = Math.floor(thumbsToActivate)
            thumbsSwiper.slides.removeClass(thumbActiveClass)

            if (
              thumbsSwiper.params.loop ||
              (thumbsSwiper.params.virtual &&
                thumbsSwiper.params.virtual.enabled)
            ) {
              for (let i = 0; i < thumbsToActivate; i += 1) {
                thumbsSwiper.$wrapperEl
                  .children(
                    `[data-swiper-slide-index="${swiper.realIndex + i}"]`
                  )
                  .addClass(thumbActiveClass)
              }
            } else {
              for (let i = 0; i < thumbsToActivate; i += 1) {
                thumbsSwiper.slides
                  .eq(swiper.realIndex + i)
                  .addClass(thumbActiveClass)
              }
            }
          }

          on('beforeInit', () => {
            const { thumbs } = swiper.params
            if (!thumbs || !thumbs.swiper) return
            init()
            update(true)
          })
          on('slideChange update resize observerUpdate', () => {
            if (!swiper.thumbs.swiper) return
            update()
          })
          on('setTransition', (_s, duration) => {
            const thumbsSwiper = swiper.thumbs.swiper
            if (!thumbsSwiper) return
            thumbsSwiper.setTransition(duration)
          })
          on('beforeDestroy', () => {
            const thumbsSwiper = swiper.thumbs.swiper
            if (!thumbsSwiper) return

            if (swiperCreated && thumbsSwiper) {
              thumbsSwiper.destroy()
            }
          })
          Object.assign(swiper.thumbs, {
            init,
            update,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/virtual/virtual.js':
      /*!********************************************************!*\
  !*** ./node_modules/swiper/modules/virtual/virtual.js ***!
  \********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Virtual,
          /* harmony export */
        })
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function Virtual({ swiper, extendParams, on }) {
          extendParams({
            virtual: {
              enabled: false,
              slides: [],
              cache: true,
              renderSlide: null,
              renderExternal: null,
              renderExternalUpdate: true,
              addSlidesBefore: 0,
              addSlidesAfter: 0,
            },
          })
          swiper.virtual = {
            cache: {},
            from: undefined,
            to: undefined,
            slides: [],
            offset: 0,
            slidesGrid: [],
          }

          function renderSlide(slide, index) {
            const params = swiper.params.virtual

            if (params.cache && swiper.virtual.cache[index]) {
              return swiper.virtual.cache[index]
            }

            const $slideEl = params.renderSlide
              ? (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  params.renderSlide.call(swiper, slide, index)
                )
              : (0, _shared_dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  `<div class="${swiper.params.slideClass}" data-swiper-slide-index="${index}">${slide}</div>`
                )
            if (!$slideEl.attr('data-swiper-slide-index'))
              $slideEl.attr('data-swiper-slide-index', index)
            if (params.cache) swiper.virtual.cache[index] = $slideEl
            return $slideEl
          }

          function update(force) {
            const { slidesPerView, slidesPerGroup, centeredSlides } =
              swiper.params
            const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual
            const {
              from: previousFrom,
              to: previousTo,
              slides,
              slidesGrid: previousSlidesGrid,
              offset: previousOffset,
            } = swiper.virtual
            swiper.updateActiveIndex()
            const activeIndex = swiper.activeIndex || 0
            let offsetProp
            if (swiper.rtlTranslate) offsetProp = 'right'
            else offsetProp = swiper.isHorizontal() ? 'left' : 'top'
            let slidesAfter
            let slidesBefore

            if (centeredSlides) {
              slidesAfter =
                Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter
              slidesBefore =
                Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore
            } else {
              slidesAfter =
                slidesPerView + (slidesPerGroup - 1) + addSlidesAfter
              slidesBefore = slidesPerGroup + addSlidesBefore
            }

            const from = Math.max((activeIndex || 0) - slidesBefore, 0)
            const to = Math.min(
              (activeIndex || 0) + slidesAfter,
              slides.length - 1
            )
            const offset =
              (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0)
            Object.assign(swiper.virtual, {
              from,
              to,
              offset,
              slidesGrid: swiper.slidesGrid,
            })

            function onRendered() {
              swiper.updateSlides()
              swiper.updateProgress()
              swiper.updateSlidesClasses()

              if (swiper.lazy && swiper.params.lazy.enabled) {
                swiper.lazy.load()
              }
            }

            if (previousFrom === from && previousTo === to && !force) {
              if (
                swiper.slidesGrid !== previousSlidesGrid &&
                offset !== previousOffset
              ) {
                swiper.slides.css(offsetProp, `${offset}px`)
              }

              swiper.updateProgress()
              return
            }

            if (swiper.params.virtual.renderExternal) {
              swiper.params.virtual.renderExternal.call(swiper, {
                offset,
                from,
                to,
                slides: (function getSlides() {
                  const slidesToRender = []

                  for (let i = from; i <= to; i += 1) {
                    slidesToRender.push(slides[i])
                  }

                  return slidesToRender
                })(),
              })

              if (swiper.params.virtual.renderExternalUpdate) {
                onRendered()
              }

              return
            }

            const prependIndexes = []
            const appendIndexes = []

            if (force) {
              swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove()
            } else {
              for (let i = previousFrom; i <= previousTo; i += 1) {
                if (i < from || i > to) {
                  swiper.$wrapperEl
                    .find(
                      `.${swiper.params.slideClass}[data-swiper-slide-index="${i}"]`
                    )
                    .remove()
                }
              }
            }

            for (let i = 0; i < slides.length; i += 1) {
              if (i >= from && i <= to) {
                if (typeof previousTo === 'undefined' || force) {
                  appendIndexes.push(i)
                } else {
                  if (i > previousTo) appendIndexes.push(i)
                  if (i < previousFrom) prependIndexes.push(i)
                }
              }
            }

            appendIndexes.forEach((index) => {
              swiper.$wrapperEl.append(renderSlide(slides[index], index))
            })
            prependIndexes
              .sort((a, b) => b - a)
              .forEach((index) => {
                swiper.$wrapperEl.prepend(renderSlide(slides[index], index))
              })
            swiper.$wrapperEl
              .children('.swiper-slide')
              .css(offsetProp, `${offset}px`)
            onRendered()
          }

          function appendSlide(slides) {
            if (typeof slides === 'object' && 'length' in slides) {
              for (let i = 0; i < slides.length; i += 1) {
                if (slides[i]) swiper.virtual.slides.push(slides[i])
              }
            } else {
              swiper.virtual.slides.push(slides)
            }

            update(true)
          }

          function prependSlide(slides) {
            const activeIndex = swiper.activeIndex
            let newActiveIndex = activeIndex + 1
            let numberOfNewSlides = 1

            if (Array.isArray(slides)) {
              for (let i = 0; i < slides.length; i += 1) {
                if (slides[i]) swiper.virtual.slides.unshift(slides[i])
              }

              newActiveIndex = activeIndex + slides.length
              numberOfNewSlides = slides.length
            } else {
              swiper.virtual.slides.unshift(slides)
            }

            if (swiper.params.virtual.cache) {
              const cache = swiper.virtual.cache
              const newCache = {}
              Object.keys(cache).forEach((cachedIndex) => {
                const $cachedEl = cache[cachedIndex]
                const cachedElIndex = $cachedEl.attr('data-swiper-slide-index')

                if (cachedElIndex) {
                  $cachedEl.attr(
                    'data-swiper-slide-index',
                    parseInt(cachedElIndex, 10) + 1
                  )
                }

                newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] =
                  $cachedEl
              })
              swiper.virtual.cache = newCache
            }

            update(true)
            swiper.slideTo(newActiveIndex, 0)
          }

          function removeSlide(slidesIndexes) {
            if (typeof slidesIndexes === 'undefined' || slidesIndexes === null)
              return
            let activeIndex = swiper.activeIndex

            if (Array.isArray(slidesIndexes)) {
              for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {
                swiper.virtual.slides.splice(slidesIndexes[i], 1)

                if (swiper.params.virtual.cache) {
                  delete swiper.virtual.cache[slidesIndexes[i]]
                }

                if (slidesIndexes[i] < activeIndex) activeIndex -= 1
                activeIndex = Math.max(activeIndex, 0)
              }
            } else {
              swiper.virtual.slides.splice(slidesIndexes, 1)

              if (swiper.params.virtual.cache) {
                delete swiper.virtual.cache[slidesIndexes]
              }

              if (slidesIndexes < activeIndex) activeIndex -= 1
              activeIndex = Math.max(activeIndex, 0)
            }

            update(true)
            swiper.slideTo(activeIndex, 0)
          }

          function removeAllSlides() {
            swiper.virtual.slides = []

            if (swiper.params.virtual.cache) {
              swiper.virtual.cache = {}
            }

            update(true)
            swiper.slideTo(0, 0)
          }

          on('beforeInit', () => {
            if (!swiper.params.virtual.enabled) return
            swiper.virtual.slides = swiper.params.virtual.slides
            swiper.classNames.push(
              `${swiper.params.containerModifierClass}virtual`
            )
            swiper.params.watchSlidesProgress = true
            swiper.originalParams.watchSlidesProgress = true

            if (!swiper.params.initialSlide) {
              update()
            }
          })
          on('setTranslate', () => {
            if (!swiper.params.virtual.enabled) return
            update()
          })
          on('init update resize', () => {
            if (!swiper.params.virtual.enabled) return

            if (swiper.params.cssMode) {
              ;(0,
              _shared_utils_js__WEBPACK_IMPORTED_MODULE_1__.setCSSProperty)(
                swiper.wrapperEl,
                '--swiper-virtual-size',
                `${swiper.virtualSize}px`
              )
            }
          })
          Object.assign(swiper.virtual, {
            appendSlide,
            prependSlide,
            removeSlide,
            removeAllSlides,
            update,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/modules/zoom/zoom.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/modules/zoom/zoom.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ Zoom,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ../../shared/dom.js */ './node_modules/swiper/shared/dom.js'
          )
        /* harmony import */ var _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ../../shared/utils.js */ './node_modules/swiper/shared/utils.js'
          )

        function Zoom({ swiper, extendParams, on, emit }) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          extendParams({
            zoom: {
              enabled: false,
              maxRatio: 3,
              minRatio: 1,
              toggle: true,
              containerClass: 'swiper-zoom-container',
              zoomedSlideClass: 'swiper-slide-zoomed',
            },
          })
          swiper.zoom = {
            enabled: false,
          }
          let currentScale = 1
          let isScaling = false
          let gesturesEnabled
          let fakeGestureTouched
          let fakeGestureMoved
          const gesture = {
            $slideEl: undefined,
            slideWidth: undefined,
            slideHeight: undefined,
            $imageEl: undefined,
            $imageWrapEl: undefined,
            maxRatio: 3,
          }
          const image = {
            isTouched: undefined,
            isMoved: undefined,
            currentX: undefined,
            currentY: undefined,
            minX: undefined,
            minY: undefined,
            maxX: undefined,
            maxY: undefined,
            width: undefined,
            height: undefined,
            startX: undefined,
            startY: undefined,
            touchesStart: {},
            touchesCurrent: {},
          }
          const velocity = {
            x: undefined,
            y: undefined,
            prevPositionX: undefined,
            prevPositionY: undefined,
            prevTime: undefined,
          }
          let scale = 1
          Object.defineProperty(swiper.zoom, 'scale', {
            get() {
              return scale
            },

            set(value) {
              if (scale !== value) {
                const imageEl = gesture.$imageEl
                  ? gesture.$imageEl[0]
                  : undefined
                const slideEl = gesture.$slideEl
                  ? gesture.$slideEl[0]
                  : undefined
                emit('zoomChange', value, imageEl, slideEl)
              }

              scale = value
            },
          })

          function getDistanceBetweenTouches(e) {
            if (e.targetTouches.length < 2) return 1
            const x1 = e.targetTouches[0].pageX
            const y1 = e.targetTouches[0].pageY
            const x2 = e.targetTouches[1].pageX
            const y2 = e.targetTouches[1].pageY
            const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
            return distance
          } // Events

          function onGestureStart(e) {
            const support = swiper.support
            const params = swiper.params.zoom
            fakeGestureTouched = false
            fakeGestureMoved = false

            if (!support.gestures) {
              if (
                e.type !== 'touchstart' ||
                (e.type === 'touchstart' && e.targetTouches.length < 2)
              ) {
                return
              }

              fakeGestureTouched = true
              gesture.scaleStart = getDistanceBetweenTouches(e)
            }

            if (!gesture.$slideEl || !gesture.$slideEl.length) {
              gesture.$slideEl = (0,
              _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                e.target
              ).closest(`.${swiper.params.slideClass}`)
              if (gesture.$slideEl.length === 0)
                gesture.$slideEl = swiper.slides.eq(swiper.activeIndex)
              gesture.$imageEl = gesture.$slideEl
                .find(`.${params.containerClass}`)
                .eq(0)
                .find('img, svg, canvas, picture, .swiper-zoom-target')
              gesture.$imageWrapEl = gesture.$imageEl.parent(
                `.${params.containerClass}`
              )
              gesture.maxRatio =
                gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio

              if (gesture.$imageWrapEl.length === 0) {
                gesture.$imageEl = undefined
                return
              }
            }

            if (gesture.$imageEl) {
              gesture.$imageEl.transition(0)
            }

            isScaling = true
          }

          function onGestureChange(e) {
            const support = swiper.support
            const params = swiper.params.zoom
            const zoom = swiper.zoom

            if (!support.gestures) {
              if (
                e.type !== 'touchmove' ||
                (e.type === 'touchmove' && e.targetTouches.length < 2)
              ) {
                return
              }

              fakeGestureMoved = true
              gesture.scaleMove = getDistanceBetweenTouches(e)
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
              if (e.type === 'gesturechange') onGestureStart(e)
              return
            }

            if (support.gestures) {
              zoom.scale = e.scale * currentScale
            } else {
              zoom.scale =
                (gesture.scaleMove / gesture.scaleStart) * currentScale
            }

            if (zoom.scale > gesture.maxRatio) {
              zoom.scale =
                gesture.maxRatio -
                1 +
                (zoom.scale - gesture.maxRatio + 1) ** 0.5
            }

            if (zoom.scale < params.minRatio) {
              zoom.scale =
                params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5
            }

            gesture.$imageEl.transform(
              `translate3d(0,0,0) scale(${zoom.scale})`
            )
          }

          function onGestureEnd(e) {
            const device = swiper.device
            const support = swiper.support
            const params = swiper.params.zoom
            const zoom = swiper.zoom

            if (!support.gestures) {
              if (!fakeGestureTouched || !fakeGestureMoved) {
                return
              }

              if (
                e.type !== 'touchend' ||
                (e.type === 'touchend' &&
                  e.changedTouches.length < 2 &&
                  !device.android)
              ) {
                return
              }

              fakeGestureTouched = false
              fakeGestureMoved = false
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return
            zoom.scale = Math.max(
              Math.min(zoom.scale, gesture.maxRatio),
              params.minRatio
            )
            gesture.$imageEl
              .transition(swiper.params.speed)
              .transform(`translate3d(0,0,0) scale(${zoom.scale})`)
            currentScale = zoom.scale
            isScaling = false
            if (zoom.scale === 1) gesture.$slideEl = undefined
          }

          function onTouchStart(e) {
            const device = swiper.device
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return
            if (image.isTouched) return
            if (device.android && e.cancelable) e.preventDefault()
            image.isTouched = true
            image.touchesStart.x =
              e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX
            image.touchesStart.y =
              e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY
          }

          function onTouchMove(e) {
            const zoom = swiper.zoom
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return
            swiper.allowClick = false
            if (!image.isTouched || !gesture.$slideEl) return

            if (!image.isMoved) {
              image.width = gesture.$imageEl[0].offsetWidth
              image.height = gesture.$imageEl[0].offsetHeight
              image.startX =
                (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.getTranslate)(
                  gesture.$imageWrapEl[0],
                  'x'
                ) || 0
              image.startY =
                (0, _shared_utils_js__WEBPACK_IMPORTED_MODULE_2__.getTranslate)(
                  gesture.$imageWrapEl[0],
                  'y'
                ) || 0
              gesture.slideWidth = gesture.$slideEl[0].offsetWidth
              gesture.slideHeight = gesture.$slideEl[0].offsetHeight
              gesture.$imageWrapEl.transition(0)
            } // Define if we need image drag

            const scaledWidth = image.width * zoom.scale
            const scaledHeight = image.height * zoom.scale
            if (
              scaledWidth < gesture.slideWidth &&
              scaledHeight < gesture.slideHeight
            )
              return
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0)
            image.maxX = -image.minX
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0)
            image.maxY = -image.minY
            image.touchesCurrent.x =
              e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX
            image.touchesCurrent.y =
              e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY

            if (!image.isMoved && !isScaling) {
              if (
                swiper.isHorizontal() &&
                ((Math.floor(image.minX) === Math.floor(image.startX) &&
                  image.touchesCurrent.x < image.touchesStart.x) ||
                  (Math.floor(image.maxX) === Math.floor(image.startX) &&
                    image.touchesCurrent.x > image.touchesStart.x))
              ) {
                image.isTouched = false
                return
              }

              if (
                !swiper.isHorizontal() &&
                ((Math.floor(image.minY) === Math.floor(image.startY) &&
                  image.touchesCurrent.y < image.touchesStart.y) ||
                  (Math.floor(image.maxY) === Math.floor(image.startY) &&
                    image.touchesCurrent.y > image.touchesStart.y))
              ) {
                image.isTouched = false
                return
              }
            }

            if (e.cancelable) {
              e.preventDefault()
            }

            e.stopPropagation()
            image.isMoved = true
            image.currentX =
              image.touchesCurrent.x - image.touchesStart.x + image.startX
            image.currentY =
              image.touchesCurrent.y - image.touchesStart.y + image.startY

            if (image.currentX < image.minX) {
              image.currentX =
                image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8
            }

            if (image.currentX > image.maxX) {
              image.currentX =
                image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8
            }

            if (image.currentY < image.minY) {
              image.currentY =
                image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8
            }

            if (image.currentY > image.maxY) {
              image.currentY =
                image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8
            } // Velocity

            if (!velocity.prevPositionX)
              velocity.prevPositionX = image.touchesCurrent.x
            if (!velocity.prevPositionY)
              velocity.prevPositionY = image.touchesCurrent.y
            if (!velocity.prevTime) velocity.prevTime = Date.now()
            velocity.x =
              (image.touchesCurrent.x - velocity.prevPositionX) /
              (Date.now() - velocity.prevTime) /
              2
            velocity.y =
              (image.touchesCurrent.y - velocity.prevPositionY) /
              (Date.now() - velocity.prevTime) /
              2
            if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)
              velocity.x = 0
            if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)
              velocity.y = 0
            velocity.prevPositionX = image.touchesCurrent.x
            velocity.prevPositionY = image.touchesCurrent.y
            velocity.prevTime = Date.now()
            gesture.$imageWrapEl.transform(
              `translate3d(${image.currentX}px, ${image.currentY}px,0)`
            )
          }

          function onTouchEnd() {
            const zoom = swiper.zoom
            if (!gesture.$imageEl || gesture.$imageEl.length === 0) return

            if (!image.isTouched || !image.isMoved) {
              image.isTouched = false
              image.isMoved = false
              return
            }

            image.isTouched = false
            image.isMoved = false
            let momentumDurationX = 300
            let momentumDurationY = 300
            const momentumDistanceX = velocity.x * momentumDurationX
            const newPositionX = image.currentX + momentumDistanceX
            const momentumDistanceY = velocity.y * momentumDurationY
            const newPositionY = image.currentY + momentumDistanceY // Fix duration

            if (velocity.x !== 0)
              momentumDurationX = Math.abs(
                (newPositionX - image.currentX) / velocity.x
              )
            if (velocity.y !== 0)
              momentumDurationY = Math.abs(
                (newPositionY - image.currentY) / velocity.y
              )
            const momentumDuration = Math.max(
              momentumDurationX,
              momentumDurationY
            )
            image.currentX = newPositionX
            image.currentY = newPositionY // Define if we need image drag

            const scaledWidth = image.width * zoom.scale
            const scaledHeight = image.height * zoom.scale
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0)
            image.maxX = -image.minX
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0)
            image.maxY = -image.minY
            image.currentX = Math.max(
              Math.min(image.currentX, image.maxX),
              image.minX
            )
            image.currentY = Math.max(
              Math.min(image.currentY, image.maxY),
              image.minY
            )
            gesture.$imageWrapEl
              .transition(momentumDuration)
              .transform(
                `translate3d(${image.currentX}px, ${image.currentY}px,0)`
              )
          }

          function onTransitionEnd() {
            const zoom = swiper.zoom

            if (
              gesture.$slideEl &&
              swiper.previousIndex !== swiper.activeIndex
            ) {
              if (gesture.$imageEl) {
                gesture.$imageEl.transform('translate3d(0,0,0) scale(1)')
              }

              if (gesture.$imageWrapEl) {
                gesture.$imageWrapEl.transform('translate3d(0,0,0)')
              }

              zoom.scale = 1
              currentScale = 1
              gesture.$slideEl = undefined
              gesture.$imageEl = undefined
              gesture.$imageWrapEl = undefined
            }
          }

          function zoomIn(e) {
            const zoom = swiper.zoom
            const params = swiper.params.zoom

            if (!gesture.$slideEl) {
              if (e && e.target) {
                gesture.$slideEl = (0,
                _shared_dom_js__WEBPACK_IMPORTED_MODULE_1__['default'])(
                  e.target
                ).closest(`.${swiper.params.slideClass}`)
              }

              if (!gesture.$slideEl) {
                if (
                  swiper.params.virtual &&
                  swiper.params.virtual.enabled &&
                  swiper.virtual
                ) {
                  gesture.$slideEl = swiper.$wrapperEl.children(
                    `.${swiper.params.slideActiveClass}`
                  )
                } else {
                  gesture.$slideEl = swiper.slides.eq(swiper.activeIndex)
                }
              }

              gesture.$imageEl = gesture.$slideEl
                .find(`.${params.containerClass}`)
                .eq(0)
                .find('img, svg, canvas, picture, .swiper-zoom-target')
              gesture.$imageWrapEl = gesture.$imageEl.parent(
                `.${params.containerClass}`
              )
            }

            if (
              !gesture.$imageEl ||
              gesture.$imageEl.length === 0 ||
              !gesture.$imageWrapEl ||
              gesture.$imageWrapEl.length === 0
            )
              return

            if (swiper.params.cssMode) {
              swiper.wrapperEl.style.overflow = 'hidden'
              swiper.wrapperEl.style.touchAction = 'none'
            }

            gesture.$slideEl.addClass(`${params.zoomedSlideClass}`)
            let touchX
            let touchY
            let offsetX
            let offsetY
            let diffX
            let diffY
            let translateX
            let translateY
            let imageWidth
            let imageHeight
            let scaledWidth
            let scaledHeight
            let translateMinX
            let translateMinY
            let translateMaxX
            let translateMaxY
            let slideWidth
            let slideHeight

            if (typeof image.touchesStart.x === 'undefined' && e) {
              touchX =
                e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX
              touchY =
                e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY
            } else {
              touchX = image.touchesStart.x
              touchY = image.touchesStart.y
            }

            zoom.scale =
              gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio
            currentScale =
              gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio

            if (e) {
              slideWidth = gesture.$slideEl[0].offsetWidth
              slideHeight = gesture.$slideEl[0].offsetHeight
              offsetX = gesture.$slideEl.offset().left + window.scrollX
              offsetY = gesture.$slideEl.offset().top + window.scrollY
              diffX = offsetX + slideWidth / 2 - touchX
              diffY = offsetY + slideHeight / 2 - touchY
              imageWidth = gesture.$imageEl[0].offsetWidth
              imageHeight = gesture.$imageEl[0].offsetHeight
              scaledWidth = imageWidth * zoom.scale
              scaledHeight = imageHeight * zoom.scale
              translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0)
              translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0)
              translateMaxX = -translateMinX
              translateMaxY = -translateMinY
              translateX = diffX * zoom.scale
              translateY = diffY * zoom.scale

              if (translateX < translateMinX) {
                translateX = translateMinX
              }

              if (translateX > translateMaxX) {
                translateX = translateMaxX
              }

              if (translateY < translateMinY) {
                translateY = translateMinY
              }

              if (translateY > translateMaxY) {
                translateY = translateMaxY
              }
            } else {
              translateX = 0
              translateY = 0
            }

            gesture.$imageWrapEl
              .transition(300)
              .transform(`translate3d(${translateX}px, ${translateY}px,0)`)
            gesture.$imageEl
              .transition(300)
              .transform(`translate3d(0,0,0) scale(${zoom.scale})`)
          }

          function zoomOut() {
            const zoom = swiper.zoom
            const params = swiper.params.zoom

            if (!gesture.$slideEl) {
              if (
                swiper.params.virtual &&
                swiper.params.virtual.enabled &&
                swiper.virtual
              ) {
                gesture.$slideEl = swiper.$wrapperEl.children(
                  `.${swiper.params.slideActiveClass}`
                )
              } else {
                gesture.$slideEl = swiper.slides.eq(swiper.activeIndex)
              }

              gesture.$imageEl = gesture.$slideEl
                .find(`.${params.containerClass}`)
                .eq(0)
                .find('img, svg, canvas, picture, .swiper-zoom-target')
              gesture.$imageWrapEl = gesture.$imageEl.parent(
                `.${params.containerClass}`
              )
            }

            if (
              !gesture.$imageEl ||
              gesture.$imageEl.length === 0 ||
              !gesture.$imageWrapEl ||
              gesture.$imageWrapEl.length === 0
            )
              return

            if (swiper.params.cssMode) {
              swiper.wrapperEl.style.overflow = ''
              swiper.wrapperEl.style.touchAction = ''
            }

            zoom.scale = 1
            currentScale = 1
            gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)')
            gesture.$imageEl
              .transition(300)
              .transform('translate3d(0,0,0) scale(1)')
            gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`)
            gesture.$slideEl = undefined
          } // Toggle Zoom

          function zoomToggle(e) {
            const zoom = swiper.zoom

            if (zoom.scale && zoom.scale !== 1) {
              // Zoom Out
              zoomOut()
            } else {
              // Zoom In
              zoomIn(e)
            }
          }

          function getListeners() {
            const support = swiper.support
            const passiveListener =
              swiper.touchEvents.start === 'touchstart' &&
              support.passiveListener &&
              swiper.params.passiveListeners
                ? {
                    passive: true,
                    capture: false,
                  }
                : false
            const activeListenerWithCapture = support.passiveListener
              ? {
                  passive: false,
                  capture: true,
                }
              : true
            return {
              passiveListener,
              activeListenerWithCapture,
            }
          }

          function getSlideSelector() {
            return `.${swiper.params.slideClass}`
          }

          function toggleGestures(method) {
            const { passiveListener } = getListeners()
            const slideSelector = getSlideSelector()
            swiper.$wrapperEl[method](
              'gesturestart',
              slideSelector,
              onGestureStart,
              passiveListener
            )
            swiper.$wrapperEl[method](
              'gesturechange',
              slideSelector,
              onGestureChange,
              passiveListener
            )
            swiper.$wrapperEl[method](
              'gestureend',
              slideSelector,
              onGestureEnd,
              passiveListener
            )
          }

          function enableGestures() {
            if (gesturesEnabled) return
            gesturesEnabled = true
            toggleGestures('on')
          }

          function disableGestures() {
            if (!gesturesEnabled) return
            gesturesEnabled = false
            toggleGestures('off')
          } // Attach/Detach Events

          function enable() {
            const zoom = swiper.zoom
            if (zoom.enabled) return
            zoom.enabled = true
            const support = swiper.support
            const { passiveListener, activeListenerWithCapture } =
              getListeners()
            const slideSelector = getSlideSelector() // Scale image

            if (support.gestures) {
              swiper.$wrapperEl.on(
                swiper.touchEvents.start,
                enableGestures,
                passiveListener
              )
              swiper.$wrapperEl.on(
                swiper.touchEvents.end,
                disableGestures,
                passiveListener
              )
            } else if (swiper.touchEvents.start === 'touchstart') {
              swiper.$wrapperEl.on(
                swiper.touchEvents.start,
                slideSelector,
                onGestureStart,
                passiveListener
              )
              swiper.$wrapperEl.on(
                swiper.touchEvents.move,
                slideSelector,
                onGestureChange,
                activeListenerWithCapture
              )
              swiper.$wrapperEl.on(
                swiper.touchEvents.end,
                slideSelector,
                onGestureEnd,
                passiveListener
              )

              if (swiper.touchEvents.cancel) {
                swiper.$wrapperEl.on(
                  swiper.touchEvents.cancel,
                  slideSelector,
                  onGestureEnd,
                  passiveListener
                )
              }
            } // Move image

            swiper.$wrapperEl.on(
              swiper.touchEvents.move,
              `.${swiper.params.zoom.containerClass}`,
              onTouchMove,
              activeListenerWithCapture
            )
          }

          function disable() {
            const zoom = swiper.zoom
            if (!zoom.enabled) return
            const support = swiper.support
            zoom.enabled = false
            const { passiveListener, activeListenerWithCapture } =
              getListeners()
            const slideSelector = getSlideSelector() // Scale image

            if (support.gestures) {
              swiper.$wrapperEl.off(
                swiper.touchEvents.start,
                enableGestures,
                passiveListener
              )
              swiper.$wrapperEl.off(
                swiper.touchEvents.end,
                disableGestures,
                passiveListener
              )
            } else if (swiper.touchEvents.start === 'touchstart') {
              swiper.$wrapperEl.off(
                swiper.touchEvents.start,
                slideSelector,
                onGestureStart,
                passiveListener
              )
              swiper.$wrapperEl.off(
                swiper.touchEvents.move,
                slideSelector,
                onGestureChange,
                activeListenerWithCapture
              )
              swiper.$wrapperEl.off(
                swiper.touchEvents.end,
                slideSelector,
                onGestureEnd,
                passiveListener
              )

              if (swiper.touchEvents.cancel) {
                swiper.$wrapperEl.off(
                  swiper.touchEvents.cancel,
                  slideSelector,
                  onGestureEnd,
                  passiveListener
                )
              }
            } // Move image

            swiper.$wrapperEl.off(
              swiper.touchEvents.move,
              `.${swiper.params.zoom.containerClass}`,
              onTouchMove,
              activeListenerWithCapture
            )
          }

          on('init', () => {
            if (swiper.params.zoom.enabled) {
              enable()
            }
          })
          on('destroy', () => {
            disable()
          })
          on('touchStart', (_s, e) => {
            if (!swiper.zoom.enabled) return
            onTouchStart(e)
          })
          on('touchEnd', (_s, e) => {
            if (!swiper.zoom.enabled) return
            onTouchEnd(e)
          })
          on('doubleTap', (_s, e) => {
            if (
              !swiper.animating &&
              swiper.params.zoom.enabled &&
              swiper.zoom.enabled &&
              swiper.params.zoom.toggle
            ) {
              zoomToggle(e)
            }
          })
          on('transitionEnd', () => {
            if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
              onTransitionEnd()
            }
          })
          on('slideChange', () => {
            if (
              swiper.zoom.enabled &&
              swiper.params.zoom.enabled &&
              swiper.params.cssMode
            ) {
              onTransitionEnd()
            }
          })
          Object.assign(swiper.zoom, {
            enable,
            disable,
            in: zoomIn,
            out: zoomOut,
            toggle: zoomToggle,
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/classes-to-selector.js':
      /*!***********************************************************!*\
  !*** ./node_modules/swiper/shared/classes-to-selector.js ***!
  \***********************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ classesToSelector,
          /* harmony export */
        })
        function classesToSelector(classes = '') {
          return `.${classes
            .trim()
            .replace(/([\.:!\/])/g, '\\$1') // eslint-disable-line
            .replace(/ /g, '.')}`
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/create-element-if-not-defined.js':
      /*!*********************************************************************!*\
  !*** ./node_modules/swiper/shared/create-element-if-not-defined.js ***!
  \*********************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () =>
            /* binding */ createElementIfNotDefined,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function createElementIfNotDefined(
          swiper,
          originalParams,
          params,
          checkProps
        ) {
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()

          if (swiper.params.createElements) {
            Object.keys(checkProps).forEach((key) => {
              if (!params[key] && params.auto === true) {
                let element = swiper.$el.children(`.${checkProps[key]}`)[0]

                if (!element) {
                  element = document.createElement('div')
                  element.className = checkProps[key]
                  swiper.$el.append(element)
                }

                params[key] = element
                originalParams[key] = element
              }
            })
          }

          return params
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/create-shadow.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/shared/create-shadow.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ createShadow,
          /* harmony export */
        })
        /* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./dom.js */ './node_modules/swiper/shared/dom.js'
          )

        function createShadow(params, $slideEl, side) {
          const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`
          const $shadowContainer = params.transformEl
            ? $slideEl.find(params.transformEl)
            : $slideEl
          let $shadowEl = $shadowContainer.children(`.${shadowClass}`)

          if (!$shadowEl.length) {
            $shadowEl = (0, _dom_js__WEBPACK_IMPORTED_MODULE_0__['default'])(
              `<div class="swiper-slide-shadow${side ? `-${side}` : ''}"></div>`
            )
            $shadowContainer.append($shadowEl)
          }

          return $shadowEl
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/dom.js':
      /*!*******************************************!*\
  !*** ./node_modules/swiper/shared/dom.js ***!
  \*******************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => __WEBPACK_DEFAULT_EXPORT__,
          /* harmony export */
        })
        /* harmony import */ var dom7__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(/*! dom7 */ './node_modules/dom7/dom7.esm.js')

        const Methods = {
          addClass: dom7__WEBPACK_IMPORTED_MODULE_0__.addClass,
          removeClass: dom7__WEBPACK_IMPORTED_MODULE_0__.removeClass,
          hasClass: dom7__WEBPACK_IMPORTED_MODULE_0__.hasClass,
          toggleClass: dom7__WEBPACK_IMPORTED_MODULE_0__.toggleClass,
          attr: dom7__WEBPACK_IMPORTED_MODULE_0__.attr,
          removeAttr: dom7__WEBPACK_IMPORTED_MODULE_0__.removeAttr,
          transform: dom7__WEBPACK_IMPORTED_MODULE_0__.transform,
          transition: dom7__WEBPACK_IMPORTED_MODULE_0__.transition,
          on: dom7__WEBPACK_IMPORTED_MODULE_0__.on,
          off: dom7__WEBPACK_IMPORTED_MODULE_0__.off,
          trigger: dom7__WEBPACK_IMPORTED_MODULE_0__.trigger,
          transitionEnd: dom7__WEBPACK_IMPORTED_MODULE_0__.transitionEnd,
          outerWidth: dom7__WEBPACK_IMPORTED_MODULE_0__.outerWidth,
          outerHeight: dom7__WEBPACK_IMPORTED_MODULE_0__.outerHeight,
          styles: dom7__WEBPACK_IMPORTED_MODULE_0__.styles,
          offset: dom7__WEBPACK_IMPORTED_MODULE_0__.offset,
          css: dom7__WEBPACK_IMPORTED_MODULE_0__.css,
          each: dom7__WEBPACK_IMPORTED_MODULE_0__.each,
          html: dom7__WEBPACK_IMPORTED_MODULE_0__.html,
          text: dom7__WEBPACK_IMPORTED_MODULE_0__.text,
          is: dom7__WEBPACK_IMPORTED_MODULE_0__.is,
          index: dom7__WEBPACK_IMPORTED_MODULE_0__.index,
          eq: dom7__WEBPACK_IMPORTED_MODULE_0__.eq,
          append: dom7__WEBPACK_IMPORTED_MODULE_0__.append,
          prepend: dom7__WEBPACK_IMPORTED_MODULE_0__.prepend,
          next: dom7__WEBPACK_IMPORTED_MODULE_0__.next,
          nextAll: dom7__WEBPACK_IMPORTED_MODULE_0__.nextAll,
          prev: dom7__WEBPACK_IMPORTED_MODULE_0__.prev,
          prevAll: dom7__WEBPACK_IMPORTED_MODULE_0__.prevAll,
          parent: dom7__WEBPACK_IMPORTED_MODULE_0__.parent,
          parents: dom7__WEBPACK_IMPORTED_MODULE_0__.parents,
          closest: dom7__WEBPACK_IMPORTED_MODULE_0__.closest,
          find: dom7__WEBPACK_IMPORTED_MODULE_0__.find,
          children: dom7__WEBPACK_IMPORTED_MODULE_0__.children,
          filter: dom7__WEBPACK_IMPORTED_MODULE_0__.filter,
          remove: dom7__WEBPACK_IMPORTED_MODULE_0__.remove,
        }
        Object.keys(Methods).forEach((methodName) => {
          Object.defineProperty(
            dom7__WEBPACK_IMPORTED_MODULE_0__.$.fn,
            methodName,
            {
              value: Methods[methodName],
              writable: true,
            }
          )
        })
        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ =
          dom7__WEBPACK_IMPORTED_MODULE_0__.$

        /***/
      },

    /***/ './node_modules/swiper/shared/effect-init.js':
      /*!***************************************************!*\
  !*** ./node_modules/swiper/shared/effect-init.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ effectInit,
          /* harmony export */
        })
        function effectInit(params) {
          const {
            effect,
            swiper,
            on,
            setTranslate,
            setTransition,
            overwriteParams,
            perspective,
          } = params
          on('beforeInit', () => {
            if (swiper.params.effect !== effect) return
            swiper.classNames.push(
              `${swiper.params.containerModifierClass}${effect}`
            )

            if (perspective && perspective()) {
              swiper.classNames.push(
                `${swiper.params.containerModifierClass}3d`
              )
            }

            const overwriteParamsResult = overwriteParams
              ? overwriteParams()
              : {}
            Object.assign(swiper.params, overwriteParamsResult)
            Object.assign(swiper.originalParams, overwriteParamsResult)
          })
          on('setTranslate', () => {
            if (swiper.params.effect !== effect) return
            setTranslate()
          })
          on('setTransition', (_s, duration) => {
            if (swiper.params.effect !== effect) return
            setTransition(duration)
          })
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/effect-target.js':
      /*!*****************************************************!*\
  !*** ./node_modules/swiper/shared/effect-target.js ***!
  \*****************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () => /* binding */ effectTarget,
          /* harmony export */
        })
        function effectTarget(effectParams, $slideEl) {
          if (effectParams.transformEl) {
            return $slideEl.find(effectParams.transformEl).css({
              'backface-visibility': 'hidden',
              '-webkit-backface-visibility': 'hidden',
            })
          }

          return $slideEl
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/effect-virtual-transition-end.js':
      /*!*********************************************************************!*\
  !*** ./node_modules/swiper/shared/effect-virtual-transition-end.js ***!
  \*********************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ default: () =>
            /* binding */ effectVirtualTransitionEnd,
          /* harmony export */
        })
        function effectVirtualTransitionEnd({
          swiper,
          duration,
          transformEl,
          allSlides,
        }) {
          const { slides, activeIndex, $wrapperEl } = swiper

          if (swiper.params.virtualTranslate && duration !== 0) {
            let eventTriggered = false
            let $transitionEndTarget

            if (allSlides) {
              $transitionEndTarget = transformEl
                ? slides.find(transformEl)
                : slides
            } else {
              $transitionEndTarget = transformEl
                ? slides.eq(activeIndex).find(transformEl)
                : slides.eq(activeIndex)
            }

            $transitionEndTarget.transitionEnd(() => {
              if (eventTriggered) return
              if (!swiper || swiper.destroyed) return
              eventTriggered = true
              swiper.animating = false
              const triggerEvents = ['webkitTransitionEnd', 'transitionend']

              for (let i = 0; i < triggerEvents.length; i += 1) {
                $wrapperEl.trigger(triggerEvents[i])
              }
            })
          }
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/get-browser.js':
      /*!***************************************************!*\
  !*** ./node_modules/swiper/shared/get-browser.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ getBrowser: () => /* binding */ getBrowser,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        let browser

        function calcBrowser() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()

          function isSafari() {
            const ua = window.navigator.userAgent.toLowerCase()
            return (
              ua.indexOf('safari') >= 0 &&
              ua.indexOf('chrome') < 0 &&
              ua.indexOf('android') < 0
            )
          }

          return {
            isSafari: isSafari(),
            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
              window.navigator.userAgent
            ),
          }
        }

        function getBrowser() {
          if (!browser) {
            browser = calcBrowser()
          }

          return browser
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/get-device.js':
      /*!**************************************************!*\
  !*** ./node_modules/swiper/shared/get-device.js ***!
  \**************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ getDevice: () => /* binding */ getDevice,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )
        /* harmony import */ var _get_support_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./get-support.js */ './node_modules/swiper/shared/get-support.js'
          )

        let deviceCached

        function calcDevice({ userAgent } = {}) {
          const support = (0,
          _get_support_js__WEBPACK_IMPORTED_MODULE_1__.getSupport)()
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const platform = window.navigator.platform
          const ua = userAgent || window.navigator.userAgent
          const device = {
            ios: false,
            android: false,
          }
          const screenWidth = window.screen.width
          const screenHeight = window.screen.height
          const android = ua.match(/(Android);?[\s\/]+([\d.]+)?/) // eslint-disable-line

          let ipad = ua.match(/(iPad).*OS\s([\d_]+)/)
          const ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/)
          const iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/)
          const windows = platform === 'Win32'
          let macos = platform === 'MacIntel' // iPadOs 13 fix

          const iPadScreens = [
            '1024x1366',
            '1366x1024',
            '834x1194',
            '1194x834',
            '834x1112',
            '1112x834',
            '768x1024',
            '1024x768',
            '820x1180',
            '1180x820',
            '810x1080',
            '1080x810',
          ]

          if (
            !ipad &&
            macos &&
            support.touch &&
            iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0
          ) {
            ipad = ua.match(/(Version)\/([\d.]+)/)
            if (!ipad) ipad = [0, 1, '13_0_0']
            macos = false
          } // Android

          if (android && !windows) {
            device.os = 'android'
            device.android = true
          }

          if (ipad || iphone || ipod) {
            device.os = 'ios'
            device.ios = true
          } // Export object

          return device
        }

        function getDevice(overrides = {}) {
          if (!deviceCached) {
            deviceCached = calcDevice(overrides)
          }

          return deviceCached
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/get-support.js':
      /*!***************************************************!*\
  !*** ./node_modules/swiper/shared/get-support.js ***!
  \***************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ getSupport: () => /* binding */ getSupport,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        let support

        function calcSupport() {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const document = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)()
          return {
            smoothScroll:
              document.documentElement &&
              'scrollBehavior' in document.documentElement.style,
            touch: !!(
              'ontouchstart' in window ||
              (window.DocumentTouch && document instanceof window.DocumentTouch)
            ),
            passiveListener: (function checkPassiveListener() {
              let supportsPassive = false

              try {
                const opts = Object.defineProperty({}, 'passive', {
                  // eslint-disable-next-line
                  get() {
                    supportsPassive = true
                  },
                })
                window.addEventListener('testPassiveListener', null, opts)
              } catch (e) {
                // No support
              }

              return supportsPassive
            })(),
            gestures: (function checkGestures() {
              return 'ongesturestart' in window
            })(),
          }
        }

        function getSupport() {
          if (!support) {
            support = calcSupport()
          }

          return support
        }

        /***/
      },

    /***/ './node_modules/swiper/shared/utils.js':
      /*!*********************************************!*\
  !*** ./node_modules/swiper/shared/utils.js ***!
  \*********************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ animateCSSModeScroll: () =>
            /* binding */ animateCSSModeScroll,
          /* harmony export */ deleteProps: () => /* binding */ deleteProps,
          /* harmony export */ nextTick: () => /* binding */ nextTick,
          /* harmony export */ now: () => /* binding */ now,
          /* harmony export */ getTranslate: () => /* binding */ getTranslate,
          /* harmony export */ isObject: () => /* binding */ isObject,
          /* harmony export */ extend: () => /* binding */ extend,
          /* harmony export */ getComputedStyle: () =>
            /* binding */ getComputedStyle,
          /* harmony export */ setCSSProperty: () =>
            /* binding */ setCSSProperty,
          /* harmony export */
        })
        /* harmony import */ var ssr_window__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ssr-window */ './node_modules/ssr-window/ssr-window.esm.js'
          )

        function deleteProps(obj) {
          const object = obj
          Object.keys(object).forEach((key) => {
            try {
              object[key] = null
            } catch (e) {
              // no getter for object
            }

            try {
              delete object[key]
            } catch (e) {
              // something got wrong
            }
          })
        }

        function nextTick(callback, delay = 0) {
          return setTimeout(callback, delay)
        }

        function now() {
          return Date.now()
        }

        function getComputedStyle(el) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let style

          if (window.getComputedStyle) {
            style = window.getComputedStyle(el, null)
          }

          if (!style && el.currentStyle) {
            style = el.currentStyle
          }

          if (!style) {
            style = el.style
          }

          return style
        }

        function getTranslate(el, axis = 'x') {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          let matrix
          let curTransform
          let transformMatrix
          const curStyle = getComputedStyle(el, null)

          if (window.WebKitCSSMatrix) {
            curTransform = curStyle.transform || curStyle.webkitTransform

            if (curTransform.split(',').length > 6) {
              curTransform = curTransform
                .split(', ')
                .map((a) => a.replace(',', '.'))
                .join(', ')
            } // Some old versions of Webkit choke when 'none' is passed; pass
            // empty string instead in this case

            transformMatrix = new window.WebKitCSSMatrix(
              curTransform === 'none' ? '' : curTransform
            )
          } else {
            transformMatrix =
              curStyle.MozTransform ||
              curStyle.OTransform ||
              curStyle.MsTransform ||
              curStyle.msTransform ||
              curStyle.transform ||
              curStyle
                .getPropertyValue('transform')
                .replace('translate(', 'matrix(1, 0, 0, 1,')
            matrix = transformMatrix.toString().split(',')
          }

          if (axis === 'x') {
            // Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
              curTransform = transformMatrix.m41 // Crazy IE10 Matrix
            else if (matrix.length === 16)
              curTransform = parseFloat(matrix[12]) // Normal Browsers
            else curTransform = parseFloat(matrix[4])
          }

          if (axis === 'y') {
            // Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
              curTransform = transformMatrix.m42 // Crazy IE10 Matrix
            else if (matrix.length === 16)
              curTransform = parseFloat(matrix[13]) // Normal Browsers
            else curTransform = parseFloat(matrix[5])
          }

          return curTransform || 0
        }

        function isObject(o) {
          return (
            typeof o === 'object' &&
            o !== null &&
            o.constructor &&
            Object.prototype.toString.call(o).slice(8, -1) === 'Object'
          )
        }

        function isNode(node) {
          // eslint-disable-next-line
          if (
            typeof window !== 'undefined' &&
            typeof window.HTMLElement !== 'undefined'
          ) {
            return node instanceof HTMLElement
          }

          return node && (node.nodeType === 1 || node.nodeType === 11)
        }

        function extend(...args) {
          const to = Object(args[0])
          const noExtend = ['__proto__', 'constructor', 'prototype']

          for (let i = 1; i < args.length; i += 1) {
            const nextSource = args[i]

            if (
              nextSource !== undefined &&
              nextSource !== null &&
              !isNode(nextSource)
            ) {
              const keysArray = Object.keys(Object(nextSource)).filter(
                (key) => noExtend.indexOf(key) < 0
              )

              for (
                let nextIndex = 0, len = keysArray.length;
                nextIndex < len;
                nextIndex += 1
              ) {
                const nextKey = keysArray[nextIndex]
                const desc = Object.getOwnPropertyDescriptor(
                  nextSource,
                  nextKey
                )

                if (desc !== undefined && desc.enumerable) {
                  if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                    if (nextSource[nextKey].__swiper__) {
                      to[nextKey] = nextSource[nextKey]
                    } else {
                      extend(to[nextKey], nextSource[nextKey])
                    }
                  } else if (
                    !isObject(to[nextKey]) &&
                    isObject(nextSource[nextKey])
                  ) {
                    to[nextKey] = {}

                    if (nextSource[nextKey].__swiper__) {
                      to[nextKey] = nextSource[nextKey]
                    } else {
                      extend(to[nextKey], nextSource[nextKey])
                    }
                  } else {
                    to[nextKey] = nextSource[nextKey]
                  }
                }
              }
            }
          }

          return to
        }

        function setCSSProperty(el, varName, varValue) {
          el.style.setProperty(varName, varValue)
        }

        function animateCSSModeScroll({ swiper, targetPosition, side }) {
          const window = (0,
          ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)()
          const startPosition = -swiper.translate
          let startTime = null
          let time
          const duration = swiper.params.speed
          swiper.wrapperEl.style.scrollSnapType = 'none'
          window.cancelAnimationFrame(swiper.cssModeFrameID)
          const dir = targetPosition > startPosition ? 'next' : 'prev'

          const isOutOfBound = (current, target) => {
            return (
              (dir === 'next' && current >= target) ||
              (dir === 'prev' && current <= target)
            )
          }

          const animate = () => {
            time = new Date().getTime()

            if (startTime === null) {
              startTime = time
            }

            const progress = Math.max(
              Math.min((time - startTime) / duration, 1),
              0
            )
            const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2
            let currentPosition =
              startPosition + easeProgress * (targetPosition - startPosition)

            if (isOutOfBound(currentPosition, targetPosition)) {
              currentPosition = targetPosition
            }

            swiper.wrapperEl.scrollTo({
              [side]: currentPosition,
            })

            if (isOutOfBound(currentPosition, targetPosition)) {
              swiper.wrapperEl.style.overflow = 'hidden'
              swiper.wrapperEl.style.scrollSnapType = ''
              setTimeout(() => {
                swiper.wrapperEl.style.overflow = ''
                swiper.wrapperEl.scrollTo({
                  [side]: currentPosition,
                })
              })
              window.cancelAnimationFrame(swiper.cssModeFrameID)
              return
            }

            swiper.cssModeFrameID = window.requestAnimationFrame(animate)
          }

          animate()
        }

        /***/
      },

    /***/ './node_modules/swiper/swiper.esm.js':
      /*!*******************************************!*\
  !*** ./node_modules/swiper/swiper.esm.js ***!
  \*******************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__
      ) => {
        'use strict'
        __webpack_require__.r(__webpack_exports__)
        /* harmony export */ __webpack_require__.d(__webpack_exports__, {
          /* harmony export */ Swiper: () =>
            /* reexport safe */ _core_core_js__WEBPACK_IMPORTED_MODULE_0__[
              'default'
            ],
          /* harmony export */ default: () =>
            /* reexport safe */ _core_core_js__WEBPACK_IMPORTED_MODULE_0__[
              'default'
            ],
          /* harmony export */ Virtual: () =>
            /* reexport safe */ _modules_virtual_virtual_js__WEBPACK_IMPORTED_MODULE_1__[
              'default'
            ],
          /* harmony export */ Keyboard: () =>
            /* reexport safe */ _modules_keyboard_keyboard_js__WEBPACK_IMPORTED_MODULE_2__[
              'default'
            ],
          /* harmony export */ Mousewheel: () =>
            /* reexport safe */ _modules_mousewheel_mousewheel_js__WEBPACK_IMPORTED_MODULE_3__[
              'default'
            ],
          /* harmony export */ Navigation: () =>
            /* reexport safe */ _modules_navigation_navigation_js__WEBPACK_IMPORTED_MODULE_4__[
              'default'
            ],
          /* harmony export */ Pagination: () =>
            /* reexport safe */ _modules_pagination_pagination_js__WEBPACK_IMPORTED_MODULE_5__[
              'default'
            ],
          /* harmony export */ Scrollbar: () =>
            /* reexport safe */ _modules_scrollbar_scrollbar_js__WEBPACK_IMPORTED_MODULE_6__[
              'default'
            ],
          /* harmony export */ Parallax: () =>
            /* reexport safe */ _modules_parallax_parallax_js__WEBPACK_IMPORTED_MODULE_7__[
              'default'
            ],
          /* harmony export */ Zoom: () =>
            /* reexport safe */ _modules_zoom_zoom_js__WEBPACK_IMPORTED_MODULE_8__[
              'default'
            ],
          /* harmony export */ Lazy: () =>
            /* reexport safe */ _modules_lazy_lazy_js__WEBPACK_IMPORTED_MODULE_9__[
              'default'
            ],
          /* harmony export */ Controller: () =>
            /* reexport safe */ _modules_controller_controller_js__WEBPACK_IMPORTED_MODULE_10__[
              'default'
            ],
          /* harmony export */ A11y: () =>
            /* reexport safe */ _modules_a11y_a11y_js__WEBPACK_IMPORTED_MODULE_11__[
              'default'
            ],
          /* harmony export */ History: () =>
            /* reexport safe */ _modules_history_history_js__WEBPACK_IMPORTED_MODULE_12__[
              'default'
            ],
          /* harmony export */ HashNavigation: () =>
            /* reexport safe */ _modules_hash_navigation_hash_navigation_js__WEBPACK_IMPORTED_MODULE_13__[
              'default'
            ],
          /* harmony export */ Autoplay: () =>
            /* reexport safe */ _modules_autoplay_autoplay_js__WEBPACK_IMPORTED_MODULE_14__[
              'default'
            ],
          /* harmony export */ Thumbs: () =>
            /* reexport safe */ _modules_thumbs_thumbs_js__WEBPACK_IMPORTED_MODULE_15__[
              'default'
            ],
          /* harmony export */ FreeMode: () =>
            /* reexport safe */ _modules_free_mode_free_mode_js__WEBPACK_IMPORTED_MODULE_16__[
              'default'
            ],
          /* harmony export */ Grid: () =>
            /* reexport safe */ _modules_grid_grid_js__WEBPACK_IMPORTED_MODULE_17__[
              'default'
            ],
          /* harmony export */ Manipulation: () =>
            /* reexport safe */ _modules_manipulation_manipulation_js__WEBPACK_IMPORTED_MODULE_18__[
              'default'
            ],
          /* harmony export */ EffectFade: () =>
            /* reexport safe */ _modules_effect_fade_effect_fade_js__WEBPACK_IMPORTED_MODULE_19__[
              'default'
            ],
          /* harmony export */ EffectCube: () =>
            /* reexport safe */ _modules_effect_cube_effect_cube_js__WEBPACK_IMPORTED_MODULE_20__[
              'default'
            ],
          /* harmony export */ EffectFlip: () =>
            /* reexport safe */ _modules_effect_flip_effect_flip_js__WEBPACK_IMPORTED_MODULE_21__[
              'default'
            ],
          /* harmony export */ EffectCoverflow: () =>
            /* reexport safe */ _modules_effect_coverflow_effect_coverflow_js__WEBPACK_IMPORTED_MODULE_22__[
              'default'
            ],
          /* harmony export */ EffectCreative: () =>
            /* reexport safe */ _modules_effect_creative_effect_creative_js__WEBPACK_IMPORTED_MODULE_23__[
              'default'
            ],
          /* harmony export */ EffectCards: () =>
            /* reexport safe */ _modules_effect_cards_effect_cards_js__WEBPACK_IMPORTED_MODULE_24__[
              'default'
            ],
          /* harmony export */
        })
        /* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_0__ =
          __webpack_require__(
            /*! ./core/core.js */ './node_modules/swiper/core/core.js'
          )
        /* harmony import */ var _modules_virtual_virtual_js__WEBPACK_IMPORTED_MODULE_1__ =
          __webpack_require__(
            /*! ./modules/virtual/virtual.js */ './node_modules/swiper/modules/virtual/virtual.js'
          )
        /* harmony import */ var _modules_keyboard_keyboard_js__WEBPACK_IMPORTED_MODULE_2__ =
          __webpack_require__(
            /*! ./modules/keyboard/keyboard.js */ './node_modules/swiper/modules/keyboard/keyboard.js'
          )
        /* harmony import */ var _modules_mousewheel_mousewheel_js__WEBPACK_IMPORTED_MODULE_3__ =
          __webpack_require__(
            /*! ./modules/mousewheel/mousewheel.js */ './node_modules/swiper/modules/mousewheel/mousewheel.js'
          )
        /* harmony import */ var _modules_navigation_navigation_js__WEBPACK_IMPORTED_MODULE_4__ =
          __webpack_require__(
            /*! ./modules/navigation/navigation.js */ './node_modules/swiper/modules/navigation/navigation.js'
          )
        /* harmony import */ var _modules_pagination_pagination_js__WEBPACK_IMPORTED_MODULE_5__ =
          __webpack_require__(
            /*! ./modules/pagination/pagination.js */ './node_modules/swiper/modules/pagination/pagination.js'
          )
        /* harmony import */ var _modules_scrollbar_scrollbar_js__WEBPACK_IMPORTED_MODULE_6__ =
          __webpack_require__(
            /*! ./modules/scrollbar/scrollbar.js */ './node_modules/swiper/modules/scrollbar/scrollbar.js'
          )
        /* harmony import */ var _modules_parallax_parallax_js__WEBPACK_IMPORTED_MODULE_7__ =
          __webpack_require__(
            /*! ./modules/parallax/parallax.js */ './node_modules/swiper/modules/parallax/parallax.js'
          )
        /* harmony import */ var _modules_zoom_zoom_js__WEBPACK_IMPORTED_MODULE_8__ =
          __webpack_require__(
            /*! ./modules/zoom/zoom.js */ './node_modules/swiper/modules/zoom/zoom.js'
          )
        /* harmony import */ var _modules_lazy_lazy_js__WEBPACK_IMPORTED_MODULE_9__ =
          __webpack_require__(
            /*! ./modules/lazy/lazy.js */ './node_modules/swiper/modules/lazy/lazy.js'
          )
        /* harmony import */ var _modules_controller_controller_js__WEBPACK_IMPORTED_MODULE_10__ =
          __webpack_require__(
            /*! ./modules/controller/controller.js */ './node_modules/swiper/modules/controller/controller.js'
          )
        /* harmony import */ var _modules_a11y_a11y_js__WEBPACK_IMPORTED_MODULE_11__ =
          __webpack_require__(
            /*! ./modules/a11y/a11y.js */ './node_modules/swiper/modules/a11y/a11y.js'
          )
        /* harmony import */ var _modules_history_history_js__WEBPACK_IMPORTED_MODULE_12__ =
          __webpack_require__(
            /*! ./modules/history/history.js */ './node_modules/swiper/modules/history/history.js'
          )
        /* harmony import */ var _modules_hash_navigation_hash_navigation_js__WEBPACK_IMPORTED_MODULE_13__ =
          __webpack_require__(
            /*! ./modules/hash-navigation/hash-navigation.js */ './node_modules/swiper/modules/hash-navigation/hash-navigation.js'
          )
        /* harmony import */ var _modules_autoplay_autoplay_js__WEBPACK_IMPORTED_MODULE_14__ =
          __webpack_require__(
            /*! ./modules/autoplay/autoplay.js */ './node_modules/swiper/modules/autoplay/autoplay.js'
          )
        /* harmony import */ var _modules_thumbs_thumbs_js__WEBPACK_IMPORTED_MODULE_15__ =
          __webpack_require__(
            /*! ./modules/thumbs/thumbs.js */ './node_modules/swiper/modules/thumbs/thumbs.js'
          )
        /* harmony import */ var _modules_free_mode_free_mode_js__WEBPACK_IMPORTED_MODULE_16__ =
          __webpack_require__(
            /*! ./modules/free-mode/free-mode.js */ './node_modules/swiper/modules/free-mode/free-mode.js'
          )
        /* harmony import */ var _modules_grid_grid_js__WEBPACK_IMPORTED_MODULE_17__ =
          __webpack_require__(
            /*! ./modules/grid/grid.js */ './node_modules/swiper/modules/grid/grid.js'
          )
        /* harmony import */ var _modules_manipulation_manipulation_js__WEBPACK_IMPORTED_MODULE_18__ =
          __webpack_require__(
            /*! ./modules/manipulation/manipulation.js */ './node_modules/swiper/modules/manipulation/manipulation.js'
          )
        /* harmony import */ var _modules_effect_fade_effect_fade_js__WEBPACK_IMPORTED_MODULE_19__ =
          __webpack_require__(
            /*! ./modules/effect-fade/effect-fade.js */ './node_modules/swiper/modules/effect-fade/effect-fade.js'
          )
        /* harmony import */ var _modules_effect_cube_effect_cube_js__WEBPACK_IMPORTED_MODULE_20__ =
          __webpack_require__(
            /*! ./modules/effect-cube/effect-cube.js */ './node_modules/swiper/modules/effect-cube/effect-cube.js'
          )
        /* harmony import */ var _modules_effect_flip_effect_flip_js__WEBPACK_IMPORTED_MODULE_21__ =
          __webpack_require__(
            /*! ./modules/effect-flip/effect-flip.js */ './node_modules/swiper/modules/effect-flip/effect-flip.js'
          )
        /* harmony import */ var _modules_effect_coverflow_effect_coverflow_js__WEBPACK_IMPORTED_MODULE_22__ =
          __webpack_require__(
            /*! ./modules/effect-coverflow/effect-coverflow.js */ './node_modules/swiper/modules/effect-coverflow/effect-coverflow.js'
          )
        /* harmony import */ var _modules_effect_creative_effect_creative_js__WEBPACK_IMPORTED_MODULE_23__ =
          __webpack_require__(
            /*! ./modules/effect-creative/effect-creative.js */ './node_modules/swiper/modules/effect-creative/effect-creative.js'
          )
        /* harmony import */ var _modules_effect_cards_effect_cards_js__WEBPACK_IMPORTED_MODULE_24__ =
          __webpack_require__(
            /*! ./modules/effect-cards/effect-cards.js */ './node_modules/swiper/modules/effect-cards/effect-cards.js'
          )
        /**
         * Swiper 7.0.6
         * Most modern mobile touch slider and framework with hardware accelerated transitions
         * https://swiperjs.com
         *
         * Copyright 2014-2021 Vladimir Kharlampidi
         *
         * Released under the MIT License
         *
         * Released on: September 16, 2021
         */

        /***/
      },

    /***/ './node_modules/axios/package.json':
      /*!*****************************************!*\
  !*** ./node_modules/axios/package.json ***!
  \*****************************************/
      /***/ (module) => {
        'use strict'
        module.exports = JSON.parse(
          '{"_args":[["axios@0.21.4","/home/suhrab/Projects/bro-clinic"]],"_development":true,"_from":"axios@0.21.4","_id":"axios@0.21.4","_inBundle":false,"_integrity":"sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"axios@0.21.4","name":"axios","escapedName":"axios","rawSpec":"0.21.4","saveSpec":null,"fetchSpec":"0.21.4"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.21.4.tgz","_spec":"0.21.4","_where":"/home/suhrab/Projects/bro-clinic","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"^1.14.0"},"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"homepage":"https://axios-http.com","jsdelivr":"dist/axios.min.js","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","fix":"eslint --fix lib/**/*.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","unpkg":"dist/axios.min.js","version":"0.21.4"}'
        )

        /***/
      },

    /******/
  }
  /************************************************************************/
  /******/ // The module cache
  /******/ var __webpack_module_cache__ = {}
  /******/
  /******/ // The require function
  /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ var cachedModule = __webpack_module_cache__[moduleId]
    /******/ if (cachedModule !== undefined) {
      /******/ return cachedModule.exports
      /******/
    }
    /******/ // Create a new module (and put it into the cache)
    /******/ var module = (__webpack_module_cache__[moduleId] = {
      /******/ id: moduleId,
      /******/ loaded: false,
      /******/ exports: {},
      /******/
    })
    /******/
    /******/ // Execute the module function
    /******/ __webpack_modules__[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    )
    /******/
    /******/ // Flag the module as loaded
    /******/ module.loaded = true
    /******/
    /******/ // Return the exports of the module
    /******/ return module.exports
    /******/
  }
  /******/
  /******/ // expose the modules object (__webpack_modules__)
  /******/ __webpack_require__.m =
    __webpack_modules__ /* webpack/runtime/chunk loaded */
  /******/
  /************************************************************************/
  /******/
  /******/
  ;(() => {
    /******/ var deferred = []
    /******/ __webpack_require__.O = (result, chunkIds, fn, priority) => {
      /******/ if (chunkIds) {
        /******/ priority = priority || 0
        /******/ for (
          var i = deferred.length;
          i > 0 && deferred[i - 1][2] > priority;
          i--
        )
          deferred[i] = deferred[i - 1]
        /******/ deferred[i] = [chunkIds, fn, priority]
        /******/ return
        /******/
      }
      /******/ var notFulfilled = Infinity
      /******/ for (var i = 0; i < deferred.length; i++) {
        /******/ var [chunkIds, fn, priority] = deferred[i]
        /******/ var fulfilled = true
        /******/ for (var j = 0; j < chunkIds.length; j++) {
          /******/ if (
            (priority & (1 === 0) || notFulfilled >= priority) &&
            Object.keys(__webpack_require__.O).every((key) =>
              __webpack_require__.O[key](chunkIds[j])
            )
          ) {
            /******/ chunkIds.splice(j--, 1)
            /******/
          } else {
            /******/ fulfilled = false
            /******/ if (priority < notFulfilled) notFulfilled = priority
            /******/
          }
          /******/
        }
        /******/ if (fulfilled) {
          /******/ deferred.splice(i--, 1)
          /******/ var r = fn()
          /******/ if (r !== undefined) result = r
          /******/
        }
        /******/
      }
      /******/ return result
      /******/
    }
    /******/
  })() /* webpack/runtime/compat get default export */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ // getDefaultExport function for compatibility with non-harmony modules
    /******/ __webpack_require__.n = (module) => {
      /******/ var getter =
        module && module.__esModule
          ? /******/ () => module['default']
          : /******/ () => module
      /******/ __webpack_require__.d(getter, { a: getter })
      /******/ return getter
      /******/
    }
    /******/
  })() /* webpack/runtime/define property getters */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ // define getter functions for harmony exports
    /******/ __webpack_require__.d = (exports, definition) => {
      /******/ for (var key in definition) {
        /******/ if (
          __webpack_require__.o(definition, key) &&
          !__webpack_require__.o(exports, key)
        ) {
          /******/ Object.defineProperty(exports, key, {
            enumerable: true,
            get: definition[key],
          })
          /******/
        }
        /******/
      }
      /******/
    }
    /******/
  })() /* webpack/runtime/global */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ __webpack_require__.g = (function () {
      /******/ if (typeof globalThis === 'object') return globalThis
      /******/ try {
        /******/ return this || new Function('return this')()
        /******/
      } catch (e) {
        /******/ if (typeof window === 'object') return window
        /******/
      }
      /******/
    })()
    /******/
  })() /* webpack/runtime/hasOwnProperty shorthand */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ __webpack_require__.o = (obj, prop) =>
      Object.prototype.hasOwnProperty.call(obj, prop)
    /******/
  })() /* webpack/runtime/make namespace object */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ // define __esModule on exports
    /******/ __webpack_require__.r = (exports) => {
      /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        /******/ Object.defineProperty(exports, Symbol.toStringTag, {
          value: 'Module',
        })
        /******/
      }
      /******/ Object.defineProperty(exports, '__esModule', { value: true })
      /******/
    }
    /******/
  })() /* webpack/runtime/node module decorator */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ __webpack_require__.nmd = (module) => {
      /******/ module.paths = []
      /******/ if (!module.children) module.children = []
      /******/ return module
      /******/
    }
    /******/
  })() /* webpack/runtime/jsonp chunk loading */
  /******/
  /******/
  /******/
  ;(() => {
    /******/ // no baseURI
    /******/
    /******/ // object to store loaded and loading chunks
    /******/ // undefined = chunk not loaded, null = chunk preloaded/prefetched
    /******/ // [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
    /******/ var installedChunks = {
      /******/ '/js/app': 0,
      /******/ 'css/app': 0,
      /******/
    }
    /******/
    /******/ // no chunk on demand loading
    /******/
    /******/ // no prefetching
    /******/
    /******/ // no preloaded
    /******/
    /******/ // no HMR
    /******/
    /******/ // no HMR manifest
    /******/
    /******/ __webpack_require__.O.j = (chunkId) =>
      installedChunks[chunkId] === 0
    /******/
    /******/ // install a JSONP callback for chunk loading
    /******/ var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
      /******/ var [chunkIds, moreModules, runtime] = data
      /******/ // add "moreModules" to the modules object,
      /******/ // then flag all "chunkIds" as loaded and fire callback
      /******/ var moduleId,
        chunkId,
        i = 0
      /******/ if (chunkIds.some((id) => installedChunks[id] !== 0)) {
        /******/ for (moduleId in moreModules) {
          /******/ if (__webpack_require__.o(moreModules, moduleId)) {
            /******/ __webpack_require__.m[moduleId] = moreModules[moduleId]
            /******/
          }
          /******/
        }
        /******/ if (runtime) var result = runtime(__webpack_require__)
        /******/
      }
      /******/ if (parentChunkLoadingFunction) parentChunkLoadingFunction(data)
      /******/ for (; i < chunkIds.length; i++) {
        /******/ chunkId = chunkIds[i]
        /******/ if (
          __webpack_require__.o(installedChunks, chunkId) &&
          installedChunks[chunkId]
        ) {
          /******/ installedChunks[chunkId][0]()
          /******/
        }
        /******/ installedChunks[chunkIds[i]] = 0
        /******/
      }
      /******/ return __webpack_require__.O(result)
      /******/
    }
    /******/
    /******/ var chunkLoadingGlobal = (self['webpackChunk'] =
      self['webpackChunk'] || [])
    /******/ chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0))
    /******/ chunkLoadingGlobal.push = webpackJsonpCallback.bind(
      null,
      chunkLoadingGlobal.push.bind(chunkLoadingGlobal)
    )
    /******/
  })()
  /******/
  /************************************************************************/
  /******/
  /******/ // startup
  /******/ // Load entry module and return exports
  /******/ // This entry module depends on other loaded chunks and execution need to be delayed
  /******/ __webpack_require__.O(undefined, ['css/app'], () =>
    __webpack_require__('./resources/js/app.js')
  )
  /******/ var __webpack_exports__ = __webpack_require__.O(
    undefined,
    ['css/app'],
    () => __webpack_require__('./resources/css/app.sass')
  )
  /******/ __webpack_exports__ = __webpack_require__.O(__webpack_exports__)
  /******/
  /******/
})()
